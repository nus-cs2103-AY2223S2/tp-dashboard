[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-F12-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-F12-3/tp/actions)","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-F12-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103T-F12-3/tp)","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"* This is **a project for Software Engineering (SE) students in the module CS2103T**.\u003cbr\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"* It is named `NeoBook` and is designed to help NUS social butterflies with many contacts and multiple platforms of communication to organize their school life.","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  * as a starting point of a course project (as opposed to writing everything from scratch)","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * as a case study","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"* For the detailed documentation of this project, see the **[NeoBook Product Website](https://ay2223s2-cs2103t-f12-3.github.io/tp/)**.","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* This project is a **part of the se-education.org** initiative. If you would like to contribute code to this project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"hansstanley":6,"-":11,"rachtan27":1}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"run {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"    archiveFileName \u003d \u0027neobook.jar\u0027","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"hansstanley":5,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"## Project Team","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"### Pierce Ng Wei Sheng","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"\u003cimg src\u003d\"images/igezt.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"[[github](https://github.com/igezt)]","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"[[portfolio](team/igezt.md)]","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"* Role: Team lead","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"* Responsibilities: Model","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"### Stanley Han","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"\u003cimg src\u003d\"images/hansstanley.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"[[github](http://github.com/hansstanley)]","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"[[portfolio](team/hansstanley.md)]","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"* Roles:","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"  * Integration","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"  * Scheduling and tracking","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"  * Git expert","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"* Responsibilities:","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"  * In charge of UI","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"### Lim Jian Rong, Nicholas","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"\u003cimg src\u003d\"images/nicljr.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"[[github](http://github.com/nicljr)]","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"[[portfolio](team/nicljr.md)]","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"* Role:","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"  * Code Quality","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"  * Deliverables And Deadlines","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"* Responsibilities: In Charge of Calendar","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"rachtan27"},"content":"### Tan Wei Xuan Rachel","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"rachtan27"},"content":"\u003cimg src\u003d\"images/rachtan27.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"rachtan27"},"content":"[[github](http://github.com/rachtan27)]","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"rachtan27"},"content":"[[portfolio](team/rachtan27.md)]","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"rachtan27"},"content":"* Role: Testing","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"rachtan27"},"content":"* Responsibilities:","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"rachtan27"},"content":"  * In charge of Commands","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"Shuggan"},"content":"### Shane Duggan","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"Shuggan"},"content":"\u003cimg src\u003d\"images/shuggan.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"Shuggan"},"content":"[[github](http://github.com/shuggan)]","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"[[portfolio](team/Shuggan.md)]","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"Shuggan"},"content":"* Role: Documentation","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"Shuggan"},"content":"* Responsibilities: Storage","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"hansstanley":15,"nicljr":6,"Shuggan":5,"igezt":5,"-":31,"rachtan27":7}},{"path":"docs/DevOps.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: DevOps guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Build automation","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"This project uses Gradle for **build automation and dependency management**. **You are recommended to read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html)**.","lastModifiedDate":"2020-06-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Given below are how to use Gradle for some important project tasks.","lastModifiedDate":"2020-05-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **`clean`**: Deletes the files created during the previous build tasks (e.g. files in the `build` folder).\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  e.g. `./gradlew clean`","lastModifiedDate":"2020-05-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **`shadowJar`**: Uses the ShadowJar plugin to creat a fat JAR file in the `build/lib` folder, *if the current file is outdated*.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  e.g. `./gradlew shadowJar`.","lastModifiedDate":"2020-05-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **`run`**: Builds and runs the application.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  **`runShadow`**: Builds the application as a fat JAR, and then runs it.","lastModifiedDate":"2020-05-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* **`checkstyleMain`**: Runs the code style check for the main code base.\u003cbr\u003e","lastModifiedDate":"2020-05-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  **`checkstyleTest`**: Runs the code style check for the test code base.","lastModifiedDate":"2020-05-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **`test`**: Runs all tests.","lastModifiedDate":"2023-01-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * `./gradlew test` — Runs all tests","lastModifiedDate":"2020-05-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * `./gradlew clean test` — Cleans the project and runs tests","lastModifiedDate":"2020-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Continuous integration (CI)","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"This project uses GitHub Actions for CI. The project comes with the necessary GitHub Actions configurations files (in the `.github/workflows` folder). No further setting up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"### Code coverage","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"As part of CI, this project uses Codecov to generate coverage reports. When CI runs, it will generate code coverage data (based on the tests run by CI) and upload that data to the CodeCov website, which in turn can provide you more info about the coverage of your tests.","lastModifiedDate":"2023-02-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"However, because Codecov is known to run into intermittent problems (e.g., report upload fails) due to issues on the Codecov service side, the CI is configured to pass even if the Codecov task failed. Therefore, developers are advised to check the code coverage levels periodically and take corrective actions if the coverage level falls below desired levels.","lastModifiedDate":"2023-02-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"To enable Codecov for forks of this project, follow the steps given in [this se-edu guide](https://se-education.org/guides/tutorials/codecov.html).","lastModifiedDate":"2023-02-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-01-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"### Repository-wide checks","lastModifiedDate":"2020-07-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"In addition to running Gradle checks, CI includes some repository-wide checks. Unlike the Gradle checks which only cover files used in the build process, these repository-wide checks cover all files in the repository. They check for repository rules which are hard to enforce on development machines such as line ending requirements.","lastModifiedDate":"2020-07-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"These checks are implemented as POSIX shell scripts, and thus can only be run on POSIX-compliant operating systems such as macOS and Linux. To run all checks locally on these operating systems, execute the following in the repository root directory:","lastModifiedDate":"2020-07-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"`./config/travis/run-checks.sh`","lastModifiedDate":"2020-07-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"Any warnings or errors will be printed out to the console.","lastModifiedDate":"2020-07-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"**If adding new checks:**","lastModifiedDate":"2020-07-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* Checks are implemented as executable `check-*` scripts within the `.github` directory. The `run-checks.sh` script will automatically pick up and run files named as such. That is, you can add more such files if you need and the CI will do the rest.","lastModifiedDate":"2020-07-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Check scripts should print out errors in the format `SEVERITY:FILENAME:LINE: MESSAGE`","lastModifiedDate":"2020-07-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  * SEVERITY is either ERROR or WARN.","lastModifiedDate":"2020-07-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"  * FILENAME is the path to the file relative to the current directory.","lastModifiedDate":"2020-07-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"  * LINE is the line of the file where the error occurred and MESSAGE is the message explaining the error.","lastModifiedDate":"2020-07-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Check scripts must exit with a non-zero exit code if any errors occur.","lastModifiedDate":"2020-07-28"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"## Making a release","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"Here are the steps to create a new release.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"1. Update the version number in [`MainApp.java`](https://github.com/AY2223S2-CS2103T-F12-3/tp/blob/master/src/main/java/seedu/address/MainApp.java).","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"1. Generate a fat JAR file using Gradle (i.e., `gradlew shadowJar`).","lastModifiedDate":"2021-08-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"1. Tag the repo with the version number. e.g. `v0.1`","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"1. [Create a new release using GitHub](https://help.github.com/articles/creating-releases/). Upload the JAR file you created.","lastModifiedDate":"2020-05-26"}],"authorContributionMap":{"hansstanley":1,"-":78}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `BodyPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S2-CS2103T-F12-3/tp/blob/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103T-F12-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"hansstanley"},"content":"* depends on some classes in the `Model` component, as it displays `Person`, `Event`, and `User` objects residing in the `Model`.","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"hansstanley"},"content":"The UI is styled using CSS, primarily via [`DarkTheme.css`](https://github.com/AY2223S2-CS2103T-F12-3/tp/blob/master/src/main/resources/view/DarkTheme.css) and [`Extensions.css`](https://github.com/AY2223S2-CS2103T-F12-3/tp/blob/master/src/main/resources/view/Extensions.css) that are imported by `MainWindow.fxml`. The `HelpWindow` has its own separate CSS file, [`HelpWindow.css`](https://github.com/AY2223S2-CS2103T-F12-3/tp/blob/master/src/main/resources/view/HelpWindow.css).","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"hansstanley"},"content":"In `DarkTheme.css`, there is a system of reuse. For example,","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"hansstanley"},"content":"* Themes have their own defined variables:","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"hansstanley"},"content":"  * `-fx-primary`: primary theme colour","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"hansstanley"},"content":"  * `-fx-primary-foreground`: primary theme colour, usually for foreground and accented components","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"hansstanley"},"content":"  * `-fx-primary-background`: primary theme colour, usually for background and muted components","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"hansstanley"},"content":"  * `-fx-primary-text`: primary text colour","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"hansstanley"},"content":"  * `-fx-secondary-text`: secondary text colour","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"hansstanley"},"content":"  * `-fx-list-odd`: background colour of odd-indexed list cells","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"hansstanley"},"content":"  * `-fx-list-even`: background colour of even-indexed list cells","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"hansstanley"},"content":"  * `-fx-list-selected`: background colour of selected list cells","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":101,"author":{"gitId":"hansstanley"},"content":"* Labels have defined font sizes: `label-h1`, `label-h2`, `label-h3`, `label-h4`, `label-h5`, `label-h6`, and `label-p`, corresponding to the different headings and paragraph font sizes.","lastModifiedDate":"2023-03-21"},{"lineNumber":102,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"hansstanley"},"content":"* Paddings have been defined and standardised with a width of 10. For example, `pa` represents \"all padding\", `pt` for \"top padding\", and `pa-b` for \"all padding except bottom\".","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"igezt"},"content":"Within the Model component holds the Person Class.","lastModifiedDate":"2023-03-24"},{"lineNumber":148,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":149,"author":{"gitId":"igezt"},"content":"\u003cimg src\u003d\"images/PersonDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":150,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"igezt"},"content":"Each field in Person inherits from either the Field abstract class or the SuperField abstract class.","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":153,"author":{"gitId":"igezt"},"content":"* The Field abstract class represents a field with a singular value. This is used for fields like e.g. Name, Gender","lastModifiedDate":"2023-03-24"},{"lineNumber":154,"author":{"gitId":"igezt"},"content":"and Major.","lastModifiedDate":"2023-03-24"},{"lineNumber":155,"author":{"gitId":"igezt"},"content":"* The SuperField abstract class represents a field that has multiple values. This is used for fields like e.g. Modules","lastModifiedDate":"2023-03-24"},{"lineNumber":156,"author":{"gitId":"igezt"},"content":"and Tags. The SuperField class contains a set of values that are a subclass of Field.","lastModifiedDate":"2023-03-24"},{"lineNumber":157,"author":{"gitId":"igezt"},"content":"* The Field and SuperField abstract classes are used to abstract our common logic between the various fields in Person, while","lastModifiedDate":"2023-03-24"},{"lineNumber":158,"author":{"gitId":"igezt"},"content":"  also allowing for polymorphism.","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":160,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"igezt"},"content":"* can save both address book data, user data and user preference data in json format, and read them back into","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"igezt"},"content":"corresponding objects.","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"igezt"},"content":"* inherits from `UserDataStorage`, `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"igezt"},"content":"(if only the functionality of only one is needed).","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"igezt"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"igezt"},"content":"that belong to the `Model`). In particular, the changes to the following 5 classes will require a change in their","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"igezt"},"content":"respective classes in Storage.","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"igezt"},"content":"  * Person","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"igezt"},"content":"  * Event","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"igezt"},"content":"  * User","lastModifiedDate":"2023-03-23"},{"lineNumber":185,"author":{"gitId":"igezt"},"content":"  * NusMod","lastModifiedDate":"2023-03-23"},{"lineNumber":186,"author":{"gitId":"igezt"},"content":"  * Tag","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"hansstanley"},"content":"### Command for tab switching","lastModifiedDate":"2023-03-20"},{"lineNumber":199,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":200,"author":{"gitId":"hansstanley"},"content":"Due to the limited space on most displays, the application uses tabs to switch between various panels, such as the address book, events, and personal information panels.","lastModifiedDate":"2023-03-20"},{"lineNumber":201,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":202,"author":{"gitId":"hansstanley"},"content":"The tab switching mechanism is facilitated by [`TabUtil`](https://github.com/AY2223S2-CS2103T-F12-3/tp/blob/docs/dg-tab-command/src/main/java/seedu/address/logic/ui/tab/TabUtil.java), which contains the list of all tabs relevant in the application. Tabs are represented by [`TabInfo`](https://github.com/AY2223S2-CS2103T-F12-3/tp/blob/docs/dg-tab-command/src/main/java/seedu/address/logic/ui/tab/TabInfo.java), made up of an `Index` (which the user references in the `tab` command) and a [`TabType`](https://github.com/AY2223S2-CS2103T-F12-3/tp/blob/docs/dg-tab-command/src/main/java/seedu/address/logic/ui/tab/TabType.java) (which defines the possible tabs in the application). Their relationship is shown below:","lastModifiedDate":"2023-03-21"},{"lineNumber":203,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":204,"author":{"gitId":"hansstanley"},"content":"![Structure of `TabUtil`](images/TabClassDiagram.png)","lastModifiedDate":"2023-03-20"},{"lineNumber":205,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":206,"author":{"gitId":"hansstanley"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-20"},{"lineNumber":207,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":208,"author":{"gitId":"hansstanley"},"content":"There are two ways to switch between tabs:","lastModifiedDate":"2023-03-20"},{"lineNumber":209,"author":{"gitId":"hansstanley"},"content":"* **Method 1:** Click on individual tabs in the tabs bar","lastModifiedDate":"2023-03-20"},{"lineNumber":210,"author":{"gitId":"hansstanley"},"content":"* **Method 2:** Use the `tab` command","lastModifiedDate":"2023-03-20"},{"lineNumber":211,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":212,"author":{"gitId":"hansstanley"},"content":"Consequently, the state of the selected tab needs to be shared between the two methods, so that the user can be correctly notified if they are already on a tab that they are trying to navigate to.","lastModifiedDate":"2023-03-20"},{"lineNumber":213,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":214,"author":{"gitId":"hansstanley"},"content":"\u003e **Example:** If the user has navigated from the 1st tab to the 3rd using the tab bar before trying to navigate back to the 1st tab using `tab 1`, they should not be warned that they are already on the 1st tab. In other words, both methods should have their states in sync from the perspective of the user, so as not to induce unexpected behaviour.","lastModifiedDate":"2023-03-20"},{"lineNumber":215,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":216,"author":{"gitId":"rachtan27"},"content":"### Command for selecting","lastModifiedDate":"2023-03-22"},{"lineNumber":217,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":218,"author":{"gitId":"rachtan27"},"content":"The `select` feature allows user to select which contact\u0027s details to display on the person details panel.","lastModifiedDate":"2023-03-22"},{"lineNumber":219,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":220,"author":{"gitId":"rachtan27"},"content":"There is _selected person_ field in `AddressBook` that keep tracks of which person\u0027s details should be displayed.","lastModifiedDate":"2023-03-29"},{"lineNumber":221,"author":{"gitId":"rachtan27"},"content":"This field is initialised to null at the start when no person is selected yet.","lastModifiedDate":"2023-03-29"},{"lineNumber":222,"author":{"gitId":"rachtan27"},"content":"The `select` feature is facilitated through `SelectCommandParser` and `SelectCommand`.","lastModifiedDate":"2023-03-22"},{"lineNumber":223,"author":{"gitId":"rachtan27"},"content":"The `LogicManager` executes the `SelectCommand`, which communicates with the `ModelManager` and updates the _selected person_ field in `AddressBook`.","lastModifiedDate":"2023-03-29"},{"lineNumber":224,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":225,"author":{"gitId":"rachtan27"},"content":"The following sequence diagram illustrates the execution of a successful select command.","lastModifiedDate":"2023-03-27"},{"lineNumber":226,"author":{"gitId":"rachtan27"},"content":"Low-level details of the parsing of select command in logic is omitted as it has been described [above](#logic-component)","lastModifiedDate":"2023-03-27"},{"lineNumber":227,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"rachtan27"},"content":"![Sequence Diagram of successful `select`](images/SelectSequenceDiagram.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":229,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":230,"author":{"gitId":"rachtan27"},"content":"Upon execution, the `selectedPerson` field of AddressBook would be updated, allowing the GUI to access it","lastModifiedDate":"2023-03-29"},{"lineNumber":231,"author":{"gitId":"rachtan27"},"content":"and display changes accordingly.","lastModifiedDate":"2023-03-27"},{"lineNumber":232,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"rachtan27"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-22"},{"lineNumber":234,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":235,"author":{"gitId":"rachtan27"},"content":"There are two ways to select a contact:","lastModifiedDate":"2023-03-22"},{"lineNumber":236,"author":{"gitId":"rachtan27"},"content":"* **Method 1:** Click on the contact in the current displayed contact list","lastModifiedDate":"2023-03-22"},{"lineNumber":237,"author":{"gitId":"rachtan27"},"content":"* **Method 2:** Use the `select` command","lastModifiedDate":"2023-03-22"},{"lineNumber":238,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":239,"author":{"gitId":"rachtan27"},"content":"Consequently, the state of the selected person needs to be shared between the two methods, so that the user can be correctly notified if they have already selected the contact that they are trying to access.","lastModifiedDate":"2023-03-29"},{"lineNumber":240,"author":{"gitId":"rachtan27"},"content":"\u003e **Example:**","lastModifiedDate":"2023-03-27"},{"lineNumber":241,"author":{"gitId":"rachtan27"},"content":"\u003e - If the user has selected index 1 by clicking on the contact, executing \"select 1\" should result in a warning that the contact is already selected.","lastModifiedDate":"2023-03-29"},{"lineNumber":242,"author":{"gitId":"rachtan27"},"content":"\u003e - If the user has selected index 1 by using `select 1`, clicking on the same contact at index 1 should \"deselect\" contact.","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":244,"author":{"gitId":"nicljr"},"content":"### Command for Favourite Contacts","lastModifiedDate":"2023-03-26"},{"lineNumber":245,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":246,"author":{"gitId":"nicljr"},"content":"For improved User Experience, we want users to be able to easily look up contacts they frequently contact.","lastModifiedDate":"2023-03-26"},{"lineNumber":247,"author":{"gitId":"nicljr"},"content":"This addresses the issue of convenience.","lastModifiedDate":"2023-03-26"},{"lineNumber":248,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":249,"author":{"gitId":"nicljr"},"content":"The Favourite Command works by having the User entering a \"fav\" command and specify the index of that particular contact. The index will be displayed on the UI of the AddressBook.","lastModifiedDate":"2023-03-26"},{"lineNumber":250,"author":{"gitId":"nicljr"},"content":"The Favourited Contact will have a Star Emoji displayed beside the Contact\u0027s name and will also be displayed under a \"Favourite\" List for easier convenience and lookup for the User.","lastModifiedDate":"2023-03-26"},{"lineNumber":251,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":252,"author":{"gitId":"nicljr"},"content":"### Command for Unfavourite Contacts","lastModifiedDate":"2023-03-26"},{"lineNumber":253,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":254,"author":{"gitId":"nicljr"},"content":"Following the Favourite Contacts Command, we want users to fully manage their favourite list. We added an Unfavourite Command to remove contacts they do not frequently contact.","lastModifiedDate":"2023-03-26"},{"lineNumber":255,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":256,"author":{"gitId":"nicljr"},"content":"The Unfavourite Command works by having the User entering a \"unfav\" command and specify the index of that particular contact that is currently in the Favourite List. The index will be displayed on the UI of the AddressBook.","lastModifiedDate":"2023-03-26"},{"lineNumber":257,"author":{"gitId":"nicljr"},"content":"The Unfavourited Contact will remove the Star Emoji displayed beside the Contact\u0027s name and remove the Contact from the Favourite List.","lastModifiedDate":"2023-03-26"},{"lineNumber":258,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":259,"author":{"gitId":"nicljr"},"content":"### Command for Add Event Command","lastModifiedDate":"2023-03-26"},{"lineNumber":260,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":261,"author":{"gitId":"Shuggan"},"content":"NeoBook implements an Event Calendar Interface for users to track any notable events. There are 2 types of Events that can be added by the Users. Firstly, a One Time event that occurs only once on the specified date and time.","lastModifiedDate":"2023-03-30"},{"lineNumber":262,"author":{"gitId":"nicljr"},"content":"Secondly, recurring events that occur periodically e.g. Weekly Lectures, Daily Reminders etc. There are multiple recurrences which can be specified by the users: Daily, Weekly, Monthly and Yearly.","lastModifiedDate":"2023-03-26"},{"lineNumber":263,"author":{"gitId":"Shuggan"},"content":"Users have can choose to input these 4 different type of Recurring Events into NeoBook.","lastModifiedDate":"2023-03-30"},{"lineNumber":264,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":265,"author":{"gitId":"nicljr"},"content":"The Add Event Command works by having the User entering the \"addevent\" command. The User will then specify the Description of the Event, Start Date and Time of the event,","lastModifiedDate":"2023-03-26"},{"lineNumber":266,"author":{"gitId":"nicljr"},"content":"End Date and Time of the Event, followed by the Recurrence type, whether it is Daily, Weekly, Monthly, Yearly, or a One-Time Event. All are required fields except the Recurrence Field.","lastModifiedDate":"2023-03-26"},{"lineNumber":267,"author":{"gitId":"Shuggan"},"content":"If left unspecified, the Event will be added as a One-Time Event, the Success Message will prompt to the user, what type of Event will have be added to the Events Calendar UI of NeoBook.","lastModifiedDate":"2023-03-30"},{"lineNumber":268,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":269,"author":{"gitId":"Shuggan"},"content":"### Command for Edit Event Command","lastModifiedDate":"2023-03-30"},{"lineNumber":270,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":271,"author":{"gitId":"Shuggan"},"content":"The Edit Event Command allows users to modify any of the specific fields for an existing event in the NeoBook calendar. To use this command, the user will enter \"editevent\" followed by the index number that corresponds to the event they wish to modify.","lastModifiedDate":"2023-03-30"},{"lineNumber":272,"author":{"gitId":"Shuggan"},"content":"The user can then include multiple field prefix/desired-change arguments in the same command. The field prefixes are as follows: \"d\" for Description, \"s\" for Start Date, \"e\" for End Date, and \"r\" for Recurrence Type.","lastModifiedDate":"2023-03-30"},{"lineNumber":273,"author":{"gitId":"Shuggan"},"content":"After each field prefix, the user should enter the desired change they would like to make to the corresponding field. For example, to change the Description of an event with index number 1 to \"Meeting with clients\", the user would enter \"editevent 1 /d Meeting with clients\".","lastModifiedDate":"2023-03-30"},{"lineNumber":274,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":275,"author":{"gitId":"Shuggan"},"content":"Once all the desired fields have been updated, the Success Message will prompt to the user that the event has been updated in the Events Calendar UI of NeoBook.","lastModifiedDate":"2023-03-30"},{"lineNumber":276,"author":{"gitId":"Shuggan"},"content":"It is important to note that the index number must be specified in order to edit an event, and at least one field prefix/desired-change argument must be included in the command. If an incorrect index number is entered or if a field prefix is misspelled or not recognized, the command will not work and an error message will be displayed.","lastModifiedDate":"2023-03-30"},{"lineNumber":277,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":278,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":304,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":368,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":369,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":370,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":371,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":373,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"Shuggan"},"content":"### Product scope (v1.1)","lastModifiedDate":"2023-03-07"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"Shuggan"},"content":"* NUS students who want to connect with seniors/other students with common academic paths","lastModifiedDate":"2023-03-07"},{"lineNumber":382,"author":{"gitId":"Shuggan"},"content":"* Freshmen looking to get advice from their seniors in the same course or taken the same modules","lastModifiedDate":"2023-03-07"},{"lineNumber":383,"author":{"gitId":"Shuggan"},"content":"* Students who want to get internship advice from others who have worked in that company","lastModifiedDate":"2023-03-07"},{"lineNumber":384,"author":{"gitId":"Shuggan"},"content":"* Students who want to know more about their friends and seniors\u0027 schedules to be able to find time to connect with them","lastModifiedDate":"2023-03-07"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"Shuggan"},"content":"**Value proposition**: Being able to find contacts with similar traits and being able to view their schedule to find an appropriate time to connect with them.","lastModifiedDate":"2023-03-07"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"| Priority | As a …​                                                 | I want to …​                                                                                                           | So that I can…​                                |","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"Shuggan"},"content":"| -------- |---------------------------------------------------------|------------------------------------------------------------------------------------------------------------------------|------------------------------------------------|","lastModifiedDate":"2023-03-02"},{"lineNumber":395,"author":{"gitId":"Shuggan"},"content":"| `* * *`  | Student who often needs help with school work           | I want to be able to see who is likely to be available currently                                                       | Get help as soon as possible                   |","lastModifiedDate":"2023-03-02"},{"lineNumber":396,"author":{"gitId":"Shuggan"},"content":"| `* * *`  | Student who often contacts external organisations       | Segregate my contacts into different categories (e.g. friends, family, t-shirt suppliers, bus drivers , sponsors etc.) | Organise my contacts effectively               |","lastModifiedDate":"2023-03-02"},{"lineNumber":397,"author":{"gitId":"Shuggan"},"content":"| `* * *`  | Student sourcing for internships                        | I am able to see Students internship experience                                                                        | To find out more about their interview process |","lastModifiedDate":"2023-03-02"},{"lineNumber":398,"author":{"gitId":"Shuggan"},"content":"| `* * *`  | Student who wants to go for a career fair with somebody | I want to find people who are available at a certain time                                                              | So that I can go to the career fair with them  |","lastModifiedDate":"2023-03-02"},{"lineNumber":399,"author":{"gitId":"Shuggan"},"content":"| `* *`    | Student who made a new connection                       | I want to be able to add a new contact                                                                                 | So that I can save the person’s details        |","lastModifiedDate":"2023-03-02"},{"lineNumber":400,"author":{"gitId":"Shuggan"},"content":"| `*`      | Student who is in to keeping everything in one place    | I like being able to keep everything I need to see in one place                                                        | So that I dont forget anything                 |","lastModifiedDate":"2023-03-02"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"Shuggan"},"content":"**Use case: Add a person**","lastModifiedDate":"2023-03-03"},{"lineNumber":409,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":410,"author":{"gitId":"Shuggan"},"content":"**MSS**","lastModifiedDate":"2023-03-03"},{"lineNumber":411,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":412,"author":{"gitId":"Shuggan"},"content":"1.  User requests to add a person","lastModifiedDate":"2023-03-03"},{"lineNumber":413,"author":{"gitId":"Shuggan"},"content":"2.  User enters person details and submits the command","lastModifiedDate":"2023-03-03"},{"lineNumber":414,"author":{"gitId":"Shuggan"},"content":"3.  AddressBook saves the person","lastModifiedDate":"2023-03-03"},{"lineNumber":415,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":416,"author":{"gitId":"Shuggan"},"content":"    Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":417,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":418,"author":{"gitId":"Shuggan"},"content":"**Extensions**","lastModifiedDate":"2023-03-03"},{"lineNumber":419,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":420,"author":{"gitId":"igezt"},"content":"* 2a. AddressBook is unable to save the person.","lastModifiedDate":"2023-03-27"},{"lineNumber":421,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":422,"author":{"gitId":"igezt"},"content":"    * 2a1. AddressBook shows an error message.","lastModifiedDate":"2023-03-27"},{"lineNumber":423,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":424,"author":{"gitId":"Shuggan"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-03"},{"lineNumber":425,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":426,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"1.  User requests to list persons","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"Shuggan"},"content":"**Use case: Editing a person**","lastModifiedDate":"2023-03-03"},{"lineNumber":450,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":451,"author":{"gitId":"Shuggan"},"content":"**MSS**","lastModifiedDate":"2023-03-03"},{"lineNumber":452,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":453,"author":{"gitId":"Shuggan"},"content":"1.  User enters a command to edit an existing person by specifying their index number and new details","lastModifiedDate":"2023-03-03"},{"lineNumber":454,"author":{"gitId":"Shuggan"},"content":"2.  AddressBook updates the person\u0027s details","lastModifiedDate":"2023-03-03"},{"lineNumber":455,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":456,"author":{"gitId":"Shuggan"},"content":"    Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":457,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":458,"author":{"gitId":"Shuggan"},"content":"**Extensions**","lastModifiedDate":"2023-03-03"},{"lineNumber":459,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":460,"author":{"gitId":"Shuggan"},"content":"* 1a. User enters an invalid command or incorrect details.","lastModifiedDate":"2023-03-03"},{"lineNumber":461,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":462,"author":{"gitId":"Shuggan"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2023-03-03"},{"lineNumber":463,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":464,"author":{"gitId":"Shuggan"},"content":"      Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":465,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":466,"author":{"gitId":"Shuggan"},"content":"* 1b. User enters an invalid index number.","lastModifiedDate":"2023-03-03"},{"lineNumber":467,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":468,"author":{"gitId":"Shuggan"},"content":"    * 1b1. AddressBook shows an error message.","lastModifiedDate":"2023-03-03"},{"lineNumber":469,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":470,"author":{"gitId":"Shuggan"},"content":"      Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":471,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":472,"author":{"gitId":"Shuggan"},"content":"* 2a. AddressBook is unable to update the person\u0027s details.","lastModifiedDate":"2023-03-03"},{"lineNumber":473,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":474,"author":{"gitId":"Shuggan"},"content":"    * 2a1. AddressBook shows an error message.","lastModifiedDate":"2023-03-03"},{"lineNumber":475,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":476,"author":{"gitId":"Shuggan"},"content":"      Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":477,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":478,"author":{"gitId":"Shuggan"},"content":"**Use case: List all persons**","lastModifiedDate":"2023-03-03"},{"lineNumber":479,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":480,"author":{"gitId":"Shuggan"},"content":"**MSS**","lastModifiedDate":"2023-03-03"},{"lineNumber":481,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":482,"author":{"gitId":"Shuggan"},"content":"1.  User enters a command to list all persons","lastModifiedDate":"2023-03-03"},{"lineNumber":483,"author":{"gitId":"Shuggan"},"content":"2.  AddressBook shows a list of all persons with their details","lastModifiedDate":"2023-03-03"},{"lineNumber":484,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":485,"author":{"gitId":"Shuggan"},"content":"    Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":486,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":487,"author":{"gitId":"Shuggan"},"content":"**Extensions**","lastModifiedDate":"2023-03-03"},{"lineNumber":488,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":489,"author":{"gitId":"Shuggan"},"content":"* 1a. User enters an invalid command.","lastModifiedDate":"2023-03-03"},{"lineNumber":490,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":491,"author":{"gitId":"Shuggan"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2023-03-03"},{"lineNumber":492,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":493,"author":{"gitId":"Shuggan"},"content":"      Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":494,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":495,"author":{"gitId":"igezt"},"content":"**Use case: Find persons by specified fields**","lastModifiedDate":"2023-03-27"},{"lineNumber":496,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":497,"author":{"gitId":"Shuggan"},"content":"**MSS**","lastModifiedDate":"2023-03-03"},{"lineNumber":498,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":499,"author":{"gitId":"igezt"},"content":"1.  User enters a command to search for persons by specifying one or more keywords for different fields","lastModifiedDate":"2023-03-27"},{"lineNumber":500,"author":{"gitId":"igezt"},"content":"2.  AddressBook searches for persons who contain any of the given keywords for the fields specified","lastModifiedDate":"2023-03-27"},{"lineNumber":501,"author":{"gitId":"Shuggan"},"content":"3.  AddressBook returns a list of persons matching the search criteria","lastModifiedDate":"2023-03-03"},{"lineNumber":502,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":503,"author":{"gitId":"Shuggan"},"content":"    Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":504,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":505,"author":{"gitId":"Shuggan"},"content":"**Extensions**","lastModifiedDate":"2023-03-03"},{"lineNumber":506,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":507,"author":{"gitId":"Shuggan"},"content":"* 1a. User enters an invalid command or incorrect details.","lastModifiedDate":"2023-03-03"},{"lineNumber":508,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":509,"author":{"gitId":"Shuggan"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2023-03-03"},{"lineNumber":510,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":511,"author":{"gitId":"Shuggan"},"content":"      Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":512,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":513,"author":{"gitId":"Shuggan"},"content":"* 3a. No persons are found matching the search criteria.","lastModifiedDate":"2023-03-03"},{"lineNumber":514,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":515,"author":{"gitId":"Shuggan"},"content":"    * 3a1. AddressBook shows an empty list message.","lastModifiedDate":"2023-03-03"},{"lineNumber":516,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":517,"author":{"gitId":"Shuggan"},"content":"      Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":518,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":519,"author":{"gitId":"Shuggan"},"content":"**Use case: Clearing all entries**","lastModifiedDate":"2023-03-03"},{"lineNumber":520,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":521,"author":{"gitId":"Shuggan"},"content":"**MSS**","lastModifiedDate":"2023-03-03"},{"lineNumber":522,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":523,"author":{"gitId":"Shuggan"},"content":"1.  User enters a command to clear all entries","lastModifiedDate":"2023-03-03"},{"lineNumber":524,"author":{"gitId":"Shuggan"},"content":"2.  AddressBook clears all entries from the address book","lastModifiedDate":"2023-03-03"},{"lineNumber":525,"author":{"gitId":"Shuggan"},"content":"3.  AddressBook shows a success message","lastModifiedDate":"2023-03-03"},{"lineNumber":526,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":527,"author":{"gitId":"Shuggan"},"content":"    Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":528,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":529,"author":{"gitId":"Shuggan"},"content":"**Extensions**","lastModifiedDate":"2023-03-03"},{"lineNumber":530,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":531,"author":{"gitId":"Shuggan"},"content":"* 1a. User enters an invalid command or incorrect details.","lastModifiedDate":"2023-03-03"},{"lineNumber":532,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":533,"author":{"gitId":"Shuggan"},"content":"    * 1a1. AddressBook shows an error message.","lastModifiedDate":"2023-03-03"},{"lineNumber":534,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":535,"author":{"gitId":"Shuggan"},"content":"      Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":536,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":537,"author":{"gitId":"Shuggan"},"content":"* 2a. AddressBook is unable to clear all entries.","lastModifiedDate":"2023-03-03"},{"lineNumber":538,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":539,"author":{"gitId":"Shuggan"},"content":"    * 2a1. AddressBook shows an error message.","lastModifiedDate":"2023-03-03"},{"lineNumber":540,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":541,"author":{"gitId":"Shuggan"},"content":"      Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":542,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":543,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"Shuggan"},"content":"4. Should be easy to use and navigate, even for users who are not familiar with the NUS student community. This could include features such as clear labeling, intuitive interfaces, and helpful error messages.","lastModifiedDate":"2023-03-02"},{"lineNumber":551,"author":{"gitId":"Shuggan"},"content":"5. Should be accessible to users with disabilities, including those who use screen readers or other assistive technologies. The user interface should be highly readable for all users.","lastModifiedDate":"2023-03-02"},{"lineNumber":552,"author":{"gitId":"Shuggan"},"content":"6. Should provide fast response times and minimal resource usage, even when running on lower-end hardware.","lastModifiedDate":"2023-03-02"},{"lineNumber":553,"author":{"gitId":"Shuggan"},"content":"7. Should be able to handle errors and exceptions gracefully, without crashing or losing user data. This could include features such as error logging, fault tolerance mechanisms, and data backup options.","lastModifiedDate":"2023-03-02"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":577,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":579,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":580,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":583,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":585,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":586,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"hansstanley":39,"nicljr":21,"Shuggan":136,"igezt":31,"-":357,"rachtan27":29}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [NeoBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"hansstanley":1,"-":54}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"NeoBook is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, it can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"Shuggan"},"content":"Apart from being your all-encompassing address book, NeoBook also has a Events function for you to keep track of your daily schedule.","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"## Table Of Contents","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"## Getting started","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"2. Download the latest `neobook.jar` from [here](https://github.com/AY2223S2-CS2103T-F12-3/tp/releases/tag/v1.2.1).","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your NeoBook.","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar neobook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"   * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"   *  `edit 3 n/pierce` : Edits the 3rd contact\u0027s name on the current list to pierce","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"rachtan27"},"content":"6. Refer to the [NeoBook Features](#neobook-features) below for details of each command.","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"rachtan27"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"rachtan27"},"content":"## User Interface","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"rachtan27"},"content":"1. Use these tabs to toggle between the NeoBook, Events and your own information!","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"rachtan27"},"content":"![uitabs](images/userguide/uitabs.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"rachtan27"},"content":"### UI Breakdown For `NeoBook`","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"rachtan27"},"content":"![neobook](images/userguide/neobook.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"rachtan27"},"content":"1. Current Displayed List","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"Shuggan"},"content":"   * show contacts based on command parameters","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"rachtan27"},"content":"   * contains the `index` you should use to refer to each contact","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"rachtan27"},"content":"   * A : Contains favorite contacts for easy access","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"rachtan27"},"content":"   * B : Contains all contacts","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"rachtan27"},"content":"2. Information Of Specific Contact","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"rachtan27"},"content":"   * displays all the saved information related to contact","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"rachtan27"},"content":"   * toggle between different contacts by _clicking on them in the displayed list_ or using the [select command](#select-contact-to-expand-details--select)","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"rachtan27"},"content":"3. Command Results:","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"rachtan27"},"content":"   * displays the result of input command","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"rachtan27"},"content":"4. Command Line:","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"rachtan27"},"content":"   * type command and press enter to execute it","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"rachtan27"},"content":"   * refer to the [NeoBook Features](#neobook-features) below for possible commands to execute","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"rachtan27"},"content":"### UI Breakdown For `Events`","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"rachtan27"},"content":"![events](images/userguide/events.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"rachtan27"},"content":"1. Events Display","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"rachtan27"},"content":"   * displays all events you have saved and their respective details","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"rachtan27"},"content":"2. Command Results:","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"rachtan27"},"content":"   * displays the result of input command","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"rachtan27"},"content":"3. Command Line","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"rachtan27"},"content":"   * type command and press enter to execute it","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"rachtan27"},"content":"   * refer to the [Events Features](#events-features) below for possible commands to execute","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"rachtan27"},"content":"### UI Breakdown For `Me`","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"rachtan27"},"content":"![me](images/userguide/me.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"rachtan27"},"content":"1. Display","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"rachtan27"},"content":"    * contains your personal details","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"rachtan27"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"rachtan27"},"content":"____________________________________________________________________________________________________________________","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"rachtan27"},"content":"## NeoBook Features","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"nicljr"},"content":"  e.g. `t/TAG…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":118,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"rachtan27"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"rachtan27"},"content":"### Viewing Help : `help`","lastModifiedDate":"2023-03-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"rachtan27"},"content":"Don\u0027t know how to get started? Don\u0027t worry!","lastModifiedDate":"2023-03-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"rachtan27"},"content":"Simply use this command to get access to our help page!","lastModifiedDate":"2023-03-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"rachtan27"},"content":"**Syntax:**","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"rachtan27"},"content":"`help`","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"rachtan27"},"content":"![help](images/userguide/help.png)","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"rachtan27"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"rachtan27"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"rachtan27"},"content":"### Adding A New Contact: `add`","lastModifiedDate":"2023-03-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":139,"author":{"gitId":"rachtan27"},"content":"Met a new friend?","lastModifiedDate":"2023-03-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"rachtan27"},"content":"Use this command to add him/her to your NeoBook.","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"rachtan27"},"content":"**Syntax:**","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"Shuggan"},"content":"`add n/NAME PREFIX/PARAMETER...`","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"Shuggan"},"content":"Here are all the prefixes that can be used:","lastModifiedDate":"2023-03-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"Shuggan"},"content":"| Prefix | Name of Field                   | Optional? |","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"igezt"},"content":"|--------|---------------------------------|-----------|","lastModifiedDate":"2023-03-31"},{"lineNumber":151,"author":{"gitId":"igezt"},"content":"| n      | Name                            | No        |","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"igezt"},"content":"| e      | Email address                   | Yes       |","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"igezt"},"content":"| p      | Phone Number                    | Yes       |","lastModifiedDate":"2023-03-31"},{"lineNumber":154,"author":{"gitId":"igezt"},"content":"| a      | Address                         | Yes       |","lastModifiedDate":"2023-03-05"},{"lineNumber":155,"author":{"gitId":"igezt"},"content":"| m      | Major                           | Yes       |","lastModifiedDate":"2023-03-05"},{"lineNumber":156,"author":{"gitId":"igezt"},"content":"| mt     | Mods Taken                      | Yes       |","lastModifiedDate":"2023-03-05"},{"lineNumber":157,"author":{"gitId":"igezt"},"content":"| f      | Faculty                         | Yes       |","lastModifiedDate":"2023-03-05"},{"lineNumber":158,"author":{"gitId":"igezt"},"content":"| g      | Gender                          | Yes       |","lastModifiedDate":"2023-03-05"},{"lineNumber":159,"author":{"gitId":"igezt"},"content":"| t      | Tags                            | Yes       |","lastModifiedDate":"2023-03-05"},{"lineNumber":160,"author":{"gitId":"igezt"},"content":"| c      | Preferred Communication Channel | Yes       |","lastModifiedDate":"2023-03-05"},{"lineNumber":161,"author":{"gitId":"igezt"},"content":"| f      | Faculty                         | Yes       |","lastModifiedDate":"2023-03-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"igezt"},"content":"A person can have any number of tags and modules taken(including 0).","lastModifiedDate":"2023-03-05"},{"lineNumber":165,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":166,"author":{"gitId":"igezt"},"content":"IMPT: If you want to add multiple tags or modules in one statement,","lastModifiedDate":"2023-03-05"},{"lineNumber":167,"author":{"gitId":"Shuggan"},"content":"every tag or module has to have its corresponding prefix.","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":169,"author":{"gitId":"nicljr"},"content":"Only modules that are a part of NUS\u0027 mod systems will be allowed. This is","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"Shuggan"},"content":"to prevent any messiness and also allows for future syncing with the Events.","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"igezt"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com mt/CS2030s mt/CS2103T`","lastModifiedDate":"2023-03-05"},{"lineNumber":176,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":177,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":178,"author":{"gitId":"rachtan27"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"rachtan27"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"rachtan27"},"content":"### Listing All Contacts : `list`","lastModifiedDate":"2023-03-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"rachtan27"},"content":"Want to see all your contacts?","lastModifiedDate":"2023-03-05"},{"lineNumber":184,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":185,"author":{"gitId":"rachtan27"},"content":"Use this command to gain access to all of them!","lastModifiedDate":"2023-03-05"},{"lineNumber":186,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":187,"author":{"gitId":"rachtan27"},"content":"**Syntax:**","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"rachtan27"},"content":"`list`","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"rachtan27"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":193,"author":{"gitId":"rachtan27"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"rachtan27"},"content":"### Favourite A Contact : `fav`","lastModifiedDate":"2023-03-05"},{"lineNumber":196,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":197,"author":{"gitId":"rachtan27"},"content":"Contact someone very frequently?","lastModifiedDate":"2023-03-05"},{"lineNumber":198,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":199,"author":{"gitId":"rachtan27"},"content":"Use this command to favourite it so that you have easy access to it!","lastModifiedDate":"2023-03-05"},{"lineNumber":200,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":201,"author":{"gitId":"rachtan27"},"content":"**Syntax:**","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":203,"author":{"gitId":"rachtan27"},"content":"`fav INDEX`","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":205,"author":{"gitId":"rachtan27"},"content":"_Here are some important requirements for you to take note:_","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":207,"author":{"gitId":"rachtan27"},"content":"* `INDEX` refers to the index of the contact you wish to edit in the current displayed list.","lastModifiedDate":"2023-03-05"},{"lineNumber":208,"author":{"gitId":"rachtan27"},"content":"  * `INDEX` must be a **positive integer**.","lastModifiedDate":"2023-03-05"},{"lineNumber":209,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":210,"author":{"gitId":"rachtan27"},"content":"Here\u0027s how NeoBook would look like after you favourite a contact!","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"rachtan27"},"content":"![Fav](images/userguide/fav.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":213,"author":{"gitId":"rachtan27"},"content":"1. The contact will appear in the `Favourites` section.","lastModifiedDate":"2023-03-30"},{"lineNumber":214,"author":{"gitId":"rachtan27"},"content":"2. A :star: will appear next to the index in the detail panel.","lastModifiedDate":"2023-03-30"},{"lineNumber":215,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"rachtan27"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-29"},{"lineNumber":217,"author":{"gitId":"rachtan27"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":219,"author":{"gitId":"rachtan27"},"content":"### Unfavourite A Contact : `unfav`","lastModifiedDate":"2023-03-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":221,"author":{"gitId":"rachtan27"},"content":"No longer contact someone as frequently as you used to?","lastModifiedDate":"2023-03-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":223,"author":{"gitId":"rachtan27"},"content":"Use this command to unfavourite it!","lastModifiedDate":"2023-03-05"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":225,"author":{"gitId":"rachtan27"},"content":"**Syntax:** `unfav INDEX`","lastModifiedDate":"2023-03-28"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":227,"author":{"gitId":"rachtan27"},"content":"_Here are some important requirements for you to take note:_","lastModifiedDate":"2023-03-28"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":229,"author":{"gitId":"rachtan27"},"content":"* `INDEX` refers to the index of the contact you wish to edit in the current displayed list.","lastModifiedDate":"2023-03-05"},{"lineNumber":230,"author":{"gitId":"rachtan27"},"content":"  * `INDEX` must be a **positive integer**.","lastModifiedDate":"2023-03-05"},{"lineNumber":231,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":232,"author":{"gitId":"rachtan27"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-29"},{"lineNumber":233,"author":{"gitId":"rachtan27"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":234,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":235,"author":{"gitId":"rachtan27"},"content":"### Editing a contact\u0027s details : `edit`","lastModifiedDate":"2023-03-05"},{"lineNumber":236,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":237,"author":{"gitId":"rachtan27"},"content":"Learnt something new about your friend? Or perhaps he/she changed a particular detail?","lastModifiedDate":"2023-03-05"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"rachtan27"},"content":"Use this command to edit his/her details easily!","lastModifiedDate":"2023-03-05"},{"lineNumber":240,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":241,"author":{"gitId":"rachtan27"},"content":"**Syntax:**","lastModifiedDate":"2023-03-28"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"Shuggan"},"content":"`edit INDEX PREFIX/PARAMETER...`","lastModifiedDate":"2023-03-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"rachtan27"},"content":"_Here are some important requirements for you to take note:_","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":247,"author":{"gitId":"rachtan27"},"content":"* `INDEX` refers to the index of the contact you wish to edit in the current displayed list.","lastModifiedDate":"2023-03-05"},{"lineNumber":248,"author":{"gitId":"rachtan27"},"content":"  * `INDEX` must be a **positive integer**.","lastModifiedDate":"2023-03-05"},{"lineNumber":249,"author":{"gitId":"rachtan27"},"content":"* At least one field must be provided.","lastModifiedDate":"2023-03-05"},{"lineNumber":250,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":251,"author":{"gitId":"nicljr"},"content":"For the following fields, they are considered a `SuperField`.","lastModifiedDate":"2023-03-30"},{"lineNumber":252,"author":{"gitId":"nicljr"},"content":"* Modules","lastModifiedDate":"2023-03-30"},{"lineNumber":253,"author":{"gitId":"nicljr"},"content":"* Tags","lastModifiedDate":"2023-03-30"},{"lineNumber":254,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":255,"author":{"gitId":"Shuggan"},"content":"A `SuperField` can contain many parameters in that single field.","lastModifiedDate":"2023-03-30"},{"lineNumber":256,"author":{"gitId":"Shuggan"},"content":"When using edit, the command looks for each parameter in the `SuperField`:","lastModifiedDate":"2023-03-30"},{"lineNumber":257,"author":{"gitId":"Shuggan"},"content":"* If the parameter already exists in the `SuperField` it will be removed.","lastModifiedDate":"2023-03-30"},{"lineNumber":258,"author":{"gitId":"Shuggan"},"content":"* Otherwise, the parameter will be added into the `SuperField`.","lastModifiedDate":"2023-03-30"},{"lineNumber":259,"author":{"gitId":"igezt"},"content":"  * e.g. `edit mt/CS2103T` removes CS2103T from the Modules field of a contact if it already exists and adds it if it does not.","lastModifiedDate":"2023-03-31"},{"lineNumber":260,"author":{"gitId":"igezt"},"content":"  * e.g. `edit t/10x Coder t/Intern Friend`","lastModifiedDate":"2023-03-31"},{"lineNumber":261,"author":{"gitId":"igezt"},"content":"    * For a contact with none of the above tags, both `10x Coder` and `Intern Friend` will be added as tags","lastModifiedDate":"2023-03-31"},{"lineNumber":262,"author":{"gitId":"igezt"},"content":"    * For a contact which has `10x Coder` as a tag, he will have the `10x Coder` removed and `Intern Friend` added as a tag.","lastModifiedDate":"2023-03-31"},{"lineNumber":263,"author":{"gitId":"igezt"},"content":"  ","lastModifiedDate":"2023-03-05"},{"lineNumber":264,"author":{"gitId":"Shuggan"},"content":"| Prefix | Name of Field                   | Optional? |","lastModifiedDate":"2023-03-30"},{"lineNumber":265,"author":{"gitId":"igezt"},"content":"|--------|---------------------------------|-----------|","lastModifiedDate":"2023-03-31"},{"lineNumber":266,"author":{"gitId":"igezt"},"content":"| n      | Name                            | No        |","lastModifiedDate":"2023-03-31"},{"lineNumber":267,"author":{"gitId":"igezt"},"content":"| e      | Email address                   | Yes       |","lastModifiedDate":"2023-03-05"},{"lineNumber":268,"author":{"gitId":"igezt"},"content":"| p      | Phone Number                    | Yes       |","lastModifiedDate":"2023-03-31"},{"lineNumber":269,"author":{"gitId":"igezt"},"content":"| a      | Address                         | Yes       |","lastModifiedDate":"2023-03-05"},{"lineNumber":270,"author":{"gitId":"igezt"},"content":"| m      | Major                           | Yes       |","lastModifiedDate":"2023-03-05"},{"lineNumber":271,"author":{"gitId":"igezt"},"content":"| mt     | Mods Taken                      | Yes       |","lastModifiedDate":"2023-03-05"},{"lineNumber":272,"author":{"gitId":"igezt"},"content":"| f      | Faculty                         | Yes       |","lastModifiedDate":"2023-03-05"},{"lineNumber":273,"author":{"gitId":"igezt"},"content":"| g      | Gender                          | Yes       |","lastModifiedDate":"2023-03-05"},{"lineNumber":274,"author":{"gitId":"igezt"},"content":"| t      | Tags                            | Yes       |","lastModifiedDate":"2023-03-05"},{"lineNumber":275,"author":{"gitId":"igezt"},"content":"| c      | Preferred Communication Channel | Yes       |","lastModifiedDate":"2023-03-05"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"rachtan27"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-29"},{"lineNumber":283,"author":{"gitId":"rachtan27"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":285,"author":{"gitId":"rachtan27"},"content":"### Finding Particular Contacts: `find`","lastModifiedDate":"2023-03-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"rachtan27"},"content":"Want to narrow down your displayed contacts to a certain few?","lastModifiedDate":"2023-03-05"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"nicljr"},"content":"Use this command to find contacts using keywords and fields you specify!","lastModifiedDate":"2023-03-30"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"rachtan27"},"content":"**Syntax:**","lastModifiedDate":"2023-03-28"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"Shuggan"},"content":"`find KEYWORD PREFIX/KEYWORDS...`","lastModifiedDate":"2023-03-30"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":295,"author":{"gitId":"Shuggan"},"content":"| Prefix | Name of Field                   | Optional? |","lastModifiedDate":"2023-03-30"},{"lineNumber":296,"author":{"gitId":"igezt"},"content":"|--------|---------------------------------|-----------|","lastModifiedDate":"2023-03-31"},{"lineNumber":297,"author":{"gitId":"igezt"},"content":"| n      | Name                            | No        |","lastModifiedDate":"2023-03-31"},{"lineNumber":298,"author":{"gitId":"nicljr"},"content":"| e      | Email address                   | Yes       |","lastModifiedDate":"2023-03-30"},{"lineNumber":299,"author":{"gitId":"igezt"},"content":"| p      | Phone Number                    | Yes       |","lastModifiedDate":"2023-03-31"},{"lineNumber":300,"author":{"gitId":"nicljr"},"content":"| a      | Address                         | Yes       |","lastModifiedDate":"2023-03-30"},{"lineNumber":301,"author":{"gitId":"nicljr"},"content":"| m      | Major                           | Yes       |","lastModifiedDate":"2023-03-30"},{"lineNumber":302,"author":{"gitId":"nicljr"},"content":"| mt     | Mods Taken                      | Yes       |","lastModifiedDate":"2023-03-30"},{"lineNumber":303,"author":{"gitId":"nicljr"},"content":"| f      | Faculty                         | Yes       |","lastModifiedDate":"2023-03-30"},{"lineNumber":304,"author":{"gitId":"nicljr"},"content":"| g      | Gender                          | Yes       |","lastModifiedDate":"2023-03-30"},{"lineNumber":305,"author":{"gitId":"nicljr"},"content":"| t      | Tags                            | Yes       |","lastModifiedDate":"2023-03-30"},{"lineNumber":306,"author":{"gitId":"nicljr"},"content":"| c      | Preferred Communication Channel | Yes       |","lastModifiedDate":"2023-03-30"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":308,"author":{"gitId":"nicljr"},"content":"_Here are some important requirements for you to take note:_","lastModifiedDate":"2023-03-30"},{"lineNumber":309,"author":{"gitId":"nicljr"},"content":"* The keywords are case-insensitive.","lastModifiedDate":"2023-03-30"},{"lineNumber":310,"author":{"gitId":"nicljr"},"content":"  * i.e. `find n/Abigail` can return people with names of \u0027Abigail\u0027, \u0027aBiGail\u0027, \u0027abigail\u0027, \u0027ABIGAIL\u0027.","lastModifiedDate":"2023-03-30"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":313,"author":{"gitId":"nicljr"},"content":"* For each field specified, as long as one of the keywords is contained","lastModifiedDate":"2023-03-30"},{"lineNumber":314,"author":{"gitId":"nicljr"},"content":"in that field, then the person will be returned.","lastModifiedDate":"2023-03-30"},{"lineNumber":315,"author":{"gitId":"nicljr"},"content":"  * i.e. `find n/John n/Peter James`","lastModifiedDate":"2023-03-30"},{"lineNumber":316,"author":{"gitId":"nicljr"},"content":"    * Can return:","lastModifiedDate":"2023-03-30"},{"lineNumber":317,"author":{"gitId":"nicljr"},"content":"      * people with names of \u0027John\u0027, \u0027Peter James\u0027, \u0027Peter James John\u0027","lastModifiedDate":"2023-03-30"},{"lineNumber":318,"author":{"gitId":"nicljr"},"content":"    * Cannot return:","lastModifiedDate":"2023-03-30"},{"lineNumber":319,"author":{"gitId":"nicljr"},"content":"      * A person with name of \u0027Peter\u0027.","lastModifiedDate":"2023-03-30"},{"lineNumber":320,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":321,"author":{"gitId":"nicljr"},"content":"* All fields specified must have at least one keyword contained within that","lastModifiedDate":"2023-03-30"},{"lineNumber":322,"author":{"gitId":"nicljr"},"content":"field for that person to be returned.","lastModifiedDate":"2023-03-30"},{"lineNumber":323,"author":{"gitId":"nicljr"},"content":"  * i.e. `find n/Caleb p/9123 p/456`","lastModifiedDate":"2023-03-30"},{"lineNumber":324,"author":{"gitId":"nicljr"},"content":"    * Can return: ","lastModifiedDate":"2023-03-30"},{"lineNumber":325,"author":{"gitId":"nicljr"},"content":"      * A person with a name of \u0027Caleb\u0027 who","lastModifiedDate":"2023-03-30"},{"lineNumber":326,"author":{"gitId":"nicljr"},"content":"has a phone number of \u002791234567\u0027, ","lastModifiedDate":"2023-03-30"},{"lineNumber":327,"author":{"gitId":"nicljr"},"content":"    * Cannot return:","lastModifiedDate":"2023-03-30"},{"lineNumber":328,"author":{"gitId":"nicljr"},"content":"      * A person whose name is \u0027Caleb\u0027 but has","lastModifiedDate":"2023-03-30"},{"lineNumber":329,"author":{"gitId":"nicljr"},"content":"a phone number of \u002798765432\u0027","lastModifiedDate":"2023-03-30"},{"lineNumber":330,"author":{"gitId":"nicljr"},"content":"      * A person whose name is \u0027Joshua\u0027 even though","lastModifiedDate":"2023-03-30"},{"lineNumber":331,"author":{"gitId":"nicljr"},"content":"his phone number is \u002791234567\u0027","lastModifiedDate":"2023-03-30"},{"lineNumber":332,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"rachtan27"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-29"},{"lineNumber":335,"author":{"gitId":"rachtan27"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":336,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":337,"author":{"gitId":"Shuggan"},"content":"### Select contact to expand details: `select`","lastModifiedDate":"2023-03-20"},{"lineNumber":338,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":339,"author":{"gitId":"Shuggan"},"content":"Want to see more details about a certain contact in your list?","lastModifiedDate":"2023-03-20"},{"lineNumber":340,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":341,"author":{"gitId":"Shuggan"},"content":"Use this command to expand and view more information about the selected contact.","lastModifiedDate":"2023-03-20"},{"lineNumber":342,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":343,"author":{"gitId":"rachtan27"},"content":"**Syntax:**","lastModifiedDate":"2023-03-28"},{"lineNumber":344,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":345,"author":{"gitId":"rachtan27"},"content":"`select INDEX`","lastModifiedDate":"2023-03-28"},{"lineNumber":346,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":347,"author":{"gitId":"rachtan27"},"content":"_Here are some important requirements for you to take note:_","lastModifiedDate":"2023-03-28"},{"lineNumber":348,"author":{"gitId":"Shuggan"},"content":"* `INDEX` refers to the index of the contact you wish to view more information on.","lastModifiedDate":"2023-03-20"},{"lineNumber":349,"author":{"gitId":"Shuggan"},"content":"    * `INDEX` must be a positive integer.","lastModifiedDate":"2023-03-20"},{"lineNumber":350,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":351,"author":{"gitId":"rachtan27"},"content":"_Examples:_","lastModifiedDate":"2023-03-28"},{"lineNumber":352,"author":{"gitId":"Shuggan"},"content":"* `select 1` expands the details of the first contact in your list.","lastModifiedDate":"2023-03-20"},{"lineNumber":353,"author":{"gitId":"Shuggan"},"content":"* `select 4` expands the details of the fourth contact in your list.","lastModifiedDate":"2023-03-20"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"rachtan27"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-29"},{"lineNumber":356,"author":{"gitId":"rachtan27"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":357,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":358,"author":{"gitId":"rachtan27"},"content":"### Deleting A Contact : `delete`","lastModifiedDate":"2023-03-05"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"rachtan27"},"content":"No longer interact with someone in your contacts?","lastModifiedDate":"2023-03-05"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"rachtan27"},"content":"Use this command to delete the specified contact from your NeoBook.","lastModifiedDate":"2023-03-28"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"rachtan27"},"content":"**Syntax:**","lastModifiedDate":"2023-03-28"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"rachtan27"},"content":"`delete INDEX`","lastModifiedDate":"2023-03-28"},{"lineNumber":367,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":368,"author":{"gitId":"rachtan27"},"content":"_Here are some important requirements for you to take note:_","lastModifiedDate":"2023-03-28"},{"lineNumber":369,"author":{"gitId":"rachtan27"},"content":"* `INDEX` refers to the index of the contact you wish to delete in the current displayed list.","lastModifiedDate":"2023-03-05"},{"lineNumber":370,"author":{"gitId":"rachtan27"},"content":"  * `INDEX` must be a **positive integer**.","lastModifiedDate":"2023-03-05"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"rachtan27"},"content":"_Examples:_","lastModifiedDate":"2023-03-28"},{"lineNumber":373,"author":{"gitId":"rachtan27"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the displayed list.","lastModifiedDate":"2023-03-05"},{"lineNumber":374,"author":{"gitId":"-"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"nicljr"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":377,"author":{"gitId":"rachtan27"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":378,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":379,"author":{"gitId":"rachtan27"},"content":"### Clearing all contacts : `clear`","lastModifiedDate":"2023-03-05"},{"lineNumber":380,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":381,"author":{"gitId":"rachtan27"},"content":"Want to start from a clean slate?","lastModifiedDate":"2023-03-05"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"rachtan27"},"content":"Simply use this command to clear all contacts from your NeoBook.","lastModifiedDate":"2023-03-28"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"rachtan27"},"content":"**Syntax:**","lastModifiedDate":"2023-03-28"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"rachtan27"},"content":"`clear`","lastModifiedDate":"2023-03-28"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"rachtan27"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-29"},{"lineNumber":390,"author":{"gitId":"rachtan27"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"hansstanley"},"content":"### Switching between UI tabs: `tab`","lastModifiedDate":"2023-03-14"},{"lineNumber":393,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":394,"author":{"gitId":"Shuggan"},"content":"Looking for a faster way to switch between NeoBook and the Events?","lastModifiedDate":"2023-03-30"},{"lineNumber":395,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":396,"author":{"gitId":"hansstanley"},"content":"Use this command to navigate to the specified tab.","lastModifiedDate":"2023-03-14"},{"lineNumber":397,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":398,"author":{"gitId":"rachtan27"},"content":"**Syntax:**","lastModifiedDate":"2023-03-28"},{"lineNumber":399,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":400,"author":{"gitId":"rachtan27"},"content":"`tab INDEX`","lastModifiedDate":"2023-03-28"},{"lineNumber":401,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":402,"author":{"gitId":"rachtan27"},"content":"_Here are some important requirements for you to take note:_","lastModifiedDate":"2023-03-28"},{"lineNumber":403,"author":{"gitId":"hansstanley"},"content":"* `INDEX` refers to the index of the tab to navigate to, shown before the name in the tab.","lastModifiedDate":"2023-03-14"},{"lineNumber":404,"author":{"gitId":"hansstanley"},"content":"  * `INDEX` must be a positive integer.","lastModifiedDate":"2023-03-14"},{"lineNumber":405,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":406,"author":{"gitId":"rachtan27"},"content":"_Examples:_","lastModifiedDate":"2023-03-28"},{"lineNumber":407,"author":{"gitId":"rachtan27"},"content":"* `tab 1` switches to the NeoBook tab.","lastModifiedDate":"2023-03-28"},{"lineNumber":408,"author":{"gitId":"Shuggan"},"content":"* `tab 2` switches to the Events tab.","lastModifiedDate":"2023-03-30"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":410,"author":{"gitId":"rachtan27"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-29"},{"lineNumber":411,"author":{"gitId":"rachtan27"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":413,"author":{"gitId":"rachtan27"},"content":"### Exiting NeoBook : `exit`","lastModifiedDate":"2023-03-28"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"rachtan27"},"content":"Finished what you needed to do?","lastModifiedDate":"2023-03-05"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"rachtan27"},"content":"Use this command to exit the application!","lastModifiedDate":"2023-03-05"},{"lineNumber":418,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"rachtan27"},"content":"**Syntax:**","lastModifiedDate":"2023-03-28"},{"lineNumber":420,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":421,"author":{"gitId":"rachtan27"},"content":"`exit`","lastModifiedDate":"2023-03-28"},{"lineNumber":422,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":423,"author":{"gitId":"rachtan27"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-29"},{"lineNumber":424,"author":{"gitId":"rachtan27"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":425,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":426,"author":{"gitId":"rachtan27"},"content":"### NeoBook Command Summary","lastModifiedDate":"2023-03-28"},{"lineNumber":427,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":428,"author":{"gitId":"rachtan27"},"content":"| Action      | Format, Examples                                                                                                                                 |","lastModifiedDate":"2023-03-05"},{"lineNumber":429,"author":{"gitId":"igezt"},"content":"|-------------|--------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-30"},{"lineNumber":430,"author":{"gitId":"igezt"},"content":"| **Add**     | `add n/NAME [PREFIX/PARAMETERS]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2023-03-30"},{"lineNumber":431,"author":{"gitId":"rachtan27"},"content":"| **Clear**   | `clear`                                                                                                                                          |","lastModifiedDate":"2023-03-05"},{"lineNumber":432,"author":{"gitId":"rachtan27"},"content":"| **Delete**  | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                              |","lastModifiedDate":"2023-03-05"},{"lineNumber":433,"author":{"gitId":"igezt"},"content":"| **Edit**    | `edit INDEX [PREFIX/PARAMETERS]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                                          |  ","lastModifiedDate":"2023-03-30"},{"lineNumber":434,"author":{"gitId":"rachtan27"},"content":"| **Fav**     | `fav INDEX`\u003cbr\u003e e.g., `fav 2`                                                                                                                    |","lastModifiedDate":"2023-03-05"},{"lineNumber":435,"author":{"gitId":"rachtan27"},"content":"| **Unfav**   | `unfav INDEX`\u003cbr\u003e e.g., `unfav 2`                                                                                                                |","lastModifiedDate":"2023-03-05"},{"lineNumber":436,"author":{"gitId":"igezt"},"content":"| **Find**    | `find [PREFIX/PARAMETERS]…`\u003cbr\u003e e.g., `find n/James Jake mt/CS2103T a/Serangon Central`                                                          |","lastModifiedDate":"2023-03-30"},{"lineNumber":437,"author":{"gitId":"Shuggan"},"content":"| **Select**  | `select INDEX` \u003cbr\u003e e.g., `select 2`                                                                                                             |","lastModifiedDate":"2023-03-26"},{"lineNumber":438,"author":{"gitId":"rachtan27"},"content":"| **List**    | `list`                                                                                                                                           |","lastModifiedDate":"2023-03-05"},{"lineNumber":439,"author":{"gitId":"rachtan27"},"content":"| **Help**    | `help`                                                                                                                                           |","lastModifiedDate":"2023-03-05"},{"lineNumber":440,"author":{"gitId":"hansstanley"},"content":"| **Tab**     | `tab INDEX`\u003cbr\u003e e.g., `tab 2`                                                                                                                    |","lastModifiedDate":"2023-03-14"},{"lineNumber":441,"author":{"gitId":"Shuggan"},"content":"| **Exit**    | `exit`                                                                                                                                           |                                                                                                                                |","lastModifiedDate":"2023-03-30"},{"lineNumber":442,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":443,"author":{"gitId":"rachtan27"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-29"},{"lineNumber":444,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":445,"author":{"gitId":"rachtan27"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":446,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":447,"author":{"gitId":"rachtan27"},"content":"## Events Features","lastModifiedDate":"2023-03-30"},{"lineNumber":448,"author":{"gitId":"nicljr"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":449,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":450,"author":{"gitId":"igezt"},"content":"Events have 4 components to them","lastModifiedDate":"2023-03-30"},{"lineNumber":451,"author":{"gitId":"igezt"},"content":"- Description","lastModifiedDate":"2023-03-30"},{"lineNumber":452,"author":{"gitId":"igezt"},"content":"- StartDateTime","lastModifiedDate":"2023-03-30"},{"lineNumber":453,"author":{"gitId":"igezt"},"content":"- EndDateTime","lastModifiedDate":"2023-03-30"},{"lineNumber":454,"author":{"gitId":"igezt"},"content":"- Recurrence","lastModifiedDate":"2023-03-30"},{"lineNumber":455,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":456,"author":{"gitId":"igezt"},"content":"Events will auto-update to their next earliest occurrence for recurring events and will be automatically grayed out once","lastModifiedDate":"2023-03-30"},{"lineNumber":457,"author":{"gitId":"igezt"},"content":"the event has been passed.","lastModifiedDate":"2023-03-30"},{"lineNumber":458,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":459,"author":{"gitId":"nicljr"},"content":"### Adding an Event : `addevent`","lastModifiedDate":"2023-03-30"},{"lineNumber":460,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":461,"author":{"gitId":"nicljr"},"content":"Want to keep track of current events?","lastModifiedDate":"2023-03-30"},{"lineNumber":462,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":463,"author":{"gitId":"nicljr"},"content":"Use this command to add events into your Event Section of your NeoBook.","lastModifiedDate":"2023-03-30"},{"lineNumber":464,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":465,"author":{"gitId":"nicljr"},"content":"Moreover, you can add 2 types of Events:","lastModifiedDate":"2023-03-30"},{"lineNumber":466,"author":{"gitId":"nicljr"},"content":"1. One Time Events","lastModifiedDate":"2023-03-30"},{"lineNumber":467,"author":{"gitId":"nicljr"},"content":"2. Recurring Events (of various Intervals):","lastModifiedDate":"2023-03-30"},{"lineNumber":468,"author":{"gitId":"nicljr"},"content":"    * Daily Events","lastModifiedDate":"2023-03-30"},{"lineNumber":469,"author":{"gitId":"nicljr"},"content":"    * Weekly Events","lastModifiedDate":"2023-03-30"},{"lineNumber":470,"author":{"gitId":"nicljr"},"content":"    * Monthly Events","lastModifiedDate":"2023-03-30"},{"lineNumber":471,"author":{"gitId":"nicljr"},"content":"    * Yearly Events","lastModifiedDate":"2023-03-30"},{"lineNumber":472,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":473,"author":{"gitId":"nicljr"},"content":"You can specify the Recurrence Intervals within the Command as well!","lastModifiedDate":"2023-03-30"},{"lineNumber":474,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":475,"author":{"gitId":"nicljr"},"content":"Accepted Intervals:","lastModifiedDate":"2023-03-30"},{"lineNumber":476,"author":{"gitId":"nicljr"},"content":"1. None","lastModifiedDate":"2023-03-30"},{"lineNumber":477,"author":{"gitId":"nicljr"},"content":"2. Daily","lastModifiedDate":"2023-03-30"},{"lineNumber":478,"author":{"gitId":"nicljr"},"content":"3. Weekly","lastModifiedDate":"2023-03-30"},{"lineNumber":479,"author":{"gitId":"nicljr"},"content":"4. Monthly","lastModifiedDate":"2023-03-30"},{"lineNumber":480,"author":{"gitId":"nicljr"},"content":"5. Yearly","lastModifiedDate":"2023-03-30"},{"lineNumber":481,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":482,"author":{"gitId":"nicljr"},"content":"**Syntax:**","lastModifiedDate":"2023-03-30"},{"lineNumber":483,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":484,"author":{"gitId":"nicljr"},"content":"`addevent d/DESCRIPTION OF EVENT s/START DATE \u0026 START TIME e/END DATE \u0026 END TIME r/INTERVAL OF RECURRENCE`","lastModifiedDate":"2023-03-30"},{"lineNumber":485,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":486,"author":{"gitId":"nicljr"},"content":"_Here are some important requirements for you to take note:_","lastModifiedDate":"2023-03-30"},{"lineNumber":487,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":488,"author":{"gitId":"nicljr"},"content":"* `START DATE \u0026 START TIME` and `END DATE \u0026 END TIME` must follow this formatting YYYY-MM-DD HHMM.","lastModifiedDate":"2023-03-30"},{"lineNumber":489,"author":{"gitId":"nicljr"},"content":"    * `START TIME` and `END TIME` follows the 24-Hour Clock format e.g. instead of 6:00pm, you must enter 1800.","lastModifiedDate":"2023-03-30"},{"lineNumber":490,"author":{"gitId":"nicljr"},"content":"    * `START DATE \u0026 START TIME` must be before `END DATE \u0026 END TIME`","lastModifiedDate":"2023-03-30"},{"lineNumber":491,"author":{"gitId":"nicljr"},"content":"* `INTERVAL OF RECURRENCE` doesn\u0027t need to be specified to add an event","lastModifiedDate":"2023-03-30"},{"lineNumber":492,"author":{"gitId":"nicljr"},"content":"    *  Event will be automatically added as a `One Time Event`.","lastModifiedDate":"2023-03-30"},{"lineNumber":493,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":494,"author":{"gitId":"nicljr"},"content":"_Examples:_","lastModifiedDate":"2023-03-30"},{"lineNumber":495,"author":{"gitId":"nicljr"},"content":"* `addevent d/CS2103T Lecture s/2023-03-30 1600 e/2023-03-30 1800 r/weekly` will add a Weekly Recurring Event of CS2103T Lecture that occurs from 1600 to 1800, starting on 2023-03-30.","lastModifiedDate":"2023-03-30"},{"lineNumber":496,"author":{"gitId":"nicljr"},"content":"* `addevent d/Catchup with John s/2023-03-30 1600 e/2023-03-30 1800 r/None` will add a One Time Event of Catchup with John that occurs from 1600 to 1800, on 2023-03-30.","lastModifiedDate":"2023-03-30"},{"lineNumber":497,"author":{"gitId":"nicljr"},"content":"* `addevent d/Dinner with Family s/2023-03-30 1600 e/2023-03-30 1800` will add a One Time Event of Dinner with Family that occurs from 1600 to 1800, on 2023-03-30.","lastModifiedDate":"2023-03-30"},{"lineNumber":498,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":499,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":500,"author":{"gitId":"Shuggan"},"content":"| Prefix   | Name of Field                 | Optional? |","lastModifiedDate":"2023-03-30"},{"lineNumber":501,"author":{"gitId":"Shuggan"},"content":"|----------|-------------------------------|-----------|","lastModifiedDate":"2023-03-30"},{"lineNumber":502,"author":{"gitId":"nicljr"},"content":"| d        | Description of Event          | No        |","lastModifiedDate":"2023-03-30"},{"lineNumber":503,"author":{"gitId":"nicljr"},"content":"| s        | Start Date and Time of Event  | No        |","lastModifiedDate":"2023-03-30"},{"lineNumber":504,"author":{"gitId":"nicljr"},"content":"| e        | End Date and Time of Event    | No        |","lastModifiedDate":"2023-03-30"},{"lineNumber":505,"author":{"gitId":"nicljr"},"content":"| r        | Recurrence Interval           | Yes       |","lastModifiedDate":"2023-03-30"},{"lineNumber":506,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":507,"author":{"gitId":"nicljr"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":508,"author":{"gitId":"nicljr"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":509,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":510,"author":{"gitId":"nicljr"},"content":"### Deleting An Event : `delevent`","lastModifiedDate":"2023-03-30"},{"lineNumber":511,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":512,"author":{"gitId":"nicljr"},"content":"You no longer need to track this particular event?","lastModifiedDate":"2023-03-30"},{"lineNumber":513,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":514,"author":{"gitId":"nicljr"},"content":"Use this command to delete the specified event from your NeoBook.","lastModifiedDate":"2023-03-30"},{"lineNumber":515,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":516,"author":{"gitId":"nicljr"},"content":"**Syntax:**","lastModifiedDate":"2023-03-30"},{"lineNumber":517,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":518,"author":{"gitId":"nicljr"},"content":"`delevent INDEX`","lastModifiedDate":"2023-03-30"},{"lineNumber":519,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":520,"author":{"gitId":"nicljr"},"content":"_Here are some important requirements for you to take note:_","lastModifiedDate":"2023-03-30"},{"lineNumber":521,"author":{"gitId":"nicljr"},"content":"* `INDEX` refers to the index of the Event you wish to delete in the current displayed Events List.","lastModifiedDate":"2023-03-30"},{"lineNumber":522,"author":{"gitId":"nicljr"},"content":"    * `INDEX` must be a **positive integer**.","lastModifiedDate":"2023-03-30"},{"lineNumber":523,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":524,"author":{"gitId":"nicljr"},"content":"_Examples:_","lastModifiedDate":"2023-03-30"},{"lineNumber":525,"author":{"gitId":"nicljr"},"content":"* `delevent 2` deletes the event tagged to Index 2 in your NeoBook\u0027s Event List.","lastModifiedDate":"2023-03-30"},{"lineNumber":526,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":527,"author":{"gitId":"nicljr"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":528,"author":{"gitId":"nicljr"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":529,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":530,"author":{"gitId":"Shuggan"},"content":"### Editing An Event : `editevent`","lastModifiedDate":"2023-03-30"},{"lineNumber":531,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":532,"author":{"gitId":"Shuggan"},"content":"Want to change the details of a particular event?","lastModifiedDate":"2023-03-30"},{"lineNumber":533,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":534,"author":{"gitId":"Shuggan"},"content":"Use this command to edit the specified event in your NeoBook.","lastModifiedDate":"2023-03-30"},{"lineNumber":535,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":536,"author":{"gitId":"Shuggan"},"content":"**Syntax:**","lastModifiedDate":"2023-03-30"},{"lineNumber":537,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":538,"author":{"gitId":"Shuggan"},"content":"`editevent INDEX PREFIX/PARAMETER...`","lastModifiedDate":"2023-03-30"},{"lineNumber":539,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":540,"author":{"gitId":"Shuggan"},"content":"_Here are some important requirements for you to take note:_","lastModifiedDate":"2023-03-30"},{"lineNumber":541,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":542,"author":{"gitId":"Shuggan"},"content":"* `INDEX` refers to the index of the event you wish to edit in the current displayed list.","lastModifiedDate":"2023-03-30"},{"lineNumber":543,"author":{"gitId":"Shuggan"},"content":"    * `INDEX` must be a **positive integer**.","lastModifiedDate":"2023-03-30"},{"lineNumber":544,"author":{"gitId":"Shuggan"},"content":"* At least one field must be provided.","lastModifiedDate":"2023-03-30"},{"lineNumber":545,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":546,"author":{"gitId":"Shuggan"},"content":"| Prefix | Name of Field                 | Optional? |","lastModifiedDate":"2023-03-30"},{"lineNumber":547,"author":{"gitId":"Shuggan"},"content":"|--------|-------------------------------|-----------|","lastModifiedDate":"2023-03-30"},{"lineNumber":548,"author":{"gitId":"Shuggan"},"content":"| d      | Description of Event          | Yes       |","lastModifiedDate":"2023-03-30"},{"lineNumber":549,"author":{"gitId":"Shuggan"},"content":"| s      | Start Date and Time of Event  | Yes       |","lastModifiedDate":"2023-03-30"},{"lineNumber":550,"author":{"gitId":"Shuggan"},"content":"| e      | End Date and Time of Event    | Yes       |","lastModifiedDate":"2023-03-30"},{"lineNumber":551,"author":{"gitId":"Shuggan"},"content":"| r      | Recurrence Interval           | Yes       |","lastModifiedDate":"2023-03-30"},{"lineNumber":552,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":553,"author":{"gitId":"Shuggan"},"content":"Examples:","lastModifiedDate":"2023-03-30"},{"lineNumber":554,"author":{"gitId":"Shuggan"},"content":"*  `editevent 1 d/read book e/weekly` Edits the description and recurrence of the 1st event to be `read book` and `weekly` respectively.","lastModifiedDate":"2023-03-30"},{"lineNumber":555,"author":{"gitId":"Shuggan"},"content":"*  `editevent 2 s/2023-01-01 1800 e/2023-01-02 2000` Edits the start date and end date of the 1st and 2nd event to be `20203-01-01 1800` and `2023-01-02 2000` respectively.","lastModifiedDate":"2023-03-30"},{"lineNumber":556,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":557,"author":{"gitId":"Shuggan"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":558,"author":{"gitId":"Shuggan"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":559,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":560,"author":{"gitId":"nicljr"},"content":"### Tagging Contacts to an Event: `tagpersonevent`","lastModifiedDate":"2023-03-30"},{"lineNumber":561,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":562,"author":{"gitId":"nicljr"},"content":"Want to remember who was a part of a certain event? ","lastModifiedDate":"2023-03-30"},{"lineNumber":563,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":564,"author":{"gitId":"nicljr"},"content":"Tag their contacts","lastModifiedDate":"2023-03-30"},{"lineNumber":565,"author":{"gitId":"nicljr"},"content":"to the event using this command!","lastModifiedDate":"2023-03-30"},{"lineNumber":566,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":567,"author":{"gitId":"nicljr"},"content":"**Syntax:**","lastModifiedDate":"2023-03-30"},{"lineNumber":568,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":569,"author":{"gitId":"nicljr"},"content":"`tagpersonevent et/EVENT INDEX pt/NAME`","lastModifiedDate":"2023-03-30"},{"lineNumber":570,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":571,"author":{"gitId":"nicljr"},"content":"_Here are some important requirements for you to take note:_","lastModifiedDate":"2023-03-30"},{"lineNumber":572,"author":{"gitId":"nicljr"},"content":"* The EVENT INDEX is the index of the event you want to tag the person to.","lastModifiedDate":"2023-03-30"},{"lineNumber":573,"author":{"gitId":"nicljr"},"content":"* NAME is the name of the person you want to tag to the event.","lastModifiedDate":"2023-03-30"},{"lineNumber":574,"author":{"gitId":"nicljr"},"content":"  * NAME is **case_sensitive**.","lastModifiedDate":"2023-03-30"},{"lineNumber":575,"author":{"gitId":"nicljr"},"content":"  * NAME must be the name of a contact already registered in NeoBook","lastModifiedDate":"2023-03-30"},{"lineNumber":576,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":577,"author":{"gitId":"nicljr"},"content":"_For more advanced users_","lastModifiedDate":"2023-03-30"},{"lineNumber":578,"author":{"gitId":"nicljr"},"content":"* Be careful when directly editing the tagged contacts in `userdata.json`.","lastModifiedDate":"2023-03-30"},{"lineNumber":579,"author":{"gitId":"nicljr"},"content":"It may cause the person to become unlinked from the event completely.","lastModifiedDate":"2023-03-30"},{"lineNumber":580,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":581,"author":{"gitId":"nicljr"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":582,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":583,"author":{"gitId":"nicljr"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":584,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":585,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":586,"author":{"gitId":"nicljr"},"content":"### Untagging Contacts from an Event: `untagpersonevent`","lastModifiedDate":"2023-03-30"},{"lineNumber":587,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":588,"author":{"gitId":"nicljr"},"content":"Want to remove somebody who was a part of a certain event?","lastModifiedDate":"2023-03-30"},{"lineNumber":589,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":590,"author":{"gitId":"nicljr"},"content":"Untag their contacts from the event using this command!","lastModifiedDate":"2023-03-30"},{"lineNumber":591,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":592,"author":{"gitId":"nicljr"},"content":"**Syntax:**","lastModifiedDate":"2023-03-30"},{"lineNumber":593,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":594,"author":{"gitId":"nicljr"},"content":"`untagpersonevent et/EVENT INDEX pt/NAME`","lastModifiedDate":"2023-03-30"},{"lineNumber":595,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":596,"author":{"gitId":"nicljr"},"content":"_Here are some important requirements for you to take note:_","lastModifiedDate":"2023-03-30"},{"lineNumber":597,"author":{"gitId":"nicljr"},"content":"* The EVENT INDEX is the index of the event you want to tag the person to.","lastModifiedDate":"2023-03-30"},{"lineNumber":598,"author":{"gitId":"nicljr"},"content":"* NAME is the name of the person you want to tag to the event.","lastModifiedDate":"2023-03-30"},{"lineNumber":599,"author":{"gitId":"nicljr"},"content":"    * NAME is **case_sensitive**.","lastModifiedDate":"2023-03-30"},{"lineNumber":600,"author":{"gitId":"nicljr"},"content":"    * NAME must be the name of a contact already registered in NeoBook and","lastModifiedDate":"2023-03-30"},{"lineNumber":601,"author":{"gitId":"nicljr"},"content":"tagged to that event.","lastModifiedDate":"2023-03-30"},{"lineNumber":602,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":603,"author":{"gitId":"nicljr"},"content":"_For more advanced users_","lastModifiedDate":"2023-03-30"},{"lineNumber":604,"author":{"gitId":"nicljr"},"content":"* Be careful when directly editing the tagged contacts in `userdata.json`.","lastModifiedDate":"2023-03-30"},{"lineNumber":605,"author":{"gitId":"nicljr"},"content":"  It may cause the person to become unlinked from the event completely.","lastModifiedDate":"2023-03-30"},{"lineNumber":606,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":607,"author":{"gitId":"rachtan27"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-29"},{"lineNumber":608,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":609,"author":{"gitId":"nicljr"},"content":"### Events Command Summary","lastModifiedDate":"2023-03-30"},{"lineNumber":610,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":611,"author":{"gitId":"nicljr"},"content":"| Action                     | Format, Examples                                                                                                                                                                                |","lastModifiedDate":"2023-03-30"},{"lineNumber":612,"author":{"gitId":"nicljr"},"content":"|----------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-30"},{"lineNumber":613,"author":{"gitId":"nicljr"},"content":"| **Add Event**              | `addevent d/DESCRIPTION OF EVENT s/START DATE \u0026 START TIME e/END DATE \u0026 END TIME r/INTERVAL OF RECURRENCE` \u003cbr\u003e e.g., `addevent d/CS2103T Lecture s/2023-03-30 1600 e/2023-03-30 1800 r/weekly` |   ","lastModifiedDate":"2023-03-30"},{"lineNumber":614,"author":{"gitId":"nicljr"},"content":"| **Delete Event**           | `delevent INDEX` \u003cbr/\u003e e,g., `delevent 1`                                                                                                                                                       |","lastModifiedDate":"2023-03-30"},{"lineNumber":615,"author":{"gitId":"Shuggan"},"content":"| **Edit Event**             | `editevent INDEX PREFIX/PARAMETER...` \u003cbr\u003e e.g.,`editevent 1 d/read book e/weekly`                                                                                                              |","lastModifiedDate":"2023-03-30"},{"lineNumber":616,"author":{"gitId":"nicljr"},"content":"| **Tag Contact to Event**   | `tagpersonevent et/EVENT INDEX pt/NAME` e.g., `tagpersonevent et/1 pt/John`                                                                                                                     |","lastModifiedDate":"2023-03-30"},{"lineNumber":617,"author":{"gitId":"nicljr"},"content":"| **Untag Contact to Event** | `untagpersonevent et/EVENT INDEX pt/NAME` \u003cbr\u003e e.g.,`untagpersonevent et/1 pt/John`                                                                                                             |","lastModifiedDate":"2023-03-30"},{"lineNumber":618,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":619,"author":{"gitId":"nicljr"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":620,"author":{"gitId":"nicljr"},"content":"## UI Features","lastModifiedDate":"2023-03-30"},{"lineNumber":621,"author":{"gitId":"nicljr"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":622,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":623,"author":{"gitId":"nicljr"},"content":"### Light Mode: `light`","lastModifiedDate":"2023-03-30"},{"lineNumber":624,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":625,"author":{"gitId":"nicljr"},"content":"Want to use a brighter version of our UI?","lastModifiedDate":"2023-03-30"},{"lineNumber":626,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":627,"author":{"gitId":"nicljr"},"content":"Use Light mode!","lastModifiedDate":"2023-03-30"},{"lineNumber":628,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":629,"author":{"gitId":"nicljr"},"content":"**Syntax:**","lastModifiedDate":"2023-03-30"},{"lineNumber":630,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":631,"author":{"gitId":"nicljr"},"content":"`light`","lastModifiedDate":"2023-03-30"},{"lineNumber":632,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":633,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":634,"author":{"gitId":"nicljr"},"content":"\u003chr style\u003d\"border:2px solid gray\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":635,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":636,"author":{"gitId":"nicljr"},"content":"### Dark Mode: `dark`","lastModifiedDate":"2023-03-30"},{"lineNumber":637,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":638,"author":{"gitId":"nicljr"},"content":"Want to use a darker version of our UI?","lastModifiedDate":"2023-03-30"},{"lineNumber":639,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":640,"author":{"gitId":"nicljr"},"content":"Use Dark mode!","lastModifiedDate":"2023-03-30"},{"lineNumber":641,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":642,"author":{"gitId":"nicljr"},"content":"**Syntax:**","lastModifiedDate":"2023-03-30"},{"lineNumber":643,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":644,"author":{"gitId":"nicljr"},"content":"`dark`","lastModifiedDate":"2023-03-30"},{"lineNumber":645,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":646,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":647,"author":{"gitId":"rachtan27"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-05"},{"lineNumber":648,"author":{"gitId":"rachtan27"},"content":"## Data","lastModifiedDate":"2023-03-05"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"rachtan27"},"content":"NeoBook data are saved in the hard disk automatically after any command that changes the data. There is no need for you to save manually.","lastModifiedDate":"2023-03-28"},{"lineNumber":653,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":656,"author":{"gitId":"nicljr"},"content":"NeoBook data are saved as JSON files. Two of which will be of interest to you:","lastModifiedDate":"2023-03-30"},{"lineNumber":657,"author":{"gitId":"nicljr"},"content":"- `[JAR file location]/data/addressbook.json`.","lastModifiedDate":"2023-03-30"},{"lineNumber":658,"author":{"gitId":"nicljr"},"content":"- `[JAR file location]/data/userdata.json`.","lastModifiedDate":"2023-03-30"},{"lineNumber":659,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":660,"author":{"gitId":"rachtan27"},"content":"You are welcome to update the data directly by editing that data file.","lastModifiedDate":"2023-03-05"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":662,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-03-29"},{"lineNumber":663,"author":{"gitId":"nicljr"},"content":"If you edit the taggedPerson in User data, beware that you may end up unlinking the person from any changes to the original contact in NeoBook","lastModifiedDate":"2023-03-30"},{"lineNumber":664,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":666,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":667,"author":{"gitId":"Shuggan"},"content":"If your changes to the data file makes its format invalid, NeoBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-03-30"},{"lineNumber":668,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":670,"author":{"gitId":"rachtan27"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-29"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":672,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"rachtan27"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous NeoBook home folder.","lastModifiedDate":"2023-03-28"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"rachtan27"},"content":"[Back To Contents](#table-of-contents)","lastModifiedDate":"2023-03-29"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":682,"author":{"gitId":"igezt"},"content":"## Future Plans","lastModifiedDate":"2023-03-31"},{"lineNumber":683,"author":{"gitId":"igezt"},"content":"1. Making the following fields accept multiple parameters instead of just one. ","lastModifiedDate":"2023-03-31"},{"lineNumber":684,"author":{"gitId":"igezt"},"content":"   1. Since the groundwork was completed in the Tags and Modules fields, we considered it trivial to implement the rest of these fields to accept multiple parameters.","lastModifiedDate":"2023-03-31"},{"lineNumber":685,"author":{"gitId":"igezt"},"content":"      - Phone","lastModifiedDate":"2023-03-31"},{"lineNumber":686,"author":{"gitId":"igezt"},"content":"      - Address    ","lastModifiedDate":"2023-03-31"},{"lineNumber":687,"author":{"gitId":"igezt"},"content":"      - Email","lastModifiedDate":"2023-03-31"},{"lineNumber":688,"author":{"gitId":"igezt"},"content":"      - Race","lastModifiedDate":"2023-03-31"},{"lineNumber":689,"author":{"gitId":"igezt"},"content":"      - Communication Channels","lastModifiedDate":"2023-03-31"},{"lineNumber":690,"author":{"gitId":"igezt"},"content":"      - Major","lastModifiedDate":"2023-03-31"},{"lineNumber":691,"author":{"gitId":"igezt"},"content":"      - Faculty","lastModifiedDate":"2023-03-31"},{"lineNumber":692,"author":{"gitId":"hansstanley"},"content":"2. Adding better input validation to Phone, Email and Address fields, such as minimum lengths or certain formats.","lastModifiedDate":"2023-04-01"},{"lineNumber":693,"author":{"gitId":"hansstanley"},"content":"3. Adding duplicate names support, which is available in most contact lists.","lastModifiedDate":"2023-04-01"},{"lineNumber":694,"author":{"gitId":"hansstanley"},"content":"4. Making the user\u0027s events be able to import other contact\u0027s events.","lastModifiedDate":"2023-04-01"},{"lineNumber":695,"author":{"gitId":"igezt"},"content":"   1. Since the User is a form of Contact, it is once again trivial to extend the same functionality to other contacts","lastModifiedDate":"2023-03-31"},{"lineNumber":696,"author":{"gitId":"hansstanley"},"content":"5. Making NeoBook accept more symbols and emojis.","lastModifiedDate":"2023-04-01"},{"lineNumber":697,"author":{"gitId":"igezt"},"content":"   1. Currently, the validation regex for all the fields for contacts do not accept special symbols (and also do not render them properly). In the future, we will attempt to add-in support for this.","lastModifiedDate":"2023-03-31"},{"lineNumber":698,"author":{"gitId":"hansstanley"},"content":"6. Switching to the relevant tab when a command is executed.","lastModifiedDate":"2023-04-01"},{"lineNumber":699,"author":{"gitId":"hansstanley"},"content":"   1. Using commands for contacts in the events tab and vice versa may not show any visible changes, causing confusion in whether the user did anything.","lastModifiedDate":"2023-04-01"},{"lineNumber":700,"author":{"gitId":"hansstanley"},"content":"   2. Certain commands should bring the user to the relevant tab, if they are not currently in said tab (e.g. `list` should navigate to the contacts tab).","lastModifiedDate":"2023-04-01"},{"lineNumber":701,"author":{"gitId":"hansstanley"},"content":"7. Enhancing the `select` command to accept parameters beyond just the index of the contact.","lastModifiedDate":"2023-04-01"},{"lineNumber":702,"author":{"gitId":"hansstanley"},"content":"   1. User cannot see the indices of contacts further down the list, and needs to scroll.","lastModifiedDate":"2023-04-01"},{"lineNumber":703,"author":{"gitId":"hansstanley"},"content":"   2. The `select` command can integrate `find` functionality.","lastModifiedDate":"2023-04-01"},{"lineNumber":704,"author":{"gitId":"hansstanley"},"content":"8. Splitting the description field of events into title and description fields, so as not to clutter the UI with long descriptions.","lastModifiedDate":"2023-04-01"}],"authorContributionMap":{"hansstanley":21,"nicljr":194,"Shuggan":66,"igezt":65,"-":147,"rachtan27":211}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"hansstanley"},"content":"    content: \"AddressBook Neo\";","lastModifiedDate":"2023-02-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"hansstanley":1,"-":294}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"UniquePersonList -right-\u003e \"~* all\" Person","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"igezt":3,"-":36}},{"path":"docs/diagrams/PersonDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"scale 450 width","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"scale 400 height","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"HiddenOutside .down.\u003e Person","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"Package Person {","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    Class Person","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    Class Address","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    Class Email","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    Class Name","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    Class Phone","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    Class Tag","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    Class CommunicationChannel","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    Class Faculty","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    Class Favorite","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    Class Gender","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    Class Major","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    Class Modules","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"    Class Race","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    Class Tags","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    Class NusMod","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    Class \"\u003c\u003cabstract\u003e\u003e\\nField\" as Field","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    Class \"\u003c\u003cabstract\u003e\u003e\\nSuperField\" as SuperField","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"Person *--\u003e Gender","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"Person *--\u003e Address","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"Person *--\u003e Name","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"Person *--\u003e Phone","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"Person *--\u003e Email","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"Person *--\u003e CommunicationChannel","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"Person *--\u003e Faculty","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"Person *--\u003e Favorite","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"Person *--\u003e Major","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"Person *-right-\u003e Modules","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"Modules *--\u003e \"*\" NusMod","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"Person *--\u003e Race","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"Person *-right-\u003e Tags","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"Tags *--\u003e \"*\" Tag","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"Name -down-|\u003e Field","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"Email -down-|\u003e Field","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"Phone -down-|\u003e Field","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"CommunicationChannel -down-|\u003e Field","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"Faculty -down-|\u003eField","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"Favorite -down-|\u003e Field","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"Major -down-|\u003e Field","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"NusMod -down-|\u003e Field","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"Race -down-|\u003e Field","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"Tag -down-|\u003e Field","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"SuperField -down-|\u003e Modules","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"SuperField -down-|\u003e Tags","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"igezt":65}},{"path":"docs/diagrams/SelectSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"@startuml","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"!include style.puml","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"participant \":SelectCommand\" as SelectCommand LOGIC_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"end box","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"end box","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"[-\u003e SelectCommand : execute(model)","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"activate SelectCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"SelectCommand -\u003e ModelManager : setSelectedPerson(index)","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"activate ModelManager","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"ModelManager -\u003e AddressBook : setSelectedPerson(index)","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"activate AddressBook","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"AddressBook ---\u003e ModelManager","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"deactivate AddressBook","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"ModelManager ---\u003e SelectCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"deactivate ModelManager","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"[\u003c-- SelectCommand : CommandResult","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"deactivate SelectCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"@enduml","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"rachtan27":31}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"Class JsonAdaptedMod","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"package \"UserDataStorage\" #F4F6F6{","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserDataStorage\" as UserDataStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"Class JsonUserDataStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"Class JsonSerializableUserData","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"Class JsonAdaptedEvent","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"Class JsonAdaptedUser","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"StorageManager ...up.|\u003e Storage","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"StorageManager --down-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"StorageManager --down-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"StorageManager ---down-\u003e \"1\" UserDataStorage","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"Storage -right-|\u003e UserPrefsStorage","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"Storage -down-|\u003e AddressBookStorage","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"Storage -left-|\u003e UserDataStorage","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedMod","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"JsonUserDataStorage .up.|\u003e UserDataStorage","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"JsonUserDataStorage ..\u003e JsonSerializableUserData","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"JsonSerializableUserData --\u003e \"*\" JsonAdaptedUser","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"JsonAdaptedUser --|\u003e JsonAdaptedPerson","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"JsonAdaptedUser --\u003e \"*\" JsonAdaptedEvent","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"igezt":24,"-":38}},{"path":"docs/diagrams/TabClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"@startuml","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"!include style.puml","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"Package Tab {","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"Class \"\u003c\u003cenumeration\u003e\u003e\\nTabType\" as TabType","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"Class TabInfo","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"Class TabUtil","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"Class Index","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"Class ReadOnlyObjectWrapper","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"TabUtil -down-\u003e \"~* tabInfoList\" TabInfo","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"TabUtil --\u003e \"1 selectedTabInfo\" ReadOnlyObjectWrapper","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"ReadOnlyObjectWrapper -\u003e \"1\" TabInfo","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"TabInfo -down-\u003e \"1\" Index","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"TabInfo -down-\u003e \"1\" TabType","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"@enduml","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"hansstanley":24}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"package Body \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"package User \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"Class UserPanel","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"package Calendar \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"Class CalendarPanel","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"Class CalendarDayCard","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"Class CalendarEventCard","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"Class CalendarPersonTag","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"package Address \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"Class AddressPanel","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"Class PersonCard","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"Class PersonModulesCard","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"Class PersonDetailCard","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"Class PersonDetailPanel","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"Class PersonListDivider","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"Class PersonListPanel","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"Class BodyPanel","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"package Result \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"Class ResultDisplay","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"Class ResultDisplayCard","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"note right of UiPart: Inherited by all UI components\\n except UiManager","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"UiManager .right.|\u003e Ui","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"MainWindow *-down-\u003e \"1\" BodyPanel","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"MainWindow -left-\u003e \"1\" HelpWindow","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"\u0027MainWindow --|\u003e UiPart","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"\u0027ResultDisplay --|\u003e UiPart","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"\u0027CommandBox --|\u003e UiPart","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"\u0027PersonListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"\u0027PersonCard --|\u003e UiPart","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"\u0027StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"\u0027HelpWindow --|\u003e UiPart","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"UiManager -up-\u003e Logic","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"hansstanley"},"content":"BodyPanel *-down-\u003e \"1\" AddressPanel","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"BodyPanel *-down-\u003e \"1\" CalendarPanel","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"hansstanley"},"content":"BodyPanel *-down-\u003e \"1\" UserPanel","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"CalendarEventCard *-down-\u003e \"*\" CalendarPersonTag","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"CalendarDayCard *-down-\u003e \"*\" CalendarEventCard","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"CalendarPanel *-down-\u003e \"*\" CalendarDayCard","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"hansstanley"},"content":"AddressPanel *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"hansstanley"},"content":"AddressPanel *-down-\u003e \"1\" PersonDetailPanel","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"hansstanley"},"content":"PersonListPanel *-down-\u003e \"*\" PersonCard","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"hansstanley"},"content":"PersonListPanel *-down-\u003e \"*\" PersonListDivider","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"hansstanley"},"content":"PersonDetailPanel *-down-\u003e \"*\" PersonDetailCard","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"hansstanley"},"content":"PersonDetailPanel *-down-\u003e \"1\" PersonModulesCard","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"hansstanley"},"content":"UserPanel *--down-\u003e \"*\" PersonDetailCard","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"hansstanley"},"content":"ResultDisplay *-down-\u003e \"*\" ResultDisplayCard","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":91,"author":{"gitId":"hansstanley"},"content":"Logic -[hidden]right- HiddenOutside","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"hansstanley"},"content":"Ui -[hidden]right- UiPart","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"hansstanley"},"content":"StatusBarFooter -[hidden]right- CommandBox","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"hansstanley"},"content":"CommandBox -[hidden]right- ResultDisplay","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"hansstanley"},"content":"ResultDisplay -[hidden]right- BodyPanel","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"hansstanley"},"content":"CalendarPanel -[hidden]right- UserPanel","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"hansstanley":59,"-":39}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"!define SELECT_COLOR #7777DB","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"!define USER_COLOR #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    Color USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":75,"rachtan27":2}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"title: NeoBook","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-F12-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-F12-3/tp/actions)","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-F12-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103T-F12-3/tp)","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"**NeoBook is a desktop application for managing your contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"* If you are interested in using NeoBook, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"* If you are interested about developing NeoBook, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"hansstanley":6,"-":13}},{"path":"docs/team/Shuggan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"---","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"layout: page","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"title: Shane Duggan\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"---","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dnicljr\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"* **Project management**:","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"  * `to be added soon`","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"  * `to be added soon`","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"  * User Guide:","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    * `to be added soon`","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    * `to be added soon`","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"* **Community**:","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"  * `to be added soon`","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"* **Tools**:","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"  * `to be added soon`","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"hansstanley":32}},{"path":"docs/team/hansstanley.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"layout: page","lastModifiedDate":"2023-02-23"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"title: Stanley Han\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-23"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"---","lastModifiedDate":"2023-02-23"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"### Project: NeoBook","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"NeoBook is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-23"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"* **New Feature**: Added ability to switch between UI tabs (PR [#105](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/105))","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"  * `to be elaborated soon`","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dhansstanley\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-23"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"* **Project management**:","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"  * Initialised team organisation and tP repository","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"  * Created PR to the module\u0027s `master` branch","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"  * Enabled issue tracker and GitHub Actions (for CI and codecov)","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"  * Set up project website","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-23"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"  * Redesigned the GUI","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"    * Changed the layout (PRs [#39](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/39), [#56](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/56), [#57](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/57), [#59](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/59), [#62](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/62), [#74](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/74), [#87](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/87), [#96](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/96), [#107](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/107), [#131](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/131))","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    * Added light and dark themes (PR [#129](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/129))","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-23"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"  * User Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"    * Added documentation for `tab` command (PR [#105](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/105))","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-23"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"    * Updated implementation details of the UI (PR [#139](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/139))","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"    * Added implementation details of the `tab` command (PR [#139](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/139))","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"* **Community**:","lastModifiedDate":"2023-02-23"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"  * PRs reviewed (with non-trivial review comments): [#76](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/76), [#81](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/81), [#93](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/93), [#138](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/138) [#143](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/143)","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"* **Tools**:","lastModifiedDate":"2023-02-23"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"  * Integrated a third party library (CalendarFX) to the project (PR [#122](https://github.com/AY2223S2-CS2103T-F12-3/tp/pull/122)), but subsequently removed it due to bugs and usability issues","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"  * `to be added soon`","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"hansstanley":40}},{"path":"docs/team/igezt.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"layout: page","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"title: Pierce Ng\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"---","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"* **New Feature**:","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"  * Added new User class and storage.","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003digezt\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"* **Project management**:","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"  * `to be added soon`","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"  * Changed AddCommand and EditCommand to account for the new fields for the Person class.","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"  * Changed FindCommand to work for multiple fields.","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"  * `to be added soon`","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"  * User Guide:","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    * Added documentation for the features `add` and `edit`","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    * `to be added soon`","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"* **Community**:","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"  * `to be added soon`","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"* **Tools**:","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"  * `to be added soon`","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"igezt":37}},{"path":"docs/team/nicljr.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"title: Nicholas Lim\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dnicljr\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"* **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"  * `to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"  * `to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"  * User Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"    * `to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"    * `to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"* **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"  * `to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"* **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"  * `to be added soon`","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"nicljr":32}},{"path":"docs/team/rachtan27.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"title: Rachel\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"### Project: AddressBook Neo","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"AddressBook Neo is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"* **New Feature**: `to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003drachtan27\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"* **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"  * `to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"  * `to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"  * User Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"    * `to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"    * `to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"* **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"  * `to be added soon`","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"* **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"  * `to be added soon`","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"rachtan27":32}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"hansstanley"},"content":"Simply add the following to [`seedu.address.ui.body.address.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-02-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"hansstanley":1,"-":400}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.fields.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"igezt":1,"-":111}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"import seedu.address.model.ReadOnlyUserData;","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.addressbook.JsonAddressBookStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.user.JsonUserDataStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.userpref.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.userpref.UserPrefsStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing NeoBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"        JsonUserDataStorage userDataStorage \u003d new JsonUserDataStorage(userPrefs.getUserDataFilePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, userDataStorage);","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"        Optional\u003cReadOnlyUserData\u003e userDataOptional;","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"        ReadOnlyAddressBook initialAddressBookData;","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"        ReadOnlyUserData initialUserData;","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"            initialAddressBookData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"            initialAddressBookData \u003d new AddressBook();","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"            initialAddressBookData \u003d new AddressBook();","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"            userDataOptional \u003d storage.readUserData();","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"igezt"},"content":"            if (!userDataOptional.isPresent()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"igezt"},"content":"            initialUserData \u003d userDataOptional.orElse(new UserData());","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"igezt"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"igezt"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with blank UserData\");","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"igezt"},"content":"            initialUserData \u003d new UserData();","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"igezt"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"igezt"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with blank UserData\");","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"igezt"},"content":"            initialUserData \u003d new UserData();","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"igezt"},"content":"        return new ModelManager(initialAddressBookData, userPrefs, initialUserData);","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hansstanley":1,"igezt":29,"-":171}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    private final boolean isLightMode;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"        isLightMode \u003d false;","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition, boolean isLightMode) {","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"        this.isLightMode \u003d isLightMode;","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"    public boolean isLightMode() {","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"        return isLightMode;","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"hansstanley"},"content":"        sb.append(\"Position : \" + windowCoordinates + \"\\n\");","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"hansstanley"},"content":"        sb.append(\"Light mode : \" + isLightMode);","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hansstanley":10,"-":77}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command \"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"            + \"(enter \u0027help\u0027 for the list of valid commands)\";","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided is invalid!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hansstanley":4,"Shuggan":1,"-":11}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"    private final int zeroBasedIndex;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"hansstanley":1,"-":53}},{"path":"src/main/java/seedu/address/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"        return new Image(requireNonNull(MainApp.class.getResourceAsStream(imagePath)));","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hansstanley":1,"-":41}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import javafx.beans.property.ReadOnlyObjectProperty;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.ui.tab.TabInfo;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.ReadOnlyUserData;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"    ReadOnlyUserData getUserData();","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"    List\u003cTabInfo\u003e getTabInfoList();","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"    ReadOnlyObjectProperty\u003cTabInfo\u003e getSelectedTab();","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"    void setSelectedTab(Index index);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"rachtan27"},"content":"    ReadOnlyObjectProperty\u003cPerson\u003e getSelectedPerson();","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"    void setSelectedPerson(Person person);","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"hansstanley":17,"-":50,"rachtan27":3}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import javafx.beans.property.ReadOnlyObjectProperty;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.ui.tab.TabInfo;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.ReadOnlyUserData;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"        model.updateAllDateTimes();","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"            storage.saveUserData(model.getUserData());","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"hansstanley"},"content":"    public ReadOnlyUserData getUserData() {","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"hansstanley"},"content":"        return model.getUserData();","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"hansstanley"},"content":"    public List\u003cTabInfo\u003e getTabInfoList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"hansstanley"},"content":"        return model.getTabUtil().getTabInfoList();","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"hansstanley"},"content":"    public ReadOnlyObjectProperty\u003cTabInfo\u003e getSelectedTab() {","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"hansstanley"},"content":"        return model.getTabUtil().getSelectedTab();","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"hansstanley"},"content":"    public void setSelectedTab(Index index) {","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"hansstanley"},"content":"        model.setSelectedTab(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"hansstanley"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"hansstanley"},"content":"        return model.getEvents();","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"rachtan27"},"content":"    public ReadOnlyObjectProperty\u003cPerson\u003e getSelectedPerson() {","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"rachtan27"},"content":"        return model.getSelectedPerson();","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"hansstanley"},"content":"    public void setSelectedPerson(Person person) {","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"hansstanley"},"content":"        model.setSelectedPerson(person);","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"hansstanley":35,"igezt":2,"-":81,"rachtan27":6}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"            ResultDisplay.formatMessage(COMMAND_WORD, \"Adds a contact to the address book.\")","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_PARAMETERS,","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_NAME + \"NAME [PREFIX/PARAMETER]...\")","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_EXAMPLE,","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"                    COMMAND_WORD,","lastModifiedDate":"2023-04-01"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_NAME + \"John Doe\",","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_PHONE + \"98765432\",","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_EMAIL + \"johnd@example.com\",","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25\",","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_TAG + \"friends\",","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_TAG + \"owesMoney\")","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_MORE_INFO,","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"                    \"For more information on prefixes, refer to the user guide using the help command.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New contact added: %1$s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This contact already exists in the address book\";","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"hansstanley":17,"igezt":1,"-":51}},{"path":"src/main/java/seedu/address/logic/commands/AddEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE_TIME;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRENCE;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE_TIME;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.event.fields.DateTime;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":" * Adds an Event to the Calendar.","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":" * Event is either {@code OneTimeEvent} or {@code RecurringEvent}.","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"public class AddEventCommand extends Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    public static final String COMMAND_WORD \u003d \"addevent\";","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"            ResultDisplay.formatMessage(COMMAND_WORD, \"Adds an event to the event list.\")","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_PARAMETERS,","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_DESCRIPTION + \"DESCRIPTION\",","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_START_DATE_TIME + \"START DATE TIME\",","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_END_DATE_TIME + \"END DATE TIME\",","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"                    \"[\" + PREFIX_RECURRENCE + \"INTERVAL]\")","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_EXAMPLE,","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"                    COMMAND_WORD,","lastModifiedDate":"2023-04-01"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_DESCRIPTION + \"CS2103T Lecture\",","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_START_DATE_TIME + \"2023-03-10 1600\",","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_END_DATE_TIME + \"2023-03-10 1800\",","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_RECURRENCE + \"weekly\");","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"    private static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    private static final String MESSAGE_INVALID_INTERVAL \u003d \"END DATE TIME (\"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"            + PREFIX_END_DATE_TIME + \") should be after START DATE TIME (\"","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"            + PREFIX_START_DATE_TIME + \")\";","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"    private final Event toDo;","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"     * Creates an AddEventCommand to add the specified {@code Event}","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"    public AddEventCommand(Event event) {","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"        toDo \u003d event;","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"        if (model.hasEvent(toDo)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"        if (!DateTime.isValidInterval(toDo.getStartDateTime(), toDo.getEndDateTime())) {","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"            throw new CommandException(MESSAGE_INVALID_INTERVAL);","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"        model.addEvent(this.toDo);","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toDo));","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"nicljr"},"content":"     * Returns true if the two events have the same identity and data fields.","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"nicljr"},"content":"     * This defines a weaker notion of equality between two events.","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"nicljr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"nicljr"},"content":"            return true;","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"        if (!(other instanceof AddEventCommand)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"            return false;","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"nicljr"},"content":"        AddEventCommand otherCommand \u003d (AddEventCommand) other;","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"nicljr"},"content":"        return toDo.equals(otherCommand.toDo);","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"hansstanley":23,"nicljr":57,"igezt":4}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"            ResultDisplay.formatMessage(COMMAND_WORD, \"Clears all contacts from the address book.\")","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_EXAMPLE, COMMAND_WORD);","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hansstanley":4,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import seedu.address.ui.enums.LightDarkMode;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    /** Application should transition to the state specified here. */","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    private final LightDarkMode lightDarkMode;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, LightDarkMode lightDarkMode) {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"        this.lightDarkMode \u003d lightDarkMode;","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"        this(feedbackToUser, false, false, LightDarkMode.NO_CHANGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"    public boolean isLightMode() {","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"        return this.lightDarkMode \u003d\u003d LightDarkMode.LIGHT;","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"    public boolean isDarkMode() {","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"        return this.lightDarkMode \u003d\u003d LightDarkMode.DARK;","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"igezt":16,"-":69}},{"path":"src/main/java/seedu/address/logic/commands/DarkModeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import seedu.address.ui.enums.LightDarkMode;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":" * Changes the style of NeoBook to dark mode.","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"public class DarkModeCommand extends Command {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    public static final String COMMAND_WORD \u003d \"dark\";","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Changed NeoBook to dark mode.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"            ResultDisplay.formatMessage(COMMAND_WORD, \"Changes NeoBook to dark mode.\")","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_EXAMPLE, COMMAND_WORD);","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, LightDarkMode.DARK);","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"hansstanley":4,"igezt":22}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d ResultDisplay.formatMessage(COMMAND_WORD,","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"            \"Deletes the contact specified by the given index.\")","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_PARAMETERS, \"INDEX (must be a positive integer)\")","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_EXAMPLE, COMMAND_WORD, \"1\");","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted contact: %1$s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hansstanley":6,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/DeleteEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":" * Deletes Event from the Calendar","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"public class DeleteEventCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    public static final String COMMAND_WORD \u003d \"delevent\";","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"            ResultDisplay.formatMessage(COMMAND_WORD, \"Deletes an event specified by the given index.\")","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_PARAMETERS, \"INDEX (must be a positive integer)\")","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_EXAMPLE, COMMAND_WORD, \"1\");","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"Deleted event: %1$s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"    public DeleteEventCommand(Index targetIndex) {","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getEvents();","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"        Event eventToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"        model.deleteEvent(eventToDelete);","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, eventToDelete));","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"                || (other instanceof DeleteEventCommand) // instance of handle nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteEventCommand) other).targetIndex);","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"hansstanley":8,"nicljr":44,"igezt":1}},{"path":"src/main/java/seedu/address/logic/commands/EditContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import java.util.List;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.editpersoncommandsparser.PersonDescriptor;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"public class EditContactCommand extends EditPersonCommand {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"            ResultDisplay.formatMessage(COMMAND_WORD,","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"                    \"Edits the details of the contact specified by the given index.\",","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"                    \"Existing values will be overwritten by the given parameters\",","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"                    \"for all fields except Modules and Tags.\")","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_PARAMETERS,","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"                    \"INDEX\", \"[PREFIX/PARAMETER]...\")","lastModifiedDate":"2023-04-01"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_MORE_INFO,","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"                    \"Note that INDEX must be a positive integer.\",","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"                    \"For more information on prefixes, refer to the user guide using the help command.\",","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"                    \"Editing Modules and Tags have a different behaviour from editing the other fields.\",","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"                    \"If a module or tag already exists in the contact, it will be removed.\",","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"                    \"Otherwise, it will be added to the contact.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited contact: %1$s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This contact already exists in the address book.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"    protected final PersonDescriptor editPersonDescriptor;","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    private final Index index;","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"    public EditContactCommand(PersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"        this.index \u003d editPersonDescriptor.getIndex().get();","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"        this.editPersonDescriptor \u003d new PersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"    public PersonDescriptor getEditPersonDescriptor() {","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"        return this.editPersonDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"        if (!(other instanceof EditContactCommand)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"        EditContactCommand e \u003d (EditContactCommand) other;","lastModifiedDate":"2023-03-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 this.getEditPersonDescriptor().equals(e.getEditPersonDescriptor());","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"hansstanley":16,"igezt":17,"-":65}},{"path":"src/main/java/seedu/address/logic/commands/EditEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shuggan"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Shuggan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Shuggan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Shuggan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE_TIME;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Shuggan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRENCE;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Shuggan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE_TIME;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Shuggan"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Shuggan"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Shuggan"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Shuggan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Shuggan"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Shuggan"},"content":"import seedu.address.logic.parser.editeventcommand.EventDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Shuggan"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Shuggan"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Shuggan"},"content":"import seedu.address.model.event.OneTimeEvent;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Shuggan"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Shuggan"},"content":"import seedu.address.model.event.fields.DateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Shuggan"},"content":"import seedu.address.model.event.fields.Description;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Shuggan"},"content":"import seedu.address.model.event.fields.Recurrence;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Shuggan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-04-01"},{"lineNumber":25,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Shuggan"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Shuggan"},"content":" * Represents a command that edits an event object.","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Shuggan"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Shuggan"},"content":"public class EditEventCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Shuggan"},"content":"    public static final String COMMAND_WORD \u003d \"editevent\";","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-04-01"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"            ResultDisplay.formatMessage(COMMAND_WORD, \"Edits an event in the event list.\")","lastModifiedDate":"2023-04-01"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_PARAMETERS,","lastModifiedDate":"2023-04-01"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"                    \"INDEX\",","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"                    \"[\" + PREFIX_DESCRIPTION + \"DESCRIPTION]\",","lastModifiedDate":"2023-04-01"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"                    \"[\" + PREFIX_START_DATE_TIME + \"START DATE TIME]\",","lastModifiedDate":"2023-04-01"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"                    \"[\" + PREFIX_END_DATE_TIME + \"END DATE TIME]\",","lastModifiedDate":"2023-04-01"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"                    \"[\" + PREFIX_RECURRENCE + \"INTERVAL]\")","lastModifiedDate":"2023-04-01"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_EXAMPLE,","lastModifiedDate":"2023-04-01"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"                    COMMAND_WORD, \"2\",","lastModifiedDate":"2023-04-01"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_DESCRIPTION + \"CS2103T Tutorial\",","lastModifiedDate":"2023-04-01"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_START_DATE_TIME + \"2023-03-10 1600\",","lastModifiedDate":"2023-04-01"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_END_DATE_TIME + \"2023-03-10 1800\",","lastModifiedDate":"2023-04-01"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_RECURRENCE + \"weekly\");","lastModifiedDate":"2023-04-01"},{"lineNumber":47,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"Shuggan"},"content":"    private static final String MESSAGE_EDIT_EVENT_SUCCESS \u003d \"Event edited: %1$s\";","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"Shuggan"},"content":"    private static final String MESSAGE_INVALID_EVENT \u003d \"This event does not exist in the Calendar!\";","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"Shuggan"},"content":"    private static final String MESSAGE_INVALID_INTERVAL \u003d \"END DATE TIME (\"","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"Shuggan"},"content":"            + PREFIX_END_DATE_TIME + \") should be after START DATE TIME (\"","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"Shuggan"},"content":"            + PREFIX_START_DATE_TIME + \")\";","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"Shuggan"},"content":"    // public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"Shuggan"},"content":"    protected final EventDescriptor editEventDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"Shuggan"},"content":"    private final Index index;","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"Shuggan"},"content":"     * @param editEventDescriptor details to edit the event with","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"Shuggan"},"content":"    public EditEventCommand(EventDescriptor editEventDescriptor) {","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"Shuggan"},"content":"        requireNonNull(editEventDescriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"Shuggan"},"content":"        this.index \u003d editEventDescriptor.getIndex();","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"Shuggan"},"content":"        this.editEventDescriptor \u003d new EventDescriptor(editEventDescriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"Shuggan"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"Shuggan"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"Shuggan"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"Shuggan"},"content":"        List\u003cEvent\u003e eventList \u003d model.getEvents();","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"Shuggan"},"content":"        if (index.getZeroBased() \u003e\u003d eventList.size()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"Shuggan"},"content":"        Event eventToEdit \u003d eventList.get(index.getZeroBased());","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"Shuggan"},"content":"        Event editedEvent \u003d createEditedEvent(eventToEdit, editEventDescriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"Shuggan"},"content":"        if (!model.hasEvent(eventToEdit)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"Shuggan"},"content":"            throw new CommandException(MESSAGE_INVALID_EVENT);","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"Shuggan"},"content":"        if (!DateTime.isValidInterval(editedEvent.getStartDateTime(), editedEvent.getEndDateTime())) {","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"Shuggan"},"content":"            throw new CommandException(MESSAGE_INVALID_INTERVAL);","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"Shuggan"},"content":"        model.setEvent(eventToEdit, editedEvent);","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"Shuggan"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_EVENT_SUCCESS, editedEvent));","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"Shuggan"},"content":"    public EventDescriptor getEditEventDescriptor() {","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"Shuggan"},"content":"        return this.editEventDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"Shuggan"},"content":"     * Creates a new edited event to replace the original","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"Shuggan"},"content":"     * @param eventToEdit","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"Shuggan"},"content":"     * @param editEventDescriptor","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"Shuggan"},"content":"     * @return the new Event to be set","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"Shuggan"},"content":"    protected static Event createEditedEvent(Event eventToEdit, EventDescriptor editEventDescriptor) {","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"Shuggan"},"content":"        assert eventToEdit !\u003d null;","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"Shuggan"},"content":"        Description description \u003d editEventDescriptor.getDescription().orElse(eventToEdit.getDescription());","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"Shuggan"},"content":"        DateTime startDateTime \u003d editEventDescriptor.getStartDateTime().orElse(eventToEdit.getStartDateTime());","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"Shuggan"},"content":"        DateTime endDateTime \u003d editEventDescriptor.getEndDateTime().orElse(eventToEdit.getEndDateTime());","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"Shuggan"},"content":"        Recurrence recurrence \u003d editEventDescriptor.getRecurrence().orElse(eventToEdit.getRecurrence());","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"Shuggan"},"content":"        Set\u003cPerson\u003e taggedPeople \u003d editEventDescriptor.getTaggedPeople().orElse(eventToEdit.getTaggedPeople());","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"Shuggan"},"content":"        if (recurrence.isRecurring()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"Shuggan"},"content":"            return new RecurringEvent(description, startDateTime, endDateTime, recurrence, taggedPeople);","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"Shuggan"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"Shuggan"},"content":"            return new OneTimeEvent(description, startDateTime, endDateTime, taggedPeople);","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"Shuggan"},"content":"     * Returns true if the two events have the same identity and data fields.","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"Shuggan"},"content":"     * This defines a weaker notion of equality between two events.","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"Shuggan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"Shuggan"},"content":"        EditEventCommand otherEvent \u003d (EditEventCommand) other;","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"Shuggan"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"Shuggan"},"content":"            || (other instanceof EditEventCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"Shuggan"},"content":"            \u0026\u0026 this.editEventDescriptor.equals(otherEvent));","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"Shuggan"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"hansstanley":15,"Shuggan":115,"igezt":1}},{"path":"src/main/java/seedu/address/logic/commands/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.editpersoncommandsparser.PersonDescriptor;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Address;","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.CommunicationChannel;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Faculty;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Favorite;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Field;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Gender;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Major;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Modules;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Race;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.SuperField;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Tags;","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":" * Represents a command that edits a person object. For all commands that edit a person to inherit from.","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"public abstract class EditPersonCommand extends Command {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"    protected static Person createEditedPerson(Person personToEdit, PersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(personToEdit.getGender());","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"        Major updatedMajor \u003d editPersonDescriptor.getMajor().orElse(personToEdit.getMajor());","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"        Race updatedRace \u003d editPersonDescriptor.getRace().orElse(personToEdit.getRace());","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"        CommunicationChannel updatedComms \u003d editPersonDescriptor.getComms().orElse(personToEdit.getComms());","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"        Favorite currentFavorite \u003d personToEdit.getFavorite();","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"        Faculty updatedFaculty \u003d editPersonDescriptor.getFaculty().orElse(personToEdit.getFaculty());","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"        Tags updatedTags \u003d editPersonDescriptor.getTags()","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"                //Creates the edited tags.","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"                .map(tags -\u003e createEditedTags(personToEdit.getTags(), tags))","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"                //If it was empty, then just get original tags.","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"                .orElseGet(personToEdit::getTags);","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"        Modules updatedModules \u003d editPersonDescriptor.getModules()","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"                //Creates the edited modules.","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"                .map(modules -\u003e createEditedModules(personToEdit.getModules(), modules))","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"                //If it was empty, then just get original modules.","lastModifiedDate":"2023-03-23"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"                .orElseGet(personToEdit::getModules);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress,","lastModifiedDate":"2023-03-23"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"                updatedGender, updatedMajor, updatedModules, updatedRace, updatedTags,","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"                updatedComms, currentFavorite, updatedFaculty);","lastModifiedDate":"2023-03-23"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"     * Creates a set of Field that removes all entries that were already in the oldFields Set and adds the new ones.","lastModifiedDate":"2023-03-23"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"    public static \u003cT extends Field\u003e Set\u003cT\u003e createdEditedFields(SuperField\u003cT\u003e oldFields,","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"                                                               SuperField\u003cT\u003e optionalNewFields) {","lastModifiedDate":"2023-03-23"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"        Set\u003cT\u003e unmodifiableOldFields \u003d oldFields.getValues();","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"        Set\u003cT\u003e oldFieldSet \u003d new HashSet\u003c\u003e(unmodifiableOldFields);","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"        Set\u003cT\u003e finalFieldSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"        Set\u003cT\u003e newFields \u003d optionalNewFields.getValues();","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"        for (T field : newFields) {","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"            if (oldFieldSet.contains(field)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"                oldFieldSet.remove(field);","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"            } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"                finalFieldSet.add(field);","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"        finalFieldSet.addAll(oldFieldSet);","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"        return finalFieldSet;","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"     * Creates and returns a {@code Module} with the updated Details of Modules Taken.","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"igezt"},"content":"     * If the same NusMods appears in both Old Modules and New Modules, we count that as removal.","lastModifiedDate":"2023-03-23"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"     * Otherwise,it is an addition.","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"    public static Modules createEditedModules(Modules oldModules, Modules optionalNewModules) {","lastModifiedDate":"2023-03-23"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"        return new Modules(createdEditedFields(oldModules, optionalNewModules));","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"     * Creates and returns a {@code Set\u003cTag\u003e} with the Updated set of Tags.","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"     * If the same Tag appears in both Old Set and New Set, we count that as removal.","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"     * Otherwise,it is an addition.","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"    public static Tags createEditedTags(Tags oldTags, Tags optionalNewTags) {","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"igezt"},"content":"        return new Tags(createdEditedFields(oldTags, optionalNewTags));","lastModifiedDate":"2023-03-23"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"hansstanley":1,"igezt":101}},{"path":"src/main/java/seedu/address/logic/commands/EditUserCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.editpersoncommandsparser.PersonDescriptor;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"public class EditUserCommand extends EditPersonCommand {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    public static final String COMMAND_WORD \u003d \"edituser\";","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited User: %1$s\";","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"            ResultDisplay.formatMessage(COMMAND_WORD,","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"                    \"Edits the details of the user.\",","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"                    \"Existing values will be overwritten by the given parameters\",","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"                    \"for all fields except Modules and Tags.\")","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_PARAMETERS, \"[PREFIX/PARAMETER]...\")","lastModifiedDate":"2023-04-01"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_MORE_INFO,","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"                    \"For more information on prefixes, refer to the user guide using the help command.\",","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"                    \"Editing Modules have a different behaviour from editing the other fields.\",","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"                    \"If a module already exists, it will be removed.\",","lastModifiedDate":"2023-04-01"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"                    \"Otherwise, it will be added.\");","lastModifiedDate":"2023-04-01"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"    private final PersonDescriptor editUserDescriptor;","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"    public EditUserCommand(PersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"        this.editUserDescriptor \u003d new PersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"        User user \u003d model.getUserData().getData().getValue();","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"        User editedUser \u003d createEditedUser(user, editUserDescriptor);","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"        model.setUser(editedUser);","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedUser));","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"    private static User createEditedUser(User user, PersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"        assert user !\u003d null;","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"        Person updatedUser \u003d createEditedPerson(user, editPersonDescriptor);","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"        UniqueEventList currentEvents \u003d user.getEvents();","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"        return new User(updatedUser, currentEvents);","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"    public PersonDescriptor getEditUserDescriptor() {","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"        return this.editUserDescriptor;","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"        if (!(other instanceof EditUserCommand)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"            return false;","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"        // state check","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"        EditUserCommand e \u003d (EditUserCommand) other;","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"igezt"},"content":"        return this.getEditUserDescriptor().equals(e.getEditUserDescriptor());","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"hansstanley":12,"igezt":78}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import seedu.address.ui.enums.LightDarkMode;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"            ResultDisplay.formatMessage(COMMAND_WORD, \"Exits the application.\")","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_EXAMPLE, COMMAND_WORD);","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT,","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"                false, true, LightDarkMode.NO_CHANGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"hansstanley":4,"igezt":3,"-":17}},{"path":"src/main/java/seedu/address/logic/commands/FavoriteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":" * Favorites a Person in the Address Book","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"public class FavoriteCommand extends Command {","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"    public static final String COMMAND_WORD \u003d \"fav\";","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"            ResultDisplay.formatMessage(COMMAND_WORD,","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"                    \"Favorites the contact specified by the given index.\")","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_PARAMETERS, \"INDEX (must be positive integer)\")","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_EXAMPLE, COMMAND_WORD, \"1\");","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_NOT_EXISTS \u003d \"Contact doesn\u0027t exist in the address book\";","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_ISFAVORITED \u003d \"Contact is already a favorite: %1s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_FAVORITE_PERSON_SUCCESS \u003d \"Contact marked as favorite: %1$s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"    public final Index index;","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"    public FavoriteCommand(Index index) {","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"     * Returns a CommandResult where the Selected Person","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"     * is Favorited.","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"            throw new CommandException(MESSAGE_NOT_EXISTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"        Person personToFav \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"        if (personToFav.getFavorite().getFavoriteStatus()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"            return new CommandResult(String.format(MESSAGE_ISFAVORITED, personToFav));","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"        Person favoritedPerson \u003d personToFav.setFavorite(true);","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"        model.setPerson(personToFav, favoritedPerson);","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"        return new CommandResult(String.format(MESSAGE_FAVORITE_PERSON_SUCCESS, favoritedPerson));","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"hansstanley":11,"nicljr":52,"igezt":1}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"            ResultDisplay.formatMessage(COMMAND_WORD,","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"                    \"Finds all contacts matching any of the specified keywords (case-insensitive)\",","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"                    \"in the specified fields, and displays them in the list.\")","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_PARAMETERS, \"PREFIX/KEYWORD [PREFIX/KEYWORD]...\")","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_EXAMPLE, COMMAND_WORD, \"n/alice mt/CS2103T\")","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_MORE_INFO,","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"                    \"Note that the indices of the contacts in the resulting list may be different.\",","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"                    \"For more information on prefixes, refer to the user guide using the help command.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    private final PersonContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    public FindCommand(PersonContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"hansstanley":10,"igezt":3,"-":34,"rachtan27":1}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import seedu.address.ui.enums.LightDarkMode;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"            ResultDisplay.formatMessage(COMMAND_WORD, \"Shows usage instructions.\")","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_EXAMPLE, COMMAND_WORD);","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, LightDarkMode.NO_CHANGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hansstanley":4,"igezt":2,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/LightModeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import seedu.address.ui.enums.LightDarkMode;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":" * Changes the style of NeoBook to light mode.","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"public class LightModeCommand extends Command {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    public static final String COMMAND_WORD \u003d \"light\";","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Changed NeoBook to light mode.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    public static final String MESSAGE_ALREADY_IN_MODE \u003d \"NeoBook is already in light mode.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"            ResultDisplay.formatMessage(COMMAND_WORD, \"Changes NeoBook to light mode.\")","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_EXAMPLE, COMMAND_WORD);","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, LightDarkMode.LIGHT);","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"hansstanley":4,"igezt":23}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all contacts\";","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"            ResultDisplay.formatMessage(COMMAND_WORD, \"Lists all contacts in the address book.\")","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_EXAMPLE, COMMAND_WORD)","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_MORE_INFO,","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"                    \"Note that the indices of the contacts in the resulting list may be different.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hansstanley":7,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/SelectCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":" * Selects person in address book to display details","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"public class SelectCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    public static final String COMMAND_WORD \u003d \"select\";","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"            ResultDisplay.formatMessage(COMMAND_WORD,","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"                    \"Displays the details of the selected contact specified by the given index.\")","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_PARAMETERS, \"INDEX (must be a positive integer)\")","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_EXAMPLE, COMMAND_WORD, \"1\");","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_SELECT_PERSON_SUCCESS \u003d \"Selected contact: %1$s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"    public static final String MESSAGE_NO_CHANGE \u003d \"Already selected contact: %s\";","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"    private final Index index;","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"     * @param index Index of the contact to display.","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"    public SelectCommand(Index index) {","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"rachtan27"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"rachtan27"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"rachtan27"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"rachtan27"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"rachtan27"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"rachtan27"},"content":"        Person prevPerson \u003d model.getSelectedPerson().get();","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"        Person currPerson \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"        model.setSelectedPerson(currPerson);","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"rachtan27"},"content":"        if (Objects.equals(prevPerson, currPerson)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"            return new CommandResult(String.format(MESSAGE_NO_CHANGE, currPerson));","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"rachtan27"},"content":"        } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"            return new CommandResult(String.format(MESSAGE_SELECT_PERSON_SUCCESS, currPerson));","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"rachtan27"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"rachtan27"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"rachtan27"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"rachtan27"},"content":"            return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"rachtan27"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"rachtan27"},"content":"        if (!(other instanceof SelectCommand)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"rachtan27"},"content":"            return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"rachtan27"},"content":"        // state check","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"rachtan27"},"content":"        SelectCommand e \u003d (SelectCommand) other;","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"rachtan27"},"content":"        return index.equals(e.index);","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"hansstanley":12,"rachtan27":63}},{"path":"src/main/java/seedu/address/logic/commands/TabCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.ui.tab.TabInfo;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":" * Switches between UI tabs in the application.","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"public class TabCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    public static final String COMMAND_WORD \u003d \"tab\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"            ResultDisplay.formatMessage(COMMAND_WORD,","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"                    \"Switches between tabs in the application by the index of the tab.\")","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_PARAMETERS, \"INDEX (must be a positive integer)\")","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_EXAMPLE, COMMAND_WORD, \"1\");","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"The provided tab index \"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"            + \"should be in the range of %d to %d (inclusive).\";","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Switched to tab %s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_NO_CHANGE \u003d \"Already on tab %s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    private final Index index;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"     * @param index Index of the tab to switch to.","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"    public TabCommand(Index index) {","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"        Objects.requireNonNull(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"        if (!model.isValidTabIndex(index)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"            int lowerBound \u003d 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"            int upperBound \u003d model.getTabUtil().getTabInfoList().size();","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"            throw new CommandException(String.format(MESSAGE_INVALID_INDEX, lowerBound, upperBound));","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"        TabInfo prevTab \u003d model.getSelectedTab().get();","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"        model.setSelectedTab(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"        TabInfo currTab \u003d model.getSelectedTab().get();","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"        if (Objects.equals(prevTab, currTab)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"            return new CommandResult(String.format(MESSAGE_NO_CHANGE, currTab));","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, currTab));","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"        if (!(other instanceof TabCommand)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"        // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"        TabCommand e \u003d (TabCommand) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"        return index.equals(e.index);","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"hansstanley":73}},{"path":"src/main/java/seedu/address/logic/commands/TagEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_TO_TAG;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_TO_TAG;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":" * Tags a Person to an Event","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"public class TagEventCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    public static final String COMMAND_WORD \u003d \"tagpersonevent\";","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"            ResultDisplay.formatMessage(COMMAND_WORD, \"Tags a contact to an event.\")","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_PARAMETERS,","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_EVENT_TO_TAG + \"EVENT INDEX\",","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_PERSON_TO_TAG + \"CONTACT NAME\")","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_EXAMPLE,","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"                    COMMAND_WORD,","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_EVENT_TO_TAG + \"1\",","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_PERSON_TO_TAG + \"John Doe\")","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_MORE_INFO,","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"                    \"Note that the given contact name must be exact.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"%1$s is now tagged to event %2$s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"    private static final String MESSAGE_SUCCESS_2 \u003d \"%1$s is already tagged to event %2$s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"    private static final String MESSAGE_INVALID_EVENT \u003d \"This event doesn\u0027t exist!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    private static final String MESSAGE_INVALID_PERSON \u003d \"This contact doesn\u0027t exist!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"    private final Index eventIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"    private final Name personName;","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"     * Creates an AddEventCommand to add the specified {@code Event}","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"    public TagEventCommand(Index eventIndex, Name personName) {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"        requireAllNonNull(eventIndex, personName);","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"        this.personName \u003d personName;","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"        if (!model.hasPersonWithName(personName.toString())) {","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON);","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getEvents();","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"            throw new CommandException(MESSAGE_INVALID_EVENT);","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"        Person taggingPerson \u003d model.getPersonWithName(personName.toString());","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"nicljr"},"content":"        if (model.isPersonTaggedToEvent(eventIndex, taggingPerson)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS_2, this.personName, eventIndex.getOneBased()));","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"        model.tagPersonToEvent(eventIndex, taggingPerson);","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, this.personName, eventIndex.getOneBased()));","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"nicljr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"nicljr"},"content":"                || (other instanceof TagEventCommand // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"nicljr"},"content":"                \u0026\u0026 eventIndex.equals(((TagEventCommand) other).eventIndex)","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"nicljr"},"content":"                \u0026\u0026 personName.equals(((TagEventCommand) other).personName)); // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"hansstanley":16,"nicljr":67,"igezt":2}},{"path":"src/main/java/seedu/address/logic/commands/UnTagEventCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_TO_TAG;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_TO_TAG;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":" * Untags a Person to an Event","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"public class UnTagEventCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    public static final String COMMAND_WORD \u003d \"untagpersonevent\";","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"            ResultDisplay.formatMessage(COMMAND_WORD, \"Untags a contact from an event.\")","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_PARAMETERS,","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_EVENT_TO_TAG + \"EVENT INDEX\",","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_PERSON_TO_TAG + \"CONTACT NAME\")","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_EXAMPLE,","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"                    COMMAND_WORD,","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_EVENT_TO_TAG + \"1\",","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"                    PREFIX_PERSON_TO_TAG + \"John Doe\")","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_MORE_INFO,","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"                    \"Note that the given contact name must be exact.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"    private static final String MESSAGE_SUCCESS \u003d \"%1$s is now untagged from event %2$s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"    private static final String MESSAGE_SUCCESS_2 \u003d \"%1$s is already untagged from event %2$s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"    private static final String MESSAGE_INVALID_EVENT \u003d \"This event doesn\u0027t exist!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    private static final String MESSAGE_INVALID_PERSON \u003d \"This contact doesn\u0027t exist!\";","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"    private final Index eventIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"    private final Name personName;","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"     * Creates an AddEventCommand to add the specified {@code Event}","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"    public UnTagEventCommand(Index eventIndex, Name personName) {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"        requireAllNonNull(eventIndex, personName);","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"        this.eventIndex \u003d eventIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"        this.personName \u003d personName;","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"        if (!model.hasPersonWithName(personName.toString())) {","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"            throw new CommandException(MESSAGE_INVALID_PERSON);","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getEvents();","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"            throw new CommandException(MESSAGE_INVALID_EVENT);","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"        Person taggingPerson \u003d model.getPersonWithName(personName.toString());","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"nicljr"},"content":"        if (!model.isPersonTaggedToEvent(eventIndex, taggingPerson)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS_2, this.personName, eventIndex.getOneBased()));","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"        model.untagPersonToEvent(eventIndex, taggingPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, this.personName, eventIndex.getOneBased()));","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"nicljr"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"                || (other instanceof UnTagEventCommand // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"nicljr"},"content":"                \u0026\u0026 eventIndex.equals(((UnTagEventCommand) other).eventIndex)","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"nicljr"},"content":"                \u0026\u0026 personName.equals(((UnTagEventCommand) other).personName)); // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"hansstanley":16,"nicljr":63,"igezt":5}},{"path":"src/main/java/seedu/address/logic/commands/UnfavoriteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":" * Unfavorites a Person in the Address Book","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"public class UnfavoriteCommand extends Command {","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    public static final String COMMAND_WORD \u003d \"unfav\";","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_USAGE \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"            ResultDisplay.formatMessage(COMMAND_WORD,","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"                    \"Removes the contact specified by the given index from favorites.\")","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_PARAMETERS, \"INDEX (must be positive integer)\")","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"            + ResultDisplay.formatMessage(ResultDisplay.KEYWORD_EXAMPLE, COMMAND_WORD, \"1\");","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_NOT_EXISTS \u003d \"Contact doesn\u0027t exist in the address book\";","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_ISUNFAVORITED \u003d \"Contact is already not a favorite: %1$s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_UNFAVORITE_PERSON_SUCCESS \u003d \"Contact removed from favorites: %1$s\";","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"    public final Index index;","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"    public UnfavoriteCommand(Index index) {","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"     * Returns a CommandResult where the Selected Person","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"     * is Unfavorited.","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"            throw new CommandException(MESSAGE_NOT_EXISTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"        Person personToUnfav \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"        if (!personToUnfav.getFavorite().getFavoriteStatus()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"            return new CommandResult(String.format(MESSAGE_ISUNFAVORITED, personToUnfav));","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"        Person unfavoritedPerson \u003d personToUnfav.setFavorite(false);","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"        model.setPerson(personToUnfav, unfavoritedPerson);","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"        return new CommandResult(String.format(MESSAGE_UNFAVORITE_PERSON_SUCCESS, unfavoritedPerson));","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"hansstanley":11,"nicljr":51,"igezt":1}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMS;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MAJOR;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULES;","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RACE;","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.Address;","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.CommunicationChannel;","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.Faculty;","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.Gender;","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.Major;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.Modules;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.Race;","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Tags;","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"                        PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"rachtan27"},"content":"                        PREFIX_GENDER, PREFIX_MAJOR, PREFIX_MODULES, PREFIX_RACE, PREFIX_COMMS, PREFIX_FACULTY);","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).orElse(\"\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).orElse(\"\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).orElse(\"\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"        Tags tags \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-23"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).orElse(\"\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"        Major major \u003d ParserUtil.parseMajor(argMultimap.getValue(PREFIX_MAJOR).orElse(\"\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"        Modules modules \u003d ParserUtil.parseModules(argMultimap.getAllValues(PREFIX_MODULES));","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"        Race race \u003d ParserUtil.parseRace(argMultimap.getValue(PREFIX_RACE).orElse(\"\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"        CommunicationChannel comms \u003d ParserUtil.parseComms(argMultimap.getValue(PREFIX_COMMS).orElse(\"\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"rachtan27"},"content":"        Faculty faculty \u003d ParserUtil.parseFaculty(argMultimap.getValue(PREFIX_FACULTY).orElse(\"\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"        Person person \u003d new Person(name, phone, email, address, gender, major,","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"                modules, race, tags, comms, null, faculty);","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"hansstanley":2,"igezt":18,"-":46,"rachtan27":13}},{"path":"src/main/java/seedu/address/logic/parser/AddEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.OneTimeEvent;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.fields.DateTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.fields.Description;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.fields.Recurrence;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":" * Parses input arguments and creates a new AddEventCommand object.","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"public class AddEventCommandParser implements Parser\u003cAddEventCommand\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    private static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"    private static final Prefix PREFIX_START_DATE_TIME \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    private static final Prefix PREFIX_END_DATE_TIME \u003d new Prefix(\"e/\");","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"    private static final Prefix PREFIX_RECURRENCE \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"    public AddEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_START_DATE_TIME,","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"                PREFIX_END_DATE_TIME, PREFIX_RECURRENCE);","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION, PREFIX_START_DATE_TIME, PREFIX_END_DATE_TIME)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"        Description desc \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"        DateTime startDateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_START_DATE_TIME).get());","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"        DateTime endDateTime \u003d ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_END_DATE_TIME).get());","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"        if (argMultimap.getValue(PREFIX_RECURRENCE).isEmpty()) {","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"            // Non-recurring event","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"            return new AddEventCommand(new OneTimeEvent(desc, startDateTime, endDateTime, new HashSet\u003c\u003e()));","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"        } else {","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"            // Recurring event","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"            Recurrence recurrence \u003d ParserUtil.parseRecurrence(argMultimap.getValue(PREFIX_RECURRENCE).get());","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"            return new AddEventCommand(new RecurringEvent(desc, startDateTime, endDateTime,","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"                    recurrence, new HashSet\u003c\u003e()));","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"     * given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nicljr":53,"igezt":4}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.commands.DarkModeCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.commands.EditUserCommand;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.commands.FavoriteCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.commands.LightModeCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.TabCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.commands.TagEventCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.commands.UnTagEventCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.commands.UnfavoriteCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.editeventcommand.EditEventCommandParser;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.editpersoncommandsparser.EditContactCommandParser;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.editpersoncommandsparser.EditUserCommandParser;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"        case EditContactCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"            return new EditContactCommandParser().parse(arguments);","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":86,"author":{"gitId":"nicljr"},"content":"        case AddEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"nicljr"},"content":"            return new AddEventCommandParser().parse(arguments);","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"        case DeleteEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"            return new DeleteEventCommandParser().parse(arguments);","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"        case TagEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"            return new TagEventCommandParser().parse(arguments);","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"        case UnTagEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"            return new UnTagEventCommandParser().parse(arguments);","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"nicljr"},"content":"        case FavoriteCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-04"},{"lineNumber":99,"author":{"gitId":"nicljr"},"content":"            return new FavoriteCommandParser().parse(arguments);","lastModifiedDate":"2023-03-04"},{"lineNumber":100,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":101,"author":{"gitId":"nicljr"},"content":"        case UnfavoriteCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-04"},{"lineNumber":102,"author":{"gitId":"nicljr"},"content":"            return new UnfavoriteCommandParser().parse(arguments);","lastModifiedDate":"2023-03-04"},{"lineNumber":103,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":104,"author":{"gitId":"igezt"},"content":"        case EditUserCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"igezt"},"content":"            return new EditUserCommandParser().parse(arguments);","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"hansstanley"},"content":"        case TabCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"hansstanley"},"content":"            return new TabCommandParser().parse(arguments);","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"rachtan27"},"content":"        case SelectCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"rachtan27"},"content":"            return new SelectCommandParser().parse(arguments);","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"igezt"},"content":"        case EditEventCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"igezt"},"content":"            return new EditEventCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"igezt"},"content":"        case LightModeCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"igezt"},"content":"            return new LightModeCommand();","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"igezt"},"content":"        case DarkModeCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"igezt"},"content":"            return new DarkModeCommand();","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hansstanley":5,"nicljr":12,"igezt":33,"-":73,"rachtan27":4}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    //public static final Prefix PREFIX_FAVORITE \u003d new Prefix(\"f/\");","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    public static final Prefix PREFIX_MAJOR \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    public static final Prefix PREFIX_MODULES \u003d new Prefix(\"mt/\");","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    public static final Prefix PREFIX_RACE \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    public static final Prefix PREFIX_COMMS \u003d new Prefix(\"c/\");","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"    public static final Prefix PREFIX_FACULTY \u003d new Prefix(\"f/\");","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"    public static final Prefix PREFIX_START_DATE_TIME \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"    public static final Prefix PREFIX_END_DATE_TIME \u003d new Prefix(\"e/\");","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"    public static final Prefix PREFIX_RECURRENCE \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"    public static final Prefix PREFIX_PERSON_TO_TAG \u003d new Prefix(\"pt/\");","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"    public static final Prefix PREFIX_EVENT_TO_TAG \u003d new Prefix(\"et/\");","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"nicljr":8,"igezt":7,"-":15,"rachtan27":2}},{"path":"src/main/java/seedu/address/logic/parser/DeleteEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":" * Parses input arguments and creates a new DeleteEventCommand object","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"public class DeleteEventCommandParser implements Parser\u003cDeleteEventCommand\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteEventCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"     * and returns a DeleteEventCommand object for execution.","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"    public DeleteEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"            return new DeleteEventCommand(index);","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteEventCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"nicljr":30}},{"path":"src/main/java/seedu/address/logic/parser/FavoriteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.commands.FavoriteCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":" * Parses input arguments and creates a new FavoriteCommand object","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"public class FavoriteCommandParser implements Parser\u003cFavoriteCommand\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"     * Parses the given {@code String} of arguments in the context of the StarCommand","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"     * and returns a StarCommand object for execution.","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    public FavoriteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        Index index;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"            index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"            return new FavoriteCommand(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FavoriteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"nicljr":27,"igezt":3}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMS;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MAJOR;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULES;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RACE;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import java.util.List;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.PredicateKey;","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"        PersonContainsKeywordsPredicate pred \u003d new PersonContainsKeywordsPredicate();","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"                        PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"                        PREFIX_GENDER, PREFIX_MAJOR, PREFIX_MODULES, PREFIX_RACE, PREFIX_COMMS, PREFIX_FACULTY);","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"        if (!argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE)","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"            );","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"        List\u003cPredicateKey\u003e predicateKeys \u003d List.of(PredicateKey.NAME, PredicateKey.ADDRESS, PredicateKey.COMMS,","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"                PredicateKey.EMAIL, PredicateKey.GENDER, PredicateKey.MAJOR, PredicateKey.MODULES, PredicateKey.PHONE,","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"                PredicateKey.RACE, PredicateKey.TAG, PredicateKey.FACULTY);","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"        for (PredicateKey key : predicateKeys) {","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"            List\u003cString\u003e keywords \u003d argMultimap.getAllValues(key.prefix);","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"            if (!keywords.isEmpty()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"                pred.withField(key, keywords);","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"        return new FindCommand(pred);","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"igezt":37,"-":30}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.fields.DateTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.fields.Description;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.fields.Recurrence;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Address;","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.CommunicationChannel;","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.Faculty;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Gender;","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Major;","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Modules;","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Race;","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Tags;","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.NusMod;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer\";","lastModifiedDate":"2023-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    public static final String MESSAGE_NO_PREAMBLE_REQUIRED \u003d \"There is no need for a preamble for this command\";","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"     * Formatter for String to LocalDateTime.","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"    private static DateTimeFormatter nonRecurringFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"     * Formatter for String to LocalDateTime for Daily Recurring Events","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"    private static DateTimeFormatter dailyFormatter \u003d DateTimeFormatter.ofPattern(\"HHmm\");","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"     * Formatter for String to LocalDateTime for Weekly Recurring Events","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"    private static DateTimeFormatter weeklyFormatter \u003d DateTimeFormatter.ofPattern(\"EEEE HHmm\");","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"     * Formatter for String to LocalDateTime for Monthly Recurring Events","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"    private static DateTimeFormatter monthlyFormatter \u003d DateTimeFormatter.ofPattern(\"dd HHmm\");","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"     * Formatter for String to LocalDateTime for Yearly Recurring Events","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"    private static DateTimeFormatter yearlyFormatter \u003d DateTimeFormatter.ofPattern(\"MM-dd HHmm\");","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"igezt"},"content":"            return null;","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"igezt"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2023-02-20"},{"lineNumber":119,"author":{"gitId":"igezt"},"content":"            return null;","lastModifiedDate":"2023-02-20"},{"lineNumber":120,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"igezt"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-02-20"},{"lineNumber":136,"author":{"gitId":"igezt"},"content":"            return null;","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":152,"author":{"gitId":"igezt"},"content":"        if (tag \u003d\u003d null) {","lastModifiedDate":"2023-02-20"},{"lineNumber":153,"author":{"gitId":"igezt"},"content":"            return null;","lastModifiedDate":"2023-02-20"},{"lineNumber":154,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":163,"author":{"gitId":"igezt"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into {@code Tags}.","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":165,"author":{"gitId":"igezt"},"content":"    public static Tags parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"igezt"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":167,"author":{"gitId":"igezt"},"content":"            return new Tags(new HashSet\u003c\u003e());","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":173,"author":{"gitId":"igezt"},"content":"        return new Tags(tagSet);","lastModifiedDate":"2023-03-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":175,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":176,"author":{"gitId":"igezt"},"content":"    //    public static Favorite parseFavorite(String favorite) throws ParseException{","lastModifiedDate":"2023-02-27"},{"lineNumber":177,"author":{"gitId":"igezt"},"content":"    //        if (favorite \u003d\u003d null) {","lastModifiedDate":"2023-02-27"},{"lineNumber":178,"author":{"gitId":"igezt"},"content":"    //            return null;","lastModifiedDate":"2023-02-27"},{"lineNumber":179,"author":{"gitId":"igezt"},"content":"    //        }","lastModifiedDate":"2023-02-27"},{"lineNumber":180,"author":{"gitId":"igezt"},"content":"    //        String trimmedFavorite \u003d favorite.trim();","lastModifiedDate":"2023-02-27"},{"lineNumber":181,"author":{"gitId":"igezt"},"content":"    //        if (!Favorite.isValidFavorite(trimmedFavorite)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":182,"author":{"gitId":"igezt"},"content":"    //            throw new ParseException(Favorite.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-27"},{"lineNumber":183,"author":{"gitId":"igezt"},"content":"    //        }","lastModifiedDate":"2023-02-27"},{"lineNumber":184,"author":{"gitId":"igezt"},"content":"    //        return new Favorite(false);","lastModifiedDate":"2023-02-27"},{"lineNumber":185,"author":{"gitId":"igezt"},"content":"    //    }","lastModifiedDate":"2023-02-27"},{"lineNumber":186,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":187,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":188,"author":{"gitId":"igezt"},"content":"     * Parses a {@code String gender} into an {@code Gender}.","lastModifiedDate":"2023-02-27"},{"lineNumber":189,"author":{"gitId":"igezt"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-02-27"},{"lineNumber":190,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":191,"author":{"gitId":"igezt"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2023-02-27"},{"lineNumber":192,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":193,"author":{"gitId":"igezt"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2023-02-20"},{"lineNumber":194,"author":{"gitId":"igezt"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2023-02-20"},{"lineNumber":195,"author":{"gitId":"igezt"},"content":"            return null;","lastModifiedDate":"2023-02-20"},{"lineNumber":196,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":197,"author":{"gitId":"igezt"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":198,"author":{"gitId":"igezt"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":199,"author":{"gitId":"igezt"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-27"},{"lineNumber":200,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":201,"author":{"gitId":"igezt"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2023-02-27"},{"lineNumber":202,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":203,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":204,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":205,"author":{"gitId":"igezt"},"content":"     * Parses a {@code String major} into an {@code Major}.","lastModifiedDate":"2023-02-27"},{"lineNumber":206,"author":{"gitId":"igezt"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-02-27"},{"lineNumber":207,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":208,"author":{"gitId":"igezt"},"content":"     * @throws ParseException if the given {@code major} is invalid.","lastModifiedDate":"2023-02-27"},{"lineNumber":209,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":210,"author":{"gitId":"igezt"},"content":"    public static Major parseMajor(String major) throws ParseException {","lastModifiedDate":"2023-02-20"},{"lineNumber":211,"author":{"gitId":"igezt"},"content":"        if (major \u003d\u003d null) {","lastModifiedDate":"2023-02-20"},{"lineNumber":212,"author":{"gitId":"igezt"},"content":"            return null;","lastModifiedDate":"2023-02-20"},{"lineNumber":213,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":214,"author":{"gitId":"igezt"},"content":"        String trimmedMajor \u003d major.trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":215,"author":{"gitId":"igezt"},"content":"        if (!Major.isValidMajor(trimmedMajor)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":216,"author":{"gitId":"igezt"},"content":"            throw new ParseException(Major.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-20"},{"lineNumber":217,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":218,"author":{"gitId":"igezt"},"content":"        return new Major(trimmedMajor);","lastModifiedDate":"2023-02-20"},{"lineNumber":219,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":220,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":221,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":222,"author":{"gitId":"igezt"},"content":"     * Parses {@code Collection\u003cString\u003e modules} into a {@code Modules}.","lastModifiedDate":"2023-02-27"},{"lineNumber":223,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":224,"author":{"gitId":"igezt"},"content":"    public static Modules parseModules(Collection\u003cString\u003e modules) throws ParseException {","lastModifiedDate":"2023-02-20"},{"lineNumber":225,"author":{"gitId":"igezt"},"content":"        if (modules.isEmpty()) {","lastModifiedDate":"2023-02-20"},{"lineNumber":226,"author":{"gitId":"igezt"},"content":"            return new Modules(new HashSet\u003c\u003e());","lastModifiedDate":"2023-02-20"},{"lineNumber":227,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":228,"author":{"gitId":"igezt"},"content":"        final Set\u003cNusMod\u003e modulesSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-02-20"},{"lineNumber":229,"author":{"gitId":"igezt"},"content":"        for (String module : modules) {","lastModifiedDate":"2023-02-20"},{"lineNumber":230,"author":{"gitId":"igezt"},"content":"            modulesSet.add(parseModule(module.toUpperCase()));","lastModifiedDate":"2023-03-17"},{"lineNumber":231,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":232,"author":{"gitId":"igezt"},"content":"        return new Modules(modulesSet);","lastModifiedDate":"2023-02-20"},{"lineNumber":233,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":234,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":235,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":236,"author":{"gitId":"igezt"},"content":"     * Parses a {@code String module} into an {@code NusMod}.","lastModifiedDate":"2023-02-27"},{"lineNumber":237,"author":{"gitId":"igezt"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-02-27"},{"lineNumber":238,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":239,"author":{"gitId":"igezt"},"content":"     * @throws ParseException if the given {@code module} is invalid.","lastModifiedDate":"2023-02-27"},{"lineNumber":240,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":241,"author":{"gitId":"igezt"},"content":"    private static NusMod parseModule(String module) throws ParseException {","lastModifiedDate":"2023-02-20"},{"lineNumber":242,"author":{"gitId":"igezt"},"content":"        if (module \u003d\u003d null) {","lastModifiedDate":"2023-02-20"},{"lineNumber":243,"author":{"gitId":"igezt"},"content":"            return null;","lastModifiedDate":"2023-02-20"},{"lineNumber":244,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":245,"author":{"gitId":"igezt"},"content":"        String trimmedTag \u003d module.trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":246,"author":{"gitId":"hansstanley"},"content":"        if (!NusMod.isModuleCodeValid(trimmedTag)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":247,"author":{"gitId":"igezt"},"content":"            throw new ParseException(NusMod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-20"},{"lineNumber":248,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":249,"author":{"gitId":"igezt"},"content":"        return new NusMod(trimmedTag);","lastModifiedDate":"2023-02-20"},{"lineNumber":250,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":251,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":252,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":253,"author":{"gitId":"igezt"},"content":"     * Parses a {@code String race} into an {@code Race}.","lastModifiedDate":"2023-02-27"},{"lineNumber":254,"author":{"gitId":"igezt"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-02-27"},{"lineNumber":255,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":256,"author":{"gitId":"igezt"},"content":"     * @throws ParseException if the given {@code race} is invalid.","lastModifiedDate":"2023-02-27"},{"lineNumber":257,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":258,"author":{"gitId":"igezt"},"content":"    public static Race parseRace(String race) throws ParseException {","lastModifiedDate":"2023-02-20"},{"lineNumber":259,"author":{"gitId":"igezt"},"content":"        if (race \u003d\u003d null) {","lastModifiedDate":"2023-02-20"},{"lineNumber":260,"author":{"gitId":"igezt"},"content":"            return null;","lastModifiedDate":"2023-02-20"},{"lineNumber":261,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":262,"author":{"gitId":"igezt"},"content":"        String trimmedRace \u003d race.trim();","lastModifiedDate":"2023-02-20"},{"lineNumber":263,"author":{"gitId":"igezt"},"content":"        if (!Race.isValidRace(trimmedRace)) {","lastModifiedDate":"2023-02-20"},{"lineNumber":264,"author":{"gitId":"igezt"},"content":"            throw new ParseException(Race.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-20"},{"lineNumber":265,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":266,"author":{"gitId":"igezt"},"content":"        return new Race(trimmedRace);","lastModifiedDate":"2023-02-20"},{"lineNumber":267,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":268,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":269,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":270,"author":{"gitId":"igezt"},"content":"     * Parses a {@code String comms} into an {@code CommunicationChannel}.","lastModifiedDate":"2023-02-27"},{"lineNumber":271,"author":{"gitId":"igezt"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-02-27"},{"lineNumber":272,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":273,"author":{"gitId":"igezt"},"content":"     * @throws ParseException if the given {@code comms} is invalid.","lastModifiedDate":"2023-02-27"},{"lineNumber":274,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":275,"author":{"gitId":"igezt"},"content":"    public static CommunicationChannel parseComms(String comms) throws ParseException {","lastModifiedDate":"2023-02-27"},{"lineNumber":276,"author":{"gitId":"igezt"},"content":"        if (comms \u003d\u003d null) {","lastModifiedDate":"2023-02-27"},{"lineNumber":277,"author":{"gitId":"igezt"},"content":"            return null;","lastModifiedDate":"2023-02-27"},{"lineNumber":278,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":279,"author":{"gitId":"igezt"},"content":"        String trimmedComms \u003d comms.trim();","lastModifiedDate":"2023-02-27"},{"lineNumber":280,"author":{"gitId":"igezt"},"content":"        if (!CommunicationChannel.isValidComms(trimmedComms)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":281,"author":{"gitId":"igezt"},"content":"            throw new ParseException(CommunicationChannel.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-27"},{"lineNumber":282,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":283,"author":{"gitId":"rachtan27"},"content":"        return new CommunicationChannel(trimmedComms);","lastModifiedDate":"2023-03-22"},{"lineNumber":284,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":285,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":286,"author":{"gitId":"rachtan27"},"content":"     * Parses a {@code String faculty} into an {@code Faculty}.","lastModifiedDate":"2023-03-22"},{"lineNumber":287,"author":{"gitId":"rachtan27"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-22"},{"lineNumber":288,"author":{"gitId":"rachtan27"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":289,"author":{"gitId":"rachtan27"},"content":"     * @throws ParseException if the given {@code faculty} is invalid.","lastModifiedDate":"2023-03-22"},{"lineNumber":290,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":291,"author":{"gitId":"rachtan27"},"content":"    public static Faculty parseFaculty(String faculty) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":292,"author":{"gitId":"rachtan27"},"content":"        if (faculty \u003d\u003d null) {","lastModifiedDate":"2023-03-22"},{"lineNumber":293,"author":{"gitId":"rachtan27"},"content":"            return null;","lastModifiedDate":"2023-03-22"},{"lineNumber":294,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":295,"author":{"gitId":"rachtan27"},"content":"        String trimmedFaculty \u003d faculty.trim();","lastModifiedDate":"2023-03-22"},{"lineNumber":296,"author":{"gitId":"rachtan27"},"content":"        if (!Faculty.isValidFaculty(trimmedFaculty)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":297,"author":{"gitId":"rachtan27"},"content":"            throw new ParseException(Faculty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":298,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":299,"author":{"gitId":"rachtan27"},"content":"        return new Faculty(trimmedFaculty);","lastModifiedDate":"2023-03-22"},{"lineNumber":300,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":301,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":302,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":303,"author":{"gitId":"nicljr"},"content":"     * Parses a {@code String duration} into an {@code DateTime}.","lastModifiedDate":"2023-03-05"},{"lineNumber":304,"author":{"gitId":"nicljr"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-05"},{"lineNumber":305,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":306,"author":{"gitId":"nicljr"},"content":"     * @throws ParseException if the given {@code duration} is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":307,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":308,"author":{"gitId":"nicljr"},"content":"    public static DateTime parseDateTime(String duration) throws ParseException {","lastModifiedDate":"2023-03-05"},{"lineNumber":309,"author":{"gitId":"nicljr"},"content":"        requireNonNull(duration);","lastModifiedDate":"2023-03-05"},{"lineNumber":310,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":311,"author":{"gitId":"nicljr"},"content":"        if (!DateTime.isValidDateTime(duration)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":312,"author":{"gitId":"nicljr"},"content":"            throw new ParseException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":313,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":314,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":315,"author":{"gitId":"nicljr"},"content":"        return new DateTime(duration);","lastModifiedDate":"2023-03-05"},{"lineNumber":316,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":317,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":318,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":319,"author":{"gitId":"nicljr"},"content":"     * Parses a {@code String interval} into a {@code Recurrence}.","lastModifiedDate":"2023-03-05"},{"lineNumber":320,"author":{"gitId":"nicljr"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-05"},{"lineNumber":321,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":322,"author":{"gitId":"nicljr"},"content":"     * @throws ParseException if the given {@code interval} is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":323,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":324,"author":{"gitId":"nicljr"},"content":"    public static Recurrence parseRecurrence(String interval) throws ParseException {","lastModifiedDate":"2023-03-05"},{"lineNumber":325,"author":{"gitId":"nicljr"},"content":"        String trimmedInterval \u003d interval.trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":326,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":327,"author":{"gitId":"igezt"},"content":"        if (!Recurrence.isValidRecurrence(trimmedInterval)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":328,"author":{"gitId":"nicljr"},"content":"            throw new ParseException(Recurrence.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":329,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":330,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":331,"author":{"gitId":"nicljr"},"content":"        return new Recurrence(interval);","lastModifiedDate":"2023-03-05"},{"lineNumber":332,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":333,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":334,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":335,"author":{"gitId":"nicljr"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2023-03-05"},{"lineNumber":336,"author":{"gitId":"nicljr"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-05"},{"lineNumber":337,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":338,"author":{"gitId":"nicljr"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2023-03-05"},{"lineNumber":339,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":340,"author":{"gitId":"nicljr"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2023-03-05"},{"lineNumber":341,"author":{"gitId":"nicljr"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-03-05"},{"lineNumber":342,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":343,"author":{"gitId":"nicljr"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2023-03-05"},{"lineNumber":344,"author":{"gitId":"nicljr"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":345,"author":{"gitId":"nicljr"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-05"},{"lineNumber":346,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":347,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":348,"author":{"gitId":"nicljr"},"content":"        return new Description(description);","lastModifiedDate":"2023-03-05"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"hansstanley":2,"nicljr":76,"igezt":142,"-":112,"rachtan27":18}},{"path":"src/main/java/seedu/address/logic/parser/SelectCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":" * Parses user input and creates a new {@code SelectCommand}.","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"public class SelectCommandParser implements Parser\u003cSelectCommand\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"    public SelectCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"        ArgumentMultimap multimap \u003d ArgumentTokenizer.tokenize(userInput);","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"        Index index;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"            index \u003d ParserUtil.parseIndex(multimap.getPreamble());","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"                    SelectCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"        return new SelectCommand(index);","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"rachtan27":29}},{"path":"src/main/java/seedu/address/logic/parser/TabCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.TabCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":" * Parses user input and creates a new {@code TabCommand}.","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"public class TabCommandParser implements Parser\u003cTabCommand\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    public TabCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"        Objects.requireNonNull(userInput);","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"        ArgumentMultimap multimap \u003d ArgumentTokenizer.tokenize(userInput);","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"        Index index;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"            index \u003d ParserUtil.parseIndex(multimap.getPreamble());","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"        } catch (IllegalValueException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"                    TabCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        return new TabCommand(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"hansstanley":29}},{"path":"src/main/java/seedu/address/logic/parser/TagEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_TO_TAG;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_TO_TAG;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.commands.TagEventCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":" * Parses input arguments and creates a new TagEventCommand object","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"public class TagEventCommandParser implements Parser\u003cTagEventCommand\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"     * Parses the given {@code String} of arguments in the context of the TagEventCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"     * and returns a TagEventCommand object for execution.","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"    public TagEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_EVENT_TO_TAG, PREFIX_PERSON_TO_TAG);","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_EVENT_TO_TAG, PREFIX_PERSON_TO_TAG)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, TagEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"        Index eventIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_EVENT_TO_TAG).get());","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"        Name taggingPersonName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_PERSON_TO_TAG).get());","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"        return new TagEventCommand(eventIndex, taggingPersonName);","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"     * given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"nicljr":44}},{"path":"src/main/java/seedu/address/logic/parser/UnTagEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EVENT_TO_TAG;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PERSON_TO_TAG;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.commands.UnTagEventCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":" * Parses input arguments and creates a new UnTagEventCommand object","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"public class UnTagEventCommandParser implements Parser\u003cUnTagEventCommand\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"     * Parses the given {@code String} of arguments in the context of the UnTagEventCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"     * and returns a UnTagEventCommand object for execution.","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"    public UnTagEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_EVENT_TO_TAG, PREFIX_PERSON_TO_TAG);","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_EVENT_TO_TAG, PREFIX_PERSON_TO_TAG)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnTagEventCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"        Index eventIndex \u003d ParserUtil.parseIndex(argMultimap.getValue(PREFIX_EVENT_TO_TAG).get());","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"        Name taggingPersonName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_PERSON_TO_TAG).get());","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"        return new UnTagEventCommand(eventIndex, taggingPersonName);","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"     * given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"hansstanley":1,"nicljr":43}},{"path":"src/main/java/seedu/address/logic/parser/UnfavoriteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.commands.UnfavoriteCommand;","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":" * Parses input arguments and creates a new UnfavoriteCommand object","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"public class UnfavoriteCommandParser implements Parser\u003cUnfavoriteCommand\u003e {","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"     * Parses the given {@code String} of arguments in the context of the StarCommand","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"     * and returns a StarCommand object for execution.","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    public UnfavoriteCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        Index index;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"        try {","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"            index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"            return new UnfavoriteCommand(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnfavoriteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"nicljr":27,"igezt":3}},{"path":"src/main/java/seedu/address/logic/parser/editeventcommand/EditEventCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shuggan"},"content":"package seedu.address.logic.parser.editeventcommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Shuggan"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Shuggan"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Shuggan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Shuggan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_DATE_TIME;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Shuggan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RECURRENCE;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Shuggan"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_DATE_TIME;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Shuggan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Shuggan"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Shuggan"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Shuggan"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Shuggan"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Shuggan"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Shuggan"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Shuggan"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Shuggan"},"content":" * Parses input arguments and creates a new EditEventCommand object","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Shuggan"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Shuggan"},"content":"public class EditEventCommandParser {","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Shuggan"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Shuggan"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Shuggan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Shuggan"},"content":"    public EditEventCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Shuggan"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Shuggan"},"content":"        EventDescriptor editEventDescriptor \u003d this.parseForTags(args);","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Shuggan"},"content":"        return new EditEventCommand(editEventDescriptor);","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Shuggan"},"content":"     * Parses the given {@code String} of arguments in the context of the EditEventCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"Shuggan"},"content":"     * and returns an EditEventDescriptor for edit commands to use.","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"Shuggan"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"Shuggan"},"content":"    public EventDescriptor parseForTags(String args) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Shuggan"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"Shuggan"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"Shuggan"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"Shuggan"},"content":"                        PREFIX_DESCRIPTION, PREFIX_START_DATE_TIME, PREFIX_END_DATE_TIME, PREFIX_RECURRENCE);","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"Shuggan"},"content":"        Index index;","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Shuggan"},"content":"        EventDescriptor editEventDescriptor \u003d new EventDescriptor();","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"Shuggan"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"Shuggan"},"content":"            index \u003d this.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"Shuggan"},"content":"            editEventDescriptor.setIndex(index);","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"Shuggan"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"Shuggan"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"Shuggan"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, this.getMessageUsage()), pe","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"Shuggan"},"content":"            );","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"Shuggan"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"Shuggan"},"content":"            editEventDescriptor.setDescription(","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"Shuggan"},"content":"                    ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"Shuggan"},"content":"        if (argMultimap.getValue(PREFIX_START_DATE_TIME).isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"Shuggan"},"content":"            editEventDescriptor.setStartDateTime(","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"Shuggan"},"content":"                    ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_START_DATE_TIME).get()));","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"Shuggan"},"content":"        if (argMultimap.getValue(PREFIX_END_DATE_TIME).isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"Shuggan"},"content":"            editEventDescriptor.setEndDateTime(","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"Shuggan"},"content":"                    ParserUtil.parseDateTime(argMultimap.getValue(PREFIX_END_DATE_TIME).get()));","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"Shuggan"},"content":"        if (argMultimap.getValue(PREFIX_RECURRENCE).isPresent()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"Shuggan"},"content":"            editEventDescriptor.setRecurrence(","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"Shuggan"},"content":"                    ParserUtil.parseRecurrence(argMultimap.getValue(PREFIX_RECURRENCE).get()));","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"Shuggan"},"content":"        if (!editEventDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"Shuggan"},"content":"            throw new ParseException(EditContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"Shuggan"},"content":"        return editEventDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"Shuggan"},"content":"    public Index parseIndex(String index) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"Shuggan"},"content":"        return ParserUtil.parseIndex(index);","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"Shuggan"},"content":"    protected String getMessageUsage() {","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"Shuggan"},"content":"        return EditEventCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"Shuggan"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Shuggan":89}},{"path":"src/main/java/seedu/address/logic/parser/editeventcommand/EventDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Shuggan"},"content":"package seedu.address.logic.parser.editeventcommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Shuggan"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Shuggan"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Shuggan"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Shuggan"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Shuggan"},"content":"import seedu.address.logic.parser.editpersoncommandsparser.PersonDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Shuggan"},"content":"import seedu.address.model.event.fields.DateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Shuggan"},"content":"import seedu.address.model.event.fields.Description;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Shuggan"},"content":"import seedu.address.model.event.fields.Recurrence;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Shuggan"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Shuggan"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Shuggan"},"content":" * Stores the details of the event.","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Shuggan"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Shuggan"},"content":"public class EventDescriptor {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Shuggan"},"content":"    private Index index;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Shuggan"},"content":"    private Description description;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Shuggan"},"content":"    private DateTime startDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Shuggan"},"content":"    private DateTime endDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Shuggan"},"content":"    private Recurrence recurrence;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Shuggan"},"content":"    private Set\u003cPerson\u003e taggedPeople;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Shuggan"},"content":"    public EventDescriptor() {}","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Shuggan"},"content":"     * Copy constructor.","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Shuggan"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Shuggan"},"content":"    public EventDescriptor(EventDescriptor toCopy) {","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Shuggan"},"content":"        setIndex(toCopy.index);","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Shuggan"},"content":"        setDescription(toCopy.description);","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"Shuggan"},"content":"        setStartDateTime(toCopy.startDateTime);","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Shuggan"},"content":"        setEndDateTime(toCopy.endDateTime);","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"Shuggan"},"content":"        setRecurrence(toCopy.recurrence);","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"Shuggan"},"content":"        setTaggedPeople(toCopy.taggedPeople);","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"Shuggan"},"content":"     * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"Shuggan"},"content":"    public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"Shuggan"},"content":"        return CollectionUtil","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"Shuggan"},"content":"                .isAnyNonNull(description, startDateTime, endDateTime, recurrence);","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"Shuggan"},"content":"    public void setIndex(Index index) {","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Shuggan"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"Shuggan"},"content":"    public Index getIndex() {","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Shuggan"},"content":"        return this.index;","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"Shuggan"},"content":"    public void setDescription(Description description) {","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"Shuggan"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"Shuggan"},"content":"    public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"Shuggan"},"content":"        return Optional.ofNullable(description);","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"Shuggan"},"content":"    public void setStartDateTime(DateTime startDateTime) {","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"Shuggan"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"Shuggan"},"content":"    public Optional\u003cDateTime\u003e getStartDateTime() {","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"Shuggan"},"content":"        return Optional.ofNullable(startDateTime);","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"Shuggan"},"content":"    public void setEndDateTime(DateTime endDateTime) {","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"Shuggan"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"Shuggan"},"content":"    public Optional\u003cDateTime\u003e getEndDateTime() {","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"Shuggan"},"content":"        return Optional.ofNullable(endDateTime);","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"Shuggan"},"content":"    public void setRecurrence(Recurrence recurrence) {","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"Shuggan"},"content":"        this.recurrence \u003d recurrence;","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"Shuggan"},"content":"    public Optional\u003cRecurrence\u003e getRecurrence() {","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"Shuggan"},"content":"        return Optional.ofNullable(recurrence);","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"Shuggan"},"content":"    public void setTaggedPeople(Set\u003cPerson\u003e taggedPeople) {","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"Shuggan"},"content":"        this.taggedPeople \u003d taggedPeople;","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"Shuggan"},"content":"    public Optional\u003cSet\u003cPerson\u003e\u003e getTaggedPeople() {","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"Shuggan"},"content":"        return Optional.ofNullable(taggedPeople);","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"Shuggan"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"Shuggan"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"Shuggan"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"Shuggan"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"Shuggan"},"content":"            return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"Shuggan"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"Shuggan"},"content":"        if (!(other instanceof PersonDescriptor)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"Shuggan"},"content":"            return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"Shuggan"},"content":"        // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"Shuggan"},"content":"        EventDescriptor e \u003d (EventDescriptor) other;","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"Shuggan"},"content":"        return getDescription().equals(e.getDescription())","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"Shuggan"},"content":"                \u0026\u0026 getStartDateTime().equals(e.getStartDateTime())","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"Shuggan"},"content":"                \u0026\u0026 getEndDateTime().equals(e.getEndDateTime())","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"Shuggan"},"content":"                \u0026\u0026 getRecurrence().equals(e.getRecurrence());","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"Shuggan"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Shuggan":117}},{"path":"src/main/java/seedu/address/logic/parser/editpersoncommandsparser/EditContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.logic.parser.editpersoncommandsparser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"public class EditContactCommandParser extends PersonCommandParser implements Parser\u003cEditContactCommand\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    public EditContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"        PersonDescriptor editPersonDescriptor \u003d this.parseForTags(args);","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"        return new EditContactCommand(editPersonDescriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"    public Optional\u003cIndex\u003e parseIndex(String index) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"        return Optional.of(ParserUtil.parseIndex(index));","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    protected String getMessageUsage() {","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        return EditContactCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"igezt":41}},{"path":"src/main/java/seedu/address/logic/parser/editpersoncommandsparser/EditUserCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.logic.parser.editpersoncommandsparser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_NO_PREAMBLE_REQUIRED;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.commands.EditUserCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"public class EditUserCommandParser extends PersonCommandParser implements Parser\u003cEditUserCommand\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    public EditUserCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"        PersonDescriptor editPersonDescriptor \u003d this.parseForTags(args);","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"        return new EditUserCommand(editPersonDescriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    public Optional\u003cIndex\u003e parseIndex(String index) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"        if (!index.isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"            throw new ParseException(MESSAGE_NO_PREAMBLE_REQUIRED);","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"        return Optional.empty();","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"    public String getMessageUsage() {","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"        return EditUserCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"igezt":41}},{"path":"src/main/java/seedu/address/logic/parser/editpersoncommandsparser/PersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.logic.parser.editpersoncommandsparser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMS;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MAJOR;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULES;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Modules;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Tags;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":" * Abstract class to inherit from for parser classes which parse objects of the {@link Person} class","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"public abstract class PersonCommandParser {","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    public abstract Optional\u003cIndex\u003e parseIndex(String index) throws ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"    protected abstract String getMessageUsage();","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"     * and returns an EditPersonDescriptor for edit commands to use.","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"    public PersonDescriptor parseForTags(String args) throws ParseException {","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"                ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"                        PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"rachtan27"},"content":"                        PREFIX_GENDER, PREFIX_MAJOR, PREFIX_MODULES, PREFIX_RACE, PREFIX_COMMS, PREFIX_FACULTY);","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"        Optional\u003cIndex\u003e index;","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"        PersonDescriptor editPersonDescriptor \u003d new PersonDescriptor();","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"            index \u003d this.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"            editPersonDescriptor.setIndex(index);","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, this.getMessageUsage()), pe","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"            );","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"            editPersonDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"        if (argMultimap.getValue(PREFIX_MAJOR).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"            editPersonDescriptor.setMajor(ParserUtil.parseMajor(argMultimap.getValue(PREFIX_MAJOR).get()));","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"        if (argMultimap.getValue(PREFIX_RACE).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"            editPersonDescriptor.setRace(ParserUtil.parseRace(argMultimap.getValue(PREFIX_RACE).get()));","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"        if (argMultimap.getValue(PREFIX_COMMS).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"            editPersonDescriptor.setComms(ParserUtil.parseComms(argMultimap.getValue(PREFIX_COMMS).get()));","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"rachtan27"},"content":"        if (argMultimap.getValue(PREFIX_FACULTY).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"rachtan27"},"content":"            editPersonDescriptor.setFaculty(ParserUtil.parseFaculty(argMultimap.getValue(PREFIX_FACULTY).get()));","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"        parseModulesForEdit(argMultimap.getAllValues(PREFIX_MODULES)).ifPresent(editPersonDescriptor::setModules);","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"            throw new ParseException(EditContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"igezt"},"content":"        return editPersonDescriptor;","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"igezt"},"content":"    private Optional\u003cModules\u003e parseModulesForEdit(Collection\u003cString\u003e mods) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"igezt"},"content":"        assert mods !\u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"igezt"},"content":"        if (mods.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"igezt"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"igezt"},"content":"        Collection\u003cString\u003e tagSet \u003d mods.size() \u003d\u003d 1 \u0026\u0026 mods.contains(\"\") ? Collections.emptySet() : mods;","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"igezt"},"content":"        return Optional.of(ParserUtil.parseModules(tagSet));","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"igezt"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"igezt"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"igezt"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"igezt"},"content":"    private Optional\u003cTags\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"igezt"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"igezt"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"igezt"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"igezt"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"igezt"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"igezt":125,"rachtan27":5}},{"path":"src/main/java/seedu/address/logic/parser/editpersoncommandsparser/PersonDescriptor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.logic.parser.editpersoncommandsparser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.CommunicationChannel;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.Faculty;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Gender;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Major;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Modules;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Race;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Tags;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":" * Stores the details of the person.","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"public class PersonDescriptor {","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    private Optional\u003cIndex\u003e index;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    private Name name;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"    private Phone phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    private Email email;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    private Address address;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"    private Tags tags;","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    private Gender gender;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    private Major major;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"    private Race race;","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"    private Modules modules;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"    private CommunicationChannel comms;","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"    private Faculty faculty;","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    public PersonDescriptor() {}","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"     * Copy constructor.","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"    public PersonDescriptor(PersonDescriptor toCopy) {","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"        setIndex(toCopy.index);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"        setName(toCopy.name);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"        setPhone(toCopy.phone);","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"        setEmail(toCopy.email);","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"        setAddress(toCopy.address);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"        setTags(toCopy.tags);","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"        setGender(toCopy.gender);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"        setMajor(toCopy.major);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"        setRace(toCopy.race);","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"        setModules(toCopy.modules);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"        setComms(toCopy.comms);","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"rachtan27"},"content":"        setFaculty(toCopy.faculty);","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"     * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"    public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"rachtan27"},"content":"        return CollectionUtil","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"rachtan27"},"content":"                .isAnyNonNull(name, phone, email, address, tags, gender, major, race, modules, comms, faculty);","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"    public void setIndex(Optional\u003cIndex\u003e index) {","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"    public Optional\u003cIndex\u003e getIndex() {","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"        return this.index;","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"    public void setName(Name name) {","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"    public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"        return Optional.ofNullable(name);","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"    public void setPhone(Phone phone) {","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"    public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"        return Optional.ofNullable(phone);","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"    public void setEmail(Email email) {","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"    public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"        return Optional.ofNullable(email);","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"igezt"},"content":"    public void setAddress(Address address) {","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"igezt"},"content":"    public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"igezt"},"content":"        return Optional.ofNullable(address);","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"igezt"},"content":"     * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"igezt"},"content":"     * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"igezt"},"content":"    public void setTags(Tags tags) {","lastModifiedDate":"2023-03-23"},{"lineNumber":113,"author":{"gitId":"igezt"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"igezt"},"content":"     * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"igezt"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"igezt"},"content":"     * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"igezt"},"content":"    public Optional\u003cTags\u003e getTags() {","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"igezt"},"content":"        return (tags !\u003d null) ? Optional.of(tags) : Optional.empty();","lastModifiedDate":"2023-03-23"},{"lineNumber":123,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"igezt"},"content":"    public void setGender(Gender gender) {","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"igezt"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"igezt"},"content":"    public void setMajor(Major major) {","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"igezt"},"content":"        this.major \u003d major;","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"igezt"},"content":"    public void setRace(Race race) {","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"igezt"},"content":"        this.race \u003d race;","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"igezt"},"content":"    public void setModules(Modules modules) {","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"igezt"},"content":"        this.modules \u003d modules;","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"igezt"},"content":"    public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"igezt"},"content":"        return Optional.ofNullable(this.gender);","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"igezt"},"content":"    public Optional\u003cMajor\u003e getMajor() {","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"igezt"},"content":"        return Optional.ofNullable(this.major);","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"igezt"},"content":"    public Optional\u003cModules\u003e getModules() {","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"igezt"},"content":"        return Optional.ofNullable(this.modules);","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"igezt"},"content":"    public Optional\u003cRace\u003e getRace() {","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"igezt"},"content":"        return Optional.ofNullable(this.race);","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"igezt"},"content":"    public Optional\u003cCommunicationChannel\u003e getComms() {","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"igezt"},"content":"        return Optional.ofNullable(this.comms);","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"igezt"},"content":"    public void setComms(CommunicationChannel comms) {","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"igezt"},"content":"        this.comms \u003d comms;","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":165,"author":{"gitId":"rachtan27"},"content":"    public void setFaculty(Faculty faculty) {","lastModifiedDate":"2023-03-22"},{"lineNumber":166,"author":{"gitId":"rachtan27"},"content":"        this.faculty \u003d faculty;","lastModifiedDate":"2023-03-22"},{"lineNumber":167,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":168,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":169,"author":{"gitId":"rachtan27"},"content":"    public Optional\u003cFaculty\u003e getFaculty() {","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"rachtan27"},"content":"        return Optional.ofNullable(this.faculty);","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":172,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":173,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":174,"author":{"gitId":"igezt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":175,"author":{"gitId":"igezt"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":176,"author":{"gitId":"igezt"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-15"},{"lineNumber":177,"author":{"gitId":"igezt"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":178,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":179,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":180,"author":{"gitId":"igezt"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":181,"author":{"gitId":"igezt"},"content":"        if (!(other instanceof PersonDescriptor)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"igezt"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":183,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":184,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":185,"author":{"gitId":"igezt"},"content":"        // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":186,"author":{"gitId":"igezt"},"content":"        PersonDescriptor e \u003d (PersonDescriptor) other;","lastModifiedDate":"2023-03-18"},{"lineNumber":187,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"igezt"},"content":"        return getName().equals(e.getName())","lastModifiedDate":"2023-03-15"},{"lineNumber":189,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2023-03-15"},{"lineNumber":190,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2023-03-15"},{"lineNumber":191,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2023-03-15"},{"lineNumber":192,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 getGender().equals(e.getGender())","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 getMajor().equals(e.getMajor())","lastModifiedDate":"2023-03-15"},{"lineNumber":195,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 getRace().equals(e.getRace())","lastModifiedDate":"2023-03-15"},{"lineNumber":196,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 getModules().equals(e.getModules())","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"rachtan27"},"content":"                \u0026\u0026 getComms().equals(e.getComms())","lastModifiedDate":"2023-03-22"},{"lineNumber":198,"author":{"gitId":"rachtan27"},"content":"                \u0026\u0026 getFaculty().equals(e.getFaculty());","lastModifiedDate":"2023-03-22"},{"lineNumber":199,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":200,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"igezt":185,"rachtan27":15}},{"path":"src/main/java/seedu/address/logic/ui/tab/TabInfo.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.logic.ui.tab;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":" * Represents the information associated with a UI tab.","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"public class TabInfo {","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"    private static final String STRING_REPRESENTATION \u003d \"%d: %s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"    private final Index index;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"    private final TabType tabType;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"     * Creates a {@code TabInfo} with the given {@code index} and {@code title}.","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    public TabInfo(Index index, TabType tabType) {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"        CollectionUtil.requireAllNonNull(index, tabType);","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"        this.tabType \u003d tabType;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    public Index getIndex() {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"        return index;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    public TabType getTabType() {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"        return tabType;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"        return String.format(STRING_REPRESENTATION, index.getOneBased(), tabType.getTitle());","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"        if (!(other instanceof TabInfo)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"        TabInfo that \u003d (TabInfo) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"        return index.equals(that.index)","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"                \u0026\u0026 tabType.equals(that.tabType);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"hansstanley":48}},{"path":"src/main/java/seedu/address/logic/ui/tab/TabType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.logic.ui.tab;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":" * Defines the unique types of UI tabs.","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"public enum TabType {","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"    ADDRESS_BOOK(\"Address Book\"),","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"    EVENTS(\"Events\"),","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"    USER(\"Me\");","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"    private final String title;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    TabType(String title) {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"        this.title \u003d title;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    public String getTitle() {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"        return title;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    public static TabType[] getAll() {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"        return new TabType[]{ADDRESS_BOOK, EVENTS, USER};","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"hansstanley":24}},{"path":"src/main/java/seedu/address/logic/ui/tab/TabUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.logic.ui.tab;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import javafx.beans.property.ReadOnlyObjectProperty;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import javafx.beans.property.ReadOnlyObjectWrapper;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":" * Utility class to keep and manage {@code TabInfo}s.","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"public class TabUtil {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    private final List\u003cTabInfo\u003e tabInfoList;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    private final ReadOnlyObjectWrapper\u003cTabInfo\u003e selectedTabInfo;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"     * Creates a {@code TabUtil}.","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    public TabUtil(TabType ...tabTypes) {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"        tabInfoList \u003d new ArrayList\u003c\u003e(tabTypes.length);","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"        for (int i \u003d 0; i \u003c tabTypes.length; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"            tabInfoList.add(new TabInfo(Index.fromZeroBased(i), tabTypes[i]));","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"        selectedTabInfo \u003d new ReadOnlyObjectWrapper\u003c\u003e(tabInfoList.get(0));","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    public List\u003cTabInfo\u003e getTabInfoList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"        return tabInfoList;","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"     * Returns whether the given {@code index} is in the range of valid tab indices.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"    public boolean isIndexInRange(Index index) {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"        Objects.requireNonNull(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"        int zeroBased \u003d index.getZeroBased();","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"        return zeroBased \u003e -1 \u0026\u0026 zeroBased \u003c tabInfoList.size();","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"    public ReadOnlyObjectProperty\u003cTabInfo\u003e getSelectedTab() {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"        return selectedTabInfo.getReadOnlyProperty();","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"    public void setSelectedTab(Index index) {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"        if (isIndexInRange(index)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"            selectedTabInfo.setValue(tabInfoList.get(index.getZeroBased()));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"        if (!(other instanceof TabUtil)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"        TabUtil that \u003d (TabUtil) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"        return tabInfoList.equals(that.tabInfoList)","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"                \u0026\u0026 Objects.equals(selectedTabInfo.get(), that.selectedTabInfo.get());","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"hansstanley":65}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import javafx.beans.property.ReadOnlyObjectProperty;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"import javafx.beans.property.ReadOnlyObjectWrapper;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    private final ReadOnlyObjectWrapper\u003cPerson\u003e observableSelectedPerson \u003d new ReadOnlyObjectWrapper\u003c\u003e(null);","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"        setPersons(newData.getData());","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"igezt"},"content":"     * Finds the person with given {@code name}.","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"igezt"},"content":"    public Person getPersonWithName(String name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"igezt"},"content":"        return this.persons.getPersonWithName(name);","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"igezt"},"content":"     * Finds the person with given {@code name}.","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"igezt"},"content":"    public boolean hasPersonWithName(String name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"igezt"},"content":"        return this.persons.hasPersonWithName(name);","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"hansstanley"},"content":"    public ReadOnlyObjectProperty\u003cPerson\u003e getSelectedPerson() {","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"hansstanley"},"content":"        return observableSelectedPerson.getReadOnlyProperty();","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"rachtan27"},"content":"    public void setSelectedPerson(Person person) {","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"rachtan27"},"content":"        observableSelectedPerson.set(person);","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"igezt"},"content":"    public ObservableList\u003cPerson\u003e getData() {","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hansstanley":4,"igezt":15,"-":118,"rachtan27":7}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import javafx.beans.property.ReadOnlyObjectProperty;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.ui.tab.TabInfo;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.ui.tab.TabUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"     * Gets the given person with name of {@code name}.","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"igezt"},"content":"     * Person with name of {@code target} must exist in the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"    Person getPersonWithName(String name);","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"     * Checks if the Person with name of {@code name} exists in the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"    boolean hasPersonWithName(String name);","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"    /** Checks if {@code p} is a part of the taggedPerson set of event at {@code index}. */","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"nicljr"},"content":"    boolean isPersonTaggedToEvent(Index index, Person p);","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":107,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"igezt"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"igezt"},"content":"    Path getUserDataFilePath();","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"igezt"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"igezt"},"content":"    void setUserDataFilePath(Path userDataFilePath);","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"igezt"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"igezt"},"content":"    void setUserData(ReadOnlyUserData userData);","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":123,"author":{"gitId":"igezt"},"content":"    /** Returns the UserData */","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"igezt"},"content":"    ReadOnlyUserData getUserData();","lastModifiedDate":"2023-03-07"},{"lineNumber":125,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"igezt"},"content":"    /** Sets the user in UserData */","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"igezt"},"content":"    void setUser(User user);","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"igezt"},"content":"    /** Checks if {@code event} exists in UserData */","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"igezt"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"igezt"},"content":"    /** Adds {@code event} to the event list */","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"igezt"},"content":"    void addEvent(Event event);","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"igezt"},"content":"    /** Deletes {@code event} to the event list */","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"igezt"},"content":"    void deleteEvent(Event event);","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"igezt"},"content":"    /** Gets list of all events */","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"igezt"},"content":"    ObservableList\u003cEvent\u003e getEvents();","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"igezt"},"content":"    /** Gets the event at {@code index}. */","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"igezt"},"content":"    Event getEvent(Index index);","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":144,"author":{"gitId":"igezt"},"content":"    /** Sets the {@code oldEvent} to {@code newEvent}. */","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"igezt"},"content":"    void setEvent(Event oldEvent, Event newEvent);","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"igezt"},"content":"    /** Tags {@code taggingPerson} to {@code Event}. */","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"igezt"},"content":"    void tagPersonToEvent(Index eventIndex, Person taggingPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"igezt"},"content":"    /** Untags {@code taggingPerson} from {@code Event}. */","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"igezt"},"content":"    void untagPersonToEvent(Index eventIndex, Person taggingPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"igezt"},"content":"    /** Edits person for all events that contain {@code personToEdit} to {@code editedPerson}. */","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"igezt"},"content":"    void editPersonForAllEvents(Person personToEdit, Person editedPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":156,"author":{"gitId":"igezt"},"content":"    /** Checks if {@code index} is a valid tab index. */","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"hansstanley"},"content":"    boolean isValidTabIndex(Index index);","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"igezt"},"content":"    /** Gets the TabUtil object */","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"hansstanley"},"content":"    TabUtil getTabUtil();","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"igezt"},"content":"    /** Gets the selected tab */","lastModifiedDate":"2023-03-27"},{"lineNumber":163,"author":{"gitId":"hansstanley"},"content":"    ReadOnlyObjectProperty\u003cTabInfo\u003e getSelectedTab();","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"igezt"},"content":"    /** Sets the tab to the one specified in {@code index} */","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"hansstanley"},"content":"    void setSelectedTab(Index index);","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":168,"author":{"gitId":"hansstanley"},"content":"    /** Gets the selected {@code Person} */","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"rachtan27"},"content":"    ReadOnlyObjectProperty\u003cPerson\u003e getSelectedPerson();","lastModifiedDate":"2023-03-20"},{"lineNumber":170,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"hansstanley"},"content":"    /** Sets the selected person to {@code person} */","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"hansstanley"},"content":"    void setSelectedPerson(Person person);","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"igezt"},"content":"    /** Updates all events to its next earlier occurences. */","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"igezt"},"content":"    void updateAllDateTimes();","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"hansstanley":17,"nicljr":2,"igezt":67,"-":87,"rachtan27":3}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import javafx.beans.property.ReadOnlyObjectProperty;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.ui.tab.TabInfo;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.ui.tab.TabType;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.ui.tab.TabUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"    private final UserData userData;","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"    private final TabUtil tabUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"     * Initializes a ModelManager with the given {@code addressBook}, {@code userPrefs}, and {@code userData}.","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, ReadOnlyUserData userData) {","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"        this.userData \u003d new UserData(userData);","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"        this.filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getData());","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"        this.tabUtil \u003d new TabUtil(TabType.getAll());","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"        this(new AddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"    public Path getUserDataFilePath() {","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"        return this.userPrefs.getUserDataFilePath();","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"    public void setUserDataFilePath(Path userDataFilePath) {","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"        requireNonNull(userDataFilePath);","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"        this.userPrefs.setUserDataFilePath(userDataFilePath);","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":121,"author":{"gitId":"igezt"},"content":"        this.addressBook.removePerson(target);","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"igezt"},"content":"        this.userData.deletePersonFromAllEvents(target);","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":134,"author":{"gitId":"igezt"},"content":"        this.editPersonForAllEvents(target, editedPerson);","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":138,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"rachtan27"},"content":"    public ReadOnlyObjectProperty\u003cPerson\u003e getSelectedPerson() {","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"rachtan27"},"content":"        return addressBook.getSelectedPerson();","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"hansstanley"},"content":"    public void setSelectedPerson(Person person) {","lastModifiedDate":"2023-03-30"},{"lineNumber":145,"author":{"gitId":"hansstanley"},"content":"        addressBook.setSelectedPerson(person);","lastModifiedDate":"2023-03-30"},{"lineNumber":146,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"igezt"},"content":"    public Person getPersonWithName(String name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"igezt"},"content":"        return this.addressBook.getPersonWithName(name);","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"igezt"},"content":"    public boolean hasPersonWithName(String name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"igezt"},"content":"        return this.addressBook.hasPersonWithName(name);","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":156,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"igezt"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserData \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":158,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":159,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":160,"author":{"gitId":"igezt"},"content":"    public void setUserData(ReadOnlyUserData userData) {","lastModifiedDate":"2023-03-07"},{"lineNumber":161,"author":{"gitId":"igezt"},"content":"        this.userData.resetData(userData);","lastModifiedDate":"2023-03-07"},{"lineNumber":162,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":163,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":164,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":165,"author":{"gitId":"igezt"},"content":"    public ReadOnlyUserData getUserData() {","lastModifiedDate":"2023-03-07"},{"lineNumber":166,"author":{"gitId":"igezt"},"content":"        return this.userData;","lastModifiedDate":"2023-03-07"},{"lineNumber":167,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":168,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":169,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":170,"author":{"gitId":"igezt"},"content":"    public void setUser(User user) {","lastModifiedDate":"2023-03-07"},{"lineNumber":171,"author":{"gitId":"igezt"},"content":"        this.userData.setUser(user);","lastModifiedDate":"2023-03-07"},{"lineNumber":172,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":173,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":174,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":175,"author":{"gitId":"igezt"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":176,"author":{"gitId":"igezt"},"content":"        return this.userData.hasEvent(event);","lastModifiedDate":"2023-03-17"},{"lineNumber":177,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":178,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":179,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":180,"author":{"gitId":"igezt"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":181,"author":{"gitId":"igezt"},"content":"        this.userData.addEvent(event);","lastModifiedDate":"2023-03-17"},{"lineNumber":182,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":183,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":184,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"igezt"},"content":"    public void deleteEvent(Event event) {","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"igezt"},"content":"        this.userData.deleteEvent(event);","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":190,"author":{"gitId":"igezt"},"content":"    public ObservableList\u003cEvent\u003e getEvents() {","lastModifiedDate":"2023-03-17"},{"lineNumber":191,"author":{"gitId":"igezt"},"content":"        return this.userData.getData().getValue().getEvents().asUnmodifiableObservableList();","lastModifiedDate":"2023-03-17"},{"lineNumber":192,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":193,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":194,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"igezt"},"content":"    public Event getEvent(Index index) {","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"igezt"},"content":"        return this.userData.getEvent(index);","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":198,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":199,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":200,"author":{"gitId":"igezt"},"content":"    public void setEvent(Event oldEvent, Event newEvent) {","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"igezt"},"content":"        this.userData.setEvent(oldEvent, newEvent);","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":204,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"igezt"},"content":"    public void tagPersonToEvent(Index eventIndex, Person taggingPerson) {","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"igezt"},"content":"        this.userData.tagPersonToEvent(eventIndex, taggingPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":207,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":208,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":209,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":210,"author":{"gitId":"igezt"},"content":"    public void untagPersonToEvent(Index eventIndex, Person taggingPerson) {","lastModifiedDate":"2023-03-29"},{"lineNumber":211,"author":{"gitId":"igezt"},"content":"        this.userData.untagPersonToEvent(eventIndex, taggingPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":212,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":213,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":215,"author":{"gitId":"igezt"},"content":"    public void editPersonForAllEvents(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2023-03-29"},{"lineNumber":216,"author":{"gitId":"igezt"},"content":"        this.userData.editPersonForAllEvents(personToEdit, editedPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":217,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":218,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"nicljr"},"content":"    public boolean isPersonTaggedToEvent(Index index, Person p) {","lastModifiedDate":"2023-03-28"},{"lineNumber":221,"author":{"gitId":"nicljr"},"content":"        return this.userData.isPersonTaggedToEvent(index, p);","lastModifiedDate":"2023-03-28"},{"lineNumber":222,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":224,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":225,"author":{"gitId":"igezt"},"content":"    public void updateAllDateTimes() {","lastModifiedDate":"2023-03-30"},{"lineNumber":226,"author":{"gitId":"igezt"},"content":"        this.userData.updateAllDateTimes();","lastModifiedDate":"2023-03-30"},{"lineNumber":227,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":228,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":246,"author":{"gitId":"hansstanley"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Tabs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":247,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":248,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":249,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":250,"author":{"gitId":"hansstanley"},"content":"    public boolean isValidTabIndex(Index index) {","lastModifiedDate":"2023-03-14"},{"lineNumber":251,"author":{"gitId":"hansstanley"},"content":"        return tabUtil.isIndexInRange(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":252,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":253,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"hansstanley"},"content":"    public TabUtil getTabUtil() {","lastModifiedDate":"2023-03-14"},{"lineNumber":256,"author":{"gitId":"hansstanley"},"content":"        return tabUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":257,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":258,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":259,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":260,"author":{"gitId":"hansstanley"},"content":"    public ReadOnlyObjectProperty\u003cTabInfo\u003e getSelectedTab() {","lastModifiedDate":"2023-03-14"},{"lineNumber":261,"author":{"gitId":"hansstanley"},"content":"        return tabUtil.getSelectedTab();","lastModifiedDate":"2023-03-14"},{"lineNumber":262,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":263,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":264,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":265,"author":{"gitId":"hansstanley"},"content":"    public void setSelectedTab(Index index) {","lastModifiedDate":"2023-03-14"},{"lineNumber":266,"author":{"gitId":"hansstanley"},"content":"        tabUtil.setSelectedTab(index);","lastModifiedDate":"2023-03-14"},{"lineNumber":267,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":268,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":285,"author":{"gitId":"hansstanley"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2023-03-14"},{"lineNumber":286,"author":{"gitId":"hansstanley"},"content":"                \u0026\u0026 tabUtil.equals(other.tabUtil);","lastModifiedDate":"2023-03-14"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":288,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hansstanley":37,"nicljr":5,"igezt":97,"-":142,"rachtan27":7}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.ReadOnlyData;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"public interface ReadOnlyAddressBook extends ReadOnlyData {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    ObservableList\u003cPerson\u003e getData();","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"igezt":3,"-":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import javafx.beans.property.ReadOnlyObjectProperty;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.ReadOnlyData;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":" * Unmodifiable view of user data.","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"public interface ReadOnlyUserData extends ReadOnlyData {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"     * Returns an unmodifiable view of the user\u0027s data.","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"     * The only item in the array is the user.","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    ReadOnlyObjectProperty\u003cUser\u003e getData();","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"igezt":18}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    private Path userDataFilePath \u003d Paths.get(\"data\", \"userdata.json\");","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"    public Path getUserDataFilePath() {","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"        return this.userDataFilePath;","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"    public void setUserDataFilePath(Path userDataFilePath) {","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"        requireNonNull(userDataFilePath);","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"        this.userDataFilePath \u003d userDataFilePath;","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"igezt":10,"-":87}},{"path":"src/main/java/seedu/address/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.fields.DateTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.fields.Description;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.fields.Recurrence;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":" * Represents an Event in the Calendar.","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"public abstract class Event {","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    protected final Description description;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    protected final DateTime startDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    protected final DateTime endDateTime;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    protected final Recurrence recurrence;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    protected Set\u003cPerson\u003e taggedPeople \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"     * One Time Events will be handled by a None Recurrence Enum.","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    public Event(Description description, DateTime startDateTime, DateTime endDateTime, Recurrence recurrence,","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"                 Set\u003cPerson\u003e taggedPeople) {","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"        requireAllNonNull(description, startDateTime, endDateTime, recurrence, taggedPeople);","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"        this.recurrence \u003d recurrence;","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        this.taggedPeople.addAll(taggedPeople);","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"    public Description getDescription() {","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"        return description;","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"    public DateTime getStartDateTime() {","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"        return startDateTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"    public DateTime getEndDateTime() {","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"        return endDateTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"    public Recurrence getRecurrence() {","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"        return recurrence;","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"     * Returns a copy of the event where all the dates and times of the event","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"     * are updated to reflect the next earliest occurrence.","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"    public Event updateDateTime() {","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"        Event event \u003d this.copy();","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"        if (!this.recurrence.isRecurring()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"            return event;","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"        ChronoUnit timeUnit \u003d event.getRecurrence().getIncrementUnit();","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"        while (event.endDateTime.getDateTime().isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"            event.startDateTime.plus(timeUnit);","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"            event.endDateTime.plus(timeUnit);","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"        return event;","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"     * Creates a copy of this event, with the Person {@code p} removed.","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"    public Event deleteTaggedPerson(Person p) {","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"        Set\u003cPerson\u003e taggedPeople \u003d new HashSet\u003c\u003e(this.taggedPeople);","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"        taggedPeople.removeIf(p1 -\u003e p1.equals(p));","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"        Description description \u003d this.getDescription();","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"        DateTime startDateTime \u003d this.getStartDateTime();","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"        DateTime endDateTime \u003d this.getEndDateTime();","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"        Recurrence recurrence \u003d this.getRecurrence();","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"        if (recurrence.isRecurring()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"            return new RecurringEvent(description, startDateTime, endDateTime, recurrence, taggedPeople);","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"igezt"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"            return new OneTimeEvent(description, startDateTime, endDateTime, taggedPeople);","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"     * Creates a copy of this event, with the {@code personToEdit} removed and the {@code editedPerson} added in.","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"    public Event editTaggedPerson(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"hansstanley"},"content":"        Set\u003cPerson\u003e taggedPeople \u003d this.taggedPeople.stream()","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"hansstanley"},"content":"                .map(person -\u003e person.equals(personToEdit) ? editedPerson : person)","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"hansstanley"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"        Description description \u003d this.getDescription();","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"igezt"},"content":"        DateTime startDateTime \u003d this.getStartDateTime();","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"        DateTime endDateTime \u003d this.getEndDateTime();","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"igezt"},"content":"        Recurrence recurrence \u003d this.getRecurrence();","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"igezt"},"content":"        if (recurrence.isRecurring()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"igezt"},"content":"            return new RecurringEvent(description, startDateTime, endDateTime, recurrence, taggedPeople);","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"igezt"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"igezt"},"content":"            return new OneTimeEvent(description, startDateTime, endDateTime, taggedPeople);","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"igezt"},"content":"     * Returns true if there is a person in the addressbook that is equal to the person {@code p}.","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"igezt"},"content":"    public boolean hasTaggedPerson(Person p) {","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"igezt"},"content":"        for (Person p2: this.taggedPeople) {","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"igezt"},"content":"            if (p.equals(p2)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"igezt"},"content":"                return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"igezt"},"content":"        return false;","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"igezt"},"content":"    public Set\u003cPerson\u003e getTaggedPeople() {","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"igezt"},"content":"        return this.taggedPeople;","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"igezt"},"content":"    //Check if this is a recurring event.","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"nicljr"},"content":"    public boolean isRecurring() {","lastModifiedDate":"2023-03-05"},{"lineNumber":129,"author":{"gitId":"nicljr"},"content":"        return recurrence.isRecurring();","lastModifiedDate":"2023-03-05"},{"lineNumber":130,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":131,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":132,"author":{"gitId":"hansstanley"},"content":"    public DateTime getEffectiveStartDateTime() {","lastModifiedDate":"2023-03-19"},{"lineNumber":133,"author":{"gitId":"hansstanley"},"content":"        return startDateTime;","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"hansstanley"},"content":"    public DateTime getEffectiveEndDateTime() {","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"hansstanley"},"content":"        return endDateTime;","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":141,"author":{"gitId":"nicljr"},"content":"     * Returns true if both Events have same Description.","lastModifiedDate":"2023-03-05"},{"lineNumber":142,"author":{"gitId":"nicljr"},"content":"     * This defines a weaker notion of equality between two Events.","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":144,"author":{"gitId":"nicljr"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2023-03-05"},{"lineNumber":145,"author":{"gitId":"nicljr"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2023-03-05"},{"lineNumber":146,"author":{"gitId":"nicljr"},"content":"            return true;","lastModifiedDate":"2023-03-05"},{"lineNumber":147,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":148,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":149,"author":{"gitId":"nicljr"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2023-03-05"},{"lineNumber":150,"author":{"gitId":"nicljr"},"content":"                \u0026\u0026 otherEvent.getDescription().equals(getDescription());","lastModifiedDate":"2023-03-05"},{"lineNumber":151,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":152,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":153,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":154,"author":{"gitId":"igezt"},"content":"     * Returns a copy of this Event object.","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"igezt"},"content":"    public Event copy() {","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"igezt"},"content":"        Description description \u003d this.getDescription();","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"igezt"},"content":"        DateTime startDateTime \u003d this.getStartDateTime();","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"igezt"},"content":"        DateTime endDateTime \u003d this.getEndDateTime();","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"igezt"},"content":"        Recurrence recurrence \u003d this.getRecurrence();","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"igezt"},"content":"        Set\u003cPerson\u003e people \u003d this.getTaggedPeople();","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"igezt"},"content":"        if (recurrence.isRecurring()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"igezt"},"content":"            return new RecurringEvent(description, startDateTime, endDateTime, recurrence, people);","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"igezt"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"igezt"},"content":"            return new OneTimeEvent(description, startDateTime, endDateTime, people);","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"nicljr"},"content":"     * Returns true if both Events have same Description, and data fields.","lastModifiedDate":"2023-03-05"},{"lineNumber":173,"author":{"gitId":"nicljr"},"content":"     * This defines a Stronger notion of equality between two Events.","lastModifiedDate":"2023-03-07"},{"lineNumber":174,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":175,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":176,"author":{"gitId":"nicljr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":177,"author":{"gitId":"nicljr"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-07"},{"lineNumber":178,"author":{"gitId":"nicljr"},"content":"            return true;","lastModifiedDate":"2023-03-05"},{"lineNumber":179,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":180,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":181,"author":{"gitId":"nicljr"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":182,"author":{"gitId":"nicljr"},"content":"            return false;","lastModifiedDate":"2023-03-07"},{"lineNumber":183,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":184,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":185,"author":{"gitId":"nicljr"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2023-03-07"},{"lineNumber":186,"author":{"gitId":"nicljr"},"content":"        return otherEvent.getDescription().equals(getDescription())","lastModifiedDate":"2023-03-07"},{"lineNumber":187,"author":{"gitId":"nicljr"},"content":"                \u0026\u0026 otherEvent.getStartDateTime().equals(getStartDateTime())","lastModifiedDate":"2023-03-05"},{"lineNumber":188,"author":{"gitId":"nicljr"},"content":"                \u0026\u0026 otherEvent.getEndDateTime().equals(getEndDateTime())","lastModifiedDate":"2023-03-05"},{"lineNumber":189,"author":{"gitId":"nicljr"},"content":"                \u0026\u0026 otherEvent.getRecurrence().equals(getRecurrence());","lastModifiedDate":"2023-03-05"},{"lineNumber":190,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":191,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"igezt"},"content":"    public String toString() {","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"igezt"},"content":"        StringBuilder str \u003d new StringBuilder(","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"igezt"},"content":"                this.description + \"; \" + this.startDateTime + \"; \" + this.endDateTime + \"; \" + this.recurrence);","lastModifiedDate":"2023-03-27"},{"lineNumber":196,"author":{"gitId":"igezt"},"content":"        for (Person p: taggedPeople) {","lastModifiedDate":"2023-03-27"},{"lineNumber":197,"author":{"gitId":"igezt"},"content":"            str.append(p.getName());","lastModifiedDate":"2023-03-27"},{"lineNumber":198,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"igezt"},"content":"        return str.toString();","lastModifiedDate":"2023-03-27"},{"lineNumber":200,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":201,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"hansstanley":14,"nicljr":78,"igezt":109}},{"path":"src/main/java/seedu/address/model/event/OneTimeEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.fields.DateTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.fields.Description;","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.fields.Recurrence;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":" * Creates a One Time Event for Calendar.","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"public class OneTimeEvent extends Event {","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    public OneTimeEvent(Description description, DateTime startDateTime,","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"                        DateTime endDateTime, Set\u003cPerson\u003e taggedPeople) {","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"        super(description, startDateTime, endDateTime, new Recurrence(\"none\"), taggedPeople);","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nicljr":14,"igezt":5}},{"path":"src/main/java/seedu/address/model/event/RecurringEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.fields.DateTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.fields.Description;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.fields.Recurrence;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":" * Creates a Recurring Event for the Calendar.","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"public class RecurringEvent extends Event {","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"    public RecurringEvent(Description description, DateTime startDateTime,","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"                          DateTime endDateTime, Recurrence recurrence, Set\u003cPerson\u003e taggedPeople) {","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"        super(description, startDateTime, endDateTime, recurrence, taggedPeople);","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"     * Returns an effective start {@code DateTime} that ensures the end {@code DateTime}","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"     * is after the present.","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    public DateTime getEffectiveStartDateTime() {","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"        long minutesElapsed \u003d DateTime.getIntervalDuration(getStartDateTime(), getEndDateTime(), ChronoUnit.MINUTES);","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"        DateTime effectiveEnd \u003d getEffectiveEndDateTime();","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"        return new DateTime(effectiveEnd.getDateTime().minusMinutes(minutesElapsed));","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"     * Returns an effective end {@code DateTime} that is after the present.","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"    public DateTime getEffectiveEndDateTime() {","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"        LocalDateTime current \u003d getEndDateTime().getDateTime();","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"        while (current.isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"            current \u003d current.plus(1, getRecurrence().getIncrementUnit());","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"        return new DateTime(current);","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"hansstanley":26,"nicljr":14,"igezt":4}},{"path":"src/main/java/seedu/address/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.model.event;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"import java.util.List;","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":" * A list of events that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":" * An event is considered unique by comparing using {@code Event#isSameEvent(Event)}. As such, adding and updating of","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":" * events uses Event#isSameEvent(Event) for equality to ensure that the event being added or updated is","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":" * unique in terms of identity in the UniqueEventList. However, the removal of an event uses Event#equals(Object)","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":" * to ensure that the event with exactly the same fields will be removed.","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":" *","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":" * @see Event#isSameEvent(Event)","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"     * Returns true if the list contains an equivalent event as the given argument.","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"     * Adds an event to the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"     * The event must not already exist in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":57,"author":{"gitId":"nicljr"},"content":"     * Removes the equivalent event from the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"     * The event must exist in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":59,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2023-03-05"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-05"},{"lineNumber":62,"author":{"gitId":"nicljr"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":63,"author":{"gitId":"nicljr"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2023-03-05"},{"lineNumber":64,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"nicljr"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"nicljr"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"nicljr"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"nicljr"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"nicljr"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"nicljr"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"        internalList.setAll(events);","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"    public Event getEvent(Index index) {","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"        int zeroBasedIndex \u003d index.getZeroBased();","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"hansstanley"},"content":"        if (zeroBasedIndex \u003e this.internalList.size() - 1) {","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"hansstanley"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"        return this.internalList.get(zeroBasedIndex);","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"    public void setEvent(Event oldEvent, Event newEvent) {","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"        this.internalList.remove(oldEvent);","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"        this.internalList.add(newEvent);","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"igezt"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"igezt"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"igezt"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"igezt"},"content":"                    return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"igezt"},"content":"                }","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"igezt"},"content":"        return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"igezt"},"content":"     * Removes person from all events in the event list.","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"igezt"},"content":"    public void deletePersonFromAllEvents(Person target) {","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"igezt"},"content":"        ArrayList\u003cEvent\u003e toRemove \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"igezt"},"content":"        ArrayList\u003cEvent\u003e toAdd \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"igezt"},"content":"        for (Event e: this.internalList) {","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"igezt"},"content":"            if (e.hasTaggedPerson(target)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"igezt"},"content":"                Event newEvent \u003d e.deleteTaggedPerson(target);","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"igezt"},"content":"                toRemove.add(e);","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"igezt"},"content":"                toAdd.add(newEvent);","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"igezt"},"content":"        this.internalList.removeAll(toRemove);","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"igezt"},"content":"        this.internalList.addAll(toAdd);","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"igezt"},"content":"     * Edits events that have {@code personToEdit} tagged to the {@code editedPerson}.","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"igezt"},"content":"    public void editPersonForAllEvents(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"igezt"},"content":"        ArrayList\u003cEvent\u003e toRemove \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"igezt"},"content":"        ArrayList\u003cEvent\u003e toAdd \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"igezt"},"content":"        for (Event e: this.internalList) {","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"igezt"},"content":"            if (e.hasTaggedPerson(personToEdit)) {","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"igezt"},"content":"                Event newEvent \u003d e.editTaggedPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"igezt"},"content":"                toRemove.add(e);","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"igezt"},"content":"                toAdd.add(newEvent);","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"igezt"},"content":"        this.internalList.removeAll(toRemove);","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"igezt"},"content":"        this.internalList.addAll(toAdd);","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":144,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"nicljr"},"content":"     * Checks if a person is tagged to an event.","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"nicljr"},"content":"    public boolean isPersonTaggedToEvent(Index index, Person p) {","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"igezt"},"content":"        requireAllNonNull(index, p);","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"igezt"},"content":"        int zeroBasedIndex \u003d index.getZeroBased();","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"igezt"},"content":"        if (zeroBasedIndex \u003e this.internalList.size() - 1 || zeroBasedIndex \u003c 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"igezt"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":156,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"nicljr"},"content":"        Event eventToTagged \u003d this.internalList.get(zeroBasedIndex);","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":159,"author":{"gitId":"nicljr"},"content":"        return eventToTagged.hasTaggedPerson(p);","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":162,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":163,"author":{"gitId":"igezt"},"content":"     * Tags the given Person {@code taggingPerson} to the event at {@code index}.","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"igezt"},"content":"    public void tagPersonToEvent(Index index, Person taggingPerson) {","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"igezt"},"content":"        Event event \u003d this.getEvent(index);","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"igezt"},"content":"        Event copy \u003d event.copy();","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"igezt"},"content":"        copy.getTaggedPeople().add(taggingPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"igezt"},"content":"        this.internalList.remove(event);","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"igezt"},"content":"        this.internalList.add(copy);","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"igezt"},"content":"     * Untags the given Person {@code taggingPerson} from the event at {@code index}.","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"igezt"},"content":"    public void untagPersonToEvent(Index index, Person taggingPerson) {","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"igezt"},"content":"        Event event \u003d this.getEvent(index);","lastModifiedDate":"2023-03-29"},{"lineNumber":178,"author":{"gitId":"igezt"},"content":"        Event copy \u003d event.copy();","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"igezt"},"content":"        copy.getTaggedPeople().removeIf(p -\u003e p.equals(taggingPerson));","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"igezt"},"content":"        this.internalList.remove(event);","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"igezt"},"content":"        this.internalList.add(copy);","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"igezt"},"content":"     * Updates all events to their next earliest occurence.","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"igezt"},"content":"    public void updateAllDateTimes() {","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"hansstanley"},"content":"        List\u003cEvent\u003e eventsReplacements \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":189,"author":{"gitId":"hansstanley"},"content":"        for (Event event : this.internalList) {","lastModifiedDate":"2023-03-31"},{"lineNumber":190,"author":{"gitId":"hansstanley"},"content":"            eventsReplacements.add(event.updateDateTime());","lastModifiedDate":"2023-03-31"},{"lineNumber":191,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"igezt"},"content":"        this.internalList.clear();","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"igezt"},"content":"        this.internalList.addAll(eventsReplacements);","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":197,"author":{"gitId":"nicljr"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-05"},{"lineNumber":198,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":199,"author":{"gitId":"nicljr"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-05"},{"lineNumber":200,"author":{"gitId":"nicljr"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-05"},{"lineNumber":201,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":202,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":203,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":204,"author":{"gitId":"nicljr"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2023-03-05"},{"lineNumber":205,"author":{"gitId":"nicljr"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-05"},{"lineNumber":206,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":207,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":208,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":209,"author":{"gitId":"nicljr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":210,"author":{"gitId":"nicljr"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-05"},{"lineNumber":211,"author":{"gitId":"nicljr"},"content":"                || (other instanceof UniqueEventList // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":212,"author":{"gitId":"nicljr"},"content":"                \u0026\u0026 internalList.equals(((UniqueEventList) other).internalList));","lastModifiedDate":"2023-03-05"},{"lineNumber":213,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":214,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":215,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":216,"author":{"gitId":"nicljr"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-05"},{"lineNumber":217,"author":{"gitId":"nicljr"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-05"},{"lineNumber":218,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":219,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"hansstanley":6,"nicljr":107,"igezt":106}},{"path":"src/main/java/seedu/address/model/event/enums/Interval.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.model.event.enums;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.event.fields.Recurrence;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":" * Contains list of Intervals to be specified in the Calendar.","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"public enum Interval {","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"    NONE(Recurrence.NONE_CASE),","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    DAILY(Recurrence.DAILY_CASE),","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    WEEKLY(Recurrence.WEEKLY_CASE),","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    MONTHLY(Recurrence.MONTHLY_CASE),","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    YEARLY(Recurrence.YEARLY_CASE);","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    private static final String NONE_STRING \u003d \"one-time\";","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    private final String value;","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"    Interval(String value) {","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"    public String getValue() {","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"        return value;","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"    public String toString() {","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"        if (this \u003d\u003d Interval.NONE) {","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"            return NONE_STRING;","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"        return value;","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"hansstanley":21,"nicljr":17}},{"path":"src/main/java/seedu/address/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":" * identity).","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"        super(\"Operation would result in duplicate events\");","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nicljr":11}},{"path":"src/main/java/seedu/address/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.model.event.exceptions;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":" * Signals that the operation is unable to find the specified event.","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"public class EventNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"nicljr":6}},{"path":"src/main/java/seedu/address/model/event/fields/DateTime.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.model.event.fields;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"nicljr"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"nicljr"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":" * Represents an Event\u0027s phone number in the Calendar.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDateTime(String)}","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"public class DateTime {","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"            \"Date and Time must be specified! \"","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"                    + \"The following format must be adhered: YYYY-MM-DD HHMM e.g. 2023-03-23 1200!\";","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"     * Creates a {@code DateTime} with the given {@code LocalDateTime}.","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"    public DateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"        Objects.requireNonNull(dateTime);","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"     * Creates a {@code DateTime} with the given {@code dateTime} string.","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"     * @param dateTime String of the pattern {@code yyyy-MM-dd HHmm}.","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"    public DateTime(String dateTime) {","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"        this(LocalDateTime.parse(dateTime, FORMATTER));","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"        return this.dateTime;","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"     * Returns true if the given {@code duration} follows the pattern {@code yyyy-MM-dd HHmm}.","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"    public static boolean isValidDateTime(String duration) {","lastModifiedDate":"2023-03-05"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"        try {","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"            LocalDateTime.parse(duration, FORMATTER);","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"            return true;","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"        } catch (DateTimeParseException | NullPointerException e) {","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"            return false;","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"    public static boolean isValidInterval(DateTime startDateTime, DateTime endDateTime) {","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"        return startDateTime.getDateTime().isBefore(endDateTime.getDateTime());","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"    public static long getIntervalDuration(DateTime startDateTime, DateTime endDateTime, ChronoUnit unit) {","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"        return startDateTime.getDateTime().until(endDateTime.getDateTime(), unit);","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"     * Increments {@code dateTime} by 1 unit of {@code incrementalUnit}.","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"    public void plus(ChronoUnit incrementalUnit) {","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"        this.dateTime \u003d this.dateTime.plus(1, incrementalUnit);","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"    public String toString(DateTimeFormatter formatter) {","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"        return dateTime.format(formatter);","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"hansstanley"},"content":"    public String toString() {","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"        return dateTime.format(FORMATTER);","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"hansstanley"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"hansstanley"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"hansstanley"},"content":"            return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"hansstanley"},"content":"        if (!(other instanceof DateTime)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"hansstanley"},"content":"            return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"hansstanley"},"content":"        return dateTime.equals(((DateTime) other).dateTime);","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"hansstanley":48,"nicljr":33,"igezt":8}},{"path":"src/main/java/seedu/address/model/event/fields/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.model.event.fields;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":" * Represents an Events\u0027s Description in the Calendar.","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"public class Description {","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"nicljr"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"            \"Description should not be blank\";","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"    public final String description;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"     * Creates a {@code Description}.","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"    public Description(String description) {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"        requireNonNull(description);","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"    public String getDescription() {","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"        return this.description;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"     * @return true if {@code description} is not blank.","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"    public static boolean isValidDescription(String description) {","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"        return !description.isBlank();","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    public String toString() {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"        return this.description;","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"hansstanley":11,"nicljr":23,"igezt":5}},{"path":"src/main/java/seedu/address/model/event/fields/Recurrence.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"nicljr"},"content":"package seedu.address.model.event.fields;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import java.util.List;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"nicljr"},"content":"import java.util.Locale;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.event.enums.Interval;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"nicljr"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"nicljr"},"content":" * Represents an Events\u0027s Recurrence in the address book.","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRecurrence(String)}","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"nicljr"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"nicljr"},"content":"public class Recurrence {","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Interval must be either: \"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"nicljr"},"content":"            + \"Daily, Weekly, Monthly, Yearly or None\";","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"    public static final String NONE_CASE \u003d \"none\";","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"nicljr"},"content":"    public static final String DAILY_CASE \u003d \"daily\";","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"nicljr"},"content":"    public static final String WEEKLY_CASE \u003d \"weekly\";","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"nicljr"},"content":"    public static final String MONTHLY_CASE \u003d \"monthly\";","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"nicljr"},"content":"    public static final String YEARLY_CASE \u003d \"yearly\";","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"nicljr"},"content":"    public final Interval interval;","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"nicljr"},"content":"     * Constructs a {@code Recurrence}.","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"     * @param interval A valid name.","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"    public Recurrence(String interval) {","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"        switch (interval.toLowerCase(Locale.ROOT)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"        case NONE_CASE:","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"nicljr"},"content":"            this.interval \u003d Interval.NONE;","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"nicljr"},"content":"            break;","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"nicljr"},"content":"        case DAILY_CASE:","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"            this.interval \u003d Interval.DAILY;","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"            break;","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"        case WEEKLY_CASE:","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"            this.interval \u003d Interval.WEEKLY;","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"            break;","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"nicljr"},"content":"        case MONTHLY_CASE:","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"            this.interval \u003d Interval.MONTHLY;","lastModifiedDate":"2023-03-05"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"            break;","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"        case YEARLY_CASE:","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"            this.interval \u003d Interval.YEARLY;","lastModifiedDate":"2023-03-05"},{"lineNumber":48,"author":{"gitId":"nicljr"},"content":"            break;","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"        default:","lastModifiedDate":"2023-03-05"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"            throw new IllegalArgumentException(Recurrence.MESSAGE_CONSTRAINTS + \"; Received: \" + interval);","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"    public ChronoUnit getIncrementUnit() {","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"        switch (interval) {","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"        case DAILY:","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"            return ChronoUnit.DAYS;","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"        case WEEKLY:","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"            return ChronoUnit.WEEKS;","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"        case MONTHLY:","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"            return ChronoUnit.MONTHS;","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"        case YEARLY:","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"            return ChronoUnit.YEARS;","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"        case NONE:","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"        default:","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"            return ChronoUnit.MINUTES;","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"nicljr"},"content":"     * Returns if a given string is a valid Recurrence.","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"    public static boolean isValidRecurrence(String trimmedInterval) {","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"nicljr"},"content":"        String lowerCaseInterval \u003d trimmedInterval.toLowerCase(Locale.ROOT);","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"        return List.of(NONE_CASE, DAILY_CASE, WEEKLY_CASE, MONTHLY_CASE, YEARLY_CASE)","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"                .contains(lowerCaseInterval);","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"nicljr"},"content":"    public boolean isRecurring() {","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"nicljr"},"content":"        return !interval.equals(Interval.NONE);","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":82,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":83,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":84,"author":{"gitId":"nicljr"},"content":"    public String toString() {","lastModifiedDate":"2023-03-05"},{"lineNumber":85,"author":{"gitId":"nicljr"},"content":"        return interval.toString();","lastModifiedDate":"2023-03-05"},{"lineNumber":86,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":87,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":88,"author":{"gitId":"nicljr"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":89,"author":{"gitId":"nicljr"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":90,"author":{"gitId":"nicljr"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-05"},{"lineNumber":91,"author":{"gitId":"nicljr"},"content":"                || (other instanceof Recurrence // instanceof handles nulls","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"nicljr"},"content":"                \u0026\u0026 this.interval.equals(((Recurrence) other).interval)); // state check","lastModifiedDate":"2023-03-05"},{"lineNumber":93,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":94,"author":{"gitId":"nicljr"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"hansstanley":18,"nicljr":71,"igezt":5}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Address;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.CommunicationChannel;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.Faculty;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.person.fields.Favorite;","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Field;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Gender;","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Major;","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Modules;","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Race;","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.SuperField;","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Tags;","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.NusMod;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"    private final Gender gender;","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"    private final Major major;","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"    private final Modules modules;","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    private final Race race;","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"    private final Tags tags;","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"    private final CommunicationChannel comms;","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"    private final Favorite favorite;","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"rachtan27"},"content":"    private final Faculty faculty;","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"     * Creates a {@code Person} with all fields nullable except {@code name}.","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Gender gender,","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"                  Major major, Modules modules, Race race, Tags tags, CommunicationChannel comms,","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"rachtan27"},"content":"                  Favorite favorite, Faculty faculty) {","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2023-03-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-05"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"        this.phone \u003d Optional.ofNullable(phone).orElse(new Phone(\"\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"        this.email \u003d Optional.ofNullable(email).orElse(new Email(\"\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"        this.address \u003d Optional.ofNullable(address).orElse(new Address(\"\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"        this.gender \u003d Optional.ofNullable(gender).orElse(new Gender(\"\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"        this.major \u003d Optional.ofNullable(major).orElse(new Major(\"\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"        this.modules \u003d Optional.ofNullable(modules).orElse(new Modules(new HashSet\u003c\u003e()));","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"        this.race \u003d Optional.ofNullable(race).orElse(new Race(\"\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"        this.tags \u003d Optional.ofNullable(tags).orElse(new Tags(new HashSet\u003c\u003e()));","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"        this.comms \u003d Optional.ofNullable(comms).orElse(new CommunicationChannel(\"\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"        this.favorite \u003d Optional.ofNullable(favorite).orElse(new Favorite(false));","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"        this.faculty \u003d Optional.ofNullable(faculty).orElse(new Faculty(\"\"));","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"     * Creates a {@code Person} with all fields blank except {@code name}.","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"hansstanley"},"content":"    public Person(Name name) {","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"        this(name, null, null, null, null, null, null, null, null, null, null, null);","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"        return this.name;","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"        return this.phone;","lastModifiedDate":"2023-03-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"        return this.email;","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"        return this.address;","lastModifiedDate":"2023-03-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":92,"author":{"gitId":"hansstanley"},"content":"    public Favorite getFavorite() {","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"hansstanley"},"content":"        return this.favorite;","lastModifiedDate":"2023-03-31"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"    public Gender getGender() {","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"        return this.gender;","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"igezt"},"content":"    public Major getMajor() {","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"        return this.major;","lastModifiedDate":"2023-03-23"},{"lineNumber":102,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"igezt"},"content":"    public Race getRace() {","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"igezt"},"content":"        return this.race;","lastModifiedDate":"2023-03-23"},{"lineNumber":106,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"igezt"},"content":"    public CommunicationChannel getComms() {","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"igezt"},"content":"        return this.comms;","lastModifiedDate":"2023-03-23"},{"lineNumber":110,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"igezt"},"content":"    public Modules getModules() {","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"igezt"},"content":"        return this.modules;","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"rachtan27"},"content":"    public Faculty getFaculty() {","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"igezt"},"content":"        return this.faculty;","lastModifiedDate":"2023-03-23"},{"lineNumber":118,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":119,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"igezt"},"content":"    public Tags getTags() {","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"igezt"},"content":"        return this.tags;","lastModifiedDate":"2023-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":125,"author":{"gitId":"igezt"},"content":"     * Returns an immutable NusMod set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":128,"author":{"gitId":"igezt"},"content":"    public Set\u003cNusMod\u003e getSetOfMods() {","lastModifiedDate":"2023-03-23"},{"lineNumber":129,"author":{"gitId":"igezt"},"content":"        return this.modules.getValues();","lastModifiedDate":"2023-03-23"},{"lineNumber":130,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":131,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":133,"author":{"gitId":"igezt"},"content":"     * Returns an immutable Tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":136,"author":{"gitId":"igezt"},"content":"    public Set\u003cTag\u003e getSetOfTags() {","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"igezt"},"content":"        return this.tags.getValues();","lastModifiedDate":"2023-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"hansstanley"},"content":"    public Person setFavorite(boolean isFavorite) {","lastModifiedDate":"2023-03-31"},{"lineNumber":154,"author":{"gitId":"hansstanley"},"content":"        return new Person(name, phone, email, address, gender, major, modules,","lastModifiedDate":"2023-03-31"},{"lineNumber":155,"author":{"gitId":"hansstanley"},"content":"                race, tags, comms, new Favorite(isFavorite), faculty);","lastModifiedDate":"2023-03-31"},{"lineNumber":156,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":157,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":158,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":159,"author":{"gitId":"igezt"},"content":"     * Returns true if for all the fields specified,","lastModifiedDate":"2023-03-26"},{"lineNumber":160,"author":{"gitId":"igezt"},"content":"     * there exists a keyword linked to that field, where that person\u0027s field contains that keyword,","lastModifiedDate":"2023-03-26"},{"lineNumber":161,"author":{"gitId":"igezt"},"content":"     * returns false otherwise.","lastModifiedDate":"2023-03-26"},{"lineNumber":162,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":163,"author":{"gitId":"igezt"},"content":"     * For the more mathematically inclined,","lastModifiedDate":"2023-03-26"},{"lineNumber":164,"author":{"gitId":"igezt"},"content":"     * {∀field ∈ Fields: ∃keyword ∈ field.keywords s.t. Person.field.contains(keyword) \u003d\u003d true}.","lastModifiedDate":"2023-03-26"},{"lineNumber":165,"author":{"gitId":"igezt"},"content":"     * where Fields is the fields specified in the FindCommand, field.keywords is the keywords associated with that","lastModifiedDate":"2023-03-26"},{"lineNumber":166,"author":{"gitId":"igezt"},"content":"     * field and Person.field is the field we are testing against.","lastModifiedDate":"2023-03-26"},{"lineNumber":167,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":168,"author":{"gitId":"igezt"},"content":"    public boolean contains(HashMap\u003cPredicateKey, Set\u003cString\u003e\u003e keywords) {","lastModifiedDate":"2023-03-25"},{"lineNumber":169,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":170,"author":{"gitId":"igezt"},"content":"        HashMap\u003cPredicateKey, Field\u003e fieldMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":171,"author":{"gitId":"igezt"},"content":"        fieldMap.put(PredicateKey.NAME, this.name);","lastModifiedDate":"2023-03-25"},{"lineNumber":172,"author":{"gitId":"igezt"},"content":"        fieldMap.put(PredicateKey.ADDRESS, this.address);","lastModifiedDate":"2023-03-25"},{"lineNumber":173,"author":{"gitId":"igezt"},"content":"        fieldMap.put(PredicateKey.COMMS, this.comms);","lastModifiedDate":"2023-03-25"},{"lineNumber":174,"author":{"gitId":"igezt"},"content":"        fieldMap.put(PredicateKey.EMAIL, this.email);","lastModifiedDate":"2023-03-25"},{"lineNumber":175,"author":{"gitId":"igezt"},"content":"        fieldMap.put(PredicateKey.GENDER, this.gender);","lastModifiedDate":"2023-03-25"},{"lineNumber":176,"author":{"gitId":"igezt"},"content":"        fieldMap.put(PredicateKey.MAJOR, this.major);","lastModifiedDate":"2023-03-25"},{"lineNumber":177,"author":{"gitId":"igezt"},"content":"        fieldMap.put(PredicateKey.PHONE, this.phone);","lastModifiedDate":"2023-03-25"},{"lineNumber":178,"author":{"gitId":"igezt"},"content":"        fieldMap.put(PredicateKey.RACE, this.race);","lastModifiedDate":"2023-03-25"},{"lineNumber":179,"author":{"gitId":"igezt"},"content":"        fieldMap.put(PredicateKey.FACULTY, this.faculty);","lastModifiedDate":"2023-03-25"},{"lineNumber":180,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":181,"author":{"gitId":"igezt"},"content":"        for (PredicateKey key : keywords.keySet()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":182,"author":{"gitId":"igezt"},"content":"            Field field \u003d fieldMap.get(key);","lastModifiedDate":"2023-03-25"},{"lineNumber":183,"author":{"gitId":"igezt"},"content":"            if (field \u003d\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":184,"author":{"gitId":"igezt"},"content":"                continue;","lastModifiedDate":"2023-03-25"},{"lineNumber":185,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":186,"author":{"gitId":"igezt"},"content":"            if (!field.contains(keywords.get(key))) {","lastModifiedDate":"2023-03-25"},{"lineNumber":187,"author":{"gitId":"igezt"},"content":"                return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":188,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":189,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":191,"author":{"gitId":"igezt"},"content":"        HashMap\u003cPredicateKey, SuperField\u003c? extends Field\u003e\u003e superFieldMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":192,"author":{"gitId":"igezt"},"content":"        superFieldMap.put(PredicateKey.TAG, this.tags);","lastModifiedDate":"2023-03-25"},{"lineNumber":193,"author":{"gitId":"igezt"},"content":"        superFieldMap.put(PredicateKey.MODULES, this.modules);","lastModifiedDate":"2023-03-25"},{"lineNumber":194,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":195,"author":{"gitId":"igezt"},"content":"        for (PredicateKey key : keywords.keySet()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":196,"author":{"gitId":"igezt"},"content":"            SuperField\u003c? extends Field\u003e field \u003d superFieldMap.get(key);","lastModifiedDate":"2023-03-25"},{"lineNumber":197,"author":{"gitId":"igezt"},"content":"            if (field \u003d\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":198,"author":{"gitId":"igezt"},"content":"                continue;","lastModifiedDate":"2023-03-25"},{"lineNumber":199,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":200,"author":{"gitId":"igezt"},"content":"            if (!field.contains(keywords.get(key))) {","lastModifiedDate":"2023-03-25"},{"lineNumber":201,"author":{"gitId":"igezt"},"content":"                return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":202,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":203,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":204,"author":{"gitId":"igezt"},"content":"        return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":205,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":206,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":222,"author":{"gitId":"igezt"},"content":"        return otherPerson.getName().equals(this.getName())","lastModifiedDate":"2023-03-16"},{"lineNumber":223,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(this.getPhone())","lastModifiedDate":"2023-03-16"},{"lineNumber":224,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(this.getEmail())","lastModifiedDate":"2023-03-16"},{"lineNumber":225,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(this.getAddress())","lastModifiedDate":"2023-03-16"},{"lineNumber":226,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 otherPerson.getSetOfTags().equals(this.getSetOfTags())","lastModifiedDate":"2023-03-23"},{"lineNumber":227,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 otherPerson.getGender().equals(this.getGender())","lastModifiedDate":"2023-03-16"},{"lineNumber":228,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 otherPerson.getMajor().equals(this.getMajor())","lastModifiedDate":"2023-03-16"},{"lineNumber":229,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 otherPerson.getRace().equals(this.getRace())","lastModifiedDate":"2023-03-16"},{"lineNumber":230,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 otherPerson.getModules().equals(this.getModules())","lastModifiedDate":"2023-03-16"},{"lineNumber":231,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 otherPerson.getComms().equals(this.getComms());","lastModifiedDate":"2023-03-16"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":237,"author":{"gitId":"igezt"},"content":"        return Objects.hash(name, phone, email, address, gender, major,","lastModifiedDate":"2023-03-28"},{"lineNumber":238,"author":{"gitId":"hansstanley"},"content":"                modules, race, comms, faculty, tags, favorite);","lastModifiedDate":"2023-03-31"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":243,"author":{"gitId":"igezt"},"content":"        return getName() + \"; Phone: \" + getPhone() + \"; Email: \" + getEmail() + \"; Address: \" + getAddress()","lastModifiedDate":"2023-03-28"},{"lineNumber":244,"author":{"gitId":"igezt"},"content":"                + \"; Gender: \" + this.getGender() + \"; Major: \" + this.getMajor() + \"; Race: \" + this.getRace()","lastModifiedDate":"2023-03-28"},{"lineNumber":245,"author":{"gitId":"igezt"},"content":"                + \"; Preferred Communication: \" + this.getComms() + \"; Faculty: \" + this.getFaculty() + \"; Tags: \"","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"hansstanley"},"content":"                + this.getTags() + \"; Modules: \" + this.getModules() + \"; Favorite: \" + getFavorite();","lastModifiedDate":"2023-03-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hansstanley":25,"nicljr":4,"igezt":128,"-":87,"rachtan27":4}},{"path":"src/main/java/seedu/address/model/person/PersonContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"public class PersonContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    public static final String NAMEKEY \u003d \"name\";","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    public static final String ADDRESSKEY \u003d \"address\";","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    public static final String COMMSKEY \u003d \"comms\";","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    public static final String EMAILKEY \u003d \"email\";","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    public static final String GENDERKEY \u003d \"gender\";","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    public static final String MAJORKEY \u003d \"major\";","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    public static final String MODULESKEY \u003d \"mods\";","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    public static final String PHONEKEY \u003d \"phone\";","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    public static final String RACEKEY \u003d \"race\";","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    public static final String TAGKEY \u003d \"tag\";","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    public static final String FACULTYKEY \u003d \"faculty\";","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    private final HashMap\u003cPredicateKey, Set\u003cString\u003e\u003e keywords;","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    public PersonContainsKeywordsPredicate() {","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"        this.keywords \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"     * Stores the field in the predicate.","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    public PersonContainsKeywordsPredicate withField(PredicateKey key, Collection\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        this.keywords.putIfAbsent(key, new HashSet\u003c\u003e());","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"        this.keywords.get(key).addAll(keywords);","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"        return this;","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"        return person.contains(this.keywords);","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"                || (other instanceof PersonContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 keywords.equals(((PersonContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"igezt":55}},{"path":"src/main/java/seedu/address/model/person/PredicateKey.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMS;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FACULTY;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MAJOR;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULES;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RACE;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":" * Keys for the PersonContainsKeyPredicate hashmap.","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"public enum PredicateKey {","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    NAME(PREFIX_NAME),","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    ADDRESS(PREFIX_ADDRESS),","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    COMMS(PREFIX_COMMS),","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    EMAIL(PREFIX_EMAIL),","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    GENDER(PREFIX_GENDER),","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"    MAJOR(PREFIX_MAJOR),","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    MODULES(PREFIX_MODULES),","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    PHONE(PREFIX_PHONE),","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"    RACE(PREFIX_RACE),","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    TAG(PREFIX_TAG),","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    FACULTY(PREFIX_FACULTY);","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"    public final Prefix prefix;","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"    PredicateKey(Prefix prefixName) {","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"        this.prefix \u003d prefixName;","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"igezt":38}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"            /* Attempting to change the target person to","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"             * another person who already exists. */","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"igezt"},"content":"     * Returns if the UniquePersonList has a Person with that name.","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":144,"author":{"gitId":"igezt"},"content":"    public boolean hasPersonWithName(String name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"igezt"},"content":"        for (Person p: this.internalList) {","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"igezt"},"content":"            if (Objects.equals(p.getName().value, name)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"igezt"},"content":"                return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"igezt"},"content":"        return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"igezt"},"content":"     * Returns person from UniquePersonList which has {@code name} as its name.","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":156,"author":{"gitId":"igezt"},"content":"    public Person getPersonWithName(String name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"igezt"},"content":"        for (Person p: this.internalList) {","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"igezt"},"content":"            if (Objects.equals(p.getName().value, name)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":159,"author":{"gitId":"igezt"},"content":"                return p;","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":162,"author":{"gitId":"igezt"},"content":"        throw new PersonNotFoundException();","lastModifiedDate":"2023-03-27"},{"lineNumber":163,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hansstanley":2,"igezt":25,"-":137}},{"path":"src/main/java/seedu/address/model/person/fields/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"public class Address extends Field {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses must not be blank\";","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"        super(address);","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"        if (Objects.equals(test, \"\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"            return true;","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hansstanley":1,"igezt":8,"-":39}},{"path":"src/main/java/seedu/address/model/person/fields/CommunicationChannel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":" * Represents a Person\u0027s preferred communication channel in the address book.","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"public class CommunicationChannel extends Field {","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Communication Channel can take any value\";","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"    public CommunicationChannel(String nameOfCommunicationChannel) {","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"        super(nameOfCommunicationChannel);","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    public static boolean isValidComms(String trimmedComms) {","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"        return true;","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"                || (other instanceof CommunicationChannel // instanceof handles nulls","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 this.value","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"                .equals(((CommunicationChannel) other).value)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"igezt":25}},{"path":"src/main/java/seedu/address/model/person/fields/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"public class Email extends Field {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be either blank or follows \"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"            + \"the format local-part@domain \"","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"        super(email);","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"        if (Objects.equals(test, \"\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"            return true;","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"igezt":10,"-":53}},{"path":"src/main/java/seedu/address/model/person/fields/Faculty.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":" * Represents a Person\u0027s faculty in the address book.","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"public class Faculty extends Field {","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"            \"Faculty should only contain alphabets and spaces\";","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[A-Za-z\\\\s]+$\";","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"     * Constructs a {@code Faculty}.","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"     * @param faculty A valid Faculty.","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"    public Faculty(String faculty) {","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        super(faculty);","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"        checkArgument(isValidFaculty(faculty), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"     * Returns if a given string is a valid faculty.","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"    public static boolean isValidFaculty(String trimmedFaculty) {","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"        if (Objects.equals(trimmedFaculty, \"\")) {","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"            return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"        return trimmedFaculty.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"                || (other instanceof Faculty // instanceof handles nulls","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 this.value.equals(((Faculty) other).value)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"hansstanley":1,"igezt":4,"rachtan27":35}},{"path":"src/main/java/seedu/address/model/person/fields/Favorite.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":" * Represents a person\u0027s favorite status in the address book.","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"public class Favorite {","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Favorite can only be T or F\";","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    private static final String VALUE_TRUE \u003d \"T\";","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    private static final String VALUE_FALSE \u003d \"F\";","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    public final boolean isFavorite;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"     * Constructs a {@code Favorite}.","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"     * @param isFavorite If favorite is true or not.","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    public Favorite(boolean isFavorite) {","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"        this.isFavorite \u003d isFavorite;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"nicljr"},"content":"     * Constructs a {@code Favorite} based on message input","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"nicljr"},"content":"     *","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"nicljr"},"content":"     * @param favoriteMessage If message is \"T\" or \"F\"","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"nicljr"},"content":"    public Favorite(String favoriteMessage) {","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"        requireNonNull(favoriteMessage);","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"        checkArgument(isValidFavorite(favoriteMessage), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"        this.isFavorite \u003d VALUE_TRUE.equals(favoriteMessage);","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":39,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":40,"author":{"gitId":"nicljr"},"content":"    public boolean getFavoriteStatus() {","lastModifiedDate":"2023-03-04"},{"lineNumber":41,"author":{"gitId":"nicljr"},"content":"        return isFavorite;","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"     * Checks if a string is a valid favorite tag","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"    public static boolean isValidFavorite(String trimmedFavorite) {","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"        return List.of(\"\", VALUE_TRUE, VALUE_FALSE).contains(trimmedFavorite);","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"    /**","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"nicljr"},"content":"     * Returns a String Representation of Favorite.","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"     */","lastModifiedDate":"2023-03-04"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"nicljr"},"content":"    public String toString() {","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"nicljr"},"content":"        if (isFavorite) {","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"            return VALUE_TRUE;","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"nicljr"},"content":"        } else {","lastModifiedDate":"2023-03-04"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"            return VALUE_FALSE;","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"                || (other instanceof Favorite // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 this.isFavorite \u003d\u003d (((Favorite) other).isFavorite)); // state check","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"hansstanley":11,"nicljr":20,"igezt":34,"rachtan27":4}},{"path":"src/main/java/seedu/address/model/person/fields/Field.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":" * Represents a mono-field class that all fields in Person should inherit from.","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"public abstract class Field {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    public final String value;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"     * Default field constructor.","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    public Field(String value) {","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"     * Returns true if at least one of the strings contained in test","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"     * is contained within the value of the field.","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"     * For the more mathematically inclined,","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"     * {∃t ∈ test s.t. this.value.toUpperCase().contains(t.toUpperCase()) \u003d\u003d true}.","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"    public boolean contains(Set\u003cString\u003e test) {","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"        for (String t: test) {","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"            if (t.isEmpty()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"                continue;","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"            if (this.value.toUpperCase().contains(t.toUpperCase())) {","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"                return true;","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        return false;","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    public String toString() {","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"        return this.value;","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"        return this.value.hashCode();","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"igezt":50}},{"path":"src/main/java/seedu/address/model/person/fields/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":" * Represents a Person\u0027s gender in the address book.","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"public class Gender extends Field {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Gender must be alphanumeric\";","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9]+$\";","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"     * Constructs a {@code Gender}.","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"     * @param gender A valid name.","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    public Gender(String gender) {","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"        super(gender);","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"     * Returns if a given string is a valid gender.","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    public static boolean isValidGender(String trimmedGender) {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"        if (Objects.equals(trimmedGender, \"\")) {","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"            return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"        return trimmedGender.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"                || (other instanceof Gender // instanceof handles nulls","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 this.value.equals(((Gender) other).value)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"hansstanley":1,"igezt":39,"rachtan27":2}},{"path":"src/main/java/seedu/address/model/person/fields/Major.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":" * Represents a Person\u0027s major in the address book.","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"public class Major extends Field {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"            \"Major should only contain alphabets and spaces\";","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[A-Za-z\\\\s]+$\";","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"     * Constructs a {@code Major}.","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"     * @param majorName A valid major name.","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    public Major(String majorName) {","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"        super(majorName);","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"        checkArgument(isValidMajor(majorName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"     * Returns if a given string is a valid major name.","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"    public static boolean isValidMajor(String trimmedMajor) {","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"        if (Objects.equals(trimmedMajor, \"\")) {","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"            return true;","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"        return trimmedMajor.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"                || (other instanceof Major // instanceof handles nulls","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 this.value.equals(((Major) other).value)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"hansstanley":1,"igezt":24,"rachtan27":19}},{"path":"src/main/java/seedu/address/model/person/fields/Modules.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.NusMod;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":" * Represents a Person\u0027s modules taken in the address book.","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"public class Modules extends SuperField\u003cNusMod\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Modules should be a part of NUS\u0027 NUSMods list\";","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    public Modules(Set\u003cNusMod\u003e mods) {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"        super(mods);","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    //todo: Update modules to only be able to include mods that are a part of NUSMods.","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"Shuggan"},"content":"     * Checks whether all the mods are valid NUSMods","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"Shuggan"},"content":"     * @param mods the set of modules to be checked","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"Shuggan"},"content":"     * @return false if there is at least one invalid module","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"Shuggan"},"content":"    public static boolean isValidModules(Set\u003cNusMod\u003e mods) {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"Shuggan"},"content":"        for (NusMod mod : mods) {","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"            if (!NusMod.isModuleCodeValid(mod.value)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Shuggan"},"content":"                return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"Shuggan"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"        return true;","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"                || (other instanceof Modules // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"                // Uses Java\u0027s definition of equality between Sets.","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 this.values.equals(((Modules) other).values)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"hansstanley":1,"Shuggan":11,"igezt":30}},{"path":"src/main/java/seedu/address/model/person/fields/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"public class Name extends Field {","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"        super(name);","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 this.value.equals(((Name) other).value)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"igezt":4,"-":39,"rachtan27":1}},{"path":"src/main/java/seedu/address/model/person/fields/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"public class Phone extends Field {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"        super(phone);","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"        if (Objects.equals(test, \"\")) {","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"            return true;","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"igezt":8,"-":36}},{"path":"src/main/java/seedu/address/model/person/fields/Race.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":" * Represents a Person\u0027s race in the address book.","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"public class Race extends Field {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Race should only contain alphabets and spaces\";","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[A-Za-z\\\\s]+$\";","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"     * Constructs a {@code Race}.","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"     * @param race A valid race.","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    public Race(String race) {","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"        super(race);","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"        checkArgument(isValidRace(race), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"     * Returns if a given string is a valid race.","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    public static boolean isValidRace(String trimmedRace) {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"        if (Objects.equals(trimmedRace, \"\")) {","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"            return true;","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"        return trimmedRace.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"                || (other instanceof Race // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 this.value.equals(((Race) other).value)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"igezt":25,"rachtan27":17}},{"path":"src/main/java/seedu/address/model/person/fields/SuperField.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":" * Represents a field that hold multiple of a mono-field.","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":" * @param \u003cT\u003e The type of the mono-field","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"public abstract class SuperField\u003cT extends Field\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    public final Set\u003cT\u003e values;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    public SuperField(Set\u003cT\u003e values) {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"        this.values \u003d values;","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    public Set\u003cT\u003e getValues() {","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"        return Collections.unmodifiableSet(this.values);","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"     * Returns true if at least one of the strings contained in test","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"     * is contained within the value of the field.","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"     * For the more mathematically inclined,","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"     * {∃v ∈ values s.t. v.contains(test) \u003d\u003d true}.","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    public boolean contains(Set\u003cString\u003e test) {","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"        for (T value: values) {","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"            if (value.contains(test)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"                return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"        return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"        return Objects.hash(this.values);","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"    public String toString() {","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"        StringBuilder str \u003d new StringBuilder();","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"        if (!this.values.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"            for (Field value: values) {","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"                str.append(value).append(\", \");","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"        return str.toString();","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"igezt":52}},{"path":"src/main/java/seedu/address/model/person/fields/Tags.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.Tag;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":" * Represents a Person\u0027s tags in the address book.","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"public class Tags extends SuperField\u003cTag\u003e {","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric and space\";","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    public Tags(Set\u003cTag\u003e values) {","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"        super(values);","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"     * Checks whether all the tags are valid Tag","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"     * @param tags the set of Tag to be checked","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"     * @return false if there is at least one invalid tag","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    public static boolean isValidTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"        for (Tag tag : tags) {","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"            if (!Tag.isValidTagName(tag.value)) {","lastModifiedDate":"2023-03-23"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"                return false;","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"        return true;","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"                || (other instanceof Tags // instanceof handles nulls","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"                // Uses Java\u0027s definition of equality between Sets.","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 this.values.equals(((Tags) other).values)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"igezt":40}},{"path":"src/main/java/seedu/address/model/person/fields/enums/CommunicationChannels.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person.fields.enums;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":" * Current popular communication channels that can be used in the address book.","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"public enum CommunicationChannels {","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"    Telegram,","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"    Whatsapp,","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"    Slack,","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"    SMS,","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"    Instagram,","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    Facebook","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"igezt":13}},{"path":"src/main/java/seedu/address/model/person/fields/enums/Genders.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person.fields.enums;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":" * Contains list of general genders to be specified in the address book.","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"public enum Genders {","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"    MALE(\"male\"),","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"    FEMALE(\"female\"),","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"    DNS(\"dns\");","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"    private final String gender;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    Genders(String gender) {","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    public String toString() {","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"        return this.gender;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"igezt":23}},{"path":"src/main/java/seedu/address/model/person/fields/enums/Majors.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person.fields.enums;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":" * Majors of students in NUS","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":" * todo: Sync with NUSMods.","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"public enum Majors {","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"igezt":10}},{"path":"src/main/java/seedu/address/model/person/fields/subfields/NusMod.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person.fields.subfields;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"Shuggan"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"Shuggan"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Shuggan"},"content":"import java.io.InputStreamReader;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import java.io.Reader;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Field;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":" * Represents a Person\u0027s singular mod taken in the address book.","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"public class NusMod extends Field {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Module codes should exist in NUS\u0027 NUSMods list\";","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"    public static final String MODULES_FILE_PATH \u003d \"/data/modules.json\";","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    private static final Set\u003cString\u003e MODULE_MAP \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"Shuggan"},"content":"    static {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"        InputStream inputStream \u003d Objects.requireNonNull(NusMod.class.getResourceAsStream(MODULES_FILE_PATH));","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        try (Reader reader \u003d new InputStreamReader(inputStream)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"            BufferedReader bufferedReader \u003d new BufferedReader(reader);","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"            bufferedReader.lines().forEach(line -\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"                if (line \u003d\u003d null || !line.contains(\"moduleCode\")) {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"                    // not a line with a module code","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"                    return;","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"                }","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"                String[] parts \u003d line.split(\":\");","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"                if (parts.length \u003c 2) {","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"                    return;","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"                }","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"                String moduleCode \u003d parts[1].replace(\"\\\"\", \"\").trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"                if (moduleCode.isBlank()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"                    return;","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"Shuggan"},"content":"                }","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"                MODULE_MAP.add(moduleCode);","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"            });","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"            bufferedReader.close();","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"        } catch (IOException | NullPointerException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Shuggan"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"Shuggan"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"Shuggan"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"     * Constructs an {@code NusMod}.","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"     * @param modsString A valid module code.","lastModifiedDate":"2023-03-23"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"    public NusMod(String modsString) {","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"        super(modsString);","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"        checkArgument(isModuleCodeValid(modsString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"Shuggan"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"     * Checks whether a module is a valid NUSMod by comparing with the module list data.","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Shuggan"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"     * @param moduleCode The module code to be checked.","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"     * @return true if the module exists in NUSMods;","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"     *         false otherwise.","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Shuggan"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"    public static boolean isModuleCodeValid(String moduleCode) {","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"        return MODULE_MAP.contains(moduleCode);","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"        return this \u003d\u003d other","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"                || (other instanceof NusMod","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 this.value.equals(((NusMod) other).value));","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"hansstanley":34,"Shuggan":13,"igezt":32}},{"path":"src/main/java/seedu/address/model/person/fields/subfields/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.person.fields.subfields;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Field;","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"public class Tag extends Field {","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric and space\";","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    private static final int MAX_VALUE_LENGTH \u003d 16;","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"        super(tagName);","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"     * Truncates the value of this {@code Tag} if it is longer than {@code MAX_VALUE_LENGTH \u003d 16}.","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"     * Since most English words are shorter than 10 letters and {@code Tag}s are single words,","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"     * a 16-letter limit should be enough.","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"     * This method is used in displaying the {@code Tag}s in a {@code FlowPane}","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"     * so that tags that are too long do not overflow the width of the parent.","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"    public String truncateValue() {","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"        return value.length() \u003e MAX_VALUE_LENGTH","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"                ? value.substring(0, MAX_VALUE_LENGTH) + \"...\"","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"                : value;","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 this.value.equals(((Tag) other).value)); // state check","lastModifiedDate":"2023-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"        return \u0027[\u0027 + this.value + \u0027]\u0027;","lastModifiedDate":"2023-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"hansstanley":15,"igezt":10,"-":37}},{"path":"src/main/java/seedu/address/model/user/User.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.user;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import java.util.List;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import seedu.address.model.event.UniqueEventList;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Address;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.CommunicationChannel;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.Faculty;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Favorite;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Gender;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Major;","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Modules;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Race;","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Tags;","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":" * Store all relevant information about the User.","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"public class User extends Person {","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    private static final String DEFAULT_NAME \u003d \"Neo\";","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"     * Creates a new User by copying the fields of the Person passed in","lastModifiedDate":"2023-03-23"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    public User(Person user, UniqueEventList events) {","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"        super(user.getName(),","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"                user.getPhone(),","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"                user.getEmail(),","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"                user.getAddress(),","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"                user.getGender(),","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"                user.getMajor(),","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"                user.getModules(),","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"                user.getRace(),","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"                user.getTags(),","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"                user.getComms(),","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"                user.getFavorite(),","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"                user.getFaculty());","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"        this.events \u003d events;","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"     * Every field must be present and not null. This constructor accepts a List of events.","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"    public User(Name name, Phone phone, Email email, Address address, Gender gender,","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"                Major major, Modules modules, Race race, Tags tags, CommunicationChannel comms,","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"rachtan27"},"content":"                Favorite favorite, Faculty faculty, List\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"rachtan27"},"content":"        super(name, phone, email, address, gender, major, modules, race, tags, comms, favorite, faculty);","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"        Objects.requireNonNull(events);","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"        this.events \u003d new UniqueEventList();","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"     * Every field must be present and not null. This constructor accepts a UniqueEventList of events.","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"    public User(Name name, Phone phone, Email email, Address address, Gender gender,","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"                Major major, Modules modules, Race race, Tags tags, CommunicationChannel comms,","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"rachtan27"},"content":"                Favorite favorite, Faculty faculty, UniqueEventList events) {","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"rachtan27"},"content":"        super(name, phone, email, address, gender, major, modules, race, tags, comms, favorite, faculty);","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"        Objects.requireNonNull(events);","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"        this.events \u003d events;","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":75,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"     * Constructor for an empty {@code User}.","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"    public User() {","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"hansstanley"},"content":"        super(new Name(DEFAULT_NAME));","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"hansstanley"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"    public boolean hasEvent(Event e) {","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"        return this.events.contains(e);","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"igezt"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"        this.events.add(e);","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"    public void deleteEvent(Event event) {","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"        this.events.remove(event);","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"    public UniqueEventList getEvents() {","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"        return this.events;","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"    public void deletePersonFromAllEvents(Person target) {","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"igezt"},"content":"        this.events.deletePersonFromAllEvents(target);","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"nicljr"},"content":"    public boolean isPersonTaggedToEvent(Index index, Person p) {","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"nicljr"},"content":"        return this.events.isPersonTaggedToEvent(index, p);","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"igezt"},"content":"    public void editPersonForAllEvents(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"igezt"},"content":"        this.events.editPersonForAllEvents(personToEdit, editedPerson);","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"igezt"},"content":"    public Event getEvent(Index index) {","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"igezt"},"content":"        return this.events.getEvent(index);","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"igezt"},"content":"    public void setEvent(Event oldEvent, Event newEvent) {","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"igezt"},"content":"        this.events.setEvent(oldEvent, newEvent);","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"igezt"},"content":"    public void tagPersonToEvent(Index eventIndex, Person taggingPerson) {","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"igezt"},"content":"        this.events.tagPersonToEvent(eventIndex, taggingPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"igezt"},"content":"    public void untagPersonToEvent(Index eventIndex, Person taggingPerson) {","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"igezt"},"content":"        this.events.untagPersonToEvent(eventIndex, taggingPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"igezt"},"content":"    public void updateAllDateTimes() {","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"igezt"},"content":"        this.events.updateAllDateTimes();","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"hansstanley":11,"nicljr":3,"igezt":112,"rachtan27":5}},{"path":"src/main/java/seedu/address/model/user/UserData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.model.user;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import javafx.beans.property.ReadOnlyObjectProperty;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import javafx.beans.property.ReadOnlyObjectWrapper;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import seedu.address.model.ReadOnlyUserData;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":" * Wraps all data at the UserData level","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"public class UserData implements ReadOnlyUserData {","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"    private final ReadOnlyObjectWrapper\u003cUser\u003e user;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    /*","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"     *   among constructors.","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    {","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"        user \u003d new ReadOnlyObjectWrapper\u003c\u003e(new User());","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    public UserData() {","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    public UserData(ReadOnlyUserData toBeCopied) {","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        this();","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"     * Replaces the contents of the user with {@code user}.","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"    public void setUser(User user) {","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"        requireNonNull(user);","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"        this.user.setValue(user);","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"    public void resetData(ReadOnlyUserData newData) {","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"        setUser(newData.getData().getValue());","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"    //// Event methods","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"    public void addEvent(Event e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"        this.user.getValue().addEvent(e);","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"    public void deleteEvent(Event event) {","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"        this.user.getValue().deleteEvent(event);","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"    public boolean hasEvent(Event e) {","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"        return this.user.getValue().hasEvent(e);","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"    public Event getEvent(Index index) {","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"        return this.user.getValue().getEvent(index);","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"    public void setEvent(Event oldEvent, Event newEvent) {","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"        this.user.getValue().setEvent(oldEvent, newEvent);","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"    public void deletePersonFromAllEvents(Person target) {","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"        this.user.getValue().deletePersonFromAllEvents(target);","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"nicljr"},"content":"    public boolean isPersonTaggedToEvent(Index index, Person p) {","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"        return this.user.getValue().isPersonTaggedToEvent(index, p);","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"nicljr"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"    public void editPersonForAllEvents(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"        this.user.getValue().editPersonForAllEvents(personToEdit, editedPerson);","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"    public void tagPersonToEvent(Index event, Person taggingPerson) {","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"        this.user.getValue().tagPersonToEvent(event, taggingPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"    public void untagPersonToEvent(Index event, Person taggingPerson) {","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"igezt"},"content":"        this.user.getValue().untagPersonToEvent(event, taggingPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"igezt"},"content":"    public void updateAllDateTimes() {","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"igezt"},"content":"        this.user.getValue().updateAllDateTimes();","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"igezt"},"content":"    //// util methods","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"igezt"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"igezt"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"igezt"},"content":"                || (other instanceof UserData // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 user.equals(((UserData) other).user));","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"igezt"},"content":"    public String toString() {","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"igezt"},"content":"        return this.user.toString();","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"igezt"},"content":"    public ReadOnlyObjectProperty\u003cUser\u003e getData() {","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"igezt"},"content":"        return this.user.getReadOnlyProperty();","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"igezt"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"igezt"},"content":"        return user.hashCode();","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"hansstanley":1,"nicljr":3,"igezt":126}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Gender;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Major;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Modules;","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Race;","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.NusMod;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"        Set\u003cNusMod\u003e mods \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"        mods.add(new NusMod(\"CS2103T\"));","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"        Gender gender \u003d new Gender(\"Male\");","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"        Major major \u003d new Major(\"Computer Science\");","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"        Modules modules \u003d new Modules(mods);","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"        Race race \u003d new Race(\"Chinese\");","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"        return new Person[]{};","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"igezt":16,"-":35}},{"path":"src/main/java/seedu/address/storage/DataStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":" * Abstract DataStorage class for other data storage classes to inherit from. Currently, not in use as the individual","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":" * data storages have too different behavior to abstract out.","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"public abstract class DataStorage\u003cT extends ReadOnlyData\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    protected Path filePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    public Path getFilePath() {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"        return this.filePath;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    public Optional\u003cT\u003e readData() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"        return this.readData(this.filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    public abstract Optional\u003cT\u003e readData(Path filePath) throws DataConversionException;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"    public void saveData(T data) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"        this.saveData(data, filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    public abstract void saveData(T data, Path filePath) throws IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"igezt":39}},{"path":"src/main/java/seedu/address/storage/ReadOnlyData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import javafx.beans.Observable;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":" * Marker interface for ReadOnlyData types to inherit from.","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"public interface ReadOnlyData {","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"    Observable getData();","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"igezt":10}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import seedu.address.model.ReadOnlyUserData;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.addressbook.AddressBookStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.user.UserDataStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.userpref.UserPrefsStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, UserDataStorage {","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    Optional\u003cReadOnlyUserData\u003e readUserData() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"    Optional\u003cReadOnlyUserData\u003e readUserData(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"    void saveUserData(ReadOnlyUserData addressBook) throws IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"    void saveUserData(ReadOnlyUserData userData, Path filePath) throws IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"igezt":18,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import seedu.address.model.ReadOnlyUserData;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.addressbook.JsonAddressBookStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.user.JsonUserDataStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.userpref.UserPrefsStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    private final JsonAddressBookStorage addressBookStorage;","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    private final JsonUserDataStorage userDataStorage;","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    public StorageManager(JsonAddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"                          JsonUserDataStorage userDataStorage) {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"        this.userDataStorage \u003d userDataStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"        return addressBookStorage.getFilePath();","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"        return readAddressBook(addressBookStorage.getFilePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"        return addressBookStorage.readData(filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"        saveAddressBook(addressBook, addressBookStorage.getFilePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"        addressBookStorage.saveData(addressBook, filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d User Data methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"    public Path getUserDataFilePath() {","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"        return this.userDataStorage.getFilePath();","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"    public Optional\u003cReadOnlyUserData\u003e readUserData() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"        return readUserData(this.userDataStorage.getFilePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"    public Optional\u003cReadOnlyUserData\u003e readUserData(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"igezt"},"content":"        return this.userDataStorage.readData(filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"igezt"},"content":"    public void saveUserData(ReadOnlyUserData userData) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"igezt"},"content":"        saveUserData(userData, this.userDataStorage.getFilePath());","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"igezt"},"content":"    public void saveUserData(ReadOnlyUserData userData, Path filePath) throws IOException {","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"igezt"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"igezt"},"content":"        this.userDataStorage.saveData(userData, filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hansstanley":3,"igezt":39,"-":72}},{"path":"src/main/java/seedu/address/storage/addressbook/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.storage.addressbook;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.ReadOnlyData;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.AddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    Optional\u003c? extends ReadOnlyData\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"igezt":3,"-":43}},{"path":"src/main/java/seedu/address/storage/addressbook/JsonAdaptedNusMod.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.storage.addressbook;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.NusMod;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":" * Jackson-friendly version of {@link NusMod}.","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"public class JsonAdaptedNusMod {","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    private final String modName;","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"     * Constructs a {@code JsonAdaptedNusMod} with the given {@code modName}.","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"    public JsonAdaptedNusMod(String modName) {","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"        this.modName \u003d modName;","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"     * Converts a given {@code NusMod} into this class for Jackson use.","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    public JsonAdaptedNusMod(NusMod source) {","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"        this.modName \u003d source.value;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    @JsonValue","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"    public String getModName() {","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"        return this.modName;","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code NusMod} object.","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"    public NusMod toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"        if (!NusMod.isModuleCodeValid(this.modName)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"            throw new IllegalValueException(NusMod.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"        return new NusMod(this.modName);","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"hansstanley":5,"igezt":42}},{"path":"src/main/java/seedu/address/storage/addressbook/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.storage.addressbook;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.util.List;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Address;","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.CommunicationChannel;","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.Faculty;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"nicljr"},"content":"import seedu.address.model.person.fields.Favorite;","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Gender;","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Major;","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Modules;","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Race;","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Tags;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.NusMod;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"public class JsonAdaptedPerson {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    protected String name;","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    protected String phone;","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"    protected String email;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"    protected String address;","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"    protected String race;","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"    protected String major;","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    protected String gender;","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"    protected String comms;","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"rachtan27"},"content":"    protected String faculty;","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"    protected String isFavorite;","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"    protected final List\u003cJsonAdaptedNusMod\u003e modules \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"    protected final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"                             @JsonProperty(\"race\") String race,","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"                             @JsonProperty(\"major\") String major, @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"                             @JsonProperty(\"comms\") String comms,","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"                             @JsonProperty(\"modules\") List\u003cJsonAdaptedNusMod\u003e modules,","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"nicljr"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2023-03-04"},{"lineNumber":62,"author":{"gitId":"rachtan27"},"content":"                             @JsonProperty(\"favorite\") String isFavorite,","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"rachtan27"},"content":"                             @JsonProperty(\"faculty\") String faculty) {","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"        this.race \u003d race;","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"        this.major \u003d major;","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"        this.comms \u003d comms;","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"nicljr"},"content":"        this.isFavorite \u003d isFavorite;","lastModifiedDate":"2023-03-04"},{"lineNumber":74,"author":{"gitId":"rachtan27"},"content":"        this.faculty \u003d faculty;","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"        if (modules !\u003d null) {","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"            this.modules.addAll(modules);","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"        this.name \u003d source.getName().value;","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"        this.phone \u003d source.getPhone().value;","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"        this.email \u003d source.getEmail().value;","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"        this.address \u003d source.getAddress().value;","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"        this.race \u003d source.getRace().value;","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"        this.major \u003d source.getMajor().value;","lastModifiedDate":"2023-03-23"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"        this.gender \u003d source.getGender().value;","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"        this.comms \u003d source.getComms().value;","lastModifiedDate":"2023-03-23"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"        this.modules.addAll(source.getModules().values.stream()","lastModifiedDate":"2023-03-23"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"                .map(mod -\u003e (new JsonAdaptedNusMod(mod.value)))","lastModifiedDate":"2023-03-23"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"        this.tagged.addAll(source.getSetOfTags().stream()","lastModifiedDate":"2023-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"hansstanley"},"content":"        this.isFavorite \u003d source.getFavorite().toString();","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"igezt"},"content":"        this.faculty \u003d source.getFaculty().value;","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"igezt"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"igezt"},"content":"        if (!Gender.isValidGender(this.gender)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":136,"author":{"gitId":"igezt"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-27"},{"lineNumber":137,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":138,"author":{"gitId":"igezt"},"content":"        final Gender modelGender \u003d new Gender(this.gender);","lastModifiedDate":"2023-02-27"},{"lineNumber":139,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"igezt"},"content":"        if (!Major.isValidMajor(this.major)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":141,"author":{"gitId":"igezt"},"content":"            throw new IllegalValueException(Major.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":143,"author":{"gitId":"igezt"},"content":"        final Major modelMajor \u003d new Major(this.major);","lastModifiedDate":"2023-02-27"},{"lineNumber":144,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":145,"author":{"gitId":"rachtan27"},"content":"        if (!Race.isValidRace(this.race)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":146,"author":{"gitId":"igezt"},"content":"            throw new IllegalValueException(Race.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":148,"author":{"gitId":"igezt"},"content":"        final Race modelRace \u003d new Race(this.race);","lastModifiedDate":"2023-02-27"},{"lineNumber":149,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":150,"author":{"gitId":"nicljr"},"content":"        if (!Favorite.isValidFavorite(isFavorite)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":151,"author":{"gitId":"nicljr"},"content":"            throw new IllegalValueException(Favorite.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":152,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":153,"author":{"gitId":"nicljr"},"content":"        final Favorite favoriteStatus \u003d new Favorite(this.isFavorite);","lastModifiedDate":"2023-03-04"},{"lineNumber":154,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":155,"author":{"gitId":"hansstanley"},"content":"        final Set\u003cNusMod\u003e personMods \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":156,"author":{"gitId":"igezt"},"content":"        for (JsonAdaptedNusMod mod: this.modules) {","lastModifiedDate":"2023-02-27"},{"lineNumber":157,"author":{"gitId":"igezt"},"content":"            personMods.add(mod.toModelType());","lastModifiedDate":"2023-02-27"},{"lineNumber":158,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":159,"author":{"gitId":"hansstanley"},"content":"        final Modules modelModules \u003d new Modules(personMods);","lastModifiedDate":"2023-03-31"},{"lineNumber":160,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":161,"author":{"gitId":"hansstanley"},"content":"        if (!CommunicationChannel.isValidComms(this.comms)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":162,"author":{"gitId":"hansstanley"},"content":"            throw new IllegalValueException(CommunicationChannel.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-31"},{"lineNumber":163,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":164,"author":{"gitId":"hansstanley"},"content":"        final CommunicationChannel modelComms \u003d new CommunicationChannel(this.comms);","lastModifiedDate":"2023-03-31"},{"lineNumber":165,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":166,"author":{"gitId":"rachtan27"},"content":"        if (!Faculty.isValidFaculty(this.faculty)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":167,"author":{"gitId":"rachtan27"},"content":"            throw new IllegalValueException(Faculty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":168,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":169,"author":{"gitId":"rachtan27"},"content":"        final Faculty faculty \u003d new Faculty(this.faculty);","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"hansstanley"},"content":"        final Set\u003cTag\u003e personTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-31"},{"lineNumber":172,"author":{"gitId":"hansstanley"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2023-03-31"},{"lineNumber":173,"author":{"gitId":"hansstanley"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2023-03-31"},{"lineNumber":174,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":175,"author":{"gitId":"hansstanley"},"content":"        final Tags modelTags \u003d new Tags(personTags);","lastModifiedDate":"2023-03-31"},{"lineNumber":176,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":177,"author":{"gitId":"igezt"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelGender, modelMajor,","lastModifiedDate":"2023-02-27"},{"lineNumber":178,"author":{"gitId":"rachtan27"},"content":"                modelModules, modelRace, modelTags, modelComms, favoriteStatus, faculty);","lastModifiedDate":"2023-03-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"hansstanley":13,"nicljr":10,"igezt":76,"-":70,"rachtan27":12}},{"path":"src/main/java/seedu/address/storage/addressbook/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.storage.addressbook;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"public class JsonAdaptedTag {","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"        tagName \u003d source.value;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"igezt":4,"-":44}},{"path":"src/main/java/seedu/address/storage/addressbook/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.storage.addressbook;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.DataStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"public class JsonAddressBookStorage extends DataStorage\u003cReadOnlyAddressBook\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"     * Similar to {@link #readData()}.","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readData(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"        if (jsonAddressBook.isEmpty()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"     * Similar to {@link #saveData(ReadOnlyAddressBook)}.","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"    public void saveData(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"igezt":10,"-":57}},{"path":"src/main/java/seedu/address/storage/addressbook/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.storage.addressbook;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"public class JsonSerializableAddressBook {","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"        persons.addAll(source.getData().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"igezt":3,"-":57}},{"path":"src/main/java/seedu/address/storage/user/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.storage.user;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import seedu.address.model.event.OneTimeEvent;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"import seedu.address.model.event.RecurringEvent;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import seedu.address.model.event.fields.DateTime;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"import seedu.address.model.event.fields.Description;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"import seedu.address.model.event.fields.Recurrence;","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.addressbook.JsonAdaptedPerson;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"@SuppressWarnings(\"checkstyle:OneStatementPerLine\")","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"public class JsonAdaptedEvent {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    private final String description;","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"    private final String startDateTime;","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    private final String endDateTime;","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    private final String recurrence;","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"    private final List\u003cJsonAdaptedPerson\u003e taggedPeople \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"            new ArrayList\u003c\u003e();;","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"description\") String description,","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"                            @JsonProperty(\"startDateTime\") String startDateTime,","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"                            @JsonProperty(\"endDateTime\") String endDateTime,","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"                            @JsonProperty(\"recurrence\") String recurrence,","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"                            @JsonProperty(\"taggedPeople\") List\u003cJsonAdaptedPerson\u003e taggedPeople) {","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"        this.startDateTime \u003d startDateTime;","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"        this.endDateTime \u003d endDateTime;","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"        this.recurrence \u003d recurrence;","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"        if (taggedPeople !\u003d null) {","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"            this.taggedPeople.addAll(taggedPeople);","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"        this.description \u003d source.getDescription().description;","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"        this.startDateTime \u003d source.getStartDateTime().toString();","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"        this.endDateTime \u003d source.getEndDateTime().toString();","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"        this.recurrence \u003d source.getRecurrence().interval.getValue();","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"        if (source.getTaggedPeople() !\u003d null) {","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"            this.taggedPeople.addAll(","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"                    source.getTaggedPeople().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"        if (!Description.isValidDescription(this.description)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"        Description modelDescription \u003d new Description(this.description);","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"        if (!DateTime.isValidDateTime(this.startDateTime)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"            throw new IllegalValueException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"        DateTime modelStartDateTime \u003d new DateTime(this.startDateTime);","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"        if (!DateTime.isValidDateTime(this.endDateTime)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"            throw new IllegalValueException(DateTime.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"        DateTime modelEndDateTime \u003d new DateTime(this.endDateTime);","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"        Set\u003cPerson\u003e taggedPeople \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"        for (JsonAdaptedPerson person: this.taggedPeople) {","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"            taggedPeople.add(person.toModelType());","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"        if (!Recurrence.isValidRecurrence(this.recurrence)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"        Recurrence modelRecurrence \u003d new Recurrence(this.recurrence);","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"igezt"},"content":"        if (this.recurrence.equals(Recurrence.NONE_CASE)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"            return new OneTimeEvent(modelDescription, modelStartDateTime, modelEndDateTime, taggedPeople);","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"igezt"},"content":"        } else {","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"igezt"},"content":"            return new RecurringEvent(modelDescription, modelStartDateTime,","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"igezt"},"content":"                    modelEndDateTime, modelRecurrence, taggedPeople);","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"hansstanley":4,"igezt":104}},{"path":"src/main/java/seedu/address/storage/user/JsonAdaptedUser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.storage.user;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Address;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.CommunicationChannel;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.Faculty;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Favorite;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Gender;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Major;","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Modules;","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Race;","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Tags;","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.NusMod;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.addressbook.JsonAdaptedNusMod;","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.addressbook.JsonAdaptedPerson;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.addressbook.JsonAdaptedTag;","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":" * Jackson-friendly version of {@link User}.","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"public class JsonAdaptedUser extends JsonAdaptedPerson {","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"    public JsonAdaptedUser(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"                            @JsonProperty(\"race\") String race,","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"                            @JsonProperty(\"major\") String major, @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"                            @JsonProperty(\"comms\") String comms,","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"                            @JsonProperty(\"modules\") List\u003cJsonAdaptedNusMod\u003e modules,","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"nicljr"},"content":"                            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"                            @JsonProperty(\"favorite\") String isFavorite,","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"rachtan27"},"content":"                            @JsonProperty(\"faculty\") String faculty,","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"                            @JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"rachtan27"},"content":"        super(name, phone, email, address, race, major, gender, comms, modules, tagged, isFavorite, faculty);","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"        if (events !\u003d null) {","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"            this.events.addAll(events);","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"     * Converts a given {@code User} into this class for Jackson use.","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"    public JsonAdaptedUser(User source) {","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"        super(source);","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"        if (source.getEvents() !\u003d null) {","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"            this.events.addAll(","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"                    source.getEvents().asUnmodifiableObservableList().stream()","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"                    .map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"    public User toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"igezt"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"igezt"},"content":"        if (!Gender.isValidGender(this.gender)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"igezt"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-27"},{"lineNumber":111,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":112,"author":{"gitId":"igezt"},"content":"        final Gender modelGender \u003d new Gender(this.gender);","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":114,"author":{"gitId":"igezt"},"content":"        if (!Major.isValidMajor(this.major)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"igezt"},"content":"            throw new IllegalValueException(Major.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":117,"author":{"gitId":"igezt"},"content":"        final Major modelMajor \u003d new Major(this.major);","lastModifiedDate":"2023-02-27"},{"lineNumber":118,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"igezt"},"content":"        if (!Race.isValidRace(address)) {","lastModifiedDate":"2023-02-27"},{"lineNumber":120,"author":{"gitId":"igezt"},"content":"            throw new IllegalValueException(Race.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-27"},{"lineNumber":121,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":122,"author":{"gitId":"igezt"},"content":"        final Race modelRace \u003d new Race(this.race);","lastModifiedDate":"2023-02-27"},{"lineNumber":123,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"nicljr"},"content":"        if (!Favorite.isValidFavorite(isFavorite)) {","lastModifiedDate":"2023-03-04"},{"lineNumber":125,"author":{"gitId":"nicljr"},"content":"            throw new IllegalValueException(Favorite.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-04"},{"lineNumber":126,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-04"},{"lineNumber":127,"author":{"gitId":"igezt"},"content":"        final Favorite modelFavoriteStatus \u003d new Favorite(this.isFavorite);","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"nicljr"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":129,"author":{"gitId":"igezt"},"content":"        Set\u003cNusMod\u003e personMods \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"igezt"},"content":"        for (JsonAdaptedNusMod mod: this.modules) {","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"igezt"},"content":"            personMods.add(mod.toModelType());","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":133,"author":{"gitId":"igezt"},"content":"        Modules modelModules \u003d new Modules(personMods);","lastModifiedDate":"2023-02-27"},{"lineNumber":134,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":135,"author":{"gitId":"igezt"},"content":"        List\u003cEvent\u003e modelUserEvents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"igezt"},"content":"        for (JsonAdaptedEvent event: this.events) {","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"igezt"},"content":"            modelUserEvents.add(event.toModelType());","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"igezt"},"content":"        CommunicationChannel modelComms \u003d new CommunicationChannel(this.comms);","lastModifiedDate":"2023-02-27"},{"lineNumber":142,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":143,"author":{"gitId":"rachtan27"},"content":"        if (!Faculty.isValidFaculty(faculty)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"rachtan27"},"content":"            throw new IllegalValueException(Faculty.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"rachtan27"},"content":"        final Faculty modelFaculty \u003d new Faculty(faculty);","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"igezt"},"content":"        final Tags modelTags \u003d new Tags(new HashSet\u003c\u003e(personTags));","lastModifiedDate":"2023-03-23"},{"lineNumber":149,"author":{"gitId":"igezt"},"content":"        return new User(modelName, modelPhone, modelEmail, modelAddress, modelGender, modelMajor,","lastModifiedDate":"2023-03-07"},{"lineNumber":150,"author":{"gitId":"rachtan27"},"content":"                modelModules, modelRace, modelTags, modelComms, modelFavoriteStatus, modelFaculty, modelUserEvents);","lastModifiedDate":"2023-03-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"nicljr":5,"igezt":92,"-":46,"rachtan27":9}},{"path":"src/main/java/seedu/address/storage/user/JsonSerializableUserData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.storage.user;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import seedu.address.model.ReadOnlyUserData;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"@JsonRootName(value \u003d \"userdata\")","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"public class JsonSerializableUserData {","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    private final JsonAdaptedUser user;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"    public JsonSerializableUserData(@JsonProperty(\"user\") JsonAdaptedUser user) {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"        this.user \u003d user;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"    public JsonSerializableUserData(ReadOnlyUserData source) {","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"        this.user \u003d new JsonAdaptedUser(source.getData().getValue());","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"    public UserData toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"        UserData userData \u003d new UserData();","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"        userData.setUser(this.user.toModelType());","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"        return userData;","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"igezt":47}},{"path":"src/main/java/seedu/address/storage/user/JsonUserDataStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.storage.user;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"import seedu.address.model.ReadOnlyUserData;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.DataStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":" * A class to access User data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":" * Todo: Abstract out common logic between JsonUserDataStorage and AddressBookStorage.","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"public class JsonUserDataStorage extends DataStorage\u003cReadOnlyUserData\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUserDataStorage.class);","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"    public JsonUserDataStorage(Path filePath) {","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"     * Similar to {@link #readData()}.","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    public Optional\u003cReadOnlyUserData\u003e readData(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"        Optional\u003cJsonSerializableUserData\u003e jsonUserData \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"                filePath, JsonSerializableUserData.class);","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"        if (!jsonUserData.isPresent()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"        try {","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"            return Optional.of(jsonUserData.get().toModelType());","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"     * Similar to {@link #saveData(ReadOnlyUserData)}.","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"    public void saveData(ReadOnlyUserData userData, Path filePath) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"        requireNonNull(userData);","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableUserData(userData), filePath);","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"igezt":67}},{"path":"src/main/java/seedu/address/storage/user/UserDataStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.storage.user;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import seedu.address.model.ReadOnlyUserData;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":" * Represents a storage for {@link seedu.address.model.user.UserData}.","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"public interface UserDataStorage {","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"    Path getUserDataFilePath();","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"     * Returns UserData as a {@link ReadOnlyUserData}.","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    Optional\u003cReadOnlyUserData\u003e readUserData() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"     * @see #getUserDataFilePath()","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    Optional\u003cReadOnlyUserData\u003e readUserData(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"     * Saves the given {@link ReadOnlyUserData} to the storage.","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"     * @param userData cannot be null.","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    void saveUserData(ReadOnlyUserData userData) throws IOException;","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"     * @see #saveUserData(ReadOnlyUserData)","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    void saveUserData(ReadOnlyUserData userData, Path filePath) throws IOException;","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"igezt":43}},{"path":"src/main/java/seedu/address/storage/userpref/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.storage.userpref;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"igezt":1,"-":46}},{"path":"src/main/java/seedu/address/storage/userpref/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.storage.userpref;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a storage for {@link seedu.address.model.UserPrefs}.","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Saves the given {@link seedu.address.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"igezt":1,"-":35}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.DarkModeCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2023-04-01"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.EditUserCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.FavoriteCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.LightModeCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.TabCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.TagEventCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.UnTagEventCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.UnfavoriteCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"    public static final String USER_GUIDE_URL \u003d \"https://ay2223s2-cs2103t-f12-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"    private Label helpMessageUrl;","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"    private VBox commandsContainer;","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"        fillUrl();","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"        fillCommandsSummary();","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":123,"author":{"gitId":"hansstanley"},"content":"        url.putString(USER_GUIDE_URL);","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":126,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"hansstanley"},"content":"    private void fillUrl() {","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"hansstanley"},"content":"        helpMessageUrl.setText(USER_GUIDE_URL);","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"hansstanley"},"content":"    private void fillCommandsSummary() {","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"hansstanley"},"content":"        List\u003cString\u003e helpTexts \u003d List.of(","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"hansstanley"},"content":"                AddCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"hansstanley"},"content":"                AddEventCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"hansstanley"},"content":"                ClearCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"hansstanley"},"content":"                DarkModeCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"hansstanley"},"content":"                DeleteCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"hansstanley"},"content":"                DeleteEventCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"hansstanley"},"content":"                EditContactCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"hansstanley"},"content":"                EditEventCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-04-01"},{"lineNumber":141,"author":{"gitId":"hansstanley"},"content":"                EditUserCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"hansstanley"},"content":"                ExitCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"hansstanley"},"content":"                FavoriteCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"hansstanley"},"content":"                FindCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"hansstanley"},"content":"                HelpCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"hansstanley"},"content":"                LightModeCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"hansstanley"},"content":"                ListCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"hansstanley"},"content":"                SelectCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"hansstanley"},"content":"                TabCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-03-29"},{"lineNumber":150,"author":{"gitId":"hansstanley"},"content":"                TagEventCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"hansstanley"},"content":"                UnfavoriteCommand.MESSAGE_USAGE,","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"hansstanley"},"content":"                UnTagEventCommand.MESSAGE_USAGE","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"hansstanley"},"content":"        );","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"hansstanley"},"content":"        commandsContainer.getChildren().addAll(helpTexts.stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"hansstanley"},"content":"                .map(text -\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"hansstanley"},"content":"                    Label label \u003d new Label(text);","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"hansstanley"},"content":"                    label.setWrapText(true);","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"hansstanley"},"content":"                    return label;","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"hansstanley"},"content":"                })","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"hansstanley"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hansstanley":66,"-":96}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.body.BodyPanel;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"    private static final String THEME_DARK \u003d \"theme-dark\";","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    private static final String THEME_LIGHT \u003d \"theme-light\";","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"    private static final String SELECT_DARK \u003d \"Dark mode\";","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"    private static final String SELECT_LIGHT \u003d \"Light mode\";","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"    private final Stage primaryStage;","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    private final Logic logic;","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"    private BodyPanel bodyPanel;","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"    private boolean isLightMode;","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"    private MenuItem themeToggleItem;","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"    private StackPane bodyPanelPlaceholder;","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"    private VBox mainContainer;","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"hansstanley"},"content":"        toggleTheme(logic.getGuiSettings().isLightMode(), false);","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"rachtan27"},"content":"        bodyPanel \u003d new BodyPanel(logic, resultDisplay);","lastModifiedDate":"2023-03-26"},{"lineNumber":132,"author":{"gitId":"rachtan27"},"content":"        bodyPanelPlaceholder.getChildren().add(bodyPanel.getRoot());","lastModifiedDate":"2023-03-26"},{"lineNumber":133,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"igezt"},"content":"     * Changes the theme of NeoBook to dark mode.","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"igezt"},"content":"    public void handleDarkMode() {","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"igezt"},"content":"        toggleTheme(false, true);","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"igezt"},"content":"     * Changes the theme of NeoBook to light mode.","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"igezt"},"content":"    public void handleLightMode() {","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"igezt"},"content":"        toggleTheme(true, true);","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"hansstanley"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY(), isLightMode);","lastModifiedDate":"2023-03-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":195,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-17"},{"lineNumber":196,"author":{"gitId":"hansstanley"},"content":"    private void handleThemeToggle() {","lastModifiedDate":"2023-03-17"},{"lineNumber":197,"author":{"gitId":"hansstanley"},"content":"        toggleTheme(!isLightMode);","lastModifiedDate":"2023-03-17"},{"lineNumber":198,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":199,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":200,"author":{"gitId":"hansstanley"},"content":"    private void toggleTheme(boolean isLightMode) {","lastModifiedDate":"2023-03-17"},{"lineNumber":201,"author":{"gitId":"hansstanley"},"content":"        toggleTheme(isLightMode, true);","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"hansstanley"},"content":"    private void toggleTheme(boolean isLightMode, boolean isLazy) {","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"hansstanley"},"content":"        if (isLazy \u0026\u0026 this.isLightMode \u003d\u003d isLightMode) {","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"hansstanley"},"content":"            return;","lastModifiedDate":"2023-03-17"},{"lineNumber":207,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":208,"author":{"gitId":"hansstanley"},"content":"        this.isLightMode \u003d isLightMode;","lastModifiedDate":"2023-03-17"},{"lineNumber":209,"author":{"gitId":"hansstanley"},"content":"        mainContainer.getStyleClass().add(isLightMode ? THEME_LIGHT : THEME_DARK);","lastModifiedDate":"2023-03-17"},{"lineNumber":210,"author":{"gitId":"hansstanley"},"content":"        mainContainer.getStyleClass().remove(isLightMode ? THEME_DARK : THEME_LIGHT);","lastModifiedDate":"2023-03-17"},{"lineNumber":211,"author":{"gitId":"hansstanley"},"content":"        themeToggleItem.setText(isLightMode ? SELECT_DARK : SELECT_LIGHT);","lastModifiedDate":"2023-03-17"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"hansstanley"},"content":"        /* Currently, it is impractical to determine the nature of the command","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"hansstanley"},"content":"         * and update the UI accordingly, so it is reset instead to reduce the chance of bugs.","lastModifiedDate":"2023-03-30"},{"lineNumber":222,"author":{"gitId":"hansstanley"},"content":"         */","lastModifiedDate":"2023-03-30"},{"lineNumber":223,"author":{"gitId":"hansstanley"},"content":"        logic.setSelectedPerson(null);","lastModifiedDate":"2023-03-30"},{"lineNumber":224,"author":{"gitId":"hansstanley"},"content":"        bodyPanel.getAddressPanel().getPersonListPanel().scrollToTop();","lastModifiedDate":"2023-03-30"},{"lineNumber":225,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":232,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"igezt"},"content":"            if (commandResult.isLightMode()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":236,"author":{"gitId":"igezt"},"content":"                handleLightMode();","lastModifiedDate":"2023-03-29"},{"lineNumber":237,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":238,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":239,"author":{"gitId":"igezt"},"content":"            if (commandResult.isDarkMode()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":240,"author":{"gitId":"igezt"},"content":"                handleDarkMode();","lastModifiedDate":"2023-03-29"},{"lineNumber":241,"author":{"gitId":"igezt"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":242,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hansstanley":41,"igezt":22,"-":188,"rachtan27":3}},{"path":"src/main/java/seedu/address/ui/body/BodyPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.ui.body;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.control.Tab;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.control.TabPane;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.ui.tab.TabInfo;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.body.address.AddressPanel;","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.body.calendar.CalendarPanel;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.body.user.UserPanel;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":" * A UI component representing the body section of the app with tabs.","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"public class BodyPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    private static final String FXML \u003d \"body/BodyPanel.fxml\";","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    private TabPane bodyTabs;","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"    private final Logic logic;","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    private final AddressPanel addressPanel;","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    private final CalendarPanel calendarPanel;","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    private final UserPanel userPanel;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"    private final ResultDisplay resultDisplay;","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"     * Creates a {@code BodyPanel} with the given {@code Logic}.","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"    public BodyPanel(Logic logic, ResultDisplay resultDisplay) {","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"        super(FXML);","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"        this.resultDisplay \u003d resultDisplay;","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"        this.addressPanel \u003d new AddressPanel(this.logic, this.resultDisplay);","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"        this.calendarPanel \u003d new CalendarPanel(logic.getEventList());","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"        this.userPanel \u003d new UserPanel(logic.getUserData());","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"        fillTabs();","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"        bindSelectedTab();","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"        bindSelectedIndex();","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"    public Logic getLogic() {","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"        return logic;","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"    public AddressPanel getAddressPanel() {","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"        return addressPanel;","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"    public CalendarPanel getCalendarPanel() {","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"        return calendarPanel;","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"    public UserPanel getUserPanel() {","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"        return userPanel;","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"    private void fillTabs() {","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"        for (TabInfo tabInfo : logic.getTabInfoList()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"            Tab tab \u003d new Tab();","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"            tab.setText(tabInfo.toString());","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"            switch (tabInfo.getTabType()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"            case ADDRESS_BOOK:","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"                tab.setContent(addressPanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"                break;","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"hansstanley"},"content":"            case EVENTS:","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"                tab.setContent(calendarPanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"hansstanley"},"content":"                break;","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"hansstanley"},"content":"            case USER:","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"                tab.setContent(userPanel.getRoot());","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"                break;","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"            default:","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"hansstanley"},"content":"                continue;","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"hansstanley"},"content":"            bodyTabs.getTabs().add(tab);","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":85,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"hansstanley"},"content":"     * Binds the {@code TabPane} to the selected tab from {@code logic}","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"hansstanley"},"content":"     * so that the UI updates on {@code tab} commands.","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"hansstanley"},"content":"    private void bindSelectedTab() {","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"hansstanley"},"content":"        logic.getSelectedTab().addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"hansstanley"},"content":"            if (newValue \u003d\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"hansstanley"},"content":"                return;","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"hansstanley"},"content":"            bodyTabs.getSelectionModel().select(newValue.getIndex().getZeroBased());","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"hansstanley"},"content":"        });","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":98,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":99,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"hansstanley"},"content":"     * Binds the {@code logic} to the selected tab in the {@code TabPane}","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"hansstanley"},"content":"     * so that {@code logic} is updated on the last selected tab.","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"hansstanley"},"content":"    private void bindSelectedIndex() {","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"hansstanley"},"content":"        bodyTabs.getSelectionModel().selectedIndexProperty().addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"hansstanley"},"content":"            if (newValue \u003d\u003d null) {","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"hansstanley"},"content":"                return;","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"hansstanley"},"content":"            logic.setSelectedTab(Index.fromZeroBased(newValue.intValue()));","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"hansstanley"},"content":"            resultDisplay.showDefaultMessage();","lastModifiedDate":"2023-04-01"},{"lineNumber":110,"author":{"gitId":"hansstanley"},"content":"        });","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"hansstanley":105,"rachtan27":7}},{"path":"src/main/java/seedu/address/ui/body/address/AddressPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.ui.body.address;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import javafx.beans.property.ReadOnlyObjectProperty;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":" * Panel for the address book.","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"public class AddressPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    private static final String FXML \u003d \"body/address/AddressPanel.fxml\";","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    private StackPane personDetailPanelPlaceholder;","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    private final PersonDetailPanel personDetailPanel;","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    private final PersonListPanel personListPanel;","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"     * Creates an {@code AddressPanel}.","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    public AddressPanel(Logic logic, ResultDisplay resultDisplay) {","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"        super(FXML);","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"        personDetailPanel \u003d new PersonDetailPanel();","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"        personDetailPanelPlaceholder.getChildren().add(personDetailPanel.getRoot());","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"        personListPanel \u003d new PersonListPanel(logic, resultDisplay);","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"        bindSelectedPerson(logic.getSelectedPerson());","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"        return personListPanel;","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"    private void bindSelectedPerson(ReadOnlyObjectProperty\u003cPerson\u003e selectedPerson) {","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"        selectedPerson.addListener((observable, oldValue, newValue) -\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"            personListPanel.setSelectedPerson(newValue);","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"            personDetailPanel.setSelectedPerson(personListPanel.getSelectedData());","lastModifiedDate":"2023-04-01"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"        });","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"hansstanley":44,"rachtan27":5}},{"path":"src/main/java/seedu/address/ui/body/address/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.ui.body.address;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.person.fields.subfields.Tag;","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    private static final String FXML \u003d \"body/address/PersonListCard.fxml\";","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"    private static final int EMPTY_INDEX \u003d -1;","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"    private VBox summaryContainer;","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":46,"author":{"gitId":"nicljr"},"content":"    @FXML","lastModifiedDate":"2023-03-04"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"    private ImageView star;","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"    private Person person;","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"    private int index;","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"     * Creates an empty {@code PersonCard}.","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"    public PersonCard() {","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"        this(null, EMPTY_INDEX);","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"     * Creates a {@code PersonCard} with the given {@code Person} and index to display.","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"        super(FXML);","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"        setPerson(person, displayedIndex);","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"    public Person getPerson() {","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"        return person;","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"    public int getIndex() {","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"hansstanley"},"content":"        return index;","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"hansstanley"},"content":"    public void setPerson(Person person, int displayedIndex) {","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"        this.index \u003d displayedIndex;","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"hansstanley"},"content":"            return;","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"hansstanley"},"content":"        id.setText(String.valueOf(displayedIndex));","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"hansstanley"},"content":"        star.setVisible(person.getFavorite().getFavoriteStatus());","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"hansstanley"},"content":"        ObservableList\u003cNode\u003e summary \u003d summaryContainer.getChildren();","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"hansstanley"},"content":"        summary.clear();","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"hansstanley"},"content":"        name.setText(person.getName().toString());","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"hansstanley"},"content":"        summary.add(name);","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"hansstanley"},"content":"        phone.setText(person.getPhone().toString());","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"hansstanley"},"content":"        if (hasPhone()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"hansstanley"},"content":"            summary.add(phone);","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"hansstanley"},"content":"        ObservableList\u003cNode\u003e tagsList \u003d tags.getChildren();","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"hansstanley"},"content":"        tagsList.clear();","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"        tagsList.addAll(person.getSetOfTags().stream()","lastModifiedDate":"2023-03-23"},{"lineNumber":99,"author":{"gitId":"hansstanley"},"content":"                .sorted(Comparator.comparing(Object::toString))","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"hansstanley"},"content":"                .map(Tag::truncateValue)","lastModifiedDate":"2023-03-26"},{"lineNumber":101,"author":{"gitId":"hansstanley"},"content":"                .map(Label::new)","lastModifiedDate":"2023-03-26"},{"lineNumber":102,"author":{"gitId":"hansstanley"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"hansstanley"},"content":"        if (!tagsList.isEmpty()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"hansstanley"},"content":"            summary.add(tags);","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"hansstanley"},"content":"    private boolean hasPhone() {","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"hansstanley"},"content":"        return phone.getText() !\u003d null \u0026\u0026 !phone.getText().isBlank();","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":126,"author":{"gitId":"hansstanley"},"content":"        return index \u003d\u003d card.index","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"hansstanley"},"content":"                \u0026\u0026 Objects.equals(person, card.person);","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"hansstanley":75,"nicljr":1,"igezt":1,"-":52}},{"path":"src/main/java/seedu/address/ui/body/address/PersonDetailCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.ui.body.address;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":" * A UI component that displays a section of information.","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"public class PersonDetailCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    private static final String FXML \u003d \"body/address/PersonDetailCard.fxml\";","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    private static final String DATA_BODY_PLACEHOLDER \u003d \"Unknown\";","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    private static final double OPACITY_PRESENT \u003d 1;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    private static final double OPACITY_MISSING \u003d 0.5;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    private Label title;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"    private Label body;","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"     * Creates a {@code PersonDetailCard}.","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"     * @param data Data to populate the card with.","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    public PersonDetailCard(DetailCardData data) {","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"        super(FXML);","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"        title.setText(data.title);","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"        if (data.hasBody()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"            body.setText(data.body);","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"            this.getRoot().setOpacity(OPACITY_PRESENT);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"        } else {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"            body.setText(DATA_BODY_PLACEHOLDER);","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"            this.getRoot().setOpacity(OPACITY_MISSING);","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"     * Helper container class for data.","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"    public static class DetailCardData {","lastModifiedDate":"2023-02-17"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"        public final String title;","lastModifiedDate":"2023-02-17"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"        public final String body;","lastModifiedDate":"2023-02-17"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"        /**","lastModifiedDate":"2023-02-17"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"         * Creates a {@code DetailCardData} with the given {@code title} and {@code body}.","lastModifiedDate":"2023-02-17"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"         */","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"        public DetailCardData(String title, String body) {","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"            Objects.requireNonNull(title);","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"            this.title \u003d title;","lastModifiedDate":"2023-02-17"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"            this.body \u003d body;","lastModifiedDate":"2023-02-17"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-02-17"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"        /**","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"         * Returns whether the card body has any content.","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"         */","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"        public boolean hasBody() {","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"            return body !\u003d null \u0026\u0026 !body.isBlank();","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"hansstanley":66}},{"path":"src/main/java/seedu/address/ui/body/address/PersonDetailPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.ui.body.address;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.Collection;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-16"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-02-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-16"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-16"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.person.fields.subfields.Tag;","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A UI component that displays detailed information of a {@code Person}.","lastModifiedDate":"2023-02-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonDetailPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-16"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"    private static final String FXML \u003d \"body/address/PersonDetailPanel.fxml\";","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    private static final String INDEX_UNSPECIFIED \u003d \"Select a contact\";","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    private static final String INDEX_SPECIFIED \u003d \"Index %d\";","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    private static final int EMPTY_INDEX \u003d -1;","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    private ScrollPane scrollContainer;","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2023-02-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2023-02-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-02-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-02-16"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"    private VBox dataContainer;","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"    private ImageView star;","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a blank {@code PersonDetailPanel}.","lastModifiedDate":"2023-02-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public PersonDetailPanel() {","lastModifiedDate":"2023-02-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2023-02-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        clearPerson();","lastModifiedDate":"2023-02-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"    public void setPerson(Person person) {","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (person \u003d\u003d null) {","lastModifiedDate":"2023-02-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2023-02-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name.setText(person.getName().toString());","lastModifiedDate":"2023-02-16"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"        dataContainer.getChildren().addAll(getDataCardCollection(person));","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"        star.setVisible(person.getFavorite().getFavoriteStatus());","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"     * Sets the index of the {@code Person} to be displayed to the user.","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"     * If the given {@code index} is less than 1, it is assumed that","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"     * no {@code Person} is selected.","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"     * @param index 1-based index of the corresponding {@code Person}.","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"    public void setDisplayedIndex(int index) {","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"        if (index \u003c 1) {","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"            id.setText(INDEX_UNSPECIFIED);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"        } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"hansstanley"},"content":"            id.setText(String.format(INDEX_SPECIFIED, index));","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"     * Sets specified selected person and corresponding index in detail panel.","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"hansstanley"},"content":"    public void setSelectedPerson(PersonListPanel.PersonListCellData data) {","lastModifiedDate":"2023-04-01"},{"lineNumber":80,"author":{"gitId":"hansstanley"},"content":"        clearPerson();","lastModifiedDate":"2023-04-01"},{"lineNumber":81,"author":{"gitId":"hansstanley"},"content":"        if (data \u003d\u003d null) {","lastModifiedDate":"2023-04-01"},{"lineNumber":82,"author":{"gitId":"hansstanley"},"content":"            return;","lastModifiedDate":"2023-04-01"},{"lineNumber":83,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":84,"author":{"gitId":"hansstanley"},"content":"        this.setPerson(data.getPerson());","lastModifiedDate":"2023-04-01"},{"lineNumber":85,"author":{"gitId":"hansstanley"},"content":"        this.setDisplayedIndex(data.getIndex());","lastModifiedDate":"2023-04-01"},{"lineNumber":86,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Empties the fields, resulting in a blank {@code PersonDetailPanel}.","lastModifiedDate":"2023-02-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void clearPerson() {","lastModifiedDate":"2023-02-16"},{"lineNumber":92,"author":{"gitId":"hansstanley"},"content":"        setDisplayedIndex(EMPTY_INDEX);","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        name.setText(null);","lastModifiedDate":"2023-02-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        tags.getChildren().clear();","lastModifiedDate":"2023-02-16"},{"lineNumber":96,"author":{"gitId":"hansstanley"},"content":"        dataContainer.getChildren().clear();","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"hansstanley"},"content":"        scrollContainer.setVvalue(0);","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"hansstanley"},"content":"        star.setVisible(false);","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-16"},{"lineNumber":100,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":101,"author":{"gitId":"hansstanley"},"content":"    private Collection\u003cLabel\u003e getTagLabels(Person person) {","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"igezt"},"content":"        return person.getSetOfTags().stream()","lastModifiedDate":"2023-03-23"},{"lineNumber":103,"author":{"gitId":"igezt"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.value))","lastModifiedDate":"2023-03-23"},{"lineNumber":104,"author":{"gitId":"hansstanley"},"content":"                .map(Tag::truncateValue)","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"hansstanley"},"content":"                .map(Label::new)","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"hansstanley"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":108,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"hansstanley"},"content":"    private Collection\u003cRegion\u003e getDataCardCollection(Person person) {","lastModifiedDate":"2023-02-24"},{"lineNumber":110,"author":{"gitId":"hansstanley"},"content":"        List\u003cRegion\u003e regions \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"hansstanley"},"content":"        // Adds Person tags, if any","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"igezt"},"content":"        if (!person.getSetOfTags().isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":114,"author":{"gitId":"hansstanley"},"content":"            tags.getChildren().addAll(getTagLabels(person));","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"hansstanley"},"content":"            regions.add(tags);","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"hansstanley"},"content":"        // Adds all detail cards, except modules taken","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"hansstanley"},"content":"        Collection\u003cRegion\u003e dataRegions \u003d Stream.of(","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"hansstanley"},"content":"                new PersonDetailCard.DetailCardData(\"Phone\", person.getPhone().toString()),","lastModifiedDate":"2023-02-24"},{"lineNumber":121,"author":{"gitId":"hansstanley"},"content":"                new PersonDetailCard.DetailCardData(\"Address\", person.getAddress().toString()),","lastModifiedDate":"2023-02-24"},{"lineNumber":122,"author":{"gitId":"hansstanley"},"content":"                new PersonDetailCard.DetailCardData(\"Email\", person.getEmail().toString()),","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"hansstanley"},"content":"                new PersonDetailCard.DetailCardData(\"Gender\", person.getGender().toString()),","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"hansstanley"},"content":"                new PersonDetailCard.DetailCardData(\"Race\", person.getRace().toString()),","lastModifiedDate":"2023-02-28"},{"lineNumber":125,"author":{"gitId":"hansstanley"},"content":"                new PersonDetailCard.DetailCardData(\"Communication channels\", person.getComms().toString()),","lastModifiedDate":"2023-02-28"},{"lineNumber":126,"author":{"gitId":"rachtan27"},"content":"                new PersonDetailCard.DetailCardData(\"Major\", person.getMajor().toString()),","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"rachtan27"},"content":"                new PersonDetailCard.DetailCardData(\"Faculty\", person.getFaculty().toString()))","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"hansstanley"},"content":"                .map(PersonDetailCard::new)","lastModifiedDate":"2023-02-24"},{"lineNumber":129,"author":{"gitId":"hansstanley"},"content":"                .map(PersonDetailCard::getRoot)","lastModifiedDate":"2023-02-24"},{"lineNumber":130,"author":{"gitId":"hansstanley"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"hansstanley"},"content":"        regions.addAll(dataRegions);","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":133,"author":{"gitId":"hansstanley"},"content":"        // Adds card for modules taken, if any","lastModifiedDate":"2023-03-09"},{"lineNumber":134,"author":{"gitId":"hansstanley"},"content":"        boolean hasModules \u003d person.getModules() !\u003d null","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 person.getModules().values !\u003d null","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 !person.getModules().values.isEmpty();","lastModifiedDate":"2023-03-23"},{"lineNumber":137,"author":{"gitId":"hansstanley"},"content":"        if (hasModules) {","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"igezt"},"content":"            regions.add(new PersonModulesCard(\"Modules\", person.getModules().values).getRoot());","lastModifiedDate":"2023-03-23"},{"lineNumber":139,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":140,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":141,"author":{"gitId":"hansstanley"},"content":"        return regions;","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-16"}],"authorContributionMap":{"hansstanley":87,"igezt":6,"-":44,"rachtan27":6}},{"path":"src/main/java/seedu/address/ui/body/address/PersonListDivider.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.ui.body.address;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":" * A UI component to divide a {@code ListView} of {@code Person}s","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":" * into multiple sections.","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"public class PersonListDivider extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    private static final String FXML \u003d \"body/address/PersonListDivider.fxml\";","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    private Label title;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"     * Creates a {@code PersonListDivider} with the given {@code title}.","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    public PersonListDivider(String title) {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"        super(FXML);","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"        setTitle(title);","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    public void setTitle(String title) {","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"        this.title.setText(title);","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"        if (!(other instanceof PersonListDivider)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"            return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"        PersonListDivider that \u003d (PersonListDivider) other;","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"        return Objects.equals(title.getText(), that.title.getText());","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"hansstanley":44}},{"path":"src/main/java/seedu/address/ui/body/address/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.ui.body.address;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.control.MultipleSelectionModel;","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"import seedu.address.ui.result.ResultDisplay;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    private static final String FXML \u003d \"body/address/PersonListPanel.fxml\";","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    private static final int EMPTY_INDEX \u003d -1;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    private static final String DIVIDER_FAVORITE \u003d \"Favourites (%d)\";","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"    private static final String DIVIDER_ALL \u003d \"All contacts (%d)\";","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"    private ListView\u003cPersonListCellData\u003e personListView;","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"    private List\u003cPersonListCardData\u003e allData;","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"    private List\u003cPersonListCardData\u003e favData;","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"    private int selectedIndex;","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"    public PersonListPanel(Logic logic, ResultDisplay resultDisplay) {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"        allData \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"        favData \u003d null;","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"        selectedIndex \u003d EMPTY_INDEX;","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListCell());","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"        personListView.setFocusTraversable(false);","lastModifiedDate":"2023-02-17"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"        personListView.setOnMouseClicked(event -\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"            resultDisplay.showDefaultMessage();","lastModifiedDate":"2023-04-01"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"            PersonListCellData nextData \u003d personListView.getSelectionModel().getSelectedItem();","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"            int nextIndex \u003d personListView.getSelectionModel().getSelectedIndex();","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"            if (selectedIndex \u003d\u003d nextIndex) { // clear selection on same selection","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"                selectedIndex \u003d EMPTY_INDEX;","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"                logic.setSelectedPerson(null);","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"                setSelectedData(null);","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"            } else {","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"                selectedIndex \u003d nextIndex;","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"                logic.setSelectedPerson(nextData \u003d\u003d null ? null : nextData.getPerson());","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"                setSelectedData(nextData);","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"        });","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"        fillListView(logic.getFilteredPersonList());","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"        logic.getFilteredPersonList().addListener((ListChangeListener\u003cPerson\u003e) c -\u003e fillListView(c.getList()));","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"     * Scrolls the {@code ListView} of {@code Person}s to the top.","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"hansstanley"},"content":"    public void scrollToTop() {","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"        personListView.scrollTo(0);","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"hansstanley"},"content":"    public void setSelectedPerson(Person selectedPerson) {","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"hansstanley"},"content":"        if (allData \u003d\u003d null) {","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"hansstanley"},"content":"            return;","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"hansstanley"},"content":"        setSelectedData(allData","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"hansstanley"},"content":"                .stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"hansstanley"},"content":"                .filter(data -\u003e Objects.equals(data.getPerson(), selectedPerson))","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"hansstanley"},"content":"                .findFirst()","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"hansstanley"},"content":"                .orElse(null));","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":90,"author":{"gitId":"hansstanley"},"content":"    public PersonListCellData getSelectedData() {","lastModifiedDate":"2023-04-01"},{"lineNumber":91,"author":{"gitId":"hansstanley"},"content":"        return personListView.getSelectionModel().getSelectedItem();","lastModifiedDate":"2023-04-01"},{"lineNumber":92,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":93,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":94,"author":{"gitId":"hansstanley"},"content":"    private void setSelectedData(PersonListCellData data) {","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"hansstanley"},"content":"        MultipleSelectionModel\u003cPersonListCellData\u003e selectionModel \u003d personListView.getSelectionModel();","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"hansstanley"},"content":"        if (Objects.equals(selectionModel.getSelectedItem(), data)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"hansstanley"},"content":"            // Equivalent person to be selected, so the selection will not be changed","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"hansstanley"},"content":"            return;","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"hansstanley"},"content":"        selectionModel.select(data);","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"hansstanley"},"content":"        selectedIndex \u003d selectionModel.getSelectedIndex();","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"hansstanley"},"content":"    private void fillListView(Collection\u003c? extends Person\u003e people) {","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"hansstanley"},"content":"        Objects.requireNonNull(people);","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"hansstanley"},"content":"        ObservableList\u003cPersonListCellData\u003e items \u003d personListView.getItems();","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"hansstanley"},"content":"        items.clear();","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"hansstanley"},"content":"        if (people.isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"hansstanley"},"content":"            return;","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"hansstanley"},"content":"        allData \u003d assignIndices(people);","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"hansstanley"},"content":"        favData \u003d getFavoriteData(allData);","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"hansstanley"},"content":"        if (!favData.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"hansstanley"},"content":"            items.add(new PersonListDividerData(String.format(DIVIDER_FAVORITE, favData.size())));","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"hansstanley"},"content":"            items.addAll(favData);","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"hansstanley"},"content":"        if (!allData.isEmpty()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"hansstanley"},"content":"            items.add(new PersonListDividerData(String.format(DIVIDER_ALL, allData.size())));","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"hansstanley"},"content":"            items.addAll(allData);","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"hansstanley"},"content":"    private List\u003cPersonListCardData\u003e assignIndices(Collection\u003c? extends Person\u003e people) {","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"hansstanley"},"content":"        List\u003cPersonListCardData\u003e indexedData \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"hansstanley"},"content":"        int index \u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"hansstanley"},"content":"        for (Person person : people) {","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"hansstanley"},"content":"            indexedData.add(new PersonListCardData(person, index));","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"hansstanley"},"content":"            index +\u003d 1;","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"hansstanley"},"content":"        return indexedData;","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":133,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"hansstanley"},"content":"    private List\u003cPersonListCardData\u003e getFavoriteData(Collection\u003cPersonListCardData\u003e data) {","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"hansstanley"},"content":"        return data.stream()","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"hansstanley"},"content":"                .filter(d -\u003e d.getPerson().getFavorite().getFavoriteStatus())","lastModifiedDate":"2023-03-31"},{"lineNumber":137,"author":{"gitId":"hansstanley"},"content":"                .map(d -\u003e new PersonListCardData(d.getPerson(), d.getIndex()))","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"hansstanley"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":140,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"hansstanley"},"content":"    static class PersonListCell extends ListCell\u003cPersonListCellData\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"hansstanley"},"content":"        private final PersonCard personCard \u003d new PersonCard();","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"hansstanley"},"content":"        private final PersonListDivider personListDivider \u003d new PersonListDivider(null);","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"hansstanley"},"content":"        public PersonCard getPersonCard() {","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"hansstanley"},"content":"            return personCard;","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"hansstanley"},"content":"        public PersonListDivider getPersonListDivider() {","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"hansstanley"},"content":"            return personListDivider;","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"hansstanley"},"content":"        protected void updateItem(PersonListCellData data, boolean empty) {","lastModifiedDate":"2023-03-17"},{"lineNumber":158,"author":{"gitId":"hansstanley"},"content":"            super.updateItem(data, empty);","lastModifiedDate":"2023-03-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"hansstanley"},"content":"            if (empty || data \u003d\u003d null) {","lastModifiedDate":"2023-03-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"hansstanley"},"content":"                return;","lastModifiedDate":"2023-03-11"},{"lineNumber":164,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-03-11"},{"lineNumber":165,"author":{"gitId":"hansstanley"},"content":"            data.updateGraphic(this);","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":168,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":169,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":170,"author":{"gitId":"hansstanley"},"content":"     * Wrapper for a {@code Person} with an {@code Index}.","lastModifiedDate":"2023-04-01"},{"lineNumber":171,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":172,"author":{"gitId":"hansstanley"},"content":"    public interface PersonListCellData {","lastModifiedDate":"2023-04-01"},{"lineNumber":173,"author":{"gitId":"hansstanley"},"content":"        Person getPerson();","lastModifiedDate":"2023-03-17"},{"lineNumber":174,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":175,"author":{"gitId":"hansstanley"},"content":"        int getIndex();","lastModifiedDate":"2023-03-17"},{"lineNumber":176,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":177,"author":{"gitId":"hansstanley"},"content":"        void updateGraphic(PersonListCell cell);","lastModifiedDate":"2023-03-17"},{"lineNumber":178,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":179,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":180,"author":{"gitId":"hansstanley"},"content":"    private static class PersonListDividerData implements PersonListCellData {","lastModifiedDate":"2023-03-17"},{"lineNumber":181,"author":{"gitId":"hansstanley"},"content":"        private static final boolean IS_MOUSE_TRANSPARENT \u003d true;","lastModifiedDate":"2023-03-17"},{"lineNumber":182,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":183,"author":{"gitId":"hansstanley"},"content":"        private final String title;","lastModifiedDate":"2023-03-17"},{"lineNumber":184,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":185,"author":{"gitId":"hansstanley"},"content":"        public PersonListDividerData(String title) {","lastModifiedDate":"2023-03-17"},{"lineNumber":186,"author":{"gitId":"hansstanley"},"content":"            Objects.requireNonNull(title);","lastModifiedDate":"2023-03-17"},{"lineNumber":187,"author":{"gitId":"hansstanley"},"content":"            this.title \u003d title;","lastModifiedDate":"2023-03-17"},{"lineNumber":188,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":189,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":190,"author":{"gitId":"hansstanley"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":191,"author":{"gitId":"hansstanley"},"content":"        public Person getPerson() {","lastModifiedDate":"2023-03-17"},{"lineNumber":192,"author":{"gitId":"hansstanley"},"content":"            return null;","lastModifiedDate":"2023-03-17"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":194,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":195,"author":{"gitId":"hansstanley"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":196,"author":{"gitId":"hansstanley"},"content":"        public int getIndex() {","lastModifiedDate":"2023-03-17"},{"lineNumber":197,"author":{"gitId":"hansstanley"},"content":"            return EMPTY_INDEX;","lastModifiedDate":"2023-03-17"},{"lineNumber":198,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":199,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":200,"author":{"gitId":"hansstanley"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":201,"author":{"gitId":"hansstanley"},"content":"        public void updateGraphic(PersonListCell cell) {","lastModifiedDate":"2023-03-17"},{"lineNumber":202,"author":{"gitId":"hansstanley"},"content":"            Objects.requireNonNull(cell);","lastModifiedDate":"2023-03-17"},{"lineNumber":203,"author":{"gitId":"hansstanley"},"content":"            cell.getPersonListDivider().setTitle(title);","lastModifiedDate":"2023-03-17"},{"lineNumber":204,"author":{"gitId":"hansstanley"},"content":"            if (cell.getGraphic() !\u003d cell.getPersonListDivider().getRoot()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":205,"author":{"gitId":"hansstanley"},"content":"                cell.setGraphic(cell.getPersonListDivider().getRoot());","lastModifiedDate":"2023-03-17"},{"lineNumber":206,"author":{"gitId":"hansstanley"},"content":"                cell.setMouseTransparent(IS_MOUSE_TRANSPARENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":207,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":208,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":209,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":210,"author":{"gitId":"hansstanley"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":211,"author":{"gitId":"hansstanley"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":212,"author":{"gitId":"hansstanley"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-17"},{"lineNumber":213,"author":{"gitId":"hansstanley"},"content":"                return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":214,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":215,"author":{"gitId":"hansstanley"},"content":"            if (!(other instanceof PersonListDividerData)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":216,"author":{"gitId":"hansstanley"},"content":"                return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":217,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":218,"author":{"gitId":"hansstanley"},"content":"            PersonListDividerData that \u003d (PersonListDividerData) other;","lastModifiedDate":"2023-03-17"},{"lineNumber":219,"author":{"gitId":"hansstanley"},"content":"            return title.equals(that.title);","lastModifiedDate":"2023-03-17"},{"lineNumber":220,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":221,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":222,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":223,"author":{"gitId":"hansstanley"},"content":"    private static class PersonListCardData implements PersonListCellData {","lastModifiedDate":"2023-03-17"},{"lineNumber":224,"author":{"gitId":"hansstanley"},"content":"        private static final boolean IS_MOUSE_TRANSPARENT \u003d false;","lastModifiedDate":"2023-03-17"},{"lineNumber":225,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":226,"author":{"gitId":"hansstanley"},"content":"        private final Person person;","lastModifiedDate":"2023-03-17"},{"lineNumber":227,"author":{"gitId":"hansstanley"},"content":"        private final int index;","lastModifiedDate":"2023-03-17"},{"lineNumber":228,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":229,"author":{"gitId":"hansstanley"},"content":"        public PersonListCardData(Person person, int index) {","lastModifiedDate":"2023-03-17"},{"lineNumber":230,"author":{"gitId":"hansstanley"},"content":"            this.person \u003d person;","lastModifiedDate":"2023-03-17"},{"lineNumber":231,"author":{"gitId":"hansstanley"},"content":"            this.index \u003d index;","lastModifiedDate":"2023-03-17"},{"lineNumber":232,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":233,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":234,"author":{"gitId":"hansstanley"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":235,"author":{"gitId":"hansstanley"},"content":"        public Person getPerson() {","lastModifiedDate":"2023-03-17"},{"lineNumber":236,"author":{"gitId":"hansstanley"},"content":"            return person;","lastModifiedDate":"2023-03-17"},{"lineNumber":237,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":238,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":239,"author":{"gitId":"hansstanley"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":240,"author":{"gitId":"hansstanley"},"content":"        public int getIndex() {","lastModifiedDate":"2023-03-11"},{"lineNumber":241,"author":{"gitId":"hansstanley"},"content":"            return index;","lastModifiedDate":"2023-03-17"},{"lineNumber":242,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":243,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":244,"author":{"gitId":"hansstanley"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":245,"author":{"gitId":"hansstanley"},"content":"        public void updateGraphic(PersonListCell cell) {","lastModifiedDate":"2023-03-17"},{"lineNumber":246,"author":{"gitId":"hansstanley"},"content":"            Objects.requireNonNull(cell);","lastModifiedDate":"2023-03-17"},{"lineNumber":247,"author":{"gitId":"hansstanley"},"content":"            cell.getPersonCard().setPerson(person, index);","lastModifiedDate":"2023-03-17"},{"lineNumber":248,"author":{"gitId":"hansstanley"},"content":"            if (cell.getGraphic() !\u003d cell.getPersonCard().getRoot()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":249,"author":{"gitId":"hansstanley"},"content":"                cell.setGraphic(cell.getPersonCard().getRoot());","lastModifiedDate":"2023-03-17"},{"lineNumber":250,"author":{"gitId":"hansstanley"},"content":"                cell.setMouseTransparent(IS_MOUSE_TRANSPARENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":251,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":252,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":253,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":254,"author":{"gitId":"hansstanley"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":255,"author":{"gitId":"hansstanley"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-17"},{"lineNumber":256,"author":{"gitId":"hansstanley"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-17"},{"lineNumber":257,"author":{"gitId":"hansstanley"},"content":"                return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":258,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":259,"author":{"gitId":"hansstanley"},"content":"            if (!(other instanceof PersonListCardData)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":260,"author":{"gitId":"hansstanley"},"content":"                return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":261,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":262,"author":{"gitId":"hansstanley"},"content":"            PersonListCardData that \u003d (PersonListCardData) other;","lastModifiedDate":"2023-03-17"},{"lineNumber":263,"author":{"gitId":"hansstanley"},"content":"            return index \u003d\u003d that.index \u0026\u0026 person.equals(that.person);","lastModifiedDate":"2023-03-17"},{"lineNumber":264,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hansstanley":223,"-":33,"rachtan27":10}},{"path":"src/main/java/seedu/address/ui/body/address/PersonModulesCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.ui.body.address;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.Collection;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.NusMod;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":" * A UI component that displays a {@code Person}\u0027s list of modules.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"public class PersonModulesCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    private static final String FXML \u003d \"body/address/PersonModulesCard.fxml\";","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    private Label title;","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"    private FlowPane modules;","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"     * Creates a {@code PersonModulesCard} with the given","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"     * {@code title} and collection of {@code NusMod}s.","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    public PersonModulesCard(String title, Collection\u003cNusMod\u003e mods) {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"        super(FXML);","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"        Objects.requireNonNull(title);","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"        Objects.requireNonNull(mods);","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"        this.title.setText(title);","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"        this.modules.getChildren().addAll(getModuleLabels(mods));","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"    private Collection\u003cLabel\u003e getModuleLabels(Collection\u003cNusMod\u003e mods) {","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"        if (mods \u003d\u003d null || mods.isEmpty()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"            return List.of(new Label(\"No modules\"));","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"        return mods.stream()","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"                .filter(Objects::nonNull)","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"                .filter(mod -\u003e mod.value !\u003d null \u0026\u0026 !mod.value.isBlank())","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"                .sorted(Comparator.comparing(mod -\u003e mod.value))","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"                .map(mod -\u003e mod.value)","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"                .map(Label::new)","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"hansstanley":48,"igezt":4}},{"path":"src/main/java/seedu/address/ui/body/calendar/CalendarDayCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.ui.body.calendar;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":" * A UI component that represents a day\u0027s worth of {@code Event}s.","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"public class CalendarDayCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    private static final String FXML \u003d \"body/calendar/CalendarDayCard.fxml\";","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    private static final DateTimeFormatter DATE_NUMBER_FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd\");","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    private static final DateTimeFormatter DATE_MONTH_YEAR_FORMATTER \u003d DateTimeFormatter.ofPattern(\"MMMM, yyyy\");","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"    private static final DateTimeFormatter DAY_FORMATTER \u003d DateTimeFormatter.ofPattern(\"eeee\");","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"    private Label dateNumber;","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    private Label dateMonthYear;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    private Label day;","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    private VBox eventsContainer;","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"     * Creates a {@code CalendarDayCard} with the given {@code events}","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"     * on the specified {@code date}.","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"    public CalendarDayCard(List\u003cCalendarPanel.IndexedEvent\u003e events, LocalDate date) {","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"        super(FXML);","lastModifiedDate":"2023-03-05"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"        CollectionUtil.requireAllNonNull(events, date);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"        dateNumber.setText(date.format(DATE_NUMBER_FORMATTER));","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"        dateMonthYear.setText(date.format(DATE_MONTH_YEAR_FORMATTER));","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"        day.setText(date.format(DAY_FORMATTER));","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"        eventsContainer.getChildren().addAll(events.stream()","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"                .map(CalendarEventCard::new)","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"                .map(UiPart::getRoot)","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"hansstanley":49}},{"path":"src/main/java/seedu/address/ui/body/calendar/CalendarEventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.ui.body.calendar;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import javafx.geometry.Insets;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.event.fields.DateTime;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":" * A UI component that represents a calendar {@code Event}.","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"public class CalendarEventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"    private static final String FXML \u003d \"body/calendar/CalendarEventCard.fxml\";","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    private static final DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy, hh:mm a\");","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"    private VBox eventContainer;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"    private Label description;","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"    private Label startDateTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"    private Label endDateTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    private Label recurrence;","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"    private Label indexTag;","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"    private HBox attendees;","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"    private VBox attendeesCard;","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"     * Creates a {@code CalendarEventCard} with the given {@code indexedEvent}.","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"    public CalendarEventCard(CalendarPanel.IndexedEvent indexedEvent) {","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"        super(FXML);","lastModifiedDate":"2023-03-05"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"        Objects.requireNonNull(indexedEvent);","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"        Index index \u003d indexedEvent.getIndex();","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"        Event event \u003d indexedEvent.getEvent();","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"        DateTime effectiveStart \u003d event.getEffectiveStartDateTime();","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"        DateTime effectiveEnd \u003d event.getEffectiveEndDateTime();","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"        description.setText(event.getDescription().getDescription());","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"        startDateTime.setText(effectiveStart.toString(FORMATTER));","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"        endDateTime.setText(effectiveEnd.toString(FORMATTER));","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"        recurrence.setText(event.getRecurrence().toString());","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"        indexTag.setText(String.format(\"Index %d\", index.getOneBased()));","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"        Set\u003cPerson\u003e people \u003d event.getTaggedPeople();","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"        if (people.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"            eventContainer.getChildren().remove(attendeesCard);","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"            attendees.getChildren().addAll(people.stream()","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"                    .map(CalendarPersonTag::new)","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"                    .map(UiPart::getRoot)","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"                    .collect(Collectors.toList()));","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"            eventContainer.setPadding(new Insets(10, 0, 0, 0));","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"hansstanley"},"content":"        if (effectiveEnd.getDateTime().isBefore(LocalDateTime.now())) {","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"hansstanley"},"content":"            getRoot().setOpacity(0.5);","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"hansstanley":77,"igezt":1}},{"path":"src/main/java/seedu/address/ui/body/calendar/CalendarPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.ui.body.calendar;","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import java.util.Map;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import javafx.collections.ListChangeListener;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":" * A UI component containing a calendar.","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"public class CalendarPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"    private static final String FXML \u003d \"body/calendar/CalendarPanel.fxml\";","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    private VBox calendarContent;","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"    private Label calendarContentPlaceholder;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"     * Creates a {@code CalendarPanel} of the given {@code eventList}.","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"    public CalendarPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"        super(FXML);","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"        Objects.requireNonNull(eventList);","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"        fillCalendarContent(eventList);","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"        eventList.addListener((ListChangeListener\u003cEvent\u003e) c -\u003e fillCalendarContent(eventList));","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"    private void fillCalendarContent(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"        calendarContent.getChildren().clear();","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"        if (events \u003d\u003d null || events.isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"            calendarContent.getChildren().add(calendarContentPlaceholder);","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"            return;","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"        Map\u003cLocalDate, List\u003cIndexedEvent\u003e\u003e dateEventsMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"        for (IndexedEvent event : getIndexedEvents(events)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"            LocalDate date \u003d event.getDateKey();","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"            dateEventsMap.putIfAbsent(date, new LinkedList\u003c\u003e());","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"            dateEventsMap.get(date).add(event);","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"        dateEventsMap.keySet().stream().sorted().forEach(date -\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"            List\u003cIndexedEvent\u003e dateEvents \u003d dateEventsMap.get(date);","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"            addDayCard(dateEvents, date);","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"        });","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"    private void addDayCard(List\u003cIndexedEvent\u003e events, LocalDate date) {","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"        if (events \u003d\u003d null || events.isEmpty()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"            return;","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"            return;","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"        calendarContent.getChildren().add(new CalendarDayCard(events, date).getRoot());","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":72,"author":{"gitId":"hansstanley"},"content":"    private List\u003cIndexedEvent\u003e getIndexedEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"        List\u003cIndexedEvent\u003e indexedEvents \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"hansstanley"},"content":"        int i \u003d 0;","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"hansstanley"},"content":"        for (Event event : events) {","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"            indexedEvents.add(new IndexedEvent(Index.fromZeroBased(i), event));","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"            i +\u003d 1;","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"hansstanley"},"content":"        return indexedEvents;","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"hansstanley"},"content":"    static class IndexedEvent {","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"hansstanley"},"content":"        private final Index index;","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"hansstanley"},"content":"        private final Event event;","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"hansstanley"},"content":"        public IndexedEvent(Index index, Event event) {","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"hansstanley"},"content":"            CollectionUtil.requireAllNonNull(index, event);","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"hansstanley"},"content":"            this.index \u003d index;","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"hansstanley"},"content":"            this.event \u003d event;","lastModifiedDate":"2023-03-18"},{"lineNumber":90,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":91,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":92,"author":{"gitId":"hansstanley"},"content":"        public Index getIndex() {","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"hansstanley"},"content":"            return index;","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":95,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":96,"author":{"gitId":"hansstanley"},"content":"        public Event getEvent() {","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"hansstanley"},"content":"            return event;","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":99,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":100,"author":{"gitId":"hansstanley"},"content":"        public LocalDate getDateKey() {","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"hansstanley"},"content":"            return event.getEffectiveStartDateTime().getDateTime().toLocalDate();","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"hansstanley":104}},{"path":"src/main/java/seedu/address/ui/body/calendar/CalendarPersonTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.ui.body.calendar;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":" * A UI component that displays a {@code Person} in a {@code CalendarEventCard}.","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"public class CalendarPersonTag extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    private static final String FXML \u003d \"body/calendar/CalendarPersonTag.fxml\";","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    private Label name;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"     * Creates a {@code CalendarPersonTag} with the given {@code Person}.","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    public CalendarPersonTag(Person person) {","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"        super(FXML);","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"        Objects.requireNonNull(person);","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        name.setText(person.getName().toString());","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"hansstanley":29}},{"path":"src/main/java/seedu/address/ui/body/user/UserPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.ui.body.user;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.ReadOnlyUserData;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.body.address.PersonDetailCard;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.body.address.PersonModulesCard;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":" * A UI component that displays {@code User} information.","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"public class UserPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    private static final String FXML \u003d \"body/user/UserPanel.fxml\";","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    private Label name;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    private VBox dataContainer;","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"     * Creates a {@code UserPanel} with the given {@code userData}.","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"    public UserPanel(ReadOnlyUserData userData) {","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"        super(FXML);","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"        Objects.requireNonNull(userData);","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"        setUser(userData.getData().get());","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"        userData.getData().addListener((observable, oldValue, newValue) -\u003e setUser(newValue));","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"    public void setUser(User user) {","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"        name.setText(null);","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"        dataContainer.getChildren().clear();","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"        if (user \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"            return;","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"        name.setText(user.getName().toString());","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"        dataContainer.getChildren().addAll(getDataCardCollection(user));","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"    private Collection\u003cRegion\u003e getDataCardCollection(User user) {","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"        List\u003cRegion\u003e regions \u003d Stream.of(","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"                new PersonDetailCard.DetailCardData(\"Phone\", user.getPhone().toString()),","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"                new PersonDetailCard.DetailCardData(\"Address\", user.getAddress().toString()),","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"                new PersonDetailCard.DetailCardData(\"Email\", user.getEmail().toString()),","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"                new PersonDetailCard.DetailCardData(\"Gender\", user.getGender().toString()),","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"                new PersonDetailCard.DetailCardData(\"Race\", user.getRace().toString()),","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"                new PersonDetailCard.DetailCardData(\"Communication channels\", user.getComms().toString()),","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"                new PersonDetailCard.DetailCardData(\"Major\", user.getMajor().toString()),","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"                new PersonDetailCard.DetailCardData(\"Faculty\", user.getFaculty().toString()))","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"                .map(PersonDetailCard::new)","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"                .map(PersonDetailCard::getRoot).collect(Collectors.toCollection(LinkedList::new));","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"        // Adds card for modules taken, if any","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"        boolean hasModules \u003d user.getModules() !\u003d null","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 user.getModules().values !\u003d null","lastModifiedDate":"2023-03-23"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"                \u0026\u0026 !user.getModules().values.isEmpty();","lastModifiedDate":"2023-03-23"},{"lineNumber":70,"author":{"gitId":"hansstanley"},"content":"        if (hasModules) {","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"            regions.add(new PersonModulesCard(\"Modules\", user.getModules().values).getRoot());","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"hansstanley"},"content":"        return regions;","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"hansstanley":73,"igezt":3}},{"path":"src/main/java/seedu/address/ui/enums/LightDarkMode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"package seedu.address.ui.enums;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":" * Enum that represents the transition state of the light/dark mode of NeoBook.","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"public enum LightDarkMode {","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"    LIGHT,","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"    DARK,","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"    NO_CHANGE","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"igezt":10}},{"path":"src/main/java/seedu/address/ui/result/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.ui.result;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.Node;","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.control.ScrollPane;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.AddEventCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.DeleteEventCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.EditEventCommand;","lastModifiedDate":"2023-04-01"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.EditUserCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.FavoriteCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"import seedu.address.logic.commands.SelectCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.TabCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.TagEventCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.UnTagEventCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.UnfavoriteCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"    public static final String KEYWORD_PARAMETERS \u003d \"Parameters\";","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"    public static final String KEYWORD_EXAMPLE \u003d \"Example\";","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"    public static final String KEYWORD_MORE_INFO \u003d \"More Info\";","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"    private static final String FXML \u003d \"result/ResultDisplay.fxml\";","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"    private static final String DEFAULT_TEXT \u003d \"Enter command below\";","lastModifiedDate":"2023-04-01"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"    private static final List\u003cString\u003e KEYWORDS \u003d List.of(AddCommand.COMMAND_WORD, AddEventCommand.COMMAND_WORD,","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"            ClearCommand.COMMAND_WORD, DeleteCommand.COMMAND_WORD, DeleteEventCommand.COMMAND_WORD,","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"            EditContactCommand.COMMAND_WORD, EditUserCommand.COMMAND_WORD, EditEventCommand.COMMAND_WORD,","lastModifiedDate":"2023-04-01"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"            ExitCommand.COMMAND_WORD, FindCommand.COMMAND_WORD, HelpCommand.COMMAND_WORD, ListCommand.COMMAND_WORD,","lastModifiedDate":"2023-04-01"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"            UnfavoriteCommand.COMMAND_WORD, FavoriteCommand.COMMAND_WORD, TabCommand.COMMAND_WORD,","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"            UnTagEventCommand.COMMAND_WORD, TagEventCommand.COMMAND_WORD, SelectCommand.COMMAND_WORD,","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"            KEYWORD_PARAMETERS, KEYWORD_EXAMPLE, KEYWORD_MORE_INFO);","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"    private ScrollPane scrollContainer;","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"    private VBox resultDisplayContainer;","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"    private Label resultDisplayLabel;","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"     * Creates a {@code ResultDisplay} with placeholder text.","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"        showDefaultMessage();","lastModifiedDate":"2023-04-01"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":67,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":68,"author":{"gitId":"hansstanley"},"content":"    public void showDefaultMessage() {","lastModifiedDate":"2023-04-01"},{"lineNumber":69,"author":{"gitId":"hansstanley"},"content":"        resultDisplayLabel.setText(DEFAULT_TEXT);","lastModifiedDate":"2023-04-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"hansstanley"},"content":"        FeedbackExtractor extractor \u003d new FeedbackExtractor(feedbackToUser);","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"        ObservableList\u003cNode\u003e nodes \u003d resultDisplayContainer.getChildren();","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"        nodes.clear();","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"        nodes.add(resultDisplayLabel);","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"hansstanley"},"content":"        Iterator\u003cString\u003e keywords \u003d KEYWORDS.iterator();","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"hansstanley"},"content":"        Iterator\u003cString\u003e extractedStrings \u003d KEYWORDS.stream()","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"hansstanley"},"content":"                .map(keyword -\u003e keyword + \u0027:\u0027)","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"hansstanley"},"content":"                .map(extractor::extractPart)","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"hansstanley"},"content":"                .iterator();","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"hansstanley"},"content":"        while (keywords.hasNext() \u0026\u0026 extractedStrings.hasNext()) {","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"hansstanley"},"content":"            String title \u003d keywords.next();","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"hansstanley"},"content":"            String body \u003d extractedStrings.next();","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"hansstanley"},"content":"            if (body !\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"hansstanley"},"content":"                ResultDisplayCard card \u003d new ResultDisplayCard(title, body);","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"hansstanley"},"content":"                nodes.add(card.getRoot());","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"hansstanley"},"content":"        resultDisplayLabel.setText(extractor.getLeftoverFeedback());","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"hansstanley"},"content":"        scrollContainer.setVvalue(0); // scrolls back to the top","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"hansstanley"},"content":"     * Formats the messages to be displayed properly in a card.","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"hansstanley"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"hansstanley"},"content":"     * @param keyword One of the keywords in the internal {@code KEYWORDS} list,","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"hansstanley"},"content":"     *                which includes all the command words and constant keywords in {@code ResultDisplay}.","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"hansstanley"},"content":"     * @param messages Messages to be joined with a space.","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"hansstanley"},"content":"     * @return The formatted message.","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"hansstanley"},"content":"    public static String formatMessage(String keyword, String ...messages) {","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"hansstanley"},"content":"        return String.format(\"%s: %s\\n\", keyword, String.join(\" \", messages));","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"hansstanley"},"content":"     * Helper class to extract parts from the feedback string.","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"hansstanley"},"content":"    private static class FeedbackExtractor {","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"hansstanley"},"content":"        private String feedback;","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"hansstanley"},"content":"        public FeedbackExtractor(String feedback) {","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"hansstanley"},"content":"            requireNonNull(feedback);","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"hansstanley"},"content":"            this.feedback \u003d feedback.trim();","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"hansstanley"},"content":"        public String getLeftoverFeedback() {","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"hansstanley"},"content":"            return feedback;","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"hansstanley"},"content":"        public String extractPart(String keyword) {","lastModifiedDate":"2023-03-02"},{"lineNumber":126,"author":{"gitId":"hansstanley"},"content":"            return extractPart(keyword, \u0027\\n\u0027);","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":128,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":129,"author":{"gitId":"hansstanley"},"content":"        /**","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"hansstanley"},"content":"         * Returns part of the feedback, starting from","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"hansstanley"},"content":"         * the first occurrence of {@code keyword} (excluded) to","lastModifiedDate":"2023-03-02"},{"lineNumber":132,"author":{"gitId":"hansstanley"},"content":"         * the last character {@code endChar} (excluded).","lastModifiedDate":"2023-03-02"},{"lineNumber":133,"author":{"gitId":"hansstanley"},"content":"         *","lastModifiedDate":"2023-03-02"},{"lineNumber":134,"author":{"gitId":"hansstanley"},"content":"         * For example, {@code extractPart(\"parameters:\", \u0027\\n\u0027)} on the string \"Parameters: INDEX\\n\"","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"hansstanley"},"content":"         * will return \"INDEX\".","lastModifiedDate":"2023-03-02"},{"lineNumber":136,"author":{"gitId":"hansstanley"},"content":"         *","lastModifiedDate":"2023-03-02"},{"lineNumber":137,"author":{"gitId":"hansstanley"},"content":"         * Additionally, {@code keyword} and the corresponding part extracted","lastModifiedDate":"2023-03-02"},{"lineNumber":138,"author":{"gitId":"hansstanley"},"content":"         * will be spliced from the feedback string.","lastModifiedDate":"2023-03-02"},{"lineNumber":139,"author":{"gitId":"hansstanley"},"content":"         *","lastModifiedDate":"2023-03-02"},{"lineNumber":140,"author":{"gitId":"hansstanley"},"content":"         * @param keyword Keyword to search for, case-insensitive.","lastModifiedDate":"2023-03-02"},{"lineNumber":141,"author":{"gitId":"hansstanley"},"content":"         * @param endChar Character representing the end of the search.","lastModifiedDate":"2023-03-02"},{"lineNumber":142,"author":{"gitId":"hansstanley"},"content":"         * @return The extracted string if {@code keyword} exists and is not blank;","lastModifiedDate":"2023-03-02"},{"lineNumber":143,"author":{"gitId":"hansstanley"},"content":"         *         {@code null} otherwise.","lastModifiedDate":"2023-03-02"},{"lineNumber":144,"author":{"gitId":"hansstanley"},"content":"         */","lastModifiedDate":"2023-03-02"},{"lineNumber":145,"author":{"gitId":"hansstanley"},"content":"        public String extractPart(String keyword, char endChar) {","lastModifiedDate":"2023-03-02"},{"lineNumber":146,"author":{"gitId":"hansstanley"},"content":"            requireNonNull(keyword);","lastModifiedDate":"2023-03-02"},{"lineNumber":147,"author":{"gitId":"hansstanley"},"content":"            if (keyword.isBlank()) {","lastModifiedDate":"2023-03-02"},{"lineNumber":148,"author":{"gitId":"hansstanley"},"content":"                return null;","lastModifiedDate":"2023-03-02"},{"lineNumber":149,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":150,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":151,"author":{"gitId":"hansstanley"},"content":"            int startIndex \u003d feedback.toLowerCase().indexOf(keyword.toLowerCase());","lastModifiedDate":"2023-03-02"},{"lineNumber":152,"author":{"gitId":"hansstanley"},"content":"            if (startIndex \u003c 0) {","lastModifiedDate":"2023-03-02"},{"lineNumber":153,"author":{"gitId":"hansstanley"},"content":"                return null;","lastModifiedDate":"2023-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":156,"author":{"gitId":"hansstanley"},"content":"            String extractedFeedback;","lastModifiedDate":"2023-03-02"},{"lineNumber":157,"author":{"gitId":"hansstanley"},"content":"            String remainingFeedback \u003d feedback.substring(0, startIndex).trim();","lastModifiedDate":"2023-03-02"},{"lineNumber":158,"author":{"gitId":"hansstanley"},"content":"            startIndex +\u003d keyword.length();","lastModifiedDate":"2023-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"hansstanley"},"content":"            int endIndex \u003d feedback.indexOf(endChar, startIndex);","lastModifiedDate":"2023-03-02"},{"lineNumber":161,"author":{"gitId":"hansstanley"},"content":"            if (endIndex \u003c 0) {","lastModifiedDate":"2023-03-02"},{"lineNumber":162,"author":{"gitId":"hansstanley"},"content":"                extractedFeedback \u003d feedback.substring(startIndex).trim();","lastModifiedDate":"2023-03-02"},{"lineNumber":163,"author":{"gitId":"hansstanley"},"content":"            } else {","lastModifiedDate":"2023-03-02"},{"lineNumber":164,"author":{"gitId":"hansstanley"},"content":"                extractedFeedback \u003d feedback.substring(startIndex, endIndex).trim();","lastModifiedDate":"2023-03-02"},{"lineNumber":165,"author":{"gitId":"hansstanley"},"content":"                remainingFeedback +\u003d endChar + feedback.substring(endIndex).trim();","lastModifiedDate":"2023-03-02"},{"lineNumber":166,"author":{"gitId":"hansstanley"},"content":"            }","lastModifiedDate":"2023-03-02"},{"lineNumber":167,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":168,"author":{"gitId":"hansstanley"},"content":"            feedback \u003d remainingFeedback;","lastModifiedDate":"2023-03-02"},{"lineNumber":169,"author":{"gitId":"hansstanley"},"content":"            return extractedFeedback.isBlank() ? null : extractedFeedback;","lastModifiedDate":"2023-03-02"},{"lineNumber":170,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-02"},{"lineNumber":171,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"hansstanley":147,"igezt":1,"-":23,"rachtan27":1}},{"path":"src/main/java/seedu/address/ui/result/ResultDisplayCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.ui.result;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":" * A UI component that displays a section of command results.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"public class ResultDisplayCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    private static final String FXML \u003d \"result/ResultDisplayCard.fxml\";","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    private Label title;","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    @FXML","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    private Label body;","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    /**","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"     * Creates a {@code ResultDisplayCard} with the given {@code title} and {@code body}.","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    public ResultDisplayCard(String title, String body) {","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"        super(FXML);","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"        Objects.requireNonNull(title);","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        Objects.requireNonNull(body);","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"        this.title.setText(title);","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"        this.body.setText(body);","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"hansstanley":32}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"\u003cStackPane styleClass\u003d\"pane-with-rounded-corner-accented\"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"           xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"hansstanley":2,"-":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":".theme-dark {","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"    -fx-primary: #2c2c2c;","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"    -fx-primary-foreground: derive(#1d1d1d, 40%);","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"    -fx-primary-background: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"    -fx-primary-text: white;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"    -fx-secondary-text: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"    -fx-list-odd: #333333;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"    -fx-list-even: #3c3e3f;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"    -fx-list-selected: #424d5f;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":".theme-light {","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    -fx-primary: #dddddd;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    -fx-primary-foreground: #eeeeee;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    -fx-primary-background: white;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    -fx-primary-text: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    -fx-secondary-text: white;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    -fx-list-odd: #cecece;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    -fx-list-even: #dbdbdb;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    -fx-list-selected: derive(#424d5f, 90%);","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":".label-h1,","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":".label-h2,","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":".label-h3,","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":".label-h4,","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":".label-h5,","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":".label-h6,","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":".label-p {","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"    -fx-text-fill: -fx-primary-text;","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":".label-h1 {","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"    -fx-font-size: 36pt;","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":".label-h2 {","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"    -fx-font-size: 28pt;","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":".label-h3 {","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"    -fx-font-size: 24pt;","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":".label-h4 {","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":".label-h5 {","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"    -fx-font-size: 16pt;","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":".label-h6 {","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-02-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":".label-p {","lastModifiedDate":"2023-02-28"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":67,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":123,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 0; /* so that list cells do not disappear into list view padding */","lastModifiedDate":"2023-02-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"hansstanley"},"content":"    /* Horizontal inset and padding to separate from the parent list view,","lastModifiedDate":"2023-02-27"},{"lineNumber":128,"author":{"gitId":"hansstanley"},"content":"     * and vertical inset and padding to separate from the next list cell.","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"hansstanley"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":130,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 3 0 5 0;","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"hansstanley"},"content":"    -fx-background-insets: 5;","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":133,"author":{"gitId":"hansstanley"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-02-17"},{"lineNumber":134,"author":{"gitId":"hansstanley"},"content":"    -fx-label-padding: 0;","lastModifiedDate":"2023-02-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":139,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: -fx-list-even;","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":143,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: -fx-list-odd;","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":147,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: -fx-list-selected;","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"hansstanley"},"content":"    -fx-text-fill: -fx-primary-text;","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"hansstanley"},"content":".pa { /* full padding */","lastModifiedDate":"2023-02-25"},{"lineNumber":159,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 10;","lastModifiedDate":"2023-02-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":162,"author":{"gitId":"hansstanley"},"content":".pa-t { /* full padding except top */","lastModifiedDate":"2023-02-25"},{"lineNumber":163,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 0 10 10 10;","lastModifiedDate":"2023-02-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":166,"author":{"gitId":"hansstanley"},"content":".pa-r { /* full padding except right */","lastModifiedDate":"2023-02-25"},{"lineNumber":167,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 10 0 10 10;","lastModifiedDate":"2023-02-25"},{"lineNumber":168,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":169,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":170,"author":{"gitId":"hansstanley"},"content":".pa-b { /* full padding except bottom */","lastModifiedDate":"2023-02-25"},{"lineNumber":171,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 10 10 0 10;","lastModifiedDate":"2023-02-25"},{"lineNumber":172,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":173,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":174,"author":{"gitId":"hansstanley"},"content":".pa-l { /* full padding except left */","lastModifiedDate":"2023-02-25"},{"lineNumber":175,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 10 10 10 0;","lastModifiedDate":"2023-02-25"},{"lineNumber":176,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":177,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":178,"author":{"gitId":"hansstanley"},"content":".ph { /* padding horizontal */","lastModifiedDate":"2023-02-25"},{"lineNumber":179,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 0 10 0 10;","lastModifiedDate":"2023-02-25"},{"lineNumber":180,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":181,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":182,"author":{"gitId":"hansstanley"},"content":".pv { /* padding vertical */","lastModifiedDate":"2023-02-25"},{"lineNumber":183,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 10 0 10 0;","lastModifiedDate":"2023-02-25"},{"lineNumber":184,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":185,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":186,"author":{"gitId":"hansstanley"},"content":".pt { /* padding top */","lastModifiedDate":"2023-02-25"},{"lineNumber":187,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 10 0 0 0;","lastModifiedDate":"2023-02-25"},{"lineNumber":188,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":189,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":190,"author":{"gitId":"hansstanley"},"content":".pr { /* padding right */","lastModifiedDate":"2023-02-25"},{"lineNumber":191,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 0 10 0 0;","lastModifiedDate":"2023-02-25"},{"lineNumber":192,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":193,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":194,"author":{"gitId":"hansstanley"},"content":".pb { /* padding bottom */","lastModifiedDate":"2023-02-25"},{"lineNumber":195,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 0 0 10 0;","lastModifiedDate":"2023-02-25"},{"lineNumber":196,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":197,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":198,"author":{"gitId":"hansstanley"},"content":".pl { /* padding left */","lastModifiedDate":"2023-02-25"},{"lineNumber":199,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 0 0 0 10;","lastModifiedDate":"2023-02-25"},{"lineNumber":200,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":201,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":202,"author":{"gitId":"hansstanley"},"content":".p0 {","lastModifiedDate":"2023-02-25"},{"lineNumber":203,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-02-25"},{"lineNumber":204,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-25"},{"lineNumber":205,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":206,"author":{"gitId":"hansstanley"},"content":".pane-transparent {","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-28"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":210,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":211,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: -fx-primary-background;","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"hansstanley"},"content":"    -fx-border-color: -fx-primary;","lastModifiedDate":"2023-03-15"},{"lineNumber":213,"author":{"gitId":"hansstanley"},"content":"    -fx-border-width: 1 0 0 0;","lastModifiedDate":"2023-03-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":216,"author":{"gitId":"hansstanley"},"content":".pane-with-rounded-corner {","lastModifiedDate":"2023-02-17"},{"lineNumber":217,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: -fx-primary-foreground;","lastModifiedDate":"2023-03-15"},{"lineNumber":218,"author":{"gitId":"hansstanley"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-02-17"},{"lineNumber":219,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":220,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":221,"author":{"gitId":"hansstanley"},"content":".pane-with-rounded-corner-accented {","lastModifiedDate":"2023-03-15"},{"lineNumber":222,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: -fx-primary;","lastModifiedDate":"2023-03-15"},{"lineNumber":223,"author":{"gitId":"hansstanley"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-02-17"},{"lineNumber":224,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":225,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":226,"author":{"gitId":"hansstanley"},"content":".pane-with-rounded-corner-muted {","lastModifiedDate":"2023-03-15"},{"lineNumber":227,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: -fx-primary-background;","lastModifiedDate":"2023-03-15"},{"lineNumber":228,"author":{"gitId":"hansstanley"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-03-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":235,"author":{"gitId":"hansstanley"},"content":".result-display .content {","lastModifiedDate":"2023-02-28"},{"lineNumber":236,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-28"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":239,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":241,"author":{"gitId":"hansstanley"},"content":"    -fx-text-fill: -fx-primary-text;","lastModifiedDate":"2023-03-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: -fx-primary-background;","lastModifiedDate":"2023-03-15"},{"lineNumber":258,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 5 10 5 10;","lastModifiedDate":"2023-03-01"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"hansstanley"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-01"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":264,"author":{"gitId":"hansstanley"},"content":"    -fx-text-fill: -fx-primary-text;","lastModifiedDate":"2023-03-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"hansstanley"},"content":".menu-bar .menu-button:hover,","lastModifiedDate":"2023-03-01"},{"lineNumber":269,"author":{"gitId":"hansstanley"},"content":".menu-bar .menu-button:focused,","lastModifiedDate":"2023-03-01"},{"lineNumber":270,"author":{"gitId":"hansstanley"},"content":".menu-bar .menu-button:showing {","lastModifiedDate":"2023-03-01"},{"lineNumber":271,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: -fx-primary;","lastModifiedDate":"2023-03-15"},{"lineNumber":272,"author":{"gitId":"hansstanley"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-01"},{"lineNumber":273,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-01"},{"lineNumber":274,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":275,"author":{"gitId":"hansstanley"},"content":".menu-bar .context-menu {","lastModifiedDate":"2023-03-17"},{"lineNumber":276,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: -fx-primary-foreground;","lastModifiedDate":"2023-03-17"},{"lineNumber":277,"author":{"gitId":"hansstanley"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-17"},{"lineNumber":278,"author":{"gitId":"hansstanley"},"content":"    -fx-background-insets: 10 0 0 0;","lastModifiedDate":"2023-03-17"},{"lineNumber":279,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 10 0 0 0;","lastModifiedDate":"2023-03-17"},{"lineNumber":280,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-17"},{"lineNumber":281,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":282,"author":{"gitId":"hansstanley"},"content":".menu-bar .context-menu .label {","lastModifiedDate":"2023-03-17"},{"lineNumber":283,"author":{"gitId":"hansstanley"},"content":"    -fx-text-fill: -fx-primary-text;","lastModifiedDate":"2023-03-17"},{"lineNumber":284,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-17"},{"lineNumber":285,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":286,"author":{"gitId":"hansstanley"},"content":".menu-item {","lastModifiedDate":"2023-03-01"},{"lineNumber":287,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-17"},{"lineNumber":288,"author":{"gitId":"hansstanley"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-01"},{"lineNumber":289,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-01"},{"lineNumber":290,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":291,"author":{"gitId":"hansstanley"},"content":".menu-item:hover,","lastModifiedDate":"2023-03-01"},{"lineNumber":292,"author":{"gitId":"hansstanley"},"content":".menu-item:focused {","lastModifiedDate":"2023-03-01"},{"lineNumber":293,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: -fx-primary;","lastModifiedDate":"2023-03-15"},{"lineNumber":294,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-01"},{"lineNumber":295,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":296,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":304,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":305,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":340,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":349,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":351,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":355,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":357,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":361,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":363,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":365,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":367,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":368,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":369,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":370,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":371,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":372,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":374,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":375,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":376,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 0 0 0 2;","lastModifiedDate":"2023-02-24"},{"lineNumber":377,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":379,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":380,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: derive(#1d1d1d, 70%);","lastModifiedDate":"2023-02-17"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":382,"author":{"gitId":"hansstanley"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-19"},{"lineNumber":383,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":385,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":386,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":387,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":388,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":390,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":391,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":392,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":394,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":396,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":398,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":399,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":400,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":402,"author":{"gitId":"hansstanley"},"content":".scroll-pane .viewport {","lastModifiedDate":"2023-02-24"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-24"},{"lineNumber":404,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-24"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":406,"author":{"gitId":"hansstanley"},"content":".tab-pane {","lastModifiedDate":"2023-03-15"},{"lineNumber":407,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-03-15"},{"lineNumber":408,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":409,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":410,"author":{"gitId":"hansstanley"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-02-17"},{"lineNumber":411,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 10 0 0 0;","lastModifiedDate":"2023-02-17"},{"lineNumber":412,"author":{"gitId":"hansstanley"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2023-03-15"},{"lineNumber":413,"author":{"gitId":"hansstanley"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2023-03-15"},{"lineNumber":414,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":415,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":416,"author":{"gitId":"hansstanley"},"content":".tab-pane .tab-header-background {","lastModifiedDate":"2023-03-15"},{"lineNumber":417,"author":{"gitId":"hansstanley"},"content":"    -fx-opacity: 0;","lastModifiedDate":"2023-03-15"},{"lineNumber":418,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":419,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":420,"author":{"gitId":"hansstanley"},"content":".tab {","lastModifiedDate":"2023-02-17"},{"lineNumber":421,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":422,"author":{"gitId":"hansstanley"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-02-17"},{"lineNumber":423,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":424,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":425,"author":{"gitId":"hansstanley"},"content":".tab:selected {","lastModifiedDate":"2023-02-17"},{"lineNumber":426,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: -fx-primary;","lastModifiedDate":"2023-03-15"},{"lineNumber":427,"author":{"gitId":"hansstanley"},"content":"    -fx-focus-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":428,"author":{"gitId":"hansstanley"},"content":"    -fx-faint-focus-color: transparent;","lastModifiedDate":"2023-02-17"},{"lineNumber":429,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":430,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":431,"author":{"gitId":"hansstanley"},"content":".tab .tab-label {","lastModifiedDate":"2023-02-17"},{"lineNumber":432,"author":{"gitId":"hansstanley"},"content":"    -fx-text-fill: -fx-primary-text;","lastModifiedDate":"2023-03-15"},{"lineNumber":433,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":434,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":435,"author":{"gitId":"hansstanley"},"content":".tag-accented,","lastModifiedDate":"2023-03-15"},{"lineNumber":436,"author":{"gitId":"hansstanley"},"content":".tag-muted {","lastModifiedDate":"2023-03-15"},{"lineNumber":437,"author":{"gitId":"hansstanley"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-15"},{"lineNumber":438,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 2 4 2 4;","lastModifiedDate":"2023-03-15"},{"lineNumber":439,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-17"},{"lineNumber":440,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":441,"author":{"gitId":"hansstanley"},"content":".tag-accented {","lastModifiedDate":"2023-03-15"},{"lineNumber":442,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: -fx-primary;","lastModifiedDate":"2023-03-15"},{"lineNumber":443,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":444,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":445,"author":{"gitId":"hansstanley"},"content":".tag-muted {","lastModifiedDate":"2023-03-15"},{"lineNumber":446,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: -fx-primary-foreground;","lastModifiedDate":"2023-03-15"},{"lineNumber":447,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":448,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":449,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":450,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":451,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":452,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":454,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":455,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-02-28"},{"lineNumber":456,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":457,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":458,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":459,"author":{"gitId":"hansstanley"},"content":"    -fx-text-fill: -fx-primary-text;","lastModifiedDate":"2023-03-15"},{"lineNumber":460,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":462,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":463,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":464,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":465,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":466,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":467,"author":{"gitId":"hansstanley"},"content":"    -fx-hgap: 5;","lastModifiedDate":"2023-02-27"},{"lineNumber":468,"author":{"gitId":"hansstanley"},"content":"    -fx-vgap: 5;","lastModifiedDate":"2023-02-27"},{"lineNumber":469,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":471,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":472,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":473,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":474,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 2 4 2 4;","lastModifiedDate":"2023-02-27"},{"lineNumber":475,"author":{"gitId":"hansstanley"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2023-02-27"},{"lineNumber":476,"author":{"gitId":"hansstanley"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-02-27"},{"lineNumber":477,"author":{"gitId":"hansstanley"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2023-02-27"},{"lineNumber":478,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":479,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":480,"author":{"gitId":"hansstanley"},"content":"#modules {","lastModifiedDate":"2023-02-28"},{"lineNumber":481,"author":{"gitId":"hansstanley"},"content":"    -fx-hgap: 5;","lastModifiedDate":"2023-02-28"},{"lineNumber":482,"author":{"gitId":"hansstanley"},"content":"    -fx-vgap: 5;","lastModifiedDate":"2023-02-28"},{"lineNumber":483,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":484,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":485,"author":{"gitId":"hansstanley"},"content":"#modules .label {","lastModifiedDate":"2023-02-28"},{"lineNumber":486,"author":{"gitId":"hansstanley"},"content":"    -fx-font-size: 12;","lastModifiedDate":"2023-02-28"},{"lineNumber":487,"author":{"gitId":"hansstanley"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-02-28"},{"lineNumber":488,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: #ec5e45;","lastModifiedDate":"2023-02-28"},{"lineNumber":489,"author":{"gitId":"hansstanley"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-02-28"},{"lineNumber":490,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 2 4 2 4;","lastModifiedDate":"2023-02-28"},{"lineNumber":491,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-02-28"},{"lineNumber":492,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":493,"author":{"gitId":"hansstanley"},"content":"#saveLocationStatus {","lastModifiedDate":"2023-03-01"},{"lineNumber":494,"author":{"gitId":"hansstanley"},"content":"    -fx-font-family: monospace;","lastModifiedDate":"2023-03-01"},{"lineNumber":495,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"hansstanley":232,"-":263}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":".help-message-card {","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: derive(#1d1d1d, 40%);","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":".scroll-bar {","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 0 2 0 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: derive(#1d1d1d, 70%);","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":".scroll-pane .viewport {","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":".scroll-pane {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"#commandsContainer {","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"    -fx-background-color: derive(#1d1d1d, 40%);","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"    -fx-padding: 10;","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"#commandsContainer .label {","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"#copyButton, #helpMessage {","lastModifiedDate":"2021-08-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"#helpMessageContainer {","lastModifiedDate":"2022-01-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"},{"lineNumber":74,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"hansstanley"},"content":"#helpMessageTitle {","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"hansstanley"},"content":"#helpMessageUrl {","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"hansstanley"},"content":"    -fx-text-fill: lightblue;","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"hansstanley"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"hansstanley":64,"-":19}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"\u003cfx:root title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" minHeight\u003d\"400\" minWidth\u003d\"600\" height\u003d\"400\" width\u003d\"600\"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"         xmlns\u003d\"http://javafx.com/javafx/11\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"      \u003cScrollPane fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"        \u003cVBox fx:id\u003d\"helpMessageContainer\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"          \u003cVBox spacing\u003d\"10\" styleClass\u003d\"help-message-card\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"              \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"            \u003cLabel fx:id\u003d\"helpMessageTitle\" text\u003d\"Refer to the user guide:\" /\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"            \u003cLabel fx:id\u003d\"helpMessageUrl\" text\u003d\"\\$url\" /\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"            \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\" /\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"          \u003cVBox fx:id\u003d\"commandsContainer\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"            \u003cLabel text\u003d\"Usage of commands\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"            \u003cSeparator /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"            \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"      \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"hansstanley":24,"-":25}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"         title\u003d\"NeoBook\" minWidth\u003d\"800\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"      \u003cVBox fx:id\u003d\"mainContainer\" styleClass\u003d\"theme-dark\"\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"            \u003cMenuItem fx:id\u003d\"themeToggleItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleThemeToggle\" text\u003d\"Toggle theme\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"        \u003cStackPane fx:id\u003d\"bodyPanelPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border, pa\"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"                   minHeight\u003d\"160\" prefHeight\u003d\"160\" maxHeight\u003d\"160\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border, pa\" /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"hansstanley":7,"-":39}},{"path":"src/main/resources/view/StatusBarFooter.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"\u003cGridPane styleClass\u003d\"status-bar, pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" /\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cLabel fx:id\u003d\"saveLocationStatus\" /\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/GridPane\u003e","lastModifiedDate":"2016-08-26"}],"authorContributionMap":{"hansstanley":1,"-":11}},{"path":"src/main/resources/view/body/BodyPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.TabPane?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"\u003cStackPane xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"    \u003cpadding\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"        \u003cInsets top\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"    \u003c/padding\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"    \u003cTabPane fx:id\u003d\"bodyTabs\" styleClass\u003d\"tab-pane\"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"             tabClosingPolicy\u003d\"UNAVAILABLE\" side\u003d\"BOTTOM\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"hansstanley":13}},{"path":"src/main/resources/view/body/address/AddressPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"      xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"    \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" minWidth\u003d\"320\" maxWidth\u003d\"320\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"            \u003cInsets right\u003d\"10\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"    \u003c/StackPane\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    \u003cStackPane fx:id\u003d\"personDetailPanelPlaceholder\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"hansstanley":14}},{"path":"src/main/resources/view/body/address/PersonDetailCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"\u003cVBox spacing\u003d\"5\" styleClass\u003d\"pane-with-rounded-corner-accented, pa\"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"      xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"    \u003cLabel fx:id\u003d\"title\" styleClass\u003d\"label-h6\" text\u003d\"\\$title\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"    \u003cLabel fx:id\u003d\"body\" styleClass\u003d\"label-p\" text\u003d\"\\$body\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"hansstanley":10}},{"path":"src/main/resources/view/body/address/PersonDetailPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-16"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"\u003cScrollPane fx:id\u003d\"scrollContainer\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" styleClass\u003d\"pane-with-rounded-corner, p0\"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"            xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"    \u003cVBox spacing\u003d\"10\" styleClass\u003d\"pa\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"        \u003cHBox spacing\u003d\"10\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"            \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"label-p, tag-accented\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"            \u003cImageView fx:id\u003d\"star\" fitHeight\u003d\"10\" fitWidth\u003d\"10\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"                \u003cImage url\u003d\"/images/star.png\"/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"            \u003c/ImageView\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"label-h1\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"        \u003cVBox fx:id\u003d\"dataContainer\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-02-16"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"hansstanley":15,"-":7}},{"path":"src/main/resources/view/body/address/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" styleClass\u003d\"ph\"","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"      xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    \u003cHBox spacing\u003d\"10\" styleClass\u003d\"pa\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"      \u003cVBox spacing\u003d\"10\" alignment\u003d\"TOP_CENTER\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"label-h6\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        \u003cImageView fx:id\u003d\"star\" fitHeight\u003d\"10\" fitWidth\u003d\"10\" visible\u003d\"false\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"          \u003cImage url\u003d\"/images/star.png\"/\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"        \u003c/ImageView\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"      \u003cVBox fx:id\u003d\"summaryContainer\" spacing\u003d\"5\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"label-h6\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"        \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"label-p\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hansstanley":24,"-":14}},{"path":"src/main/resources/view/body/address/PersonListDivider.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"\u003cVBox id\u003d\"cardDivider\" spacing\u003d\"5\" styleClass\u003d\"ph\"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"      xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"    \u003cLabel fx:id\u003d\"title\" text\u003d\"\\$title\" styleClass\u003d\"label-h6, pa-b\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"    \u003cSeparator styleClass\u003d\"pa-t\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"hansstanley":11}},{"path":"src/main/resources/view/body/address/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"\u003cVBox styleClass\u003d\"pane-with-rounded-corner\"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"      xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"    \u003cplaceholder\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"      \u003cLabel text\u003d\"No contacts.\" styleClass\u003d\"label-p\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"    \u003c/placeholder\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"  \u003c/ListView\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hansstanley":8,"-":6}},{"path":"src/main/resources/view/body/address/PersonModulesCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"\u003cVBox spacing\u003d\"5\" styleClass\u003d\"pane-with-rounded-corner-accented, pa\"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"      xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"    \u003cLabel fx:id\u003d\"title\" styleClass\u003d\"label-h6\" text\u003d\"\\$title\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"    \u003cFlowPane fx:id\u003d\"modules\" prefWidth\u003d\"-Infinity\" /\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"hansstanley":10}},{"path":"src/main/resources/view/body/calendar/CalendarDayCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"\u003cHBox spacing\u003d\"10\" minHeight\u003d\"100\"","lastModifiedDate":"2023-03-05"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"      styleClass\u003d\"pane-with-rounded-corner-muted, pa\"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"      xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"    \u003cVBox spacing\u003d\"5\" minWidth\u003d\"160\" prefWidth\u003d\"160\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"        \u003cLabel fx:id\u003d\"dateNumber\" text\u003d\"\\$dayOfMonth\" styleClass\u003d\"label-h4\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"        \u003cLabel fx:id\u003d\"day\" text\u003d\"\\$day\" styleClass\u003d\"label-h6\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"        \u003cLabel fx:id\u003d\"dateMonthYear\" text\u003d\"\\$monthAndYear\" styleClass\u003d\"label-h5\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    \u003cVBox fx:id\u003d\"eventsContainer\" spacing\u003d\"10\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"hansstanley":16}},{"path":"src/main/resources/view/body/calendar/CalendarEventCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"\u003cVBox fx:id\u003d\"eventContainer\" spacing\u003d\"20\" styleClass\u003d\"pane-with-rounded-corner-accented, pv\"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"      xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"    \u003cHBox styleClass\u003d\"ph\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"        \u003cVBox spacing\u003d\"5\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"            \u003cLabel fx:id\u003d\"description\" text\u003d\"\\$description\" wrapText\u003d\"true\" styleClass\u003d\"label-h5\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"            \u003cHBox spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"                \u003cLabel fx:id\u003d\"startDateTime\" text\u003d\"\\$startDateTime\" styleClass\u003d\"label-p\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"                \u003cLabel text\u003d\"-\" styleClass\u003d\"label-p\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"                \u003cLabel fx:id\u003d\"endDateTime\" text\u003d\"\\$endDateTime\" styleClass\u003d\"label-p\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"        \u003cVBox spacing\u003d\"5\" prefWidth\u003d\"100\" minWidth\u003d\"100\" alignment\u003d\"TOP_RIGHT\"\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"            \u003cLabel fx:id\u003d\"indexTag\" text\u003d\"\\$index\" StackPane.alignment\u003d\"TOP_RIGHT\" styleClass\u003d\"label-p, tag-muted\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"            \u003cLabel fx:id\u003d\"recurrence\" text\u003d\"\\$recurrence\" styleClass\u003d\"label-p, tag-muted\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    \u003c/HBox\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"    \u003cVBox fx:id\u003d\"attendeesCard\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"        \u003cLabel text\u003d\"Attendees\" styleClass\u003d\"label-p, ph\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        \u003cScrollPane vbarPolicy\u003d\"NEVER\" hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"                    minHeight\u003d\"-Infinity\" styleClass\u003d\"pane-transparent, p0\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"            \u003cHBox fx:id\u003d\"attendees\" spacing\u003d\"5\" styleClass\u003d\"ph\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"        \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"hansstanley":32}},{"path":"src/main/resources/view/body/calendar/CalendarPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"\u003cScrollPane fx:id\u003d\"calendarPlaceholder\" styleClass\u003d\"pane-with-rounded-corner, p0\"","lastModifiedDate":"2023-03-05"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"            fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\"","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"            xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"    \u003cVBox spacing\u003d\"10\" styleClass\u003d\"pa\"\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"        \u003cLabel text\u003d\"Events\" styleClass\u003d\"label-h1\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"        \u003cLabel text\u003d\"Note: recurring events will only show up once on the next earliest occurrence.\"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"               styleClass\u003d\"label-p\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"        \u003cSeparator /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"        \u003cVBox fx:id\u003d\"calendarContent\" spacing\u003d\"10\"\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"            \u003cLabel fx:id\u003d\"calendarContentPlaceholder\"","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"                   text\u003d\"No events\" styleClass\u003d\"label-p, tag-accented\" /\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"hansstanley":22}},{"path":"src/main/resources/view/body/calendar/CalendarPersonTag.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"\u003cLabel fx:id\u003d\"name\" text\u003d\"\\$name\" styleClass\u003d\"label-p, tag-muted\"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"       xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\" /\u003e","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"hansstanley":6}},{"path":"src/main/resources/view/body/user/UserPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"\u003cScrollPane styleClass\u003d\"pane-with-rounded-corner\" fitToWidth\u003d\"true\"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"            xmlns\u003d\"http://javafx.com/javafx\" xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"    \u003cVBox spacing\u003d\"10\" styleClass\u003d\"pa\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$name\" styleClass\u003d\"label-h1\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"        \u003cVBox fx:id\u003d\"dataContainer\" spacing\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"\u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"hansstanley":12}},{"path":"src/main/resources/view/result/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-rounded-corner\"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"           xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"  \u003cScrollPane fx:id\u003d\"scrollContainer\" fitToWidth\u003d\"true\" hbarPolicy\u003d\"NEVER\" styleClass\u003d\"result-display, p0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"    \u003cVBox fx:id\u003d\"resultDisplayContainer\" spacing\u003d\"10\" styleClass\u003d\"result-display, pa\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"      \u003cLabel fx:id\u003d\"resultDisplayLabel\" styleClass\u003d\"label-p\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"  \u003c/ScrollPane\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"hansstanley":15}},{"path":"src/main/resources/view/result/ResultDisplayCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"\u003cVBox spacing\u003d\"5\" styleClass\u003d\"pane-with-rounded-corner-accented, pa\"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"      xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"    \u003cLabel fx:id\u003d\"title\" styleClass\u003d\"label-h6\" text\u003d\"\\$title\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"    \u003cLabel fx:id\u003d\"body\" styleClass\u003d\"label-p\" text\u003d\"\\$body\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"hansstanley":10}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMS_DESC_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MAJOR_DESC_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RACE_DESC_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.ui.tab.TabType;","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.ui.tab.TabUtil;","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.addressbook.JsonAddressBookStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.user.JsonUserDataStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.userpref.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"        JsonUserDataStorage userDataStorage \u003d new JsonUserDataStorage(temporaryFolder.resolve(\"userData.json\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, userDataStorage);","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"        JsonUserDataStorage userDataStorage \u003d new JsonUserDataStorage(","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"                temporaryFolder.resolve(\"ioExceptionUserData.json\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, userDataStorage);","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"rachtan27"},"content":"                + ADDRESS_DESC_AMY + GENDER_DESC_AMY + MAJOR_DESC_AMY + RACE_DESC_AMY + COMMS_DESC_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY)","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"                .withTags()","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"                .build();","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"hansstanley"},"content":"    public void getAddressBook_modify_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"hansstanley"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getAddressBook().getData().remove(0));","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":115,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":116,"author":{"gitId":"hansstanley"},"content":"    public void getAddressBookFilePath_equalsExpected() {","lastModifiedDate":"2023-03-18"},{"lineNumber":117,"author":{"gitId":"hansstanley"},"content":"        assertEquals(model.getAddressBookFilePath(), logic.getAddressBookFilePath());","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"hansstanley"},"content":"    public void getGuiSettings_equalsDefault() {","lastModifiedDate":"2023-03-18"},{"lineNumber":122,"author":{"gitId":"hansstanley"},"content":"        assertEquals(new GuiSettings(), logic.getGuiSettings());","lastModifiedDate":"2023-03-18"},{"lineNumber":123,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":124,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"hansstanley"},"content":"    public void setGuiSettings_setNull_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":127,"author":{"gitId":"hansstanley"},"content":"        assertThrows(NullPointerException.class, () -\u003e logic.setGuiSettings(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":128,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":129,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":130,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"hansstanley"},"content":"    public void setGuiSettings_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"hansstanley"},"content":"        GuiSettings expectedSettings \u003d new GuiSettings();","lastModifiedDate":"2023-03-18"},{"lineNumber":133,"author":{"gitId":"hansstanley"},"content":"        logic.setGuiSettings(expectedSettings);","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"hansstanley"},"content":"        assertEquals(expectedSettings, logic.getGuiSettings());","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":137,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"hansstanley"},"content":"    public void getUserData_equalsExpected() {","lastModifiedDate":"2023-03-18"},{"lineNumber":139,"author":{"gitId":"hansstanley"},"content":"        assertEquals(model.getUserData(), logic.getUserData());","lastModifiedDate":"2023-03-18"},{"lineNumber":140,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":141,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":143,"author":{"gitId":"hansstanley"},"content":"    public void getTabInfoList_hasAllTabs() {","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"hansstanley"},"content":"        assertEquals(new TabUtil(TabType.getAll()).getTabInfoList(), logic.getTabInfoList());","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":146,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":147,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":148,"author":{"gitId":"hansstanley"},"content":"    public void setSelectedTab_validIndex_success() {","lastModifiedDate":"2023-03-18"},{"lineNumber":149,"author":{"gitId":"hansstanley"},"content":"        Index expectedIndex \u003d Index.fromZeroBased(1);","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"hansstanley"},"content":"        model.setSelectedTab(expectedIndex);","lastModifiedDate":"2023-03-18"},{"lineNumber":151,"author":{"gitId":"hansstanley"},"content":"        assertEquals(expectedIndex, model.getSelectedTab().get().getIndex());","lastModifiedDate":"2023-03-18"},{"lineNumber":152,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":153,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":154,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":155,"author":{"gitId":"hansstanley"},"content":"    public void setSelectedTab_invalidIndex_noChange() {","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"hansstanley"},"content":"        Index expectedIndex \u003d model.getSelectedTab().get().getIndex();","lastModifiedDate":"2023-03-18"},{"lineNumber":157,"author":{"gitId":"hansstanley"},"content":"        Index invalidIndex \u003d Index.fromZeroBased(TabType.getAll().length);","lastModifiedDate":"2023-03-18"},{"lineNumber":158,"author":{"gitId":"hansstanley"},"content":"        model.setSelectedTab(invalidIndex);","lastModifiedDate":"2023-03-18"},{"lineNumber":159,"author":{"gitId":"hansstanley"},"content":"        assertEquals(expectedIndex, model.getSelectedTab().get().getIndex());","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":198,"author":{"gitId":"igezt"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserData());","lastModifiedDate":"2023-03-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"igezt"},"content":"        public void saveData(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-13"},{"lineNumber":225,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"hansstanley":57,"igezt":13,"-":153,"rachtan27":5}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"        Person personInList \u003d model.getAddressBook().getData().get(0);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"igezt":4,"-":42}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"import javafx.beans.property.ReadOnlyObjectProperty;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.ui.tab.TabInfo;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.ui.tab.TabUtil;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"import seedu.address.model.ReadOnlyUserData;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"import seedu.address.model.event.Event;","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"import seedu.address.model.user.User;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"hansstanley"},"content":"    private static class ModelStub implements Model {","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"igezt"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"igezt"},"content":"        public Person getPersonWithName(String name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"igezt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"igezt"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"igezt"},"content":"        public boolean hasPersonWithName(String name) {","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"igezt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":156,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"igezt"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"igezt"},"content":"        public Path getUserDataFilePath() {","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"igezt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"igezt"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"igezt"},"content":"        public void setUserDataFilePath(Path userDataFilePath) {","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"igezt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"igezt"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"igezt"},"content":"        public void setUserData(ReadOnlyUserData userData) {","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"igezt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"igezt"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"igezt"},"content":"        public ReadOnlyUserData getUserData() {","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"igezt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"igezt"},"content":"        @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"igezt"},"content":"        public void setUser(User user) {","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"igezt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"igezt"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":194,"author":{"gitId":"igezt"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":195,"author":{"gitId":"igezt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":196,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":197,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":198,"author":{"gitId":"igezt"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":199,"author":{"gitId":"igezt"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":200,"author":{"gitId":"igezt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":201,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":202,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":203,"author":{"gitId":"igezt"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"igezt"},"content":"        public void deleteEvent(Event event) {","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"igezt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":208,"author":{"gitId":"igezt"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":209,"author":{"gitId":"igezt"},"content":"        public ObservableList\u003cEvent\u003e getEvents() {","lastModifiedDate":"2023-03-17"},{"lineNumber":210,"author":{"gitId":"igezt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":211,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":212,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":213,"author":{"gitId":"Shuggan"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":214,"author":{"gitId":"Shuggan"},"content":"        public void tagPersonToEvent(Index eventIndex, Person taggingPerson) {","lastModifiedDate":"2023-03-30"},{"lineNumber":215,"author":{"gitId":"Shuggan"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"Shuggan"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":217,"author":{"gitId":"igezt"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":218,"author":{"gitId":"igezt"},"content":"        public Event getEvent(Index index) {","lastModifiedDate":"2023-03-29"},{"lineNumber":219,"author":{"gitId":"igezt"},"content":"            return null;","lastModifiedDate":"2023-03-29"},{"lineNumber":220,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"igezt"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":223,"author":{"gitId":"igezt"},"content":"        public void setEvent(Event oldEvent, Event newEvent) {","lastModifiedDate":"2023-03-29"},{"lineNumber":224,"author":{"gitId":"igezt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":225,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":226,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":227,"author":{"gitId":"Shuggan"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":228,"author":{"gitId":"nicljr"},"content":"        public boolean isPersonTaggedToEvent(Index index, Person p) {","lastModifiedDate":"2023-03-28"},{"lineNumber":229,"author":{"gitId":"nicljr"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":230,"author":{"gitId":"nicljr"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"igezt"},"content":"        public void untagPersonFromEvent(Index index, Person p) {","lastModifiedDate":"2023-03-27"},{"lineNumber":232,"author":{"gitId":"igezt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":235,"author":{"gitId":"igezt"},"content":"        @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":236,"author":{"gitId":"igezt"},"content":"        public void untagPersonToEvent(Index eventIndex, Person taggingPerson) {","lastModifiedDate":"2023-03-29"},{"lineNumber":237,"author":{"gitId":"igezt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-29"},{"lineNumber":238,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":239,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":240,"author":{"gitId":"hansstanley"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":241,"author":{"gitId":"hansstanley"},"content":"        public boolean isValidTabIndex(Index index) {","lastModifiedDate":"2023-03-14"},{"lineNumber":242,"author":{"gitId":"hansstanley"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":243,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":244,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":245,"author":{"gitId":"hansstanley"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":246,"author":{"gitId":"hansstanley"},"content":"        public TabUtil getTabUtil() {","lastModifiedDate":"2023-03-14"},{"lineNumber":247,"author":{"gitId":"hansstanley"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":248,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":249,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":250,"author":{"gitId":"hansstanley"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":251,"author":{"gitId":"hansstanley"},"content":"        public ReadOnlyObjectProperty\u003cTabInfo\u003e getSelectedTab() {","lastModifiedDate":"2023-03-14"},{"lineNumber":252,"author":{"gitId":"hansstanley"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":253,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"hansstanley"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":256,"author":{"gitId":"hansstanley"},"content":"        public void setSelectedTab(Index index) {","lastModifiedDate":"2023-03-14"},{"lineNumber":257,"author":{"gitId":"hansstanley"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":258,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":259,"author":{"gitId":"rachtan27"},"content":"        @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":260,"author":{"gitId":"rachtan27"},"content":"        public ReadOnlyObjectProperty\u003cPerson\u003e getSelectedPerson() {","lastModifiedDate":"2023-03-22"},{"lineNumber":261,"author":{"gitId":"rachtan27"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":262,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":263,"author":{"gitId":"rachtan27"},"content":"        @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":264,"author":{"gitId":"hansstanley"},"content":"        public void setSelectedPerson(Person person) {","lastModifiedDate":"2023-03-30"},{"lineNumber":265,"author":{"gitId":"rachtan27"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-22"},{"lineNumber":266,"author":{"gitId":"rachtan27"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":267,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":268,"author":{"gitId":"igezt"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":269,"author":{"gitId":"igezt"},"content":"        public void updateAllDateTimes() {","lastModifiedDate":"2023-03-30"},{"lineNumber":270,"author":{"gitId":"igezt"},"content":"            // This method might be called if you use this ModelStub as part of the NeoBook and you execute a","lastModifiedDate":"2023-03-30"},{"lineNumber":271,"author":{"gitId":"igezt"},"content":"            // command.","lastModifiedDate":"2023-03-30"},{"lineNumber":272,"author":{"gitId":"igezt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":273,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":274,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":275,"author":{"gitId":"igezt"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":276,"author":{"gitId":"igezt"},"content":"        public void editPersonForAllEvents(Person personToEdit, Person editedPerson) {","lastModifiedDate":"2023-03-28"},{"lineNumber":277,"author":{"gitId":"igezt"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":278,"author":{"gitId":"igezt"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":289,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":300,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":301,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":307,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":309,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":312,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":317,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":319,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":321,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":322,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"hansstanley":29,"nicljr":3,"Shuggan":5,"igezt":88,"-":193,"rachtan27":7}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"igezt":3,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import seedu.address.ui.enums.LightDarkMode;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"        assertTrue(commandResult.equals(","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"                new CommandResult(\"feedback\", false, false, LightDarkMode.NO_CHANGE)));","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"                LightDarkMode.NO_CHANGE)));","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"rachtan27"},"content":"        assertFalse(commandResult.equals(","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"                new CommandResult(\"feedback\", true, false, LightDarkMode.NO_CHANGE)));","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"rachtan27"},"content":"        assertFalse(commandResult.equals(","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"                new CommandResult(\"feedback\", false, true, LightDarkMode.NO_CHANGE)));","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false,","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"                LightDarkMode.NO_CHANGE)));","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true,","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"                LightDarkMode.NO_CHANGE)));","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false,","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"                LightDarkMode.NO_CHANGE).hashCode());","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true,","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"                LightDarkMode.NO_CHANGE).hashCode());","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"igezt":14,"-":53,"rachtan27":5}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMS;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MAJOR;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RACE;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.editpersoncommandsparser.PersonDescriptor;","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.PredicateKey;","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"rachtan27"},"content":"    public static final String VALID_GENDER_AMY \u003d \"female\";","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"rachtan27"},"content":"    public static final String VALID_GENDER_BOB \u003d \"dns\";","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"rachtan27"},"content":"    public static final String VALID_MAJOR_AMY \u003d \"Computer Science\";","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"rachtan27"},"content":"    public static final String VALID_MAJOR_BOB \u003d \"Chemistry\";","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"rachtan27"},"content":"    public static final String VALID_RACE_AMY \u003d \"Chinese\";","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"rachtan27"},"content":"    public static final String VALID_RACE_BOB \u003d \"Indian\";","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"rachtan27"},"content":"    public static final String VALID_COMMS_AMY \u003d \"Telegram\";","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"rachtan27"},"content":"    public static final String VALID_COMMS_BOB \u003d \"Whatsapp\";","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"rachtan27"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"rachtan27"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"rachtan27"},"content":"    public static final String MAJOR_DESC_AMY \u003d \" \" + PREFIX_MAJOR + VALID_MAJOR_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"rachtan27"},"content":"    public static final String MAJOR_DESC_BOB \u003d \" \" + PREFIX_MAJOR + VALID_MAJOR_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"rachtan27"},"content":"    public static final String RACE_DESC_AMY \u003d \" \" + PREFIX_RACE + VALID_RACE_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"rachtan27"},"content":"    public static final String RACE_DESC_BOB \u003d \" \" + PREFIX_RACE + VALID_RACE_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"rachtan27"},"content":"    public static final String COMMS_DESC_AMY \u003d \" \" + PREFIX_COMMS + VALID_COMMS_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"rachtan27"},"content":"    public static final String COMMS_DESC_BOB \u003d \" \" + PREFIX_COMMS + VALID_COMMS_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"    public static final PersonDescriptor DESC_AMY;","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"    public static final PersonDescriptor DESC_BOB;","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"rachtan27"},"content":"                .withTags(VALID_TAG_FRIEND).withGender(VALID_GENDER_AMY).withMajor(VALID_MAJOR_AMY)","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"rachtan27"},"content":"                .withRace(VALID_RACE_AMY).withComms(VALID_COMMS_AMY).build();","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"igezt"},"content":"        final String[] splitName \u003d person.getName().value.split(\"\\\\s+\");","lastModifiedDate":"2023-03-23"},{"lineNumber":144,"author":{"gitId":"igezt"},"content":"        model.updateFilteredPersonList(new PersonContainsKeywordsPredicate().withField(PredicateKey.NAME,","lastModifiedDate":"2023-03-25"},{"lineNumber":145,"author":{"gitId":"igezt"},"content":"                List.of(splitName[0])));","lastModifiedDate":"2023-03-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"igezt":8,"-":120,"rachtan27":22}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserData());","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getData().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"igezt":5,"-":105}},{"path":"src/test/java/seedu/address/logic/commands/EditContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.editpersoncommandsparser.PersonDescriptor;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"public class EditContactCommandTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"nicljr"},"content":"        Person editedPerson \u003d new PersonBuilder().withTags(\"friends\").build();","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"nicljr"},"content":"        Person expectedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"        PersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"        EditContactCommand editCommand \u003d new EditContactCommand(descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"nicljr"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, expectedPerson);","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"                model.getUserData());","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"nicljr"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), expectedPerson);","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"        PersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"        descriptor.setIndex(Optional.of(indexLastPerson));","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"        EditContactCommand editCommand \u003d new EditContactCommand(descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"                new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"        PersonDescriptor epd \u003d new PersonDescriptor();","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"        epd.setIndex(Optional.of(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-03-09"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"igezt"},"content":"        EditContactCommand editCommand \u003d new EditContactCommand(epd);","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"                model.getUserData());","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"    public void execute_filteredList_success() throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"igezt"},"content":"        PersonDescriptor epd \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"igezt"},"content":"        epd.setIndex(Optional.of(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"igezt"},"content":"        EditContactCommand editCommand \u003d new EditContactCommand(epd);","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"igezt"},"content":"        String expectedMessage \u003d String.format(EditContactCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":110,"author":{"gitId":"igezt"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"igezt"},"content":"                model.getUserData());","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"igezt"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":120,"author":{"gitId":"igezt"},"content":"        PersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"igezt"},"content":"        descriptor.setIndex(Optional.of(INDEX_SECOND_PERSON));","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"igezt"},"content":"        EditContactCommand editCommand \u003d new EditContactCommand(descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"igezt"},"content":"        assertCommandFailure(editCommand, model, EditContactCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"igezt"},"content":"    public void execute_duplicatePersonFilteredList_failure() throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"igezt"},"content":"        Person personInList \u003d model.getAddressBook().getData().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"igezt"},"content":"        PersonDescriptor epd \u003d new EditPersonDescriptorBuilder(personInList).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":134,"author":{"gitId":"igezt"},"content":"        epd.setIndex(Optional.of(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"igezt"},"content":"        EditContactCommand editCommand \u003d new EditContactCommand(epd);","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"igezt"},"content":"        assertCommandFailure(editCommand, model, EditContactCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"igezt"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":143,"author":{"gitId":"igezt"},"content":"        PersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":144,"author":{"gitId":"igezt"},"content":"        descriptor.setIndex(Optional.of(outOfBoundIndex));","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"igezt"},"content":"        EditContactCommand editCommand \u003d new EditContactCommand(descriptor);","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"igezt"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"igezt"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getData().size());","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"igezt"},"content":"        PersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"igezt"},"content":"        descriptor.setIndex(Optional.of(outOfBoundIndex));","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"igezt"},"content":"        EditContactCommand editCommand \u003d new EditContactCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":168,"author":{"gitId":"igezt"},"content":"    public void equals() throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"igezt"},"content":"        DESC_AMY.setIndex(Optional.of(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"igezt"},"content":"        final EditContactCommand standardCommand \u003d new EditContactCommand(DESC_AMY);","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"igezt"},"content":"        PersonDescriptor copyDescriptor \u003d new PersonDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-18"},{"lineNumber":174,"author":{"gitId":"igezt"},"content":"        copyDescriptor.setIndex(Optional.of(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"igezt"},"content":"        EditContactCommand commandWithSameValues \u003d new EditContactCommand(copyDescriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"igezt"},"content":"        DESC_AMY.setIndex(Optional.of(INDEX_SECOND_PERSON));","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"igezt"},"content":"        assertFalse(standardCommand.equals(new EditContactCommand(DESC_AMY)));","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"igezt"},"content":"        DESC_BOB.setIndex(Optional.of(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"igezt"},"content":"        assertFalse(standardCommand.equals(new EditContactCommand(DESC_BOB)));","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"nicljr":4,"igezt":65,"-":127}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import seedu.address.ui.enums.LightDarkMode;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true,","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"                LightDarkMode.NO_CHANGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"igezt":3,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.PredicateKey;","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"        PersonContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"                new PersonContainsKeywordsPredicate().withField(PredicateKey.NAME, Collections.singletonList(\"first\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"        PersonContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"                new PersonContainsKeywordsPredicate().withField(PredicateKey.NAME, Collections.singletonList(\"second\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"        PersonContainsKeywordsPredicate predicate \u003d preparePredicate(\"\");","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"        PersonContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"    private PersonContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"        return new PersonContainsKeywordsPredicate().withField(PredicateKey.NAME,","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"                Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"igezt"},"content":"    //TODO: Test if Find command works for different fields.","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"igezt":16,"-":72}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import seedu.address.ui.enums.LightDarkMode;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false,","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"                LightDarkMode.NO_CHANGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"igezt":3,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"igezt":3,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/PersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.editpersoncommandsparser.PersonDescriptor;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"public class PersonDescriptorTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"        PersonDescriptor descriptorWithSameValues \u003d new PersonDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"        PersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"igezt":4,"-":54}},{"path":"src/test/java/seedu/address/logic/commands/TabCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_ADDRESS_BOOK_TAB;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_CALENDAR_TAB;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.ui.tab.TabInfo;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.ui.tab.TabType;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":" * Contains integration tests (interaction with the model)","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":" * and unit tests for {@code TabCommand}.","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"public class TabCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    private final TabInfo addressBookTabInfo \u003d new TabInfo(INDEX_ADDRESS_BOOK_TAB, TabType.ADDRESS_BOOK);","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"    void execute_validIndex_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"        TabCommand tabCommand \u003d new TabCommand(INDEX_ADDRESS_BOOK_TAB);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"        String expectedMessage \u003d String.format(TabCommand.MESSAGE_SUCCESS, addressBookTabInfo);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"        expectedModel.setSelectedTab(INDEX_ADDRESS_BOOK_TAB);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"        model.setSelectedTab(INDEX_CALENDAR_TAB);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"        assertCommandSuccess(tabCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"    void execute_repeatedIndex_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"        TabCommand tabCommand \u003d new TabCommand(INDEX_ADDRESS_BOOK_TAB);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"        String expectedMessage \u003d String.format(TabCommand.MESSAGE_NO_CHANGE, addressBookTabInfo);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"        expectedModel.setSelectedTab(INDEX_ADDRESS_BOOK_TAB);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"        model.setSelectedTab(INDEX_ADDRESS_BOOK_TAB);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"        assertCommandSuccess(tabCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"    void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"        int tabsSize \u003d model.getTabUtil().getTabInfoList().size();","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(tabsSize + 1);","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"        TabCommand tabCommand \u003d new TabCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"        String expectedMessage \u003d String.format(TabCommand.MESSAGE_INVALID_INDEX, 1, tabsSize);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"        assertCommandFailure(tabCommand, model, expectedMessage);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"hansstanley":61}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMS_DESC_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMMS_DESC_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MAJOR_DESC_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MAJOR_DESC_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RACE_DESC_AMY;","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.commands.CommandTestUtil.RACE_DESC_BOB;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"rachtan27"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + GENDER_DESC_BOB + MAJOR_DESC_BOB + RACE_DESC_BOB","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"rachtan27"},"content":"                + COMMS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"rachtan27"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + GENDER_DESC_BOB + MAJOR_DESC_BOB + RACE_DESC_BOB","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"rachtan27"},"content":"                + COMMS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"rachtan27"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + GENDER_DESC_BOB + MAJOR_DESC_BOB + RACE_DESC_BOB","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"rachtan27"},"content":"                + COMMS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"rachtan27"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + GENDER_DESC_BOB + MAJOR_DESC_BOB + RACE_DESC_BOB","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"rachtan27"},"content":"                + COMMS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"rachtan27"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND + GENDER_DESC_BOB + MAJOR_DESC_BOB + RACE_DESC_BOB","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"rachtan27"},"content":"                + COMMS_DESC_BOB, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"rachtan27"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND + GENDER_DESC_BOB + MAJOR_DESC_BOB + RACE_DESC_BOB","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"rachtan27"},"content":"                + COMMS_DESC_BOB, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":91,"author":{"gitId":"rachtan27"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"rachtan27"},"content":"                + GENDER_DESC_AMY + MAJOR_DESC_AMY + RACE_DESC_AMY + COMMS_DESC_AMY, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"igezt":4,"-":105,"rachtan27":22}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.editpersoncommandsparser.PersonDescriptor;","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.PredicateKey;","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"        PersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"        EditContactCommand command \u003d (EditContactCommand) parser.parseCommand(EditContactCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"        descriptor.setIndex(Optional.of(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"        assertEquals(new EditContactCommand(descriptor), command);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"        List\u003cString\u003e keywordsWithIdentifier \u003d Arrays.asList(\"n/foo\", \"n/bar\", \"n/baz\");","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"                FindCommand.COMMAND_WORD + \" \" + String.join(\" \", keywordsWithIdentifier));","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"        assertEquals(new FindCommand(new PersonContainsKeywordsPredicate()","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"                .withField(PredicateKey.NAME, keywords)), command);","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"igezt":13,"-":92}},{"path":"src/test/java/seedu/address/logic/parser/EditContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.commands.EditContactCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.editpersoncommandsparser.EditContactCommandParser;","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.editpersoncommandsparser.PersonDescriptor;","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"public class EditContactCommandParserTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"    private EditContactCommandParser parser \u003d new EditContactCommandParser();","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"        assertParseFailure(parser, \"1\", EditContactCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"        //assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"igezt"},"content":"    public void parse_allFieldsSpecified_success() throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"igezt"},"content":"        PersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"igezt"},"content":"        descriptor.setIndex(Optional.of(targetIndex));","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"igezt"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"igezt"},"content":"    public void parse_someFieldsSpecified_success() throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"igezt"},"content":"        PersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"igezt"},"content":"        descriptor.setIndex(Optional.of(targetIndex));","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"igezt"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"igezt"},"content":"    public void parse_oneFieldSpecified_success() throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"igezt"},"content":"        PersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":145,"author":{"gitId":"igezt"},"content":"        descriptor.setIndex(Optional.of(targetIndex));","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"igezt"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"igezt"},"content":"        descriptor.setIndex(Optional.of(targetIndex));","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"igezt"},"content":"        expectedCommand \u003d new EditContactCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"igezt"},"content":"        descriptor.setIndex(Optional.of(targetIndex));","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"igezt"},"content":"        expectedCommand \u003d new EditContactCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"igezt"},"content":"        descriptor.setIndex(Optional.of(targetIndex));","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"igezt"},"content":"        expectedCommand \u003d new EditContactCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"igezt"},"content":"        descriptor.setIndex(Optional.of(targetIndex));","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"igezt"},"content":"        expectedCommand \u003d new EditContactCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"igezt"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"igezt"},"content":"        PersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"igezt"},"content":"        descriptor.setIndex(Optional.of(targetIndex));","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"igezt"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"igezt"},"content":"    public void parse_invalidValueFollowedByValidValue_success() throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":199,"author":{"gitId":"igezt"},"content":"        PersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-18"},{"lineNumber":200,"author":{"gitId":"igezt"},"content":"        descriptor.setIndex(Optional.of(targetIndex));","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"igezt"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"igezt"},"content":"        descriptor.setIndex(Optional.of(targetIndex));","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"igezt"},"content":"        expectedCommand \u003d new EditContactCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"igezt"},"content":"    public void parse_resetTags_success() throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"igezt"},"content":"        PersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-03-18"},{"lineNumber":220,"author":{"gitId":"igezt"},"content":"        descriptor.setIndex(Optional.of(targetIndex));","lastModifiedDate":"2023-03-13"},{"lineNumber":221,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":222,"author":{"gitId":"igezt"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"igezt":51,"-":175}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.PredicateKey;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"    public void parse_validNameArgs_returnsFindCommand() {","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"                new FindCommand(new PersonContainsKeywordsPredicate()","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"                        .withField(PredicateKey.NAME, (Arrays.asList(\"Alice\", \"bob\"))));","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"        assertParseSuccess(parser, \" n/Alice n/bob\", expectedFindCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"        assertParseSuccess(parser, \" \\n n/Alice \\n \\t n/bob  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"    public void parse_validAddressArgs_returnsFindCommand() {","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"                new FindCommand(new PersonContainsKeywordsPredicate()","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"                        .withField(PredicateKey.ADDRESS, Arrays.asList(\"Serangoon\", \"Central\")));","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"        assertParseSuccess(parser, \" a/Serangoon a/Central\", expectedFindCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"        assertParseSuccess(parser, \" \\n a/Serangoon \\n \\t a/Central  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"    public void parse_validEmailArgs_returnsFindCommand() {","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"                new FindCommand(new PersonContainsKeywordsPredicate()","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"                        .withField(PredicateKey.EMAIL, Arrays.asList(\"@gmail\", \".com\")));","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"        assertParseSuccess(parser, \" e/@gmail e/.com\", expectedFindCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"        assertParseSuccess(parser, \" \\n e/@gmail \\n \\t e/.com  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"    public void parse_validGenderArgs_returnsFindCommand() {","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"                new FindCommand(new PersonContainsKeywordsPredicate()","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"                        .withField(PredicateKey.GENDER, Arrays.asList(\"ma\", \"le\")));","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"        assertParseSuccess(parser, \" g/ma g/le\", expectedFindCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"        assertParseSuccess(parser, \" \\n g/ma \\n \\t g/le  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"    public void parse_validMajorArgs_returnsFindCommand() {","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"                new FindCommand(new PersonContainsKeywordsPredicate()","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"                        .withField(PredicateKey.MAJOR, Arrays.asList(\"comsci\", \"psych\")));","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"        assertParseSuccess(parser, \" m/comsci m/psych\", expectedFindCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"        assertParseSuccess(parser, \" \\n m/comsci \\n \\t m/psych  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"    public void parse_validModulesArgs_returnsFindCommand() {","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"igezt"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"                new FindCommand(new PersonContainsKeywordsPredicate()","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"                        .withField(PredicateKey.MODULES, Arrays.asList(\"CS2103T\", \"CS2040S\")));","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"        assertParseSuccess(parser, \" mt/CS2103T mt/CS2040S\", expectedFindCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"        assertParseSuccess(parser, \" \\n mt/CS2103T \\n \\t mt/CS2040S  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"    public void parse_validPhoneArgs_returnsFindCommand() {","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"igezt"},"content":"                new FindCommand(new PersonContainsKeywordsPredicate()","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"                        .withField(PredicateKey.PHONE, Arrays.asList(\"123123\", \"9542\")));","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"igezt"},"content":"        assertParseSuccess(parser, \" p/123123 p/9542\", expectedFindCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"igezt"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"igezt"},"content":"        assertParseSuccess(parser, \" \\n p/123123 \\n \\t p/9542  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"igezt"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"igezt"},"content":"    public void parse_validRaceArgs_returnsFindCommand() {","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"igezt"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"igezt"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"igezt"},"content":"                new FindCommand(new PersonContainsKeywordsPredicate()","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"igezt"},"content":"                        .withField(PredicateKey.RACE, Arrays.asList(\"Chi\", \"Malay\")));","lastModifiedDate":"2023-03-25"},{"lineNumber":114,"author":{"gitId":"igezt"},"content":"        assertParseSuccess(parser, \" r/Chi r/Malay\", expectedFindCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"igezt"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"igezt"},"content":"        assertParseSuccess(parser, \" \\n r/Chi \\n \\t r/Malay  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"igezt"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"igezt"},"content":"    public void parse_validTagArgs_returnsFindCommand() {","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"igezt"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"igezt"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"igezt"},"content":"                new FindCommand(new PersonContainsKeywordsPredicate()","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"igezt"},"content":"                        .withField(PredicateKey.TAG, Arrays.asList(\"123123\", \"9542\")));","lastModifiedDate":"2023-03-25"},{"lineNumber":126,"author":{"gitId":"igezt"},"content":"        assertParseSuccess(parser, \" t/123123 t/9542\", expectedFindCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"igezt"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"igezt"},"content":"        assertParseSuccess(parser, \" \\n t/123123 \\n \\t t/9542  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"igezt"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"igezt":102,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Address;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Tags;","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"    private static final String INVALID_ADDRESS \u003d \"@#@!\";","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"        //assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"igezt"},"content":"        //assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"igezt"},"content":"        //assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2023-02-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"igezt"},"content":"        //assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2023-02-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"igezt"},"content":"        //assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2023-02-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"igezt"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).values.isEmpty());","lastModifiedDate":"2023-03-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"igezt"},"content":"        Tags actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"igezt"},"content":"        Tags expectedTagSet \u003d new Tags(new HashSet\u003c\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2))));","lastModifiedDate":"2023-03-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"igezt":15,"-":181}},{"path":"src/test/java/seedu/address/logic/parser/TabCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_ADDRESS_BOOK_TAB;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import seedu.address.logic.commands.TabCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"class TabCommandParserTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    private final TabCommandParser parser \u003d new TabCommandParser();","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    void parse_validArgs_returnTabCommand() {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"        assertParseSuccess(parser, \"1\", new TabCommand(INDEX_ADDRESS_BOOK_TAB));","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"    void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, TabCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"hansstanley":25}},{"path":"src/test/java/seedu/address/logic/ui/tab/TabUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.logic.ui.tab;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":" * Contains unit tests for {@code TabUtil}.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"class TabUtilTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"    private final TabUtil tabUtil \u003d new TabUtil(TabType.ADDRESS_BOOK, TabType.EVENTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"    private final TabInfo addressBookTabInfo \u003d new TabInfo(Index.fromZeroBased(0), TabType.ADDRESS_BOOK);","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    private final TabInfo calendarTabInfo \u003d new TabInfo(Index.fromZeroBased(1), TabType.EVENTS);","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    private final List\u003cTabInfo\u003e tabInfoList \u003d List.of(addressBookTabInfo, calendarTabInfo);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"    void getTabInfoList_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"        List\u003cTabInfo\u003e testList \u003d tabUtil.getTabInfoList();","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"        assertEquals(tabInfoList.size(), testList.size());","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        for (int i \u003d 0; i \u003c tabInfoList.size(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"            assertEquals(tabInfoList.get(i), testList.get(i));","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"    void isIndexInRange_validInput_returnsFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"        for (int i \u003d 0; i \u003c 2; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"            assertTrue(tabUtil.isIndexInRange(Index.fromZeroBased(i)));","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"    void isIndexInRange_invalidInput_returnsFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"        Index indexExceeded \u003d Index.fromZeroBased(2);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"        assertFalse(tabUtil.isIndexInRange(indexExceeded));","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"    void setSelectedTab_validSelection_returnsNewTabInfo() {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"        tabUtil.setSelectedTab(addressBookTabInfo.getIndex());","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"        assertEquals(addressBookTabInfo, tabUtil.getSelectedTab().get());","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"        tabUtil.setSelectedTab(calendarTabInfo.getIndex());","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"        assertEquals(calendarTabInfo, tabUtil.getSelectedTab().get());","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"    void setSelectedTab_invalidSelection_returnsOldTabInfo() {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"        TabInfo oldTabInfo \u003d tabUtil.getSelectedTab().get();","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"        tabUtil.setSelectedTab(Index.fromZeroBased(2));","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"        TabInfo newTabInfo \u003d tabUtil.getSelectedTab().get();","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"        assertEquals(oldTabInfo, newTabInfo);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"hansstanley":60}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"        assertEquals(Collections.emptyList(), addressBook.getData());","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getData().remove(0));","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"        public ObservableList\u003cPerson\u003e getData() {","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"igezt":3,"-":99}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.PersonContainsKeywordsPredicate;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.PredicateKey;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"import seedu.address.model.user.UserData;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4, false));","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4, false);","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":78,"author":{"gitId":"hansstanley"},"content":"    public void setUserDateFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"hansstanley"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserDataFilePath(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":80,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":82,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"hansstanley"},"content":"    public void setUserDataFilePath_validPath_setsUserDataFilePath() {","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"hansstanley"},"content":"        Path path \u003d Paths.get(\"user/data/file/path\");","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"hansstanley"},"content":"        modelManager.setUserDataFilePath(path);","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"hansstanley"},"content":"        assertEquals(path, modelManager.getUserDataFilePath());","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"igezt"},"content":"        UserData userData \u003d new UserData();","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"igezt"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, userData);","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"igezt"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, userData);","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"igezt"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, userData)));","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"igezt"},"content":"        String[] keywords \u003d ALICE.getName().value.split(\"\\\\s+\");","lastModifiedDate":"2023-03-23"},{"lineNumber":136,"author":{"gitId":"igezt"},"content":"        modelManager.updateFilteredPersonList(new PersonContainsKeywordsPredicate().withField(PredicateKey.NAME,","lastModifiedDate":"2023-03-25"},{"lineNumber":137,"author":{"gitId":"igezt"},"content":"                Arrays.asList(keywords)));","lastModifiedDate":"2023-03-25"},{"lineNumber":138,"author":{"gitId":"igezt"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, userData)));","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":146,"author":{"gitId":"igezt"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs, userData)));","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"hansstanley":14,"igezt":12,"-":122}},{"path":"src/test/java/seedu/address/model/event/fields/DateTimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"hansstanley"},"content":"package seedu.address.model.event.fields;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"hansstanley"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"hansstanley"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"hansstanley"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"hansstanley"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"hansstanley"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"hansstanley"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"hansstanley"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"class DateTimeTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"hansstanley"},"content":"    private static final String BAD_FORMAT_STRING \u003d \"2022/01/01 01:01\";","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"hansstanley"},"content":"    private static final String GOOD_FORMAT_STRING \u003d \"2022-01-01 0101\";","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"hansstanley"},"content":"    private static final LocalDateTime TARGET_DATE_TIME \u003d LocalDateTime","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"hansstanley"},"content":"            .of(2022, 1, 1, 1, 1);","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"hansstanley"},"content":"    public void isValidDateTime_nullString_returnsFalse() {","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"hansstanley"},"content":"        assertFalse(DateTime.isValidDateTime(null));","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"hansstanley"},"content":"    public void isValidDateTime_emptyString_returnsFalse() {","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"hansstanley"},"content":"        assertFalse(DateTime.isValidDateTime(\"\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"hansstanley"},"content":"    public void isValidDateTime_badFormat_returnsFalse() {","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"hansstanley"},"content":"        assertFalse(DateTime.isValidDateTime(BAD_FORMAT_STRING));","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"hansstanley"},"content":"    public void isValidDateTime_correctFormat_returnsTrue() {","lastModifiedDate":"2023-03-18"},{"lineNumber":37,"author":{"gitId":"hansstanley"},"content":"        assertTrue(DateTime.isValidDateTime(GOOD_FORMAT_STRING));","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"hansstanley"},"content":"    public void createInvalidDateTime_throwsException() {","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"hansstanley"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DateTime((String) null));","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"hansstanley"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e new DateTime(\"\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"hansstanley"},"content":"        assertThrows(DateTimeParseException.class, () -\u003e new DateTime(BAD_FORMAT_STRING));","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"    public void createValidDateTime() {","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"hansstanley"},"content":"        assertEquals(TARGET_DATE_TIME, new DateTime(GOOD_FORMAT_STRING).getDateTime());","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"hansstanley"},"content":"    public void toString_correctFormat() {","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"hansstanley"},"content":"        assertEquals(GOOD_FORMAT_STRING, new DateTime(GOOD_FORMAT_STRING).toString());","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"hansstanley"},"content":"    @Test","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"hansstanley"},"content":"    public void equals_allEquivalencePartitions() {","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"hansstanley"},"content":"        DateTime targetDateTime \u003d new DateTime(GOOD_FORMAT_STRING);","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"hansstanley"},"content":"        assertEquals(targetDateTime, targetDateTime);","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"hansstanley"},"content":"        assertEquals(targetDateTime, new DateTime(GOOD_FORMAT_STRING));","lastModifiedDate":"2023-03-18"},{"lineNumber":62,"author":{"gitId":"hansstanley"},"content":"        assertNotEquals(targetDateTime, null);","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"hansstanley"},"content":"        assertNotEquals(targetDateTime, new Object());","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"hansstanley"},"content":"        assertNotEquals(targetDateTime, new DateTime(\"2023-02-02 0202\"));","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"hansstanley"},"content":"    }","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"hansstanley"},"content":"}","lastModifiedDate":"2023-03-18"}],"authorContributionMap":{"hansstanley":66}},{"path":"src/test/java/seedu/address/model/person/PersonContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"public class PersonContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"        List\u003cString\u003e firstPredicateKeywordName \u003d List.of(\"first\");","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"        PersonContainsKeywordsPredicate firstPredicate \u003d new PersonContainsKeywordsPredicate()","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"                .withField(PredicateKey.NAME, firstPredicateKeywordName);","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"        PersonContainsKeywordsPredicate secondPredicate \u003d new PersonContainsKeywordsPredicate()","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"                .withField(PredicateKey.NAME, secondPredicateKeywordList);","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"        PersonContainsKeywordsPredicate firstPredicateCopy \u003d new PersonContainsKeywordsPredicate()","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"                .withField(PredicateKey.NAME, firstPredicateKeywordName);","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"        PersonContainsKeywordsPredicate predicate \u003d new PersonContainsKeywordsPredicate()","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"                .withField(PredicateKey.NAME, Collections.singleton(\"Alice\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate()","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"                .withField(PredicateKey.NAME, Collections.singleton(\"Alice\"))","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"                .withField(PredicateKey.ADDRESS, Collections.singleton(\"Bob\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").withAddress(\"Bob\").build()));","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate()","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"                .withField(PredicateKey.NAME, (Arrays.asList(\"Bob\", \"Carol\")));","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate().withField(PredicateKey.NAME, Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"        PersonContainsKeywordsPredicate predicate \u003d new PersonContainsKeywordsPredicate()","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"                .withField(PredicateKey.NAME, Collections.emptyList());","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate().withField(PredicateKey.NAME, List.of(\"Carol\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"        predicate \u003d new PersonContainsKeywordsPredicate()","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"                .withField(PredicateKey.NAME, List.of(\"Bob\"))","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"                .withField(PredicateKey.PHONE, List.of(\"12345\"))","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"                .withField(PredicateKey.EMAIL, List.of(\"alice@email.com\"))","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"                .withField(PredicateKey.ADDRESS, List.of(\"Main Street\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"igezt":25,"-":62}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getSetOfTags().remove(0));","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"igezt":1,"-":90}},{"path":"src/test/java/seedu/address/model/person/fields/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"    //@Test","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"    //public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"    //    String invalidAddress \u003d \"\";","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"    //assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"    //}","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"        //assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"        //assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":27,"rachtan27":8}},{"path":"src/test/java/seedu/address/model/person/fields/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"    //@Test","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"    //public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"    //    String invalidEmail \u003d \"\";","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"    //   assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    //}","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        //blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"        //assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"        //assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":60,"rachtan27":8}},{"path":"src/test/java/seedu/address/model/person/fields/FacultyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"class FacultyTest {","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Faculty(null));","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"    public void constructor_invalidFaculty_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"        String invalidFaculty \u003d \"123\";","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Faculty(invalidFaculty));","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"    public void isValidFaculty() {","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"        // null faculty","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"        assertThrows(NullPointerException.class, () -\u003e Faculty.isValidFaculty(null));","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"        // invalid faculty","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Major.isValidMajor(\"12345\")); // only numbers in faculty","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Major.isValidMajor(\"SchoolOf23Computing\")); // numbers in faculty","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Major.isValidMajor(\"School_Of_Computing\")); // underscore in faculty","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Major.isValidMajor(\"School @ Computing\")); // \u0027@\u0027 in faculty","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Major.isValidMajor(\"School-of-Computing\")); // hyphen in faculty","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Major.isValidMajor(\"#SOC\")); // hashtag in faculty","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Major.isValidMajor(\"SOC!\")); // exclamation mark in faculty","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Major.isValidMajor(\"School^of^computing\")); // \u0027^\u0027 in faculty","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"        // valid faculty","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Major.isValidMajor(\"School Of Computing\")); // normal spelling faculty","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Major.isValidMajor(\"school of computing\")); // lowercase faculty","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Major.isValidMajor(\"SCHOOL OF COMPUTING\")); // uppercase faculty","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Major.isValidMajor(\"ScHoOL Of COmpuTING\")); // mixed case faculty","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Major.isValidMajor(\"soc\")); // single-word faculty","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"rachtan27":45}},{"path":"src/test/java/seedu/address/model/person/fields/FavoriteTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"class FavoriteTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Favorite(null));","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"    public void constructorString_invalidFav_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"        String invalidFav \u003d \"123\";","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Favorite(invalidFav));","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"    public void isValidFavorite() {","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"        // null favorite","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"        assertThrows(NullPointerException.class, () -\u003e Favorite.isValidFavorite(null));","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"        // invalid favorite","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Favorite.isValidFavorite(\"FAV\")); // string fav","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Favorite.isValidFavorite(\"t\")); // lowercase t","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Favorite.isValidFavorite(\"f\")); // lowercase f","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"        // valid favorite","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Favorite.isValidFavorite(\"T\")); // uppercase T","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Favorite.isValidFavorite(\"F\")); // uppercase F","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"rachtan27":36}},{"path":"src/test/java/seedu/address/model/person/fields/GenderTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"class GenderTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Gender(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"    public void constructor_invalidGender_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"        String invalidGender \u003d \"%$\";","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Gender(invalidGender));","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"    public void isValidGender() {","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"        // null email","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"        assertThrows(NullPointerException.class, () -\u003e Gender.isValidGender(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"        // blank gender","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Gender.isValidGender(\" \")); // spaces only","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"        // invalid gender","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"        assertFalse(Gender.isValidGender(\"%$male\")); // invalid gender","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Gender.isValidGender(\"male \")); // trailing space","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Gender.isValidGender(\"fe_male \")); // underscore in gender","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Gender.isValidGender(\" DNS\")); // leading space in gender","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Gender.isValidGender(\"ma-le\")); // hyphen in gender","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"        // valid email","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Gender.isValidGender(\"MALE\")); // uppercase male","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Gender.isValidGender(\"FEMALE\")); // uppercase female","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Gender.isValidGender(\"DNS\")); // uppercase dns","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Gender.isValidGender(\"male\")); // lowercase male","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Gender.isValidGender(\"female\")); // lowercase female","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Gender.isValidGender(\"dns\")); // lowercase dns","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Gender.isValidGender(\"MaLe\")); // mixed case male","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Gender.isValidGender(\"FeMaLe\")); // mixed case female","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Gender.isValidGender(\"dNs\")); // mixed case dns","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"igezt":2,"rachtan27":44}},{"path":"src/test/java/seedu/address/model/person/fields/MajorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"public class MajorTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Major(null));","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"    public void constructor_invalidMajor_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"        String invalidMajor \u003d \"123\";","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Major(invalidMajor));","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"    public void isValidMajor() {","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"        // null major","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"        assertThrows(NullPointerException.class, () -\u003e Major.isValidMajor(null));","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"        // invalid major","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Major.isValidMajor(\"12345\")); // only numbers in major name","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Major.isValidMajor(\"Computer23Science\")); // numbers in major name","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Major.isValidMajor(\"Computer_Science\")); // underscore in major name","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Major.isValidMajor(\"Computer @ Science\")); // \u0027@\u0027 in major name","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Major.isValidMajor(\"Computer-Science\")); // hyphen in major name","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Major.isValidMajor(\"#Chemistry\")); // hashtag in major name","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Major.isValidMajor(\"Chemistry!\")); // exclamation mark in major name","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Major.isValidMajor(\"Chem^is^try\")); // \u0027^\u0027 in major name","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"        // valid major","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Major.isValidMajor(\"Computer Science\")); // normal spelling major name","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Major.isValidMajor(\"computer science\")); // lowercase major name","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Major.isValidMajor(\"COMPUTER SCIENCE\")); // uppercase major name","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Major.isValidMajor(\"CoMpUteR ScieNCE\")); // mixed case major name","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Major.isValidMajor(\"Chemistry\")); // single-word major name","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"rachtan27":44}},{"path":"src/test/java/seedu/address/model/person/fields/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"-":39,"rachtan27":1}},{"path":"src/test/java/seedu/address/model/person/fields/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"        //String invalidPhone \u003d \"\";","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"        //assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"        //assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"igezt":3,"-":36,"rachtan27":1}},{"path":"src/test/java/seedu/address/model/person/fields/RaceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"rachtan27"},"content":"package seedu.address.model.person.fields;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"rachtan27"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"rachtan27"},"content":"class RaceTest {","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"rachtan27"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Race(null));","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"rachtan27"},"content":"    public void constructor_invalidRace_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"rachtan27"},"content":"        String invalidRace \u003d \"123\";","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Race(invalidRace));","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"    @Test","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"    public void isValidRace() {","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"        //null race","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"rachtan27"},"content":"        assertThrows(NullPointerException.class, () -\u003e Race.isValidRace(null));","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"rachtan27"},"content":"        // invalid race","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Race.isValidRace(\"12345\")); // only numbers in race","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Race.isValidRace(\"Chinese23\")); // numbers in race","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Race.isValidRace(\"Malay_Indian\")); // underscore in race","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Race.isValidRace(\"Chinese @ Chinese\")); // \u0027@\u0027 in race","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Race.isValidRace(\"Malay-Malay\")); // hyphen in race","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Race.isValidRace(\"#Indian\")); // hashtag in race","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Race.isValidRace(\"Eurasian!\")); // exclamation mark in race","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"rachtan27"},"content":"        assertFalse(Race.isValidRace(\"Eu^Ra^Sian\")); // \u0027^\u0027 in race","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Race.isValidRace(\"Chinese\")); // normal spelling race","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Race.isValidRace(\"malay\")); // lowercase race","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Major.isValidMajor(\"INDIAN\")); // uppercase race","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Major.isValidMajor(\"EuRaAsiaN\")); // mixed case race","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"rachtan27"},"content":"        assertTrue(Major.isValidMajor(\"Chinese Indian\")); //multiple-word race","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"rachtan27"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"rachtan27":42}},{"path":"src/test/java/seedu/address/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2017-12-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"igezt":1,"-":27}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"igezt"},"content":"//package seedu.address.storage;","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"igezt"},"content":"//","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"igezt"},"content":"//import static seedu.address.storage.addressbook.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"//import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"//import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"//","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"//import java.util.ArrayList;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"//import java.util.List;","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"//import java.util.stream.Collectors;","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"//","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"//","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"//import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"//import seedu.address.model.person.fields.Address;","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"//import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"//import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"//import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"//","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"//public class JsonAdaptedPersonTest {","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"//    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"igezt"},"content":"//    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"igezt"},"content":"//    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"igezt"},"content":"//    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"igezt"},"content":"//    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"//","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"//    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"//    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"//    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"//    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"//    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"//            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"//            .collect(Collectors.toList());","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"//","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"//    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"igezt"},"content":"//    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"igezt"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"igezt"},"content":"//        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"//    }","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"//","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"//    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"//    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"//                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"//        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"//    }","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"igezt"},"content":"//","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"//    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"//    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-02-27"},{"lineNumber":53,"author":{"gitId":"igezt"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":54,"author":{"gitId":"igezt"},"content":"//    }","lastModifiedDate":"2023-02-27"},{"lineNumber":55,"author":{"gitId":"igezt"},"content":"//","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"//    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"//    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"//                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"//        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"//    }","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"//","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"//    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":65,"author":{"gitId":"igezt"},"content":"//    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-02-27"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2023-02-27"},{"lineNumber":68,"author":{"gitId":"igezt"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"igezt"},"content":"//    }","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"//","lastModifiedDate":"2023-02-27"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"//    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"//    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"//        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"//    }","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"//","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"//    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":80,"author":{"gitId":"igezt"},"content":"//    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-02-27"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2023-02-27"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"//    }","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"//","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"//    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":87,"author":{"gitId":"igezt"},"content":"//    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":88,"author":{"gitId":"igezt"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"igezt"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS);","lastModifiedDate":"2023-02-27"},{"lineNumber":90,"author":{"gitId":"igezt"},"content":"//        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-02-27"},{"lineNumber":91,"author":{"gitId":"igezt"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":92,"author":{"gitId":"igezt"},"content":"//    }","lastModifiedDate":"2023-02-27"},{"lineNumber":93,"author":{"gitId":"igezt"},"content":"//","lastModifiedDate":"2023-02-27"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"//    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":95,"author":{"gitId":"igezt"},"content":"//    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":96,"author":{"gitId":"igezt"},"content":"//        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null, VALID_TAGS);","lastModifiedDate":"2023-02-27"},{"lineNumber":97,"author":{"gitId":"igezt"},"content":"//        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2023-02-27"},{"lineNumber":98,"author":{"gitId":"igezt"},"content":"//        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":99,"author":{"gitId":"igezt"},"content":"//    }","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"igezt"},"content":"//","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"//    @Test","lastModifiedDate":"2023-02-27"},{"lineNumber":102,"author":{"gitId":"igezt"},"content":"//    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-02-27"},{"lineNumber":103,"author":{"gitId":"igezt"},"content":"//        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"igezt"},"content":"//        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-02-27"},{"lineNumber":105,"author":{"gitId":"igezt"},"content":"//        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-02-27"},{"lineNumber":106,"author":{"gitId":"igezt"},"content":"//                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags);","lastModifiedDate":"2023-02-27"},{"lineNumber":107,"author":{"gitId":"igezt"},"content":"//        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":108,"author":{"gitId":"igezt"},"content":"//    }","lastModifiedDate":"2023-02-27"},{"lineNumber":109,"author":{"gitId":"igezt"},"content":"//","lastModifiedDate":"2023-02-27"},{"lineNumber":110,"author":{"gitId":"igezt"},"content":"//}","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"igezt":110}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.addressbook.JsonAddressBookStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"igezt"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readData(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"        //assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"igezt"},"content":"        jsonAddressBookStorage.saveData(original, filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"igezt"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readData(filePath).get();","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"        jsonAddressBookStorage.saveData(original, filePath);","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"igezt"},"content":"        readBack \u003d jsonAddressBookStorage.readData(filePath).get();","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"igezt"},"content":"        jsonAddressBookStorage.saveData(original); // file path not specified","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"        readBack \u003d jsonAddressBookStorage.readData().get(); // file path not specified","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"igezt"},"content":"                    .saveData(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"igezt":10,"-":101}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.addressbook.JsonSerializableAddressBook;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"//import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"igezt"},"content":"        //JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"        //        JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"        //AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"        //AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"        //assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"        //assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"igezt"},"content":"        //      dataFromFile::toModelType);","lastModifiedDate":"2023-02-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"igezt":11,"-":37}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.userpref.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":76,"author":{"gitId":"hansstanley"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100, false));","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"hansstanley"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2, false));","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"hansstanley"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5, false));","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"hansstanley":3,"igezt":1,"-":120}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.addressbook.JsonAddressBookStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.user.JsonUserDataStorage;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"import seedu.address.storage.userpref.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"igezt"},"content":"        JsonUserDataStorage userDataStorage \u003d new JsonUserDataStorage(getTempFilePath(\"data\"));","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, userDataStorage);","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"hansstanley"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6, false));","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"hansstanley":1,"igezt":5,"-":66}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"igezt"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.editpersoncommandsparser.PersonDescriptor;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Address;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.CommunicationChannel;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.Gender;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.Major;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.Race;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Tags;","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"igezt"},"content":"    private PersonDescriptor descriptor;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"        descriptor \u003d new PersonDescriptor();","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"igezt"},"content":"    public EditPersonDescriptorBuilder(PersonDescriptor descriptor) {","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"igezt"},"content":"        this.descriptor \u003d new PersonDescriptor(descriptor);","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"        descriptor \u003d new PersonDescriptor();","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"        descriptor.setIndex(Optional.of(Index.fromOneBased(1)));","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"rachtan27"},"content":"     * Sets the {@code Gender} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"rachtan27"},"content":"    public EditPersonDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"rachtan27"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"rachtan27"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"rachtan27"},"content":"     * Sets the {@code Major} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"rachtan27"},"content":"    public EditPersonDescriptorBuilder withMajor(String major) {","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"rachtan27"},"content":"        descriptor.setMajor(new Major(major));","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"rachtan27"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"rachtan27"},"content":"     * Sets the {@code Race} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"rachtan27"},"content":"    public EditPersonDescriptorBuilder withRace(String race) {","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"rachtan27"},"content":"        descriptor.setRace(new Race(race));","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"rachtan27"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"rachtan27"},"content":"     * Sets the {@code Comms} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"rachtan27"},"content":"    public EditPersonDescriptorBuilder withComms(String comms) {","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"rachtan27"},"content":"        descriptor.setComms(new CommunicationChannel(comms));","lastModifiedDate":"2023-03-10"},{"lineNumber":111,"author":{"gitId":"rachtan27"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"igezt"},"content":"        descriptor.setTags(new Tags(tagSet));","lastModifiedDate":"2023-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":124,"author":{"gitId":"igezt"},"content":"    public PersonDescriptor build() {","lastModifiedDate":"2023-03-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"igezt":17,"-":74,"rachtan27":36}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Address;","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.CommunicationChannel;","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Email;","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"rachtan27"},"content":"import seedu.address.model.person.fields.Faculty;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Gender;","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Major;","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Modules;","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Name;","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Phone;","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Race;","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.Tags;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"igezt"},"content":"    public static final String DEFAULT_GENDER \u003d \"Male\";","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"    public static final String DEFAULT_MAJOR \u003d \"Computer Science\";","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"igezt"},"content":"    public static final String DEFAULT_RACE \u003d \"Chinese\";","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"igezt"},"content":"    public static final String DEFAULT_COMMS \u003d \"Telegram\";","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"rachtan27"},"content":"    public static final String DEFAULT_FACULTY \u003d \"School Of Computing\";","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"igezt"},"content":"    private Tags tags;","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"igezt"},"content":"    private Gender gender;","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"igezt"},"content":"    private Major major;","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"    private Modules modules;","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"igezt"},"content":"    private Race race;","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"igezt"},"content":"    private CommunicationChannel comms;","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"rachtan27"},"content":"    private Faculty faculty;","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"igezt"},"content":"        tags \u003d new Tags(new HashSet\u003c\u003e());","lastModifiedDate":"2023-03-23"},{"lineNumber":57,"author":{"gitId":"igezt"},"content":"        this.gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2023-02-27"},{"lineNumber":58,"author":{"gitId":"igezt"},"content":"        this.major \u003d new Major(DEFAULT_MAJOR);","lastModifiedDate":"2023-02-27"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"        this.modules \u003d new Modules(new HashSet\u003c\u003e());","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"igezt"},"content":"        this.race \u003d new Race(DEFAULT_RACE);","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"        this.comms \u003d new CommunicationChannel(DEFAULT_COMMS);","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"rachtan27"},"content":"        this.faculty \u003d new Faculty(DEFAULT_FACULTY);","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"        tags \u003d personToCopy.getTags();","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"        this.gender \u003d personToCopy.getGender();","lastModifiedDate":"2023-02-27"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"        this.major \u003d personToCopy.getMajor();","lastModifiedDate":"2023-02-27"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"        this.modules \u003d personToCopy.getModules();","lastModifiedDate":"2023-02-27"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"        this.race \u003d personToCopy.getRace();","lastModifiedDate":"2023-02-27"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"        this.comms \u003d personToCopy.getComms();","lastModifiedDate":"2023-02-27"},{"lineNumber":79,"author":{"gitId":"rachtan27"},"content":"        this.faculty \u003d personToCopy.getFaculty();","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"igezt"},"content":"        this.tags \u003d new Tags(SampleDataUtil.getTagSet(tags));","lastModifiedDate":"2023-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":122,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":123,"author":{"gitId":"rachtan27"},"content":"     * Sets the {@code Gender} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":124,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":125,"author":{"gitId":"rachtan27"},"content":"    public PersonBuilder withGender(String gender) {","lastModifiedDate":"2023-03-10"},{"lineNumber":126,"author":{"gitId":"rachtan27"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2023-03-10"},{"lineNumber":127,"author":{"gitId":"rachtan27"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":128,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":129,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":130,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":131,"author":{"gitId":"rachtan27"},"content":"     * Sets the {@code Major} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":132,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":133,"author":{"gitId":"rachtan27"},"content":"    public PersonBuilder withMajor(String major) {","lastModifiedDate":"2023-03-10"},{"lineNumber":134,"author":{"gitId":"rachtan27"},"content":"        this.major \u003d new Major(major);","lastModifiedDate":"2023-03-10"},{"lineNumber":135,"author":{"gitId":"rachtan27"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":136,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":137,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":138,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":139,"author":{"gitId":"rachtan27"},"content":"     * Sets the {@code Race} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":140,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":141,"author":{"gitId":"rachtan27"},"content":"    public PersonBuilder withRace(String race) {","lastModifiedDate":"2023-03-10"},{"lineNumber":142,"author":{"gitId":"rachtan27"},"content":"        this.race \u003d new Race(race);","lastModifiedDate":"2023-03-10"},{"lineNumber":143,"author":{"gitId":"rachtan27"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":144,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":145,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":146,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":147,"author":{"gitId":"rachtan27"},"content":"     * Sets the {@code Comms} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":148,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":149,"author":{"gitId":"rachtan27"},"content":"    public PersonBuilder withComms(String comms) {","lastModifiedDate":"2023-03-10"},{"lineNumber":150,"author":{"gitId":"rachtan27"},"content":"        this.comms \u003d new CommunicationChannel(comms);","lastModifiedDate":"2023-03-10"},{"lineNumber":151,"author":{"gitId":"rachtan27"},"content":"        return this;","lastModifiedDate":"2023-03-10"},{"lineNumber":152,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":153,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":154,"author":{"gitId":"rachtan27"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":155,"author":{"gitId":"rachtan27"},"content":"     * Sets the {@code Faculty} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-22"},{"lineNumber":156,"author":{"gitId":"rachtan27"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":157,"author":{"gitId":"rachtan27"},"content":"    public PersonBuilder withFaculty(String faculty) {","lastModifiedDate":"2023-03-22"},{"lineNumber":158,"author":{"gitId":"rachtan27"},"content":"        this.faculty \u003d new Faculty(faculty);","lastModifiedDate":"2023-03-22"},{"lineNumber":159,"author":{"gitId":"rachtan27"},"content":"        return this;","lastModifiedDate":"2023-03-22"},{"lineNumber":160,"author":{"gitId":"rachtan27"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":161,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":162,"author":{"gitId":"igezt"},"content":"    /**","lastModifiedDate":"2023-02-27"},{"lineNumber":163,"author":{"gitId":"igezt"},"content":"     * Builds the {@code person} object","lastModifiedDate":"2023-02-27"},{"lineNumber":164,"author":{"gitId":"igezt"},"content":"     */","lastModifiedDate":"2023-02-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":166,"author":{"gitId":"igezt"},"content":"        return new Person(this.name, this.phone, this.email, this.address, this.gender,","lastModifiedDate":"2023-03-16"},{"lineNumber":167,"author":{"gitId":"hansstanley"},"content":"                this.major, this.modules, this.race, this.tags, this.comms, null, this.faculty);","lastModifiedDate":"2023-03-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"hansstanley":1,"igezt":37,"-":87,"rachtan27":45}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMS;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MAJOR;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"rachtan27"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RACE;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"igezt"},"content":"import seedu.address.logic.parser.editpersoncommandsparser.PersonDescriptor;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.NusMod;","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"igezt"},"content":"import seedu.address.model.person.fields.subfields.Tag;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"rachtan27"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"igezt"},"content":"        sb.append(PREFIX_NAME + person.getName().value + \" \");","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"igezt"},"content":"        person.getSetOfTags().stream().forEach(","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"igezt"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.value + \" \")","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"igezt"},"content":"        sb.append(PREFIX_GENDER + person.getGender().toString() + \" \");","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"igezt"},"content":"        sb.append(PREFIX_MAJOR + person.getMajor().value + \" \");","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"igezt"},"content":"        sb.append(PREFIX_RACE + person.getRace().value + \" \");","lastModifiedDate":"2023-03-23"},{"lineNumber":52,"author":{"gitId":"igezt"},"content":"        sb.append(PREFIX_COMMS + person.getComms().value + \" \");","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"igezt"},"content":"    public static String getEditPersonDescriptorDetails(PersonDescriptor descriptor) {","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"igezt"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.value).append(\" \"));","lastModifiedDate":"2023-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"igezt"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get().getValues();","lastModifiedDate":"2023-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"igezt"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.value).append(\" \"));","lastModifiedDate":"2023-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"igezt"},"content":"        if (descriptor.getModules().isPresent()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":74,"author":{"gitId":"igezt"},"content":"            Set\u003cNusMod\u003e mods \u003d descriptor.getModules().get().getValues();","lastModifiedDate":"2023-03-23"},{"lineNumber":75,"author":{"gitId":"igezt"},"content":"            if (mods.isEmpty()) {","lastModifiedDate":"2023-03-23"},{"lineNumber":76,"author":{"gitId":"igezt"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2023-03-23"},{"lineNumber":77,"author":{"gitId":"igezt"},"content":"            } else {","lastModifiedDate":"2023-03-23"},{"lineNumber":78,"author":{"gitId":"igezt"},"content":"                mods.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.value).append(\" \"));","lastModifiedDate":"2023-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":81,"author":{"gitId":"igezt"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender).append(\" \"));","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"igezt"},"content":"        descriptor.getMajor().ifPresent(major -\u003e sb.append(PREFIX_MAJOR).append(major.value).append(\" \"));","lastModifiedDate":"2023-03-23"},{"lineNumber":83,"author":{"gitId":"igezt"},"content":"        descriptor.getRace().ifPresent(race -\u003e sb.append(PREFIX_RACE).append(race.value).append(\" \"));","lastModifiedDate":"2023-03-23"},{"lineNumber":84,"author":{"gitId":"rachtan27"},"content":"        descriptor.getComms().ifPresent(comms -\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"igezt"},"content":"                sb.append(PREFIX_COMMS).append(comms.value).append(\" \"));","lastModifiedDate":"2023-03-23"},{"lineNumber":86,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"igezt":25,"-":56,"rachtan27":8}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"hansstanley"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"hansstanley"},"content":"    public static final Index INDEX_ADDRESS_BOOK_TAB \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"hansstanley"},"content":"    public static final Index INDEX_CALENDAR_TAB \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"hansstanley":3,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMS_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMS_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MAJOR_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MAJOR_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":17,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RACE_AMY;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"igezt"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RACE_BOB;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"igezt"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"igezt"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"igezt"},"content":"            .withGender(VALID_GENDER_AMY).withMajor(VALID_MAJOR_AMY).withRace(VALID_RACE_AMY).withComms(VALID_COMMS_AMY)","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"igezt"},"content":"            .build();","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":67,"author":{"gitId":"igezt"},"content":"            .withGender(VALID_GENDER_BOB).withMajor(VALID_MAJOR_BOB).withRace(VALID_RACE_BOB).withComms(VALID_COMMS_BOB)","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"igezt":13,"-":75}}]
