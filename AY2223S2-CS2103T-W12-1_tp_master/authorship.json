[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# FriendlyLink","lastModifiedDate":"2023-02-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-02"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-W12-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W12-1/tp/actions)","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-W12-1/tp/branch/master/graph/badge.svg?token\u003dRHIRHCXSMR)](https://codecov.io/gh/AY2223S2-CS2103T-W12-1/tp)","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"[![CodeFactor](https://www.codefactor.io/repository/github/ay2223s2-cs2103t-w12-1/tp/badge)](https://www.codefactor.io/repository/github/ay2223s2-cs2103t-w12-1/tp)","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"## Introducing FriendlyLink","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"The solution to a common problem faced by small NPOs. ","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"It can be challenging to keep track of volunteer and elderly contact information, which is why we\u0027ve created a unique application that not only organizes these details but also matches volunteers with the elderly. With FriendlyLink, administrators can easily manage their database and pair volunteers with the elderly they want to help, all through an intuitive, user-friendly interface. Our goal is to make volunteer and elderly management simple, efficient, and effective, so that NPOs can focus on making a difference in their communities. Whether you\u0027re an administrator looking to streamline your operations or a volunteer eager to lend a helping hand, FriendlyLink is the perfect tool for you.","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"* The project is an ongoing software project for a desktop application (called _FriendlyLink_) used for managing details of elderly members and volunteers for Non-Profit Organisations.","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"* It is **written in OOP fashion** and comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"* For the detailed documentation of this project, see the **[FriendlyLink Product Website](https://ay2223s2-cs2103t-w12-1.github.io/tp/)**.","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"* This project is modified from [AddressBook-Level3 project](https://se-education.org/addressbook-level3) created by the [SE-EDU initiative](https://se-education.org). If you would like to contribute code to the original project, see [se-education.org](https://se-education.org#https://se-education.org/#contributing) for more info.","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"Zxun2":9,"gohyongjing":4,"-":5}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"You can reach us at any one of the following emails:","lastModifiedDate":"2023-02-23"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"* [Tan Wei Zhe](mailto:tweizhe@gmail.com)","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"* [Kong Heyi](mailto:kongheyi1014@gmail.com)","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"* [Quek Jia Zhi, Shaun](mailto:zhacatomn@gmail.com)","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"* [Goh Yong Jing](mailto:e0693145@u.nus.edu)","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"* [Lee Zong Xun](mailto:lzongxun@u.nus.edu)","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"### Tan Wei Zhe","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"\u003cimg src\u003d\"images/wz2k.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"[[github](https://github.com/wz2k)]","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"[[portfolio](team/wz2k.md)]","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"* Role: Developer","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"* Responsibilities:","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"  * Documentation (week 10)","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"  * Code Quality (week 11)","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"  * Team Lead (week 9)","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"  * Integration (week 1, week 12)","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"  * Deliverables and Deadlines (week 8, week 13)","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"heeeyi"},"content":"### Kong Heyi","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"\u003cimg src\u003d\"images/heeeyi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"heeeyi"},"content":"[[github](https://github.com/heeeyi)]","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"heeeyi"},"content":"[[portfolio](team/heeeyi.md)]","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"heeeyi"},"content":"* Role: Developer","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"heeeyi"},"content":"* Responsibilities:","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"heeeyi"},"content":"  * Documentation (week 7, week 12)","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"heeeyi"},"content":"  * Code Quality (week 8, week 13)","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"heeeyi"},"content":"  * Integration (week 9)","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"heeeyi"},"content":"  * Deliverables and Deadlines (week 10)","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"heeeyi"},"content":"  * Team Lead (week 11)","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"### Goh Yong Jing","lastModifiedDate":"2023-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"\u003cimg src\u003d\"images/gohyongjing.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"[[github](http://github.com/gohyongjing)]","lastModifiedDate":"2023-02-25"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"[[portfolio](team/gohyongjing.md)]","lastModifiedDate":"2023-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2023-02-25"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"* Responsibilities:","lastModifiedDate":"2023-02-25"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"  * Team Lead (week 7, 12)","lastModifiedDate":"2023-02-25"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"  * Documentation (week 8, 13)","lastModifiedDate":"2023-02-25"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"  * Code Quality (week 9)","lastModifiedDate":"2023-02-25"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"  * Integration (week 10)","lastModifiedDate":"2023-02-25"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"  * Deliverables and Deadlines (week 11)","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"### Quek Jia Zhi, Shaun","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"\u003cimg src\u003d\"images/zhacatomn.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"[[github](http://github.com/zhacatomn)] [[portfolio](team/zhacatomn.md)]","lastModifiedDate":"2023-02-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"* Responsibilities:","lastModifiedDate":"2023-02-25"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"  * Team Lead (week 8)","lastModifiedDate":"2023-02-25"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"  * Documentation (week 9)","lastModifiedDate":"2023-02-25"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"  * Code Quality (week 10)","lastModifiedDate":"2023-02-25"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"  * Integration (week 11)","lastModifiedDate":"2023-02-25"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"  * Deliverables and Deadlines (week 7, 12)","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"### Lee Zong Xun","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"Zxun2"},"content":"\u003cimg src\u003d\"images/zxun2.png\" width\u003d\"200px\" alt\u003d\"Zxun2\u0027s image\"\u003e","lastModifiedDate":"2023-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"Zxun2"},"content":"[[github](http://github.com/Zxun2)]","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"Zxun2"},"content":"[[portfolio](team/zxun2.md)]","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"Zxun2"},"content":"* Responsibilities:","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"Zxun2"},"content":"  * Team Lead (week 10)","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"Zxun2"},"content":"  * Integration (week 8, 13)","lastModifiedDate":"2023-02-26"},{"lineNumber":87,"author":{"gitId":"Zxun2"},"content":"  * Documentation (week 11)","lastModifiedDate":"2023-02-26"},{"lineNumber":88,"author":{"gitId":"Zxun2"},"content":"  * Code Quality (week 7, 12)","lastModifiedDate":"2023-02-26"},{"lineNumber":89,"author":{"gitId":"Zxun2"},"content":"  * Deliverables and Deadlines (week 9)","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"Zxun2":16,"gohyongjing":10,"wz2k":12,"heeeyi":10,"-":32,"zhacatomn":9}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"* is an administrator of a small Non-Profit Organisation (NPO) who needs to track volunteers and their assigned buddy elderly.","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"* works alone in managing volunteer and elerly information.","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"* tech-savvy.","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"**Value proposition**: FriendlyLink streamlines volunteer and elderly management for single administrators of small NPOs.","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"With its easy-to-use text-based interface and contact management features, say goodbye to manual record-keeping and hello","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"to a more efficient and organised way of managing the volunteers’ and elderly’s contact details.","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"| Priority   | As a …​                                                                                    | I want to …​                                                                           | So that I can…​                                                                   |","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"|------------|--------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------|-----------------------------------------------------------------------------------|","lastModifiedDate":"2023-02-26"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"| `* * *`    | single administrator of small NPOs                                                         | list volunteers                                                                        | see all the volunteers and their information                                      |","lastModifiedDate":"2023-02-25"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"| `* * *`    | single administrator of small NPOs                                                         | add volunteer to the list of volunteers                                                | include new volunteers in the application                                         |","lastModifiedDate":"2023-02-25"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"| `* * *`    | single administrator of small NPOs                                                         | delete volunteers                                                                      | remove volunteers that have left                                                  |","lastModifiedDate":"2023-02-25"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"| `* * *`    | single administrator of small NPOs                                                         | remove all the pairs a volunteer is in                                                 | accurately keep track of which elderly are affected when a volunteer leaves       |","lastModifiedDate":"2023-02-25"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"| `* * *`    | single administrator of small NPOs                                                         | read the list of elderly members                                                       | have a clear view of existing elderly members in system                           |","lastModifiedDate":"2023-02-26"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"| `* * *`    | single administrator of small NPOs                                                         | add a new elderly member to the system                                                 |                                                                                   |","lastModifiedDate":"2023-02-26"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"| `* * *`    | single administrator of small NPOs                                                         | remove an existing elderly member from the system                                      |                                                                                   |","lastModifiedDate":"2023-02-26"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"| `* * *`    | single administrator of small NPOs                                                         | remove all the pairings an elderly member has when he / she is removed from the system | maintain accurate and error-free records of pairings                              |","lastModifiedDate":"2023-02-26"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"| `* * *`    | single administrator of small NPOs                                                         | find the particular elderly member by search of nric                                   | access the information of each elderly member conveniently                        |","lastModifiedDate":"2023-02-26"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"| `* * *`    | single administrator of small NPOs                                                         | edit the particulars of elderly members, such as names or addresses                    | manage elderly information in a more flexible manner                              |","lastModifiedDate":"2023-02-26"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"| `* * *`    | single administrator of small NPOs                                                         | add a pair of a volunteer to an elderly                                                | to make sure every elderly member is taken care of                                |","lastModifiedDate":"2023-02-26"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"| `* * *`    | single administrator of small NPOs                                                         | filter pairs by involved elderly members                                               | to quikcly find involved volunteers when elderly members are in need of attention |","lastModifiedDate":"2023-02-26"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"| `* * *`    | single administrator of small NPOs                                                         | find and list unpaired elderlies                                                       | pair new incoming volunteers easily                                               |","lastModifiedDate":"2023-02-26"},{"lineNumber":73,"author":{"gitId":"Zxun2"},"content":"| `* * *`    | single administrator of small NPOs                                                         | delete a pairing of a volunteer form an elderly                                        | to remove pairs that are no longer used                                           |","lastModifiedDate":"2023-02-26"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"| `* *`      | single administrator of small NPOs                                                         | update volunteers \u0026 volunteer information                                              | keep the volunteer information up-to-date                                         |","lastModifiedDate":"2023-02-25"},{"lineNumber":75,"author":{"gitId":"zhacatomn"},"content":"| `* * `     | single administrator of small NPOs                                                         | search for particular volunteers by keywords                                           | quickly see the volunteer\u0027s details                                               |","lastModifiedDate":"2023-02-25"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"| `* *`      | single administrator of small NPOs                                                         | view nursing / medical courses that volunteers have taken in the past                  | pair an elderly witha more suitable volunteer                                     |","lastModifiedDate":"2023-02-26"},{"lineNumber":77,"author":{"gitId":"Zxun2"},"content":"| `* *`      | single administrator of small NPOs                                                         | filter and list elderly members by keyword search of name                              | increasing efficiency of finding elderly with certain names                       |","lastModifiedDate":"2023-02-26"},{"lineNumber":78,"author":{"gitId":"Zxun2"},"content":"| `* *`      | single administrator of small NPOs                                                         | filter and list elderly members by age group                                           | dedicate more attentions to older members                                         |","lastModifiedDate":"2023-02-26"},{"lineNumber":79,"author":{"gitId":"Zxun2"},"content":"| `* *`      | single administrator of small NPOs                                                         | filter and list elderly members by risk level                                          | dedicate more attentions to members with higher risks                             |","lastModifiedDate":"2023-02-26"},{"lineNumber":80,"author":{"gitId":"Zxun2"},"content":"| `* *`      | single administrator of small NPOs                                                         | filter and list elderly members by region and community                                | pair volunteers who can better reach out to elderly living close-by               |","lastModifiedDate":"2023-02-26"},{"lineNumber":81,"author":{"gitId":"Zxun2"},"content":"| `* *`      | single administrator of small NPOs                                                         | search elderly members by tags                                                         | access the information of elderly members with specific tags                      |","lastModifiedDate":"2023-02-26"},{"lineNumber":82,"author":{"gitId":"Zxun2"},"content":"| `* *`      | single administrator of small NPOs                                                         | rank elderly members in the order of their medical risk level                          | better pair volunteers with more medical knowledge with higher-risk elderly       |","lastModifiedDate":"2023-02-26"},{"lineNumber":83,"author":{"gitId":"Zxun2"},"content":"| `* *`      | single administrator of small NPOs                                                         | keep track of the region and community of the elderly members                          | reach out to the elderly members conveniently                                     |","lastModifiedDate":"2023-02-26"},{"lineNumber":84,"author":{"gitId":"Zxun2"},"content":"| `* *`      | single administrator of small NPOs                                                         | view the last visited time/date of the elderly                                         | know when to plan the next visit                                                  |","lastModifiedDate":"2023-02-26"},{"lineNumber":85,"author":{"gitId":"Zxun2"},"content":"| `* *`      | single administrator of small NPOs                                                         | set up reminder system for elderlies                                                   | plan volunteers to assist on those days                                           |","lastModifiedDate":"2023-02-26"},{"lineNumber":86,"author":{"gitId":"gohyongjing"},"content":"| `* *`      | single administrator of small NPOs                                                         | find a pair by keyword                                                                 | to quickly look up important information when required                            |","lastModifiedDate":"2023-02-25"},{"lineNumber":87,"author":{"gitId":"gohyongjing"},"content":"| `* *`      | single administrator of small NPOs                                                         | view overlapping pairs between the same volunteers or elderly members                  | to take note of overlapping work.                                                 |","lastModifiedDate":"2023-02-25"},{"lineNumber":88,"author":{"gitId":"gohyongjing"},"content":"| `* *`      | single administrator of small NPOs                                                         | filter pairs by tags                                                                   | to quickly find certain groups of elderly members for events or routine checkups  |","lastModifiedDate":"2023-02-25"},{"lineNumber":89,"author":{"gitId":"gohyongjing"},"content":"| `* *`      | single administrator of small NPOs                                                         | see summaries of number of elderly members assigned to each volunteer                  | to evenly distribute workload of volunteers                                       |","lastModifiedDate":"2023-02-25"},{"lineNumber":90,"author":{"gitId":"gohyongjing"},"content":"| `* *`      | single administrator of small NPOs                                                         | see min, max and average number of elderly buddies per volunteer                       | to evenly distribute workload of volunteers or to request for more resources      |","lastModifiedDate":"2023-02-25"},{"lineNumber":91,"author":{"gitId":"Zxun2"},"content":"| `*`        | single administrator of small NPOs                                                         | filter volunteers by tags                                                              | access relevant groups of volunteers quickly                                      |","lastModifiedDate":"2023-02-26"},{"lineNumber":92,"author":{"gitId":"Zxun2"},"content":"| `*`        | single administrator of small NPOs                                                         | manage volunteers by region                                                            | arrange the volunteers such that they can conveniently reach out to the elderly   |","lastModifiedDate":"2023-02-26"},{"lineNumber":93,"author":{"gitId":"Zxun2"},"content":"| `*`        | single administrator of small NPOs                                                         | record the community information of volunteers, but not their specific address         | ensure that the volunteers\u0027 privacy is not compromised                            |","lastModifiedDate":"2023-02-26"},{"lineNumber":94,"author":{"gitId":"Zxun2"},"content":"| `*`        | single administrator of small NPOs                                                         | manage the volunteers\u0027 available dates and time                                        | efficiently find volunteers available for activities                              |","lastModifiedDate":"2023-02-26"},{"lineNumber":95,"author":{"gitId":"Zxun2"},"content":"| `*`        | single administrator of small NPOs                                                         | see how long a volunteer has been with the program                                     | assess their experience                                                           |","lastModifiedDate":"2023-02-26"},{"lineNumber":96,"author":{"gitId":"Zxun2"},"content":"| `*`        | single administrator of small NPOs                                                         | track the befriending history of a volunteer                                           | audit past involvements easily                                                    |","lastModifiedDate":"2023-02-26"},{"lineNumber":97,"author":{"gitId":"Zxun2"},"content":"| `*`        | single administrator of small NPOs                                                         | rank elderly members in the order of their loneliness situation                        | arrange more frequent volunteer visits for more lonely elderly                    |","lastModifiedDate":"2023-02-26"},{"lineNumber":98,"author":{"gitId":"Zxun2"},"content":"| `*`        | single administrator of small NPOs                                                         | track the befriending history of an elderly                                            | audit past involvements easily                                                    |","lastModifiedDate":"2023-02-26"},{"lineNumber":99,"author":{"gitId":"gohyongjing"},"content":"| `*`        | single administrator of small NPOs                                                         | view past pairings                                                                     | to pair up members familiar with each other                                       |","lastModifiedDate":"2023-02-25"},{"lineNumber":100,"author":{"gitId":"gohyongjing"},"content":"| `*`        | single administrator of small NPOs                                                         | making recurring pairings                                                              | to handle recurrent changes in pairs.                                             |","lastModifiedDate":"2023-02-25"},{"lineNumber":101,"author":{"gitId":"gohyongjing"},"content":"| `*`        | single administrator of small NPOs                                                         | adjust frequency and period limit of pairings                                          | to facilitate regular swaps of volunteers and elderly members.                    |","lastModifiedDate":"2023-02-25"},{"lineNumber":102,"author":{"gitId":"gohyongjing"},"content":"| `*`        | single administrator of small NPOs                                                         | track important dates                                                                  | to facilitate regular volunteer check ins on elderly members.                     |","lastModifiedDate":"2023-02-25"},{"lineNumber":103,"author":{"gitId":"gohyongjing"},"content":"| `*`        | single administrator of small NPOs                                                         | set up reminders                                                                       | to remind volunteers of their commitments                                         |","lastModifiedDate":"2023-02-25"},{"lineNumber":104,"author":{"gitId":"Zxun2"},"content":"| `*`        | single administrator of small NPOs                                                         | set up version control of the application                                              | trace commands that are executed throughout the lifetime of the application       | ","lastModifiedDate":"2023-02-26"},{"lineNumber":105,"author":{"gitId":"Zxun2"},"content":"| `*`        | lazy single administrator of small NPOs                                                    | automatically pair up available volunteers to elderlies                                | quickly assign a volunteer to an elderly                                          | ","lastModifiedDate":"2023-02-26"},{"lineNumber":106,"author":{"gitId":"Zxun2"},"content":"| `*`        | efficient single administrator of small NPOs                                               | use natural language dates                                                             | quickly assign add a volunteer availability into the database                     | ","lastModifiedDate":"2023-02-26"},{"lineNumber":107,"author":{"gitId":"Zxun2"},"content":"| `*`        | forgetful single administrator of small NPOs                                               | autocomplete commands                                                                  | quickly complete the commands                                                     |  ","lastModifiedDate":"2023-02-26"},{"lineNumber":108,"author":{"gitId":"Zxun2"},"content":"| `*`        | organized single administrator of small NPOs                                               | add tags to volunteer, elderly and pairs                                               | filter the entities by tags                                                       |  ","lastModifiedDate":"2023-02-26"},{"lineNumber":109,"author":{"gitId":"Zxun2"},"content":"| `*`        | organized single administrator of small NPOs                                               | assign a random integer ID to each entry                                               | retrieve, modify and delete them directly without looking through the list        |  ","lastModifiedDate":"2023-02-26"},{"lineNumber":110,"author":{"gitId":"Zxun2"},"content":"| `*`        | organized single administrator of small NPOs who have used the application for a long time | retrieve summary statistics of elderlies, volunteers, and pairs in the database        | have a better understanding of the organisation and it\u0027s clients                  |  ","lastModifiedDate":"2023-02-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"heeeyi"},"content":"(For all use cases below, the **System** is the `FriendlyLink (FL)` and the **Actor** is the `Admin`, unless specified otherwise)","lastModifiedDate":"2023-02-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"gohyongjing"},"content":"**Use case: UC01- Pairs Volunteer and Elderly**","lastModifiedDate":"2023-02-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"gohyongjing"},"content":"1.  User enters the details of elderly and volunteer to be paired into the application.","lastModifiedDate":"2023-02-25"},{"lineNumber":122,"author":{"gitId":"heeeyi"},"content":"2.  FL adds the pair into the database, and feedbacks the successful addition of the pair.","lastModifiedDate":"2023-02-25"},{"lineNumber":123,"author":{"gitId":"heeeyi"},"content":"3.  User see the pair details appear in the joint list.","lastModifiedDate":"2023-02-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"heeeyi"},"content":"* 1a. FL detects that the elderly is not in the current database.","lastModifiedDate":"2023-02-25"},{"lineNumber":130,"author":{"gitId":"heeeyi"},"content":"    * 1a1. FL informs User that the elderly has not been created.","lastModifiedDate":"2023-02-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":134,"author":{"gitId":"heeeyi"},"content":"* 1b. FL detects that volunteer is not in the current database.","lastModifiedDate":"2023-02-25"},{"lineNumber":135,"author":{"gitId":"heeeyi"},"content":"    * 1b1. FL informs User that the volunteer has not been created.","lastModifiedDate":"2023-02-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":137,"author":{"gitId":"heeeyi"},"content":"    Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":139,"author":{"gitId":"gohyongjing"},"content":"* 1c. FL detects missing arguments or an error in the entered data.","lastModifiedDate":"2023-02-25"},{"lineNumber":140,"author":{"gitId":"gohyongjing"},"content":"    * 1c1. FL feedbacks that entered data is in a wrong format","lastModifiedDate":"2023-02-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"gohyongjing"},"content":"* 1d. FL detects duplicate pair records in the entered data.","lastModifiedDate":"2023-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"heeeyi"},"content":"    * 1d1. FL feedbacks that it is a duplicate record, and rejects the data entry","lastModifiedDate":"2023-02-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":148,"author":{"gitId":"heeeyi"},"content":"    Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":150,"author":{"gitId":"heeeyi"},"content":"**Use case: UC02- Add Elderly**","lastModifiedDate":"2023-02-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":152,"author":{"gitId":"heeeyi"},"content":"**MSS**","lastModifiedDate":"2023-02-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":154,"author":{"gitId":"heeeyi"},"content":"1.  User enters the details of elderly to be added into the application.","lastModifiedDate":"2023-02-25"},{"lineNumber":155,"author":{"gitId":"heeeyi"},"content":"2.  FL adds the elderly into the database, and feedbacks the successful addition of the elderly.","lastModifiedDate":"2023-02-25"},{"lineNumber":156,"author":{"gitId":"heeeyi"},"content":"3.  User see the elderly details appear in the elderly list.","lastModifiedDate":"2023-02-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":158,"author":{"gitId":"heeeyi"},"content":"    Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":160,"author":{"gitId":"heeeyi"},"content":"**Extensions**","lastModifiedDate":"2023-02-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":162,"author":{"gitId":"heeeyi"},"content":"* 1a. FL detects missing arguments or an error in the entered data.","lastModifiedDate":"2023-02-25"},{"lineNumber":163,"author":{"gitId":"heeeyi"},"content":"    * 1a1. FL requests for the correct data.","lastModifiedDate":"2023-02-25"},{"lineNumber":164,"author":{"gitId":"heeeyi"},"content":"    * 1a2. User enters new data.","lastModifiedDate":"2023-02-25"},{"lineNumber":165,"author":{"gitId":"heeeyi"},"content":"    ","lastModifiedDate":"2023-02-25"},{"lineNumber":166,"author":{"gitId":"heeeyi"},"content":"    Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2023-02-25"},{"lineNumber":167,"author":{"gitId":"heeeyi"},"content":"    ","lastModifiedDate":"2023-02-25"},{"lineNumber":168,"author":{"gitId":"heeeyi"},"content":"    Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":170,"author":{"gitId":"heeeyi"},"content":"* 1b. FL detects duplicate elderly records in the entered data.","lastModifiedDate":"2023-02-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":172,"author":{"gitId":"heeeyi"},"content":"    * 1b1. FL informs it is a duplicate record, requests for the new data.","lastModifiedDate":"2023-02-25"},{"lineNumber":173,"author":{"gitId":"heeeyi"},"content":"    * 1b2. User enters new data.","lastModifiedDate":"2023-02-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":175,"author":{"gitId":"heeeyi"},"content":"    Steps 1b1-1b2 are repeated until the data entered are correct.","lastModifiedDate":"2023-02-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":177,"author":{"gitId":"heeeyi"},"content":"    Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":179,"author":{"gitId":"heeeyi"},"content":"**Use case: UC03- Add Volunteer**","lastModifiedDate":"2023-02-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":181,"author":{"gitId":"heeeyi"},"content":"**MSS**","lastModifiedDate":"2023-02-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":183,"author":{"gitId":"heeeyi"},"content":"1.  User enters the details of volunteer to be added into the application.","lastModifiedDate":"2023-02-25"},{"lineNumber":184,"author":{"gitId":"heeeyi"},"content":"2.  FL adds the volunteer into the database, and feedbacks the successful addition of the volunteer.","lastModifiedDate":"2023-02-25"},{"lineNumber":185,"author":{"gitId":"heeeyi"},"content":"3.  User see the volunteer details appear in the volunteer list.","lastModifiedDate":"2023-02-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":187,"author":{"gitId":"heeeyi"},"content":"    Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":189,"author":{"gitId":"heeeyi"},"content":"**Extensions**","lastModifiedDate":"2023-02-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":191,"author":{"gitId":"heeeyi"},"content":"* 1a. FL detects missing arguments or an error in the entered data.","lastModifiedDate":"2023-02-25"},{"lineNumber":192,"author":{"gitId":"heeeyi"},"content":"    * 1a1. FL requests for the correct data.","lastModifiedDate":"2023-02-25"},{"lineNumber":193,"author":{"gitId":"heeeyi"},"content":"    * 1a2. User enters new data.","lastModifiedDate":"2023-02-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":195,"author":{"gitId":"heeeyi"},"content":"  Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2023-02-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":197,"author":{"gitId":"heeeyi"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":199,"author":{"gitId":"heeeyi"},"content":"* 1b. FL detects duplicate volunteer records in the entered data.","lastModifiedDate":"2023-02-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":201,"author":{"gitId":"heeeyi"},"content":"    * 1b1. FL informs it is a duplicate record, requests for the new data.","lastModifiedDate":"2023-02-25"},{"lineNumber":202,"author":{"gitId":"heeeyi"},"content":"    * 1b2. User enters new data.","lastModifiedDate":"2023-02-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":204,"author":{"gitId":"heeeyi"},"content":"  Steps 1b1-1b2 are repeated until the data entered are correct.","lastModifiedDate":"2023-02-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":206,"author":{"gitId":"heeeyi"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":208,"author":{"gitId":"heeeyi"},"content":"**Use case: UC04- Unpair Volunteer and Elderly**","lastModifiedDate":"2023-02-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":210,"author":{"gitId":"heeeyi"},"content":"**MSS**","lastModifiedDate":"2023-02-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":212,"author":{"gitId":"heeeyi"},"content":"1.  User enters the pair details (elderly \u0026 volunteer) to be deleted into FL.","lastModifiedDate":"2023-02-25"},{"lineNumber":213,"author":{"gitId":"heeeyi"},"content":"2.  FL deletes the pair from the database, and feedbacks the successful unpairing.","lastModifiedDate":"2023-02-25"},{"lineNumber":214,"author":{"gitId":"heeeyi"},"content":"3.  User see the pair details removed from the joint list.","lastModifiedDate":"2023-02-25"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":216,"author":{"gitId":"heeeyi"},"content":"    Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"heeeyi"},"content":"**Extensions**","lastModifiedDate":"2023-02-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":220,"author":{"gitId":"heeeyi"},"content":"* 1a. FL detects that the pair is not in the current database.","lastModifiedDate":"2023-02-25"},{"lineNumber":221,"author":{"gitId":"heeeyi"},"content":"    * 1a1. FL informs User that the pair has not been created.","lastModifiedDate":"2023-02-25"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":223,"author":{"gitId":"heeeyi"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":225,"author":{"gitId":"heeeyi"},"content":"* 1b. FL detects missing arguments or an error in the entered data.","lastModifiedDate":"2023-02-25"},{"lineNumber":226,"author":{"gitId":"heeeyi"},"content":"    * 1b1. FL feedbacks that entered data is in a wrong format","lastModifiedDate":"2023-02-25"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":228,"author":{"gitId":"heeeyi"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":230,"author":{"gitId":"heeeyi"},"content":"**Use case: UC05- Delete Volunteer**","lastModifiedDate":"2023-02-25"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":232,"author":{"gitId":"heeeyi"},"content":"**MSS**","lastModifiedDate":"2023-02-25"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":234,"author":{"gitId":"heeeyi"},"content":"1.  User enters the NRIC of the volunteer to be deleted.","lastModifiedDate":"2023-02-25"},{"lineNumber":235,"author":{"gitId":"heeeyi"},"content":"2.  FL deletes the volunteer from the database, and feedbacks the successful deletion of the volunteer.","lastModifiedDate":"2023-02-25"},{"lineNumber":236,"author":{"gitId":"heeeyi"},"content":"3.  User see the volunteer details removed from the volunteer list.","lastModifiedDate":"2023-02-25"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":238,"author":{"gitId":"heeeyi"},"content":"    Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":240,"author":{"gitId":"heeeyi"},"content":"**Extensions**","lastModifiedDate":"2023-02-25"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":242,"author":{"gitId":"heeeyi"},"content":"* 1a. FL detects missing arguments or an error in the entered data.","lastModifiedDate":"2023-02-25"},{"lineNumber":243,"author":{"gitId":"heeeyi"},"content":"    * 1a1. FL requests for the correct data.","lastModifiedDate":"2023-02-25"},{"lineNumber":244,"author":{"gitId":"heeeyi"},"content":"    * 1a2. User enters new data.","lastModifiedDate":"2023-02-25"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":246,"author":{"gitId":"heeeyi"},"content":"  Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2023-02-25"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":248,"author":{"gitId":"heeeyi"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":250,"author":{"gitId":"heeeyi"},"content":"* 1b. FL detects that the volunteer is not inside the records.","lastModifiedDate":"2023-02-25"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":252,"author":{"gitId":"heeeyi"},"content":"    * 1b1. FL informs that the volunteer does not exist, and requests for the new data.","lastModifiedDate":"2023-02-25"},{"lineNumber":253,"author":{"gitId":"heeeyi"},"content":"    * 1b2. User enters new data.","lastModifiedDate":"2023-02-25"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":255,"author":{"gitId":"heeeyi"},"content":"  Steps 1b1-1b2 are repeated until the data entered are correct.","lastModifiedDate":"2023-02-25"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":257,"author":{"gitId":"heeeyi"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":259,"author":{"gitId":"heeeyi"},"content":"**Use case: UC06-  Delete Elderly**","lastModifiedDate":"2023-02-25"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":261,"author":{"gitId":"heeeyi"},"content":"**MSS**","lastModifiedDate":"2023-02-25"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":263,"author":{"gitId":"heeeyi"},"content":"1.  User enters the NRIC of the elderly to be deleted.","lastModifiedDate":"2023-02-25"},{"lineNumber":264,"author":{"gitId":"heeeyi"},"content":"2.  FL deletes the elderly from the database, and feedbacks the successful deletion of the elderly.","lastModifiedDate":"2023-02-25"},{"lineNumber":265,"author":{"gitId":"heeeyi"},"content":"3.  User see the elderly details removed from the elderly list.","lastModifiedDate":"2023-02-25"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":267,"author":{"gitId":"heeeyi"},"content":"    Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":269,"author":{"gitId":"heeeyi"},"content":"**Extensions**","lastModifiedDate":"2023-02-25"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":271,"author":{"gitId":"heeeyi"},"content":"* 1a. FL detects missing arguments or an error in the entered data.","lastModifiedDate":"2023-02-25"},{"lineNumber":272,"author":{"gitId":"heeeyi"},"content":"    * 1a1. FL requests for the correct data.","lastModifiedDate":"2023-02-25"},{"lineNumber":273,"author":{"gitId":"heeeyi"},"content":"    * 1a2. User enters new data.","lastModifiedDate":"2023-02-25"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":275,"author":{"gitId":"heeeyi"},"content":"  Steps 1a1-1a2 are repeated until the data entered are correct.","lastModifiedDate":"2023-02-25"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":277,"author":{"gitId":"heeeyi"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":279,"author":{"gitId":"heeeyi"},"content":"* 1b. FL detects that the elderly is not inside the records.","lastModifiedDate":"2023-02-25"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":281,"author":{"gitId":"heeeyi"},"content":"    * 1b1. FL informs that the elderly does not exist, and requests for the new data.","lastModifiedDate":"2023-02-25"},{"lineNumber":282,"author":{"gitId":"heeeyi"},"content":"    * 1b2. User enters new data.","lastModifiedDate":"2023-02-25"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":284,"author":{"gitId":"heeeyi"},"content":"  Steps 1b1-1b2 are repeated until the data entered are correct.","lastModifiedDate":"2023-02-25"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":286,"author":{"gitId":"heeeyi"},"content":"  Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":288,"author":{"gitId":"heeeyi"},"content":"**Use case: UC07-  Exit application**","lastModifiedDate":"2023-02-25"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":290,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-02-25"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":292,"author":{"gitId":"heeeyi"},"content":"1.  User press the “X” button to exit the application.","lastModifiedDate":"2023-02-25"},{"lineNumber":293,"author":{"gitId":"heeeyi"},"content":"2.  FL closes the application.","lastModifiedDate":"2023-02-25"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"wz2k"},"content":"2.  Should be able to hold up to 100 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-02-22"},{"lineNumber":302,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"wz2k"},"content":"4.  It is up to the user to ensure details of elderlies and volunteers entered into FriendlyLink is valid.","lastModifiedDate":"2023-02-22"},{"lineNumber":304,"author":{"gitId":"wz2k"},"content":"5.  The user should be responsible for the security of the data stored in FriendlyLink.","lastModifiedDate":"2023-02-22"},{"lineNumber":305,"author":{"gitId":"wz2k"},"content":"6.  FriendlyLink is only available in english","lastModifiedDate":"2023-02-22"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"wz2k"},"content":"| Term         | Definition                                                                               |","lastModifiedDate":"2023-02-22"},{"lineNumber":310,"author":{"gitId":"wz2k"},"content":"|--------------|------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-02-22"},{"lineNumber":311,"author":{"gitId":"wz2k"},"content":"| FriendlyLink | The name of the application                                                              |","lastModifiedDate":"2023-02-22"},{"lineNumber":312,"author":{"gitId":"wz2k"},"content":"| Volunteer    | Volunteers who are willing to pair up with and accompany Elderly members                 |","lastModifiedDate":"2023-02-22"},{"lineNumber":313,"author":{"gitId":"wz2k"},"content":"| Elderly      | Elderlies who need help from their buddies                                               |","lastModifiedDate":"2023-02-22"},{"lineNumber":314,"author":{"gitId":"wz2k"},"content":"| Pair         | The pair of people that consists of an elderly and the volunteer assigned to the elderly |","lastModifiedDate":"2023-02-22"},{"lineNumber":315,"author":{"gitId":"wz2k"},"content":"| NRIC         | A unique identifier given to all Singaporeans.                                           |","lastModifiedDate":"2023-02-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Zxun2":36,"gohyongjing":18,"wz2k":14,"heeeyi":96,"-":147,"zhacatomn":6}},{"path":"docs/DeveloperGuideOriginal.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"layout: page","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"title: Developer Guide","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"* Table of Contents","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"{:toc}","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"## **Acknowledgements**","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"## **Setting up, getting started**","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"## **Design**","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"### Architecture","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"**Main components of the architecture**","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"wz2k"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"wz2k"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"wz2k"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"wz2k"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"wz2k"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"wz2k"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"wz2k"},"content":"The sections below give more details of each component.","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"wz2k"},"content":"### UI component","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"wz2k"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"wz2k"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":76,"author":{"gitId":"wz2k"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":78,"author":{"gitId":"wz2k"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"wz2k"},"content":"The `UI` component,","lastModifiedDate":"2023-02-22"},{"lineNumber":81,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"wz2k"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"wz2k"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"wz2k"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"wz2k"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":87,"author":{"gitId":"wz2k"},"content":"### Logic component","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"wz2k"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"wz2k"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"wz2k"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"wz2k"},"content":"How the `Logic` component works:","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"wz2k"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"wz2k"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"wz2k"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"wz2k"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2023-02-22"},{"lineNumber":100,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"wz2k"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"wz2k"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":105,"author":{"gitId":"wz2k"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"wz2k"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":107,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"wz2k"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":110,"author":{"gitId":"wz2k"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"wz2k"},"content":"How the parsing works:","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"wz2k"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"wz2k"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"wz2k"},"content":"### Model component","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"wz2k"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-02-22"},{"lineNumber":118,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"wz2k"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"wz2k"},"content":"The `Model` component,","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"wz2k"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"wz2k"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-02-22"},{"lineNumber":126,"author":{"gitId":"wz2k"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-02-22"},{"lineNumber":127,"author":{"gitId":"wz2k"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2023-02-22"},{"lineNumber":128,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":129,"author":{"gitId":"wz2k"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":131,"author":{"gitId":"wz2k"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":132,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":133,"author":{"gitId":"wz2k"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":134,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":135,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":136,"author":{"gitId":"wz2k"},"content":"### Storage component","lastModifiedDate":"2023-02-22"},{"lineNumber":137,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":138,"author":{"gitId":"wz2k"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-02-22"},{"lineNumber":139,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":140,"author":{"gitId":"wz2k"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":141,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":142,"author":{"gitId":"wz2k"},"content":"The `Storage` component,","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"wz2k"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2023-02-22"},{"lineNumber":144,"author":{"gitId":"wz2k"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-02-22"},{"lineNumber":145,"author":{"gitId":"wz2k"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2023-02-22"},{"lineNumber":146,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":147,"author":{"gitId":"wz2k"},"content":"### Common classes","lastModifiedDate":"2023-02-22"},{"lineNumber":148,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":149,"author":{"gitId":"wz2k"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2023-02-22"},{"lineNumber":150,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":151,"author":{"gitId":"wz2k"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-02-22"},{"lineNumber":152,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":153,"author":{"gitId":"wz2k"},"content":"## **Implementation**","lastModifiedDate":"2023-02-22"},{"lineNumber":154,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":155,"author":{"gitId":"wz2k"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2023-02-22"},{"lineNumber":156,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":157,"author":{"gitId":"wz2k"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2023-02-22"},{"lineNumber":158,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":159,"author":{"gitId":"wz2k"},"content":"#### Proposed Implementation","lastModifiedDate":"2023-02-22"},{"lineNumber":160,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":161,"author":{"gitId":"wz2k"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2023-02-22"},{"lineNumber":162,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":163,"author":{"gitId":"wz2k"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2023-02-22"},{"lineNumber":164,"author":{"gitId":"wz2k"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2023-02-22"},{"lineNumber":165,"author":{"gitId":"wz2k"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2023-02-22"},{"lineNumber":166,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":167,"author":{"gitId":"wz2k"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2023-02-22"},{"lineNumber":168,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":169,"author":{"gitId":"wz2k"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2023-02-22"},{"lineNumber":170,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":171,"author":{"gitId":"wz2k"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-02-22"},{"lineNumber":172,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":173,"author":{"gitId":"wz2k"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2023-02-22"},{"lineNumber":174,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":175,"author":{"gitId":"wz2k"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2023-02-22"},{"lineNumber":176,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":177,"author":{"gitId":"wz2k"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2023-02-22"},{"lineNumber":178,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":179,"author":{"gitId":"wz2k"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2023-02-22"},{"lineNumber":180,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":181,"author":{"gitId":"wz2k"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2023-02-22"},{"lineNumber":182,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":183,"author":{"gitId":"wz2k"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2023-02-22"},{"lineNumber":184,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":185,"author":{"gitId":"wz2k"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":186,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":187,"author":{"gitId":"wz2k"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-02-22"},{"lineNumber":188,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":189,"author":{"gitId":"wz2k"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2023-02-22"},{"lineNumber":190,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":191,"author":{"gitId":"wz2k"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-02-22"},{"lineNumber":192,"author":{"gitId":"wz2k"},"content":"than attempting to perform the undo.","lastModifiedDate":"2023-02-22"},{"lineNumber":193,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":194,"author":{"gitId":"wz2k"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":195,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":196,"author":{"gitId":"wz2k"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2023-02-22"},{"lineNumber":197,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":198,"author":{"gitId":"wz2k"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2023-02-22"},{"lineNumber":199,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":200,"author":{"gitId":"wz2k"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-02-22"},{"lineNumber":201,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":202,"author":{"gitId":"wz2k"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":203,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":204,"author":{"gitId":"wz2k"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2023-02-22"},{"lineNumber":205,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":206,"author":{"gitId":"wz2k"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2023-02-22"},{"lineNumber":207,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":208,"author":{"gitId":"wz2k"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":209,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":210,"author":{"gitId":"wz2k"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2023-02-22"},{"lineNumber":211,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":212,"author":{"gitId":"wz2k"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2023-02-22"},{"lineNumber":213,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":214,"author":{"gitId":"wz2k"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2023-02-22"},{"lineNumber":215,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":216,"author":{"gitId":"wz2k"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2023-02-22"},{"lineNumber":217,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":218,"author":{"gitId":"wz2k"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2023-02-22"},{"lineNumber":219,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":220,"author":{"gitId":"wz2k"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":221,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":222,"author":{"gitId":"wz2k"},"content":"#### Design considerations:","lastModifiedDate":"2023-02-22"},{"lineNumber":223,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":224,"author":{"gitId":"wz2k"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2023-02-22"},{"lineNumber":225,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":226,"author":{"gitId":"wz2k"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2023-02-22"},{"lineNumber":227,"author":{"gitId":"wz2k"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2023-02-22"},{"lineNumber":228,"author":{"gitId":"wz2k"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2023-02-22"},{"lineNumber":229,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":230,"author":{"gitId":"wz2k"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2023-02-22"},{"lineNumber":231,"author":{"gitId":"wz2k"},"content":"  itself.","lastModifiedDate":"2023-02-22"},{"lineNumber":232,"author":{"gitId":"wz2k"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2023-02-22"},{"lineNumber":233,"author":{"gitId":"wz2k"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2023-02-22"},{"lineNumber":234,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":235,"author":{"gitId":"wz2k"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2023-02-22"},{"lineNumber":236,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":237,"author":{"gitId":"wz2k"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2023-02-22"},{"lineNumber":238,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":239,"author":{"gitId":"wz2k"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2023-02-22"},{"lineNumber":240,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":241,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":242,"author":{"gitId":"wz2k"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-02-22"},{"lineNumber":243,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":244,"author":{"gitId":"wz2k"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2023-02-22"},{"lineNumber":245,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":246,"author":{"gitId":"wz2k"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2023-02-22"},{"lineNumber":247,"author":{"gitId":"wz2k"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2023-02-22"},{"lineNumber":248,"author":{"gitId":"wz2k"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2023-02-22"},{"lineNumber":249,"author":{"gitId":"wz2k"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2023-02-22"},{"lineNumber":250,"author":{"gitId":"wz2k"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2023-02-22"},{"lineNumber":251,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":252,"author":{"gitId":"wz2k"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-02-22"},{"lineNumber":253,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":254,"author":{"gitId":"wz2k"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2023-02-22"},{"lineNumber":255,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":256,"author":{"gitId":"wz2k"},"content":"### Product scope","lastModifiedDate":"2023-02-22"},{"lineNumber":257,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":258,"author":{"gitId":"wz2k"},"content":"**Target user profile**:","lastModifiedDate":"2023-02-22"},{"lineNumber":259,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":260,"author":{"gitId":"wz2k"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2023-02-22"},{"lineNumber":261,"author":{"gitId":"wz2k"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2023-02-22"},{"lineNumber":262,"author":{"gitId":"wz2k"},"content":"* can type fast","lastModifiedDate":"2023-02-22"},{"lineNumber":263,"author":{"gitId":"wz2k"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2023-02-22"},{"lineNumber":264,"author":{"gitId":"wz2k"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2023-02-22"},{"lineNumber":265,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":266,"author":{"gitId":"wz2k"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2023-02-22"},{"lineNumber":267,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":268,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":269,"author":{"gitId":"wz2k"},"content":"### User stories","lastModifiedDate":"2023-02-22"},{"lineNumber":270,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":271,"author":{"gitId":"wz2k"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2023-02-22"},{"lineNumber":272,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":273,"author":{"gitId":"wz2k"},"content":"| Priority | As a …​                                    | I want to …​                     | So that I can…​                                                        |","lastModifiedDate":"2023-02-22"},{"lineNumber":274,"author":{"gitId":"wz2k"},"content":"| -------- | ------------------------------------------ | ------------------------------ | ---------------------------------------------------------------------- |","lastModifiedDate":"2023-02-22"},{"lineNumber":275,"author":{"gitId":"wz2k"},"content":"| `* * *`  | new user                                   | see usage instructions         | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2023-02-22"},{"lineNumber":276,"author":{"gitId":"wz2k"},"content":"| `* * *`  | user                                       | add a new person               |                                                                        |","lastModifiedDate":"2023-02-22"},{"lineNumber":277,"author":{"gitId":"wz2k"},"content":"| `* * *`  | user                                       | delete a person                | remove entries that I no longer need                                   |","lastModifiedDate":"2023-02-22"},{"lineNumber":278,"author":{"gitId":"wz2k"},"content":"| `* * *`  | user                                       | find a person by name          | locate details of persons without having to go through the entire list |","lastModifiedDate":"2023-02-22"},{"lineNumber":279,"author":{"gitId":"wz2k"},"content":"| `* *`    | user                                       | hide private contact details   | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2023-02-22"},{"lineNumber":280,"author":{"gitId":"wz2k"},"content":"| `*`      | user with many persons in the address book | sort persons by name           | locate a person easily                                                 |","lastModifiedDate":"2023-02-22"},{"lineNumber":281,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":282,"author":{"gitId":"wz2k"},"content":"*{More to be added}*","lastModifiedDate":"2023-02-22"},{"lineNumber":283,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":284,"author":{"gitId":"wz2k"},"content":"### Use cases","lastModifiedDate":"2023-02-22"},{"lineNumber":285,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":286,"author":{"gitId":"wz2k"},"content":"(For all use cases below, the **System** is the `AddressBook` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-02-22"},{"lineNumber":287,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":288,"author":{"gitId":"wz2k"},"content":"**Use case: Delete a person**","lastModifiedDate":"2023-02-22"},{"lineNumber":289,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":290,"author":{"gitId":"wz2k"},"content":"**MSS**","lastModifiedDate":"2023-02-22"},{"lineNumber":291,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":292,"author":{"gitId":"wz2k"},"content":"1.  User requests to list persons","lastModifiedDate":"2023-02-22"},{"lineNumber":293,"author":{"gitId":"wz2k"},"content":"2.  AddressBook shows a list of persons","lastModifiedDate":"2023-02-22"},{"lineNumber":294,"author":{"gitId":"wz2k"},"content":"3.  User requests to delete a specific person in the list","lastModifiedDate":"2023-02-22"},{"lineNumber":295,"author":{"gitId":"wz2k"},"content":"4.  AddressBook deletes the person","lastModifiedDate":"2023-02-22"},{"lineNumber":296,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":297,"author":{"gitId":"wz2k"},"content":"    Use case ends.","lastModifiedDate":"2023-02-22"},{"lineNumber":298,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":299,"author":{"gitId":"wz2k"},"content":"**Extensions**","lastModifiedDate":"2023-02-22"},{"lineNumber":300,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":301,"author":{"gitId":"wz2k"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-02-22"},{"lineNumber":302,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":303,"author":{"gitId":"wz2k"},"content":"  Use case ends.","lastModifiedDate":"2023-02-22"},{"lineNumber":304,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":305,"author":{"gitId":"wz2k"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-02-22"},{"lineNumber":306,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":307,"author":{"gitId":"wz2k"},"content":"    * 3a1. AddressBook shows an error message.","lastModifiedDate":"2023-02-22"},{"lineNumber":308,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":309,"author":{"gitId":"wz2k"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-22"},{"lineNumber":310,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":311,"author":{"gitId":"wz2k"},"content":"*{More to be added}*","lastModifiedDate":"2023-02-22"},{"lineNumber":312,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":313,"author":{"gitId":"wz2k"},"content":"### Non-Functional Requirements","lastModifiedDate":"2023-02-22"},{"lineNumber":314,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":315,"author":{"gitId":"wz2k"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2023-02-22"},{"lineNumber":316,"author":{"gitId":"wz2k"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-02-22"},{"lineNumber":317,"author":{"gitId":"wz2k"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-02-22"},{"lineNumber":318,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":319,"author":{"gitId":"wz2k"},"content":"*{More to be added}*","lastModifiedDate":"2023-02-22"},{"lineNumber":320,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":321,"author":{"gitId":"wz2k"},"content":"### Glossary","lastModifiedDate":"2023-02-22"},{"lineNumber":322,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":323,"author":{"gitId":"wz2k"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2023-02-22"},{"lineNumber":324,"author":{"gitId":"wz2k"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2023-02-22"},{"lineNumber":325,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":326,"author":{"gitId":"wz2k"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-02-22"},{"lineNumber":327,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":328,"author":{"gitId":"wz2k"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2023-02-22"},{"lineNumber":329,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":330,"author":{"gitId":"wz2k"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2023-02-22"},{"lineNumber":331,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":332,"author":{"gitId":"wz2k"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2023-02-22"},{"lineNumber":333,"author":{"gitId":"wz2k"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2023-02-22"},{"lineNumber":334,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":335,"author":{"gitId":"wz2k"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":336,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":337,"author":{"gitId":"wz2k"},"content":"### Launch and shutdown","lastModifiedDate":"2023-02-22"},{"lineNumber":338,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":339,"author":{"gitId":"wz2k"},"content":"1. Initial launch","lastModifiedDate":"2023-02-22"},{"lineNumber":340,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":341,"author":{"gitId":"wz2k"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2023-02-22"},{"lineNumber":342,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":343,"author":{"gitId":"wz2k"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2023-02-22"},{"lineNumber":344,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":345,"author":{"gitId":"wz2k"},"content":"1. Saving window preferences","lastModifiedDate":"2023-02-22"},{"lineNumber":346,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":347,"author":{"gitId":"wz2k"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2023-02-22"},{"lineNumber":348,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":349,"author":{"gitId":"wz2k"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":350,"author":{"gitId":"wz2k"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2023-02-22"},{"lineNumber":351,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":352,"author":{"gitId":"wz2k"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2023-02-22"},{"lineNumber":353,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":354,"author":{"gitId":"wz2k"},"content":"### Deleting a person","lastModifiedDate":"2023-02-22"},{"lineNumber":355,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":356,"author":{"gitId":"wz2k"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2023-02-22"},{"lineNumber":357,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":358,"author":{"gitId":"wz2k"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":359,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":360,"author":{"gitId":"wz2k"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":361,"author":{"gitId":"wz2k"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2023-02-22"},{"lineNumber":362,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":363,"author":{"gitId":"wz2k"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":364,"author":{"gitId":"wz2k"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-02-22"},{"lineNumber":365,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":366,"author":{"gitId":"wz2k"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":367,"author":{"gitId":"wz2k"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2023-02-22"},{"lineNumber":368,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":369,"author":{"gitId":"wz2k"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2023-02-22"},{"lineNumber":370,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":371,"author":{"gitId":"wz2k"},"content":"### Saving data","lastModifiedDate":"2023-02-22"},{"lineNumber":372,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":373,"author":{"gitId":"wz2k"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2023-02-22"},{"lineNumber":374,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":375,"author":{"gitId":"wz2k"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2023-02-22"},{"lineNumber":376,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":377,"author":{"gitId":"wz2k"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"wz2k":377}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"FriendlyLink **streamlines volunteer and elderly management** for single administrators of small NPOs.","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"With its easy-to-use text-based interface and contact management features, say goodbye to manual","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"record-keeping and hello to a more efficient and organised way of managing the volunteers’ and elderly’s contact details.","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"1. Download the latest `friendlyLink.jar` from [here](https://github.com/AY2223S2-CS2103T-W12-1/tp/releases).","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your FriendlyLink.","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar friendlylink.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"   * `add_elderly n/John Doe e/test@gmail.com  a/some address enr/S03123123A ag/76 r/low` : Adds an elderly named `John Doe` to FriendlyLink.","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"   * `delete_elderly enr/S03123123A` : Deletes the elderly with NRIC `S03123123A`.","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"   * `clear` : Deletes all data.","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"### Feature List","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"* Add personnel","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"    * Add elderly","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"wz2k"},"content":"    * Add volunteer","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"wz2k"},"content":"* Delete personnel","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"wz2k"},"content":"    * Delete elderly","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"wz2k"},"content":"    * Delete volunteer","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"wz2k"},"content":"* Add pairing of elderly and volunteer","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"wz2k"},"content":"* Delete pairing of elderly and volunteer","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"wz2k"},"content":"* View pairing list of elderly and volunteer","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"wz2k"},"content":"* View personnel list","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"wz2k"},"content":"    * View volunteer list","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"wz2k"},"content":"    * View elderly list","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":60,"author":{"gitId":"wz2k"},"content":"[//]: # (person in charge of command format will change this)","lastModifiedDate":"2023-02-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2023-02-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2023-02-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":70,"author":{"gitId":"wz2k"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2023-02-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2023-02-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2023-02-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2023-02-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"wz2k"},"content":"[//]: # (Need to update help message pic)","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"heeeyi"},"content":"### Adding an elderly: `add_elderly`","lastModifiedDate":"2023-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"heeeyi"},"content":"Adds an elderly to FriendlyLink.","lastModifiedDate":"2023-02-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"heeeyi"},"content":"Format: `add_elderly n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS enr/NRIC ag/AGE r/RISK [t/TAG]…​`","lastModifiedDate":"2023-02-25"},{"lineNumber":98,"author":{"gitId":"heeeyi"},"content":"* Every elderly must have a unique `NRIC`","lastModifiedDate":"2023-02-25"},{"lineNumber":99,"author":{"gitId":"heeeyi"},"content":"* The `RISK` can only takes 3 values: `LOW`, `MEDIUM` or `HIGH`","lastModifiedDate":"2023-02-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"heeeyi"},"content":"An elderly can have any number of tags (including 0)","lastModifiedDate":"2023-02-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"heeeyi"},"content":"* `add_elderly n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 enr/S1234567C ag/68 r/HIGH`","lastModifiedDate":"2023-02-25"},{"lineNumber":107,"author":{"gitId":"heeeyi"},"content":"* `add_elderly n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 enr/T1234567D ag/75 r/LOW t/lonely`","lastModifiedDate":"2023-02-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"heeeyi"},"content":"### Listing all elderly members : `list_elderly`","lastModifiedDate":"2023-02-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"heeeyi"},"content":"Shows a list of all elderly members in FriendlyLink.","lastModifiedDate":"2023-02-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"zhacatomn"},"content":"### Adding a volunteer: `add_volunteer`","lastModifiedDate":"2023-02-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"zhacatomn"},"content":"Adds a volunteer to the address book.","lastModifiedDate":"2023-02-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"zhacatomn"},"content":"Format: `add_volunteer n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS ag/AGE vnr/NRIC [t/TAG]…​`","lastModifiedDate":"2023-02-25"},{"lineNumber":119,"author":{"gitId":"zhacatomn"},"content":"* Every volunteer must have a unique `NRIC`","lastModifiedDate":"2023-02-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"zhacatomn"},"content":"A volunteer can have any number of tags (including 0)","lastModifiedDate":"2023-02-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"zhacatomn"},"content":"* `add_volunteer n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 ag/23 vnr/S8457677H`","lastModifiedDate":"2023-02-25"},{"lineNumber":127,"author":{"gitId":"zhacatomn"},"content":"* `add_volunteer n/Betsy Crowe t/graduate e/betsycrowe@example.com a/Newgate Prison p/1234567 ag/27 vnr/S8959886I t/experienced`","lastModifiedDate":"2023-02-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"zhacatomn"},"content":"### Listing all persons : `list_volunteer`","lastModifiedDate":"2023-02-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"zhacatomn"},"content":"Shows a list of all volunteers in the application.","lastModifiedDate":"2023-02-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":135,"author":{"gitId":"zhacatomn"},"content":"Format: `list_volunteer`","lastModifiedDate":"2023-02-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"zhacatomn"},"content":"[//]: # (### Editing a person : `edit`)","lastModifiedDate":"2023-02-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"zhacatomn"},"content":"[//]: # ()","lastModifiedDate":"2023-02-25"},{"lineNumber":140,"author":{"gitId":"zhacatomn"},"content":"[//]: # (Edits an existing person in the address book.)","lastModifiedDate":"2023-02-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"zhacatomn"},"content":"[//]: # ()","lastModifiedDate":"2023-02-25"},{"lineNumber":143,"author":{"gitId":"zhacatomn"},"content":"[//]: # (Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`)","lastModifiedDate":"2023-02-25"},{"lineNumber":144,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":145,"author":{"gitId":"zhacatomn"},"content":"[//]: # ()","lastModifiedDate":"2023-02-25"},{"lineNumber":146,"author":{"gitId":"zhacatomn"},"content":"[//]: # (* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, …​)","lastModifiedDate":"2023-02-25"},{"lineNumber":147,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":148,"author":{"gitId":"zhacatomn"},"content":"[//]: # (* At least one of the optional fields must be provided.)","lastModifiedDate":"2023-02-25"},{"lineNumber":149,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":150,"author":{"gitId":"zhacatomn"},"content":"[//]: # (* Existing values will be updated to the input values.)","lastModifiedDate":"2023-02-25"},{"lineNumber":151,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":152,"author":{"gitId":"zhacatomn"},"content":"[//]: # (* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.)","lastModifiedDate":"2023-02-25"},{"lineNumber":153,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":154,"author":{"gitId":"zhacatomn"},"content":"[//]: # (* You can remove all the person’s tags by typing `t/` without)","lastModifiedDate":"2023-02-25"},{"lineNumber":155,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":156,"author":{"gitId":"zhacatomn"},"content":"[//]: # (    specifying any tags after it.)","lastModifiedDate":"2023-02-25"},{"lineNumber":157,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":158,"author":{"gitId":"zhacatomn"},"content":"[//]: # ()","lastModifiedDate":"2023-02-25"},{"lineNumber":159,"author":{"gitId":"zhacatomn"},"content":"[//]: # (Examples:)","lastModifiedDate":"2023-02-25"},{"lineNumber":160,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":161,"author":{"gitId":"zhacatomn"},"content":"[//]: # (*  `edit 1 p/91234567 e/johndoe@example.com` Edits the phone number and email address of the 1st person to be `91234567` and `johndoe@example.com` respectively.)","lastModifiedDate":"2023-02-25"},{"lineNumber":162,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":163,"author":{"gitId":"zhacatomn"},"content":"[//]: # (*  `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.)","lastModifiedDate":"2023-02-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"heeeyi"},"content":"### Deleting an elderly : `delete_elderly`","lastModifiedDate":"2023-02-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"heeeyi"},"content":"Deletes the specified elderly from FriendlyLink.","lastModifiedDate":"2023-02-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"heeeyi"},"content":"Format: `delete enr/NRIC`","lastModifiedDate":"2023-02-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"heeeyi"},"content":"* Deletes the elderly with the specific NRIC `NRIC`.","lastModifiedDate":"2023-02-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"heeeyi"},"content":"* `delete_elderly enr/S8238657A` deletes the elderly with NRIC `S8238657A`","lastModifiedDate":"2023-02-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":195,"author":{"gitId":"zhacatomn"},"content":"### Deleting a volunteer : `delete_volunteer`","lastModifiedDate":"2023-02-25"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"zhacatomn"},"content":"Deletes the specified volunteer from the address book.","lastModifiedDate":"2023-02-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"zhacatomn"},"content":"Format: `delete vnr/NRIC`","lastModifiedDate":"2023-02-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"zhacatomn"},"content":"* Deletes the volunteer with NRIC `NRIC`","lastModifiedDate":"2023-02-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"zhacatomn"},"content":"Example:","lastModifiedDate":"2023-02-25"},{"lineNumber":204,"author":{"gitId":"zhacatomn"},"content":"`delete_volunteer vnr/S8238658J` deletes the volunteer with NRIC `S8238658J`","lastModifiedDate":"2023-02-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":207,"author":{"gitId":"gohyongjing"},"content":"### Pair volunteer and elderly: `add_pair`","lastModifiedDate":"2023-02-25"},{"lineNumber":208,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":209,"author":{"gitId":"gohyongjing"},"content":"Pairs up an existing elderly and volunteer.","lastModifiedDate":"2023-02-25"},{"lineNumber":210,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":211,"author":{"gitId":"gohyongjing"},"content":"This allows you to track which elderly members are assigned to which volunteers.","lastModifiedDate":"2023-02-25"},{"lineNumber":212,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":213,"author":{"gitId":"Zxun2"},"content":"Format: `add_pair vnr/VOLUNTEER_NRIC enr/ELDERLY_NRIC`","lastModifiedDate":"2023-02-26"},{"lineNumber":214,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":215,"author":{"gitId":"gohyongjing"},"content":"* After pairing, the newly added pairs appear in the pair list in the window.","lastModifiedDate":"2023-02-25"},{"lineNumber":216,"author":{"gitId":"gohyongjing"},"content":"* Only elderly members and volunteers existing in FriendlyLink\u0027s data can be paired.","lastModifiedDate":"2023-02-25"},{"lineNumber":217,"author":{"gitId":"gohyongjing"},"content":"* Duplicate pairs will fail to be added to FriendlyLink.","lastModifiedDate":"2023-02-25"},{"lineNumber":218,"author":{"gitId":"gohyongjing"},"content":"* Alphabets in NRIC are case-insensitive.","lastModifiedDate":"2023-02-25"},{"lineNumber":219,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":220,"author":{"gitId":"gohyongjing"},"content":"Examples","lastModifiedDate":"2023-02-25"},{"lineNumber":221,"author":{"gitId":"gohyongjing"},"content":"`add_pair vnr/t0123423a enr/S2235243I` pairs up the volunteer with NRIC T0123423A with the elderly with NRIC S2235243I.","lastModifiedDate":"2023-02-25"},{"lineNumber":222,"author":{"gitId":"gohyongjing"},"content":"`add_pair vnr/S0773423a enr/s1135243A` pairs up the volunteer with NRIC S0773423A with the elderly with NRIC S1135243A.","lastModifiedDate":"2023-02-25"},{"lineNumber":223,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":224,"author":{"gitId":"gohyongjing"},"content":"### Unpair volunteer and elderly: `delete_pair`","lastModifiedDate":"2023-02-25"},{"lineNumber":225,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":226,"author":{"gitId":"gohyongjing"},"content":"Unpairs an elderly from its assigned volunteer","lastModifiedDate":"2023-02-25"},{"lineNumber":227,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":228,"author":{"gitId":"gohyongjing"},"content":"This deletes the pair while still keeping the information of the elderly member and volunteer.","lastModifiedDate":"2023-02-25"},{"lineNumber":229,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":230,"author":{"gitId":"gohyongjing"},"content":"Format `delete_pair i/\u003cid\u003e`","lastModifiedDate":"2023-02-25"},{"lineNumber":231,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":232,"author":{"gitId":"gohyongjing"},"content":"* After deleting, the pair is removed in the list of pairs in the window.","lastModifiedDate":"2023-02-25"},{"lineNumber":233,"author":{"gitId":"gohyongjing"},"content":"* Alphabets in NRIC are case-insensitive.","lastModifiedDate":"2023-02-25"},{"lineNumber":234,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":235,"author":{"gitId":"gohyongjing"},"content":"Examples","lastModifiedDate":"2023-02-25"},{"lineNumber":236,"author":{"gitId":"gohyongjing"},"content":"`delete_pair vnr/t0123423a enr/S2235243I` unpairs the volunteer with NRIC T0123423A and the elderly with NRIC S2235243I.","lastModifiedDate":"2023-02-25"},{"lineNumber":237,"author":{"gitId":"gohyongjing"},"content":"`delete_pair vnr/S0773423a enr/s1135243A` unpairs the volunteer with NRIC S0773423A and the elderly with NRIC S1135243A.","lastModifiedDate":"2023-02-25"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":239,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"wz2k"},"content":"Clears all data from FriendlyLink.","lastModifiedDate":"2023-02-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"wz2k"},"content":"FriendlyLink data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-02-22"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":257,"author":{"gitId":"wz2k"},"content":"FriendlyLink data are saved as a JSON file `[JAR file location]/data/friendlylink.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-02-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":260,"author":{"gitId":"wz2k"},"content":"If your changes to the data file makes its format invalid, FriendlyLink will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-02-22"},{"lineNumber":261,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2023-02-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":268,"author":{"gitId":"wz2k"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous FriendlyLink home folder.","lastModifiedDate":"2023-02-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"wz2k"},"content":"| Action               | Format, Examples                                                                                                                                                                                               |","lastModifiedDate":"2023-02-22"},{"lineNumber":273,"author":{"gitId":"heeeyi"},"content":"|----------------------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-02-26"},{"lineNumber":274,"author":{"gitId":"wz2k"},"content":"| **Add**              | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`                                          |","lastModifiedDate":"2023-02-22"},{"lineNumber":275,"author":{"gitId":"heeeyi"},"content":"| **Add Elderly**      | `add_elderly n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS enr/NRIC ag/AGE r/RISK [t/TAG]…​` \u003cbr\u003e e.g.,`add_elderly n/John Doe p/98765432 e/johnd@example.com a/John St, blk 123, #01-01 enr/S1234567C ag/68 r/HIGH` |","lastModifiedDate":"2023-02-25"},{"lineNumber":276,"author":{"gitId":"zhacatomn"},"content":"| **Add Volunteer**    | `add_volunteer n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS ag/AGE vnr/NRIC [t/TAG]…​` \u003cbr\u003e e.g.,`add_volunteer n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01 ag/23 vnr/S8457677H`     |","lastModifiedDate":"2023-02-25"},{"lineNumber":277,"author":{"gitId":"wz2k"},"content":"| **Clear**            | `clear`                                                                                                                                                                                                        |","lastModifiedDate":"2023-02-22"},{"lineNumber":278,"author":{"gitId":"wz2k"},"content":"| **Delete**           | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                                                            |","lastModifiedDate":"2023-02-22"},{"lineNumber":279,"author":{"gitId":"heeeyi"},"content":"| **Delete Elderly**   | `delete_elderly enr/NRIC`\u003cbr\u003e e.g., `delete_elderly vnr/S8238655C`                                                                                                                                             |","lastModifiedDate":"2023-02-25"},{"lineNumber":280,"author":{"gitId":"zhacatomn"},"content":"| **Delete Volunteer** | `delete_volunteer vnr/NRIC`\u003cbr\u003e e.g., `delete_volunteer vnr/S8238658J`                                                                                                                                         |","lastModifiedDate":"2023-02-25"},{"lineNumber":281,"author":{"gitId":"wz2k"},"content":"| **Edit**             | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                                                                    |","lastModifiedDate":"2023-02-22"},{"lineNumber":282,"author":{"gitId":"wz2k"},"content":"| **Find**             | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                                                                     |","lastModifiedDate":"2023-02-22"},{"lineNumber":283,"author":{"gitId":"wz2k"},"content":"| **List**             | `list`                                                                                                                                                                                                         |","lastModifiedDate":"2023-02-22"},{"lineNumber":284,"author":{"gitId":"wz2k"},"content":"| **Help**             | `help`                                                                                                                                                                                                         |","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"Zxun2":1,"gohyongjing":31,"wz2k":38,"heeeyi":20,"-":151,"zhacatomn":43}},{"path":"docs/_sass/minima/custom-styles.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"// Placeholder to allow defining custom styles that override everything else.","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"// (Use `_sass/minima/custom-variables.scss` to override variable defaults)","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"  color: #457C51;","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Bootstrap style alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":".alert {","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  position: relative;","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"  padding: $alert-padding-y $alert-padding-x;","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin-bottom: $alert-margin-bottom;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  border: $alert-border-width solid transparent;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  border-radius : $alert-border-radius;","lastModifiedDate":"2022-12-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// Headings for larger alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":".alert-heading {","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  // Specified to prevent conflicts of changing $headings-color","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  color: inherit;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"// Provide class for links that match alerts","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":".alert-link {","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  font-weight: $alert-link-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"// Generate contextual modifier classes for colorizing the alert.","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"@each $color, $value in $theme-colors {","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  .alert-#{$color} {","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @include alert-variant(color-level($value, $alert-bg-level), color-level($value, $alert-border-level), color-level($value, $alert-color-level));","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Zxun2":1,"-":33}},{"path":"docs/_sass/minima/initialize.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@charset \"utf-8\";","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"// Define defaults for each variable.","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"$base-font-family: \"Coda\", -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Segoe UI Symbol\", \"Segoe UI Emoji\", \"Apple Color Emoji\", Roboto, Helvetica, Arial, sans-serif !default;","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"$code-font-family: \"Coda\", \"Menlo\", \"Inconsolata\", \"Consolas\", \"Roboto Mono\", \"Ubuntu Mono\", \"Liberation Mono\", \"Courier New\", monospace;","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"$base-font-size:   16px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"$base-font-weight: 400 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"$small-font-size:  $base-font-size * 0.875 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"$base-line-height: 1.5 !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"$spacing-unit:     30px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"$table-text-align: left !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"// Width of the content area","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"$content-width:    800px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"$on-palm:          600px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"$on-laptop:        800px !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"$on-medium:        $on-palm !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"$on-large:         $on-laptop !default;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// Use media queries like this:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"// @include media-query($on-palm) {","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"//   .wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"//     padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"//     padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"//   }","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"// }","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"// Notice the following mixin uses max-width, in a deprecated, desktop-first","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"// approach, whereas media queries used elsewhere now use min-width.","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"@mixin media-query($device) {","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  @media screen and (max-width: $device) {","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @content;","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"@mixin relative-font-size($ratio) {","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  font-size: #{$ratio}rem;","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"// Import pre-styling-overrides hook and style-partials.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@import","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  \"minima/custom-variables\", // Hook to override predefined variables.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"  \"minima/custom-mixins\",    // Hook to add custom mixins.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  \"minima/base\",             // Defines element resets.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"  \"minima/layout\",           // Defines structure and style based on CSS selectors.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  \"minima/custom-styles\"     // Hook to override existing styles.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":";","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Zxun2":2,"-":49}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"title: FriendlyLink","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-W12-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-W12-1/tp/actions)","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-W12-1/tp/branch/master/graph/badge.svg?token\u003dRHIRHCXSMR)](https://codecov.io/gh/AY2223S2-CS2103T-W12-1/tp)","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"**FriendlyLink is a desktop application for managing your elderly and volunteer contact details.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"* If you are interested in using FriendlyLink, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"* If you are interested about developing FriendlyLink, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Zxun2":6,"-":14}},{"path":"docs/team/gohyongjing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"layout: page","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"title: Yong Jing\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"### Project: FriendlyLink","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"* **New Feature**: Added the ability to pair up elderlies and volunteers.","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"    * What it does: Allows elderlies to be paired up with volunteers in the system","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"    * Justification: This feature allows the administrative staff to make sure each elderly member is taken care of and that the workload of volunteers is allocated evenly.","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"    * Highlights: This feature checks if the members to be paired exists in FriendlyLink, and also prevents duplicate records from being added.","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"* **Project management**:","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    * User Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"* **Community**:","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"* **Tools**:","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"gohyongjing":30}},{"path":"docs/team/heeeyi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"heeeyi"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"heeeyi"},"content":"layout: page","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"heeeyi"},"content":"title: Heyi\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"heeeyi"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"heeeyi"},"content":"### Project: FriendlyLink","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"heeeyi"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"heeeyi"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"heeeyi"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"heeeyi"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"heeeyi"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"heeeyi"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"heeeyi"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"heeeyi"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"heeeyi"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"heeeyi"},"content":"* **Project management**:","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"heeeyi"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"heeeyi"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"heeeyi"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"heeeyi"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"heeeyi"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"heeeyi"},"content":"    * User Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"heeeyi"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"heeeyi"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"heeeyi"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"heeeyi"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"heeeyi"},"content":"* **Community**:","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"heeeyi"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"heeeyi"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"heeeyi"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"heeeyi"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"heeeyi"},"content":"* **Tools**:","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"heeeyi"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"heeeyi"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"heeeyi"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"heeeyi":46}},{"path":"docs/team/wz2k.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"wz2k"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"wz2k"},"content":"layout: page","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"wz2k"},"content":"title: Wei Zhe\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"wz2k"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"wz2k"},"content":"### Project: FriendlyLink","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"wz2k"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"wz2k"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"wz2k"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"wz2k"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"wz2k"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"wz2k"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"wz2k"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"wz2k"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"wz2k"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"wz2k"},"content":"* **Project management**:","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"wz2k"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"wz2k"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"wz2k"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"wz2k"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"wz2k"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"wz2k"},"content":"    * User Guide:","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"wz2k"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"wz2k"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"wz2k"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"wz2k"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"wz2k"},"content":"* **Community**:","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"wz2k"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"wz2k"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"wz2k"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"wz2k"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"wz2k"},"content":"* **Tools**:","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"wz2k"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"wz2k"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"wz2k"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"wz2k"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"wz2k":46}},{"path":"docs/team/zhacatomn.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"layout: page","lastModifiedDate":"2023-02-25"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"title: Shaun Quek\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-25"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"---","lastModifiedDate":"2023-02-25"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"### Project: FriendlyLink","lastModifiedDate":"2023-02-25"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-25"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-25"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-25"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-25"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-25"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-25"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-25"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-25"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-25"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"* **Project management**:","lastModifiedDate":"2023-02-25"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-25"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-25"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-25"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-25"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-25"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"    * User Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-25"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-25"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-25"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"* **Community**:","lastModifiedDate":"2023-02-25"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-25"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-25"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-25"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-25"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"* **Tools**:","lastModifiedDate":"2023-02-25"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-25"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-25"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"zhacatomn":46}},{"path":"docs/team/zxun2.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"layout: page","lastModifiedDate":"2023-02-26"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"title: Lee Zong Xun\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-26"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"---","lastModifiedDate":"2023-02-26"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"### Project: FriendlyLink","lastModifiedDate":"2023-02-26"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-26"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-26"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-26"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-26"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-26"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-26"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-26"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-26"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-26"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"* **Project management**:","lastModifiedDate":"2023-02-26"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-26"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-26"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-26"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-26"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-26"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    * User Guide:","lastModifiedDate":"2023-02-26"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-26"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-26"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-26"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-26"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"* **Community**:","lastModifiedDate":"2023-02-26"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-26"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-26"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-26"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-26"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"* **Tools**:","lastModifiedDate":"2023-02-26"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-26"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-26"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-26"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-26"}],"authorContributionMap":{"Zxun2":46}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.FriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyFriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.FriendlyLinkStorage;","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonFriendlyLinkStorage;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"import seedu.address.storage.elderly.ElderlyStorage;","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"import seedu.address.storage.elderly.JsonElderlyStorage;","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"import seedu.address.storage.volunteer.JsonVolunteerStorage;","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"import seedu.address.storage.volunteer.VolunteerStorage;","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing FriendlyLink ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"        // load user preferences/configurations","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"        // load storage data","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        FriendlyLinkStorage friendlyLinkStorage \u003d new JsonFriendlyLinkStorage(userPrefs.getFriendlyLinkFilePath());","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"        ElderlyStorage elderlyStorage \u003d new JsonElderlyStorage(userPrefs.getElderlyFilePath());","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"        VolunteerStorage volunteerStorage \u003d new JsonVolunteerStorage(userPrefs.getVolunteerFilePath());","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"        initializeAppManagers(userPrefsStorage, userPrefs, friendlyLinkStorage, elderlyStorage, volunteerStorage);","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private void initializeAppManagers(","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"Zxun2"},"content":"            UserPrefsStorage userPrefsStorage, UserPrefs userPrefs, FriendlyLinkStorage friendlyLinkStorage,","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"            ElderlyStorage elderlyStorage, VolunteerStorage volunteerStorage) {","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"Zxun2"},"content":"        storage \u003d new StorageManager(friendlyLinkStorage, elderlyStorage, volunteerStorage, userPrefsStorage);","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":90,"author":{"gitId":"gohyongjing"},"content":"        Optional\u003cReadOnlyFriendlyLink\u003e friendlyLinkOptional;","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ReadOnlyFriendlyLink initialData;","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"gohyongjing"},"content":"            friendlyLinkOptional \u003d storage.readFriendlyLink();","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"gohyongjing"},"content":"            if (friendlyLinkOptional.isEmpty()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":95,"author":{"gitId":"gohyongjing"},"content":"                logger.info(\"Data file not found. Will be starting with a sample FriendlyLink\");","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"gohyongjing"},"content":"            initialData \u003d friendlyLinkOptional.orElseGet(SampleDataUtil::getSampleFriendlyLink);","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"gohyongjing"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty FriendlyLink\");","lastModifiedDate":"2023-02-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            initialData \u003d new FriendlyLink();","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":102,"author":{"gitId":"gohyongjing"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty FriendlyLink\");","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            initialData \u003d new FriendlyLink();","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"gohyongjing"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty FriendlyLink\");","lastModifiedDate":"2023-02-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"gohyongjing"},"content":"        logger.info(\"Starting FriendlyLink \" + MainApp.VERSION);","lastModifiedDate":"2023-02-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zxun2":13,"gohyongjing":10,"-":173}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"    private static final String LOG_FILE \u003d \"friendlylink.log\";","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"gohyongjing":1,"-":111}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"    public static final String MESSAGE_INVALID_NRIC \u003d \"The %s NRIC provided is invalid\";","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"heeeyi"},"content":"    public static final String MESSAGE_NRIC_NOT_EXIST \u003d \"There is no such person with the given NRIC!\";","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"heeeyi":1,"-":13,"zhacatomn":1}},{"path":"src/main/java/seedu/address/commons/exceptions/DuplicateObjectException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":" * Signals that the operation will result in duplicate Objects.","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"public class DuplicateObjectException extends RuntimeException {","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a new duplicate object exception.","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"     * @param pluralNoun Plural form of the object that is duplicated.","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"    public DuplicateObjectException(String pluralNoun) {","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"        super(\"Operation would result in duplicate \" + pluralNoun);","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"gohyongjing":16}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyFriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.pair.Pair;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the FriendlyLink.","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getFriendlyLink()","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ReadOnlyFriendlyLink getFriendlyLink();","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"    // NOTE: Add to UI if needed (MainWindow)","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"    /** Returns an unmodifiable view of the filtered list of elderly */","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"    ObservableList\u003cElderly\u003e getFilteredElderlyList();","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"    /** Returns an unmodifiable view of the filtered list of volunteers */","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"    ObservableList\u003cVolunteer\u003e getFilteredVolunteerList();","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of pairs */","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    ObservableList\u003cPair\u003e getFilteredPairList();","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 friendly link file path.","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    Path getFriendlyLinkFilePath();","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Zxun2":7,"-":54,"zhacatomn":2}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.FriendLinkParser;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyFriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.pair.Pair;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final FriendLinkParser friendLinkParser;","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        friendLinkParser \u003d new FriendLinkParser();","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Command command \u003d friendLinkParser.parseCommand(commandText);","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            storage.saveFriendlyLink(model.getFriendlyLink());","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyFriendlyLink getFriendlyLink() {","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return model.getFriendlyLink();","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getFriendlyLinkFilePath() {","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getFriendlyLinkFilePath();","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    // --- The following are directly appended to the UI.","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"Zxun2"},"content":"    public ObservableList\u003cElderly\u003e getFilteredElderlyList() {","lastModifiedDate":"2023-02-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return model.getFilteredElderlyList();","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":91,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":92,"author":{"gitId":"zhacatomn"},"content":"    public ObservableList\u003cVolunteer\u003e getFilteredVolunteerList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return model.getFilteredVolunteerList();","lastModifiedDate":"2023-02-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":95,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":96,"author":{"gitId":"Zxun2"},"content":"    public ObservableList\u003cPair\u003e getFilteredPairList() {","lastModifiedDate":"2023-02-21"},{"lineNumber":97,"author":{"gitId":"Zxun2"},"content":"        return model.getFilteredPairList();","lastModifiedDate":"2023-02-21"},{"lineNumber":98,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Zxun2":8,"-":91,"zhacatomn":2}},{"path":"src/main/java/seedu/address/logic/commands/AddElderlyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC_ELDERLY;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISK;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds an elderly to the database.","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddElderlyCommand extends Command {","lastModifiedDate":"2023-02-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    // TODO: later find ways to make this \"add elderly\"","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add_elderly\";","lastModifiedDate":"2023-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an elderly to the database. \"","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-02-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-02-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-02-12"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_NRIC_ELDERLY + \"NRIC \"","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_AGE + \"AGE \"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_RISK + \"MEDICAL RISK (LOW, MEDIUM or HIGH) \"","lastModifiedDate":"2023-02-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-02-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_NRIC_ELDERLY + \"S1234567A \"","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + PREFIX_AGE + \"69 \"","lastModifiedDate":"2023-02-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_RISK + \"LOW \"","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New elderly added: %1$s\";","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This elderly already exists in the database\";","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private final Elderly toAdd;","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Creates an AddElderlyCommand to add to the specified {@code Elderly}","lastModifiedDate":"2023-02-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddElderlyCommand(Elderly elderly) {","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(elderly);","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        toAdd \u003d elderly;","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // hasPerson makes the judgement based on if same name","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // in Elderly, criteria is same name and age","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"        if (model.hasElderly(toAdd)) {","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"        model.addElderly(toAdd);","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                || (other instanceof AddElderlyCommand // instanceof handles nulls","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddElderlyCommand) other).toAdd));","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"Zxun2":3,"-":73,"zhacatomn":3}},{"path":"src/main/java/seedu/address/logic/commands/AddPairCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC_ELDERLY;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC_VOLUNTEER;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.pair.Pair;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":" * Adds a person to FriendlyLink.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddPairCommand extends Command {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add_pair\";","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Pairs an elderly and volunteer in FriendlyLink. \"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_NRIC_ELDERLY + \"ELDERLY ID \"","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_NRIC_VOLUNTEER + \"VOLUNTEER ID \"","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_NRIC_ELDERLY + \"1234 \"","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_NRIC_VOLUNTEER + \"5678 \";","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New pair added: %1$s\";","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"    public static final String MESSAGE_DUPLICATE_PAIR \u003d \"This pair already exists in FriendlyLink\";","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"    public static final String MESSAGE_ELDERLY_NOT_FOUND \u003d","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"            \"The elderly with the specified NRIC does not exist in FriendlyLink\";","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"    public static final String MESSAGE_VOLUNTEER_NOT_FOUND \u003d","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"            \"The volunteer with the specified NRIC does not exist in FriendlyLink\";","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"    private final Nric elderlyNric;","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"    private final Nric volunteerNric;","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddPairCommand to add the specified {@code Pair}","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"    public AddPairCommand(Nric elderlyNric, Nric volunteerNric) {","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"        requireAllNonNull(elderlyNric, volunteerNric);","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"        this.elderlyNric \u003d elderlyNric;","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"        this.volunteerNric \u003d volunteerNric;","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"        Elderly elderly;","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"        Volunteer volunteer;","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"        try {","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"            elderly \u003d model.getElderly(elderlyNric);","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"        } catch (PersonNotFoundException e) {","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"            throw new CommandException(MESSAGE_ELDERLY_NOT_FOUND);","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"        try {","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"            volunteer \u003d model.getVolunteer(volunteerNric);","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"        } catch (PersonNotFoundException e) {","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"            throw new CommandException(MESSAGE_VOLUNTEER_NOT_FOUND);","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"        Pair toAdd \u003d new Pair(elderly, volunteer);","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (model.hasPair(toAdd)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PAIR);","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        model.addPair(toAdd);","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                || (other instanceof AddPairCommand // instanceof handles nulls","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"gohyongjing"},"content":"                \u0026\u0026 elderlyNric.equals(((AddPairCommand) other).elderlyNric)","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"gohyongjing"},"content":"                \u0026\u0026 volunteerNric.equals(((AddPairCommand) other).volunteerNric));","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"gohyongjing":37,"-":44,"zhacatomn":6}},{"path":"src/main/java/seedu/address/logic/commands/AddVolunteerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC_VOLUNTEER;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":" * Adds a volunteer to the database.","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"public class AddVolunteerCommand extends Command {","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"    public static final String COMMAND_WORD \u003d \"add_volunteer\";","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a volunteer to the database. \"","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_NRIC_VOLUNTEER + \"NRIC \"","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_AGE + \"AGE \"","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_NRIC_VOLUNTEER + \"S1234567A \"","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_AGE + \"20 \"","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_TAG + \"new \"","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"            + PREFIX_TAG + \"undergradStudent\";","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New volunteer added: %1$s\";","lastModifiedDate":"2023-02-19"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This volunteer already exists in the database\";","lastModifiedDate":"2023-02-19"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"    private final Volunteer toAdd;","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"     * Creates an AddVolunteerCommand to add to the specified {@code volunteer}","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"    public AddVolunteerCommand(Volunteer volunteer) {","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"        requireNonNull(volunteer);","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"        toAdd \u003d volunteer;","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"        if (model.hasVolunteer(toAdd)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"        model.addVolunteer(toAdd);","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"                || (other instanceof AddVolunteerCommand // instanceof handles nulls","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"                \u0026\u0026 toAdd.equals(((AddVolunteerCommand) other).toAdd));","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"Zxun2":2,"zhacatomn":71}},{"path":"src/main/java/seedu/address/logic/commands/DeleteElderlyCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"heeeyi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"heeeyi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"heeeyi"},"content":"import java.util.List;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"heeeyi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"heeeyi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"heeeyi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"heeeyi"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"heeeyi"},"content":"import seedu.address.model.person.NricMatchesKeywordsPredicate;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"heeeyi"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"heeeyi"},"content":" * Deletes an elderly identified using its NRIC from the FriendlyLink database.","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"heeeyi"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"heeeyi"},"content":"public class DeleteElderlyCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"heeeyi"},"content":"    public static final String COMMAND_WORD \u003d \"delete_elderly\";","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"heeeyi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"heeeyi"},"content":"            + \": Deletes the elderly identified by the nric linked with the elderly.\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"heeeyi"},"content":"            + \"Parameters: NRIC (must be a valid NRIC number)\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"heeeyi"},"content":"            + \"Example: \" + COMMAND_WORD + \" S1234567C\";","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"heeeyi"},"content":"    public static final String MESSAGE_DELETE_ELDERLY_SUCCESS \u003d \"Deleted Elderly: %1$s\";","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"heeeyi"},"content":"    private final String targetNric;","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"heeeyi"},"content":"    public DeleteElderlyCommand(String targetNric) {","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"heeeyi"},"content":"        this.targetNric \u003d targetNric;","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"heeeyi"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"heeeyi"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"heeeyi"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"heeeyi"},"content":"        // first filter with NRIC, then get filtered list","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"heeeyi"},"content":"        NricMatchesKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"heeeyi"},"content":"                new NricMatchesKeywordsPredicate(targetNric);","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"heeeyi"},"content":"        model.updateFilteredElderlyList(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"heeeyi"},"content":"        List\u003cElderly\u003e lastShownList \u003d model.getFilteredElderlyList();","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"heeeyi"},"content":"        // should asset lastShownList.size() \u003d 0 or 1, cannot be \u003e 1","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"heeeyi"},"content":"        if (lastShownList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"heeeyi"},"content":"            throw new CommandException(Messages.MESSAGE_NRIC_NOT_EXIST);","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"heeeyi"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"heeeyi"},"content":"        Elderly elderlyToDelete \u003d lastShownList.get(0);","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"heeeyi"},"content":"        model.deleteElderly(elderlyToDelete);","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"heeeyi"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_ELDERLY_SUCCESS, elderlyToDelete));","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"heeeyi"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"heeeyi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"heeeyi"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"heeeyi"},"content":"                || (other instanceof DeleteElderlyCommand","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"heeeyi"},"content":"                \u0026\u0026 targetNric.equals(((DeleteElderlyCommand) other).targetNric));","lastModifiedDate":"2023-02-28"},{"lineNumber":57,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":58,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":59,"author":{"gitId":"heeeyi"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"heeeyi":59}},{"path":"src/main/java/seedu/address/logic/commands/DeleteVolunteerCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC_VOLUNTEER;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"public class DeleteVolunteerCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"    public static final String COMMAND_WORD \u003d \"delete_volunteer\";","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"            + \": Deletes the volunteer identified by their NRIC.\\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"            + \"Parameters: NRIC \\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NRIC_VOLUNTEER + \" S1234567I\";","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"    public static final String MESSAGE_INVALID_NRIC_VOLUNTEER \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"            String.format(Messages.MESSAGE_INVALID_NRIC, \"volunteer\");","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"    public static final String MESSAGE_DELETE_SUCCESS \u003d \"Deleted Volunteer: %1$s\";","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"    private final Nric targetNric;","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"    public DeleteVolunteerCommand(Nric targetNric) {","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"        this.targetNric \u003d targetNric;","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"        try {","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"            requireNonNull(model);","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"            Volunteer volunteerToDelete \u003d model.getVolunteer(targetNric);","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"            model.deleteVolunteer(volunteerToDelete);","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_SUCCESS, volunteerToDelete));","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"        } catch (PersonNotFoundException e) {","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"            throw new CommandException(MESSAGE_INVALID_NRIC_VOLUNTEER);","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-28"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"                || (other instanceof DeleteVolunteerCommand // instanceof handles nulls","lastModifiedDate":"2023-02-28"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"                \u0026\u0026 targetNric.equals(((DeleteVolunteerCommand) other).targetNric)); // state check","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"zhacatomn":53}},{"path":"src/main/java/seedu/address/logic/commands/FindNricCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"heeeyi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"heeeyi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"heeeyi"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"heeeyi"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"heeeyi"},"content":"import seedu.address.model.person.NricMatchesKeywordsPredicate;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"heeeyi"},"content":"// The current format: find_nric S1234567A","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"heeeyi"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"heeeyi"},"content":" * Finds and lists all (elderly) in friendlylink whose nric matches the input nric.","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"heeeyi"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"heeeyi"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"heeeyi"},"content":"public class FindNricCommand extends Command {","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"heeeyi"},"content":"    public static final String COMMAND_WORD \u003d \"find_nric\";","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"heeeyi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds the person whose nric matches \"","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"heeeyi"},"content":"            + \"the input nric (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"heeeyi"},"content":"            + \"Parameters: NRIC...\\n\"","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"heeeyi"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"heeeyi"},"content":"            + \"S1234567A\";","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"heeeyi"},"content":"    private final NricMatchesKeywordsPredicate predicate;","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"heeeyi"},"content":"    public FindNricCommand(NricMatchesKeywordsPredicate predicate) {","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"heeeyi"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"heeeyi"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"heeeyi"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"heeeyi"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-02-28"},{"lineNumber":32,"author":{"gitId":"heeeyi"},"content":"        model.updateFilteredElderlyList(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":33,"author":{"gitId":"heeeyi"},"content":"        return new CommandResult(","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"heeeyi"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW,","lastModifiedDate":"2023-02-28"},{"lineNumber":35,"author":{"gitId":"heeeyi"},"content":"                        model.getFilteredElderlyList().size()));","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":38,"author":{"gitId":"heeeyi"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"heeeyi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":40,"author":{"gitId":"heeeyi"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-02-28"},{"lineNumber":41,"author":{"gitId":"heeeyi"},"content":"                || (other instanceof FindNricCommand","lastModifiedDate":"2023-02-28"},{"lineNumber":42,"author":{"gitId":"heeeyi"},"content":"                \u0026\u0026 predicate.equals(((FindNricCommand) other).predicate));","lastModifiedDate":"2023-02-28"},{"lineNumber":43,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":45,"author":{"gitId":"heeeyi"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"heeeyi":45}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.PrefixUtil;","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Address;","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Email;","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Name;","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Phone;","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!PrefixUtil.arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2023-02-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).orElse(\"\"));","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).orElse(\"\"));","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).orElse(\"\"));","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).orElse(\"\"));","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Zxun2":4,"-":48}},{"path":"src/main/java/seedu/address/logic/parser/AddElderlyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-02-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-02-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC_ELDERLY;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RISK;","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddElderlyCommand;","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Address;","lastModifiedDate":"2023-02-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Age;","lastModifiedDate":"2023-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Email;","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Name;","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Phone;","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.RiskLevel;","lastModifiedDate":"2023-02-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddElderlyCommand object","lastModifiedDate":"2023-02-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddElderlyCommandParser implements Parser\u003cAddElderlyCommand\u003e {","lastModifiedDate":"2023-02-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddElderlyCommand","lastModifiedDate":"2023-02-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * and returns an AddElderlyCommand object for execution.","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public AddElderlyCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-02-12"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_NRIC_ELDERLY, PREFIX_AGE, PREFIX_RISK,","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS,","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"                PREFIX_PHONE, PREFIX_EMAIL, PREFIX_NRIC_ELDERLY, PREFIX_AGE, PREFIX_RISK)","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-02-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(String","lastModifiedDate":"2023-02-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                    .format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                            AddElderlyCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-02-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-02-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC_ELDERLY).get());","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Age age \u003d ParserUtil.parseAge(argMultimap.getValue(PREFIX_AGE).get());","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        RiskLevel risk \u003d ParserUtil.parseRiskLevel(argMultimap.getValue(PREFIX_RISK).get());","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-02-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Elderly person \u003d new Elderly(name, phone, email, address, nric, age, risk, tagList);","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new AddElderlyCommand(person);","lastModifiedDate":"2023-02-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-12"}],"authorContributionMap":{"-":70,"zhacatomn":4}},{"path":"src/main/java/seedu/address/logic/parser/AddPairCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC_ELDERLY;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC_VOLUNTEER;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.PrefixUtil;","lastModifiedDate":"2023-02-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddPairCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddPairCommand object","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddPairCommandParser implements Parser\u003cAddPairCommand\u003e {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPairCommand","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * and returns an AddPairCommand object for execution.","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public AddPairCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NRIC_ELDERLY, PREFIX_NRIC_VOLUNTEER);","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"        if (!PrefixUtil.arePrefixesPresent(argMultimap, PREFIX_NRIC_ELDERLY, PREFIX_NRIC_VOLUNTEER)","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPairCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"        Nric elderlyNric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC_ELDERLY).get());","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"        Nric volunteerNric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC_VOLUNTEER).get());","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"        return new AddPairCommand(elderlyNric, volunteerNric);","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"gohyongjing":4,"-":29,"zhacatomn":4}},{"path":"src/main/java/seedu/address/logic/parser/AddVolunteerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC_VOLUNTEER;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.commons.util.PrefixUtil;","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.logic.commands.AddVolunteerCommand;","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Address;","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Age;","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Email;","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Name;","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Phone;","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":" * Parses input arguments and creates a new AddElderlyCommand object","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"public class AddVolunteerCommandParser implements Parser\u003cAddVolunteerCommand\u003e {","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"     * Parses the given {@code String} of arguments in the context of the AddElderlyCommand","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"     * and returns an AddElderlyCommand object for execution.","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"    public AddVolunteerCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"                        PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_NRIC_VOLUNTEER, PREFIX_AGE,","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2023-02-19"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"        if (!PrefixUtil.arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS,","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"                PREFIX_PHONE, PREFIX_EMAIL, PREFIX_NRIC_VOLUNTEER, PREFIX_AGE)","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"            throw new ParseException(String","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"                    .format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"                            AddVolunteerCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC_VOLUNTEER).get());","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"        Age age \u003d ParserUtil.parseAge(argMultimap.getValue(PREFIX_AGE).get());","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"        Volunteer volunteer \u003d new Volunteer(name, phone, email, address, nric, age, tagList);","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"        return new AddVolunteerCommand(volunteer);","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"zhacatomn":62}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"    public static final Prefix PREFIX_NRIC_ELDERLY \u003d new Prefix(\"enr/\");","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"    public static final Prefix PREFIX_NRIC_VOLUNTEER \u003d new Prefix(\"vnr/\");","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NRIC \u003d new Prefix(\"nr/\");","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_AGE \u003d new Prefix(\"ag/\");","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_RISK \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":18,"zhacatomn":2}},{"path":"src/main/java/seedu/address/logic/parser/DeleteElderlyCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"heeeyi"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.model.person.information.Nric.VALIDATION_REGEX;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"heeeyi"},"content":"import seedu.address.logic.commands.DeleteElderlyCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"heeeyi"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"heeeyi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"heeeyi"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"heeeyi"},"content":" * Parses input arguments and creates a new DeleteElderlyCommand object","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"heeeyi"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"heeeyi"},"content":"public class DeleteElderlyCommandParser implements Parser\u003cDeleteElderlyCommand\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"heeeyi"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"heeeyi"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteElderlyCommand","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"heeeyi"},"content":"     * and returns a DeleteElderlyCommand object for execution.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"heeeyi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"heeeyi"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"heeeyi"},"content":"    public DeleteElderlyCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"heeeyi"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"heeeyi"},"content":"        if (trimmedArgs.isEmpty() || (!trimmedArgs.matches(VALIDATION_REGEX))) {","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"heeeyi"},"content":"            throw new ParseException(","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"heeeyi"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"heeeyi"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"heeeyi"},"content":"        return new DeleteElderlyCommand(trimmedArgs);","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"heeeyi"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"heeeyi":28}},{"path":"src/main/java/seedu/address/logic/parser/DeleteVolunteerCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC_VOLUNTEER;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.logic.commands.DeleteVolunteerCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"public class DeleteVolunteerCommandParser implements Parser\u003cDeleteVolunteerCommand\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"    public DeleteVolunteerCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_NRIC_VOLUNTEER);","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"        if (argMultimap.getValue(PREFIX_NRIC_VOLUNTEER).isEmpty() || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"                    DeleteVolunteerCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"        Nric nric \u003d new Nric(argMultimap.getValue(PREFIX_NRIC_VOLUNTEER).get());","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"        return new DeleteVolunteerCommand(nric);","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"zhacatomn":30}},{"path":"src/main/java/seedu/address/logic/parser/FindNricCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"heeeyi"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"heeeyi"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"heeeyi"},"content":"import seedu.address.logic.commands.FindNricCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"heeeyi"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"heeeyi"},"content":"import seedu.address.model.person.NricMatchesKeywordsPredicate;","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"heeeyi"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"heeeyi"},"content":" * Parses input arguments and creates a new FindNricCommand object","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"heeeyi"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"heeeyi"},"content":"public class FindNricCommandParser implements Parser\u003cFindNricCommand\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"heeeyi"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"heeeyi"},"content":"     * Parses the given {@code String} of arguments in the context of the FindNricCommand","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"heeeyi"},"content":"     * and returns a FindNricCommand object for execution.","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"heeeyi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"heeeyi"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"heeeyi"},"content":"    public FindNricCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"heeeyi"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"heeeyi"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"heeeyi"},"content":"            throw new ParseException(","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"heeeyi"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"heeeyi"},"content":"        }","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"heeeyi"},"content":"        String nricKeywords \u003d trimmedArgs;","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":29,"author":{"gitId":"heeeyi"},"content":"        return new FindNricCommand(new NricMatchesKeywordsPredicate(nricKeywords));","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"heeeyi"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"heeeyi":31}},{"path":"src/main/java/seedu/address/logic/parser/FriendLinkParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddElderlyCommand;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddPairCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.logic.commands.AddVolunteerCommand;","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"heeeyi"},"content":"import seedu.address.logic.commands.DeleteElderlyCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.logic.commands.DeleteVolunteerCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"heeeyi"},"content":"import seedu.address.logic.commands.FindNricCommand;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class FriendLinkParser {","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case AddElderlyCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new AddElderlyCommandParser().parse(arguments);","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"        case AddVolunteerCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"            return new AddVolunteerCommandParser().parse(arguments);","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"        case DeleteVolunteerCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"            return new DeleteVolunteerCommandParser().parse(arguments);","lastModifiedDate":"2023-02-28"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        case AddPairCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            return new AddPairCommandParser().parse(arguments);","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":85,"author":{"gitId":"heeeyi"},"content":"        case FindNricCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":86,"author":{"gitId":"heeeyi"},"content":"            return new FindNricCommandParser().parse(arguments);","lastModifiedDate":"2023-02-28"},{"lineNumber":87,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"heeeyi"},"content":"        case DeleteElderlyCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-28"},{"lineNumber":89,"author":{"gitId":"heeeyi"},"content":"            return new DeleteElderlyCommandParser().parse(arguments);","lastModifiedDate":"2023-02-28"},{"lineNumber":90,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"heeeyi":8,"-":81,"zhacatomn":7}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Address;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Age;","lastModifiedDate":"2023-02-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Email;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Name;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Phone;","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.RiskLevel;","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses a {@code String nric} into an {@code NRIC}.","lastModifiedDate":"2023-02-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-02-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code nric} is invalid.","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public static Nric parseNric(String nric) throws ParseException {","lastModifiedDate":"2023-02-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        String trimmednric \u003d nric.trim();","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!Nric.isValidNric(nric)) {","lastModifiedDate":"2023-02-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new ParseException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return new Nric(trimmednric);","lastModifiedDate":"2023-02-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Parses a {@code String age} into an {@code Age}.","lastModifiedDate":"2023-02-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code age} is invalid.","lastModifiedDate":"2023-02-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static Age parseAge(String age) throws ParseException {","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        requireNonNull(age);","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String trimmedage \u003d age.trim();","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (!Age.isValidAge(age)) {","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new ParseException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return new Age(trimmedage);","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Parses a {@code String risk} into an {@code Risk}.","lastModifiedDate":"2023-02-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-02-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code risk} is invalid.","lastModifiedDate":"2023-02-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":137,"author":{"gitId":"zhacatomn"},"content":"    public static RiskLevel parseRiskLevel(String riskLevel) throws ParseException {","lastModifiedDate":"2023-02-19"},{"lineNumber":138,"author":{"gitId":"zhacatomn"},"content":"        requireNonNull(riskLevel);","lastModifiedDate":"2023-02-19"},{"lineNumber":139,"author":{"gitId":"zhacatomn"},"content":"        String trimmedRisk \u003d riskLevel.trim();","lastModifiedDate":"2023-02-19"},{"lineNumber":140,"author":{"gitId":"zhacatomn"},"content":"        String upperRisk \u003d trimmedRisk.toUpperCase();","lastModifiedDate":"2023-02-19"},{"lineNumber":141,"author":{"gitId":"zhacatomn"},"content":"        if (!RiskLevel.isValidRisk(upperRisk)) {","lastModifiedDate":"2023-02-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new ParseException(RiskLevel.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"zhacatomn"},"content":"        return new RiskLevel(upperRisk);","lastModifiedDate":"2023-02-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":167,"zhacatomn":6}},{"path":"src/main/java/seedu/address/model/FriendlyLink.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.pair.Pair;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.pair.UniquePairList;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Wraps all data at the friendly-link level","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":" * Duplicates are not allowed (by .isSamePerson, .isSamePair comparison)","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"public class FriendlyLink implements ReadOnlyFriendlyLink, ReadOnlyElderly, ReadOnlyVolunteer {","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"    // TODO: update generic to volunteer and remove person list","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    private final UniquePersonList\u003cPerson\u003e persons;","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"    private final UniquePersonList\u003cElderly\u003e elderly;","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"    private final UniquePersonList\u003cVolunteer\u003e volunteers;","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UniquePairList pairs;","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"        persons \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        pairs \u003d new UniquePairList();","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"        elderly \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"        volunteers \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public FriendlyLink() {}","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates an FriendlyLink using the Persons in the {@code toBeCopied}","lastModifiedDate":"2023-02-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public FriendlyLink(ReadOnlyFriendlyLink toBeCopied) {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"        resetFriendlyLinkData(toBeCopied);","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"     * Replaces the contents of the pair list with {@code pairs}.","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"     * {@code pairs} must not contain duplicate pairs.","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"    public void setPairs(List\u003cPair\u003e pairs) {","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"        this.pairs.setPairs((pairs));","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Replaces the contents of the elderly list with {@code elderly}.","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * {@code elderly} must not contain duplicate elderly.","lastModifiedDate":"2023-02-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":73,"author":{"gitId":"Zxun2"},"content":"    public void setAllElderly(List\u003cElderly\u003e elderly) {","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.elderly.setPersons(elderly);","lastModifiedDate":"2023-02-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the contents of the volunteer list with {@code volunteers}.","lastModifiedDate":"2023-02-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code volunteers} must not contain duplicate volunteers.","lastModifiedDate":"2023-02-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"zhacatomn"},"content":"    public void setVolunteers(List\u003cVolunteer\u003e volunteers) {","lastModifiedDate":"2023-02-28"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.volunteers.setPersons(volunteers);","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code FriendlyLink} with {@code newData}.","lastModifiedDate":"2023-02-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"Zxun2"},"content":"    public void resetFriendlyLinkData(ReadOnlyFriendlyLink newData) {","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":92,"author":{"gitId":"zhacatomn"},"content":"        setAllElderly(newData.getElderlyList());","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"zhacatomn"},"content":"        setVolunteers(newData.getVolunteerList());","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"gohyongjing"},"content":"        setPairs(newData.getPairList());","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"gohyongjing"},"content":"     * Resets the existing elderly data of this {@code FriendlyLink} with {@code newData}.","lastModifiedDate":"2023-02-28"},{"lineNumber":99,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"Zxun2"},"content":"    public void resetElderlyData(ReadOnlyElderly newData) {","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"Zxun2"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        setAllElderly(newData.getElderlyList());","lastModifiedDate":"2023-02-12"},{"lineNumber":103,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"gohyongjing"},"content":"     * Resets the existing volunteer data of this {@code FriendlyLink} with {@code newData}.","lastModifiedDate":"2023-02-28"},{"lineNumber":107,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"Zxun2"},"content":"    public void resetVolunteerData(ReadOnlyVolunteer newData) {","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"Zxun2"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-02-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        setVolunteers(newData.getVolunteerList());","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the friendlyLink cache.","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"gohyongjing"},"content":"     * Returns true if an elderly with the same identity as {@code elderly} exists in the friendlyLink cache.","lastModifiedDate":"2023-02-28"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"Zxun2"},"content":"    public boolean hasElderly(Elderly e) {","lastModifiedDate":"2023-02-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireNonNull(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return elderly.contains(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"gohyongjing"},"content":"     * Returns true if a volunteer with the same identity as {@code volunteer} exists in the friendlyLink cache.","lastModifiedDate":"2023-02-28"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"zhacatomn"},"content":"    public boolean hasVolunteer(Volunteer volunteer) {","lastModifiedDate":"2023-02-28"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(volunteer);","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return volunteers.contains(volunteer);","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Adds a person to the friendlyLink cache.","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * The person must not already exist in the friendlyLink cache.","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Adds an elderly to the friendlyLink cache.","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * The elderly must not already exist in the friendlyLink cache.","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"Zxun2"},"content":"    public void addElderly(Elderly p) {","lastModifiedDate":"2023-02-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        elderly.add(p);","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Adds a volunteer to the friendlyLink cache.","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * The volunteer must not already exist in the friendlyLink cache.","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":158,"author":{"gitId":"zhacatomn"},"content":"    public void addVolunteer(Volunteer p) {","lastModifiedDate":"2023-02-28"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        volunteers.add(p);","lastModifiedDate":"2023-02-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":162,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":163,"author":{"gitId":"gohyongjing"},"content":"     * Retrieves the elderly with the given nric.","lastModifiedDate":"2023-02-22"},{"lineNumber":164,"author":{"gitId":"gohyongjing"},"content":"     * The elderly with such a nric must exist in FriendlyLink.","lastModifiedDate":"2023-02-28"},{"lineNumber":165,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":166,"author":{"gitId":"gohyongjing"},"content":"     * @param nric Nric of the elderly.","lastModifiedDate":"2023-02-22"},{"lineNumber":167,"author":{"gitId":"gohyongjing"},"content":"     * @return The elderly with the name.","lastModifiedDate":"2023-02-22"},{"lineNumber":168,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":169,"author":{"gitId":"gohyongjing"},"content":"    public Elderly getElderly(Nric nric) {","lastModifiedDate":"2023-02-22"},{"lineNumber":170,"author":{"gitId":"gohyongjing"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-02-22"},{"lineNumber":171,"author":{"gitId":"zhacatomn"},"content":"        return elderly.getElderly(nric);","lastModifiedDate":"2023-03-01"},{"lineNumber":172,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":173,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":175,"author":{"gitId":"gohyongjing"},"content":"     * Retrieves the volunteer with the given nric.","lastModifiedDate":"2023-02-22"},{"lineNumber":176,"author":{"gitId":"gohyongjing"},"content":"     * The volunteer with such a nric must exist in FriendlyLink.","lastModifiedDate":"2023-02-28"},{"lineNumber":177,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":178,"author":{"gitId":"gohyongjing"},"content":"     * @param nric Nric of the volunteer.","lastModifiedDate":"2023-02-22"},{"lineNumber":179,"author":{"gitId":"gohyongjing"},"content":"     * @return The volunteer with the name.","lastModifiedDate":"2023-02-22"},{"lineNumber":180,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":181,"author":{"gitId":"gohyongjing"},"content":"    public Volunteer getVolunteer(Nric nric) {","lastModifiedDate":"2023-02-22"},{"lineNumber":182,"author":{"gitId":"gohyongjing"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-02-22"},{"lineNumber":183,"author":{"gitId":"zhacatomn"},"content":"        return volunteers.getVolunteer(nric);","lastModifiedDate":"2023-03-01"},{"lineNumber":184,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":185,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the friendlyLink cache.","lastModifiedDate":"2023-02-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as","lastModifiedDate":"2023-02-12"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * another existing person in the friendlyLink cache.","lastModifiedDate":"2023-02-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Replaces the given elderly {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-02-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the friendlyLink cache.","lastModifiedDate":"2023-02-12"},{"lineNumber":200,"author":{"gitId":"gohyongjing"},"content":"     * The elderly identity of {@code editedElderly} must not be the same as","lastModifiedDate":"2023-02-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * another existing elderly in the friendlyLink cache.","lastModifiedDate":"2023-02-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":203,"author":{"gitId":"Zxun2"},"content":"    public void setElderly(Elderly target, Elderly editedElderly) {","lastModifiedDate":"2023-02-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        requireNonNull(editedElderly);","lastModifiedDate":"2023-02-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        elderly.setPerson(target, editedElderly);","lastModifiedDate":"2023-02-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     * Replaces the given volunteer {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-02-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the friendlyLink cache.","lastModifiedDate":"2023-02-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * The volunteer identity of {@code editedPerson} must not be the same as","lastModifiedDate":"2023-02-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * another existing volunteer in the friendlyLink cache.","lastModifiedDate":"2023-02-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":214,"author":{"gitId":"zhacatomn"},"content":"    public void setVolunteer(Volunteer target, Volunteer editedPerson) {","lastModifiedDate":"2023-02-28"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2023-02-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        volunteers.setPerson(target, editedPerson);","lastModifiedDate":"2023-02-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code FriendlyLink}.","lastModifiedDate":"2023-02-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the friendlyLink cache.","lastModifiedDate":"2023-02-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":228,"author":{"gitId":"gohyongjing"},"content":"     * Removes {@code key} from {@code FriendlyLink}.","lastModifiedDate":"2023-02-28"},{"lineNumber":229,"author":{"gitId":"gohyongjing"},"content":"     * {@code key} must exist in the elderly\u0027s list.","lastModifiedDate":"2023-02-28"},{"lineNumber":230,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":231,"author":{"gitId":"gohyongjing"},"content":"    public void removeElderly(Elderly key) {","lastModifiedDate":"2023-02-28"},{"lineNumber":232,"author":{"gitId":"gohyongjing"},"content":"        elderly.remove(key);","lastModifiedDate":"2023-02-28"},{"lineNumber":233,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":234,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":235,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-28"},{"lineNumber":236,"author":{"gitId":"gohyongjing"},"content":"     * Removes {@code key} from {@code FriendlyLink}.","lastModifiedDate":"2023-02-28"},{"lineNumber":237,"author":{"gitId":"gohyongjing"},"content":"     * {@code key} must exist in the volunteer\u0027s list.","lastModifiedDate":"2023-02-28"},{"lineNumber":238,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-28"},{"lineNumber":239,"author":{"gitId":"zhacatomn"},"content":"    public void removeVolunteer(Volunteer key) {","lastModifiedDate":"2023-03-01"},{"lineNumber":240,"author":{"gitId":"gohyongjing"},"content":"        volunteers.remove(key);","lastModifiedDate":"2023-02-28"},{"lineNumber":241,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":242,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    //// pair-level operations","lastModifiedDate":"2023-02-11"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":246,"author":{"gitId":"gohyongjing"},"content":"     * Returns true if a pair with the same identity as {@code pair} exists in FriendlyLink.","lastModifiedDate":"2023-02-28"},{"lineNumber":247,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    public boolean hasPair(Pair pair) {","lastModifiedDate":"2023-02-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        requireNonNull(pair);","lastModifiedDate":"2023-02-11"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        return pairs.contains(pair);","lastModifiedDate":"2023-02-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":254,"author":{"gitId":"gohyongjing"},"content":"     * Adds a pair to FriendlyLink.","lastModifiedDate":"2023-02-28"},{"lineNumber":255,"author":{"gitId":"gohyongjing"},"content":"     * The pair must not already exist in FriendlyLink.","lastModifiedDate":"2023-02-28"},{"lineNumber":256,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    public void addPair(Pair p) {","lastModifiedDate":"2023-02-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        pairs.add(p);","lastModifiedDate":"2023-02-11"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"     * Replaces the given pair {@code target} in the list with {@code editedPair}.","lastModifiedDate":"2023-02-11"},{"lineNumber":263,"author":{"gitId":"gohyongjing"},"content":"     * {@code target} must exist in FriendlyLink.","lastModifiedDate":"2023-02-28"},{"lineNumber":264,"author":{"gitId":"gohyongjing"},"content":"     * The pair identity of {@code editedPair} must not be the same as another existing pair in FriendlyLink.","lastModifiedDate":"2023-02-28"},{"lineNumber":265,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    public void setPair(Pair target, Pair editedPair) {","lastModifiedDate":"2023-02-11"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        requireNonNull(editedPair);","lastModifiedDate":"2023-02-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        pairs.setPair(target, editedPair);","lastModifiedDate":"2023-02-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2023-02-12"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\"","lastModifiedDate":"2023-02-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"                + elderly.asUnmodifiableObservableList().size() + \" elderly\"","lastModifiedDate":"2023-02-12"},{"lineNumber":276,"author":{"gitId":"Zxun2"},"content":"                + volunteers.asUnmodifiableObservableList().size() + \" volunteers\"","lastModifiedDate":"2023-02-21"},{"lineNumber":277,"author":{"gitId":"Zxun2"},"content":"                + pairs.asUnmodifiableObservableList().size() + \" pairs\";","lastModifiedDate":"2023-02-21"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":286,"author":{"gitId":"Zxun2"},"content":"    public ObservableList\u003cElderly\u003e getElderlyList() {","lastModifiedDate":"2023-02-21"},{"lineNumber":287,"author":{"gitId":"Zxun2"},"content":"        return elderly.asUnmodifiableObservableList();","lastModifiedDate":"2023-02-21"},{"lineNumber":288,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":291,"author":{"gitId":"zhacatomn"},"content":"    public ObservableList\u003cVolunteer\u003e getVolunteerList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":292,"author":{"gitId":"Zxun2"},"content":"        return volunteers.asUnmodifiableObservableList();","lastModifiedDate":"2023-02-21"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":296,"author":{"gitId":"Zxun2"},"content":"    public ObservableList\u003cPair\u003e getPairList() {","lastModifiedDate":"2023-02-21"},{"lineNumber":297,"author":{"gitId":"Zxun2"},"content":"        return pairs.asUnmodifiableObservableList();","lastModifiedDate":"2023-02-21"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":300,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":302,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":304,"author":{"gitId":"-"},"content":"                || (other instanceof FriendlyLink // instanceof handles nulls","lastModifiedDate":"2023-02-11"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((FriendlyLink) other).persons)","lastModifiedDate":"2023-02-12"},{"lineNumber":306,"author":{"gitId":"-"},"content":"                \u0026\u0026 elderly.equals(((FriendlyLink) other).elderly)","lastModifiedDate":"2023-02-12"},{"lineNumber":307,"author":{"gitId":"Zxun2"},"content":"                \u0026\u0026 volunteers.equals(((FriendlyLink) other).volunteers)","lastModifiedDate":"2023-02-21"},{"lineNumber":308,"author":{"gitId":"Zxun2"},"content":"                \u0026\u0026 pairs.equals(((FriendlyLink) other).pairs));","lastModifiedDate":"2023-02-21"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":313,"author":{"gitId":"Zxun2"},"content":"        return persons.hashCode()","lastModifiedDate":"2023-02-21"},{"lineNumber":314,"author":{"gitId":"Zxun2"},"content":"                + elderly.hashCode()","lastModifiedDate":"2023-02-21"},{"lineNumber":315,"author":{"gitId":"Zxun2"},"content":"                + volunteers.hashCode()","lastModifiedDate":"2023-02-21"},{"lineNumber":316,"author":{"gitId":"Zxun2"},"content":"                + pairs.hashCode();","lastModifiedDate":"2023-02-21"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zxun2":37,"gohyongjing":54,"-":214,"zhacatomn":13}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.pair.Pair;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"heeeyi"},"content":"    Predicate\u003cElderly\u003e PREDICATE_SHOW_ALL_ELDERLYS \u003d unused -\u003e true;","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"     * Returns the user prefs\u0027 FriendlyLink database file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    Path getFriendlyLinkFilePath();","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"     * Sets the user prefs\u0027 FriendlyLink database file path.","lastModifiedDate":"2023-02-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"    void setFriendlyLinkFilePath(Path friendlyLinkFilePath);","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"     * Replaces FriendlyLink database data with the data in {@code friendlyLink}.","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"    void setFriendlyLink(ReadOnlyFriendlyLink friendlyLink);","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"    /** Returns the FriendlyLink */","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    ReadOnlyFriendlyLink getFriendlyLink();","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the FriendlyLink database.","lastModifiedDate":"2023-02-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"     * The person must exist in the FriendlyLink database.","lastModifiedDate":"2023-02-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"gohyongjing"},"content":"     * {@code person} must not already exist in the FriendlyLink database.","lastModifiedDate":"2023-02-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":79,"author":{"gitId":"gohyongjing"},"content":"     * {@code target} must exist in the FriendlyLink database.","lastModifiedDate":"2023-02-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"gohyongjing"},"content":"     * FriendlyLink database.","lastModifiedDate":"2023-02-28"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"gohyongjing"},"content":"     * Retrieves the elderly with the given Nric.","lastModifiedDate":"2023-02-22"},{"lineNumber":87,"author":{"gitId":"gohyongjing"},"content":"     * Elderly of that Nric must exist in the FriendlyLink database.","lastModifiedDate":"2023-02-28"},{"lineNumber":88,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"gohyongjing"},"content":"     * @param nric Nric of the elderly.","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"gohyongjing"},"content":"     * @return Elderly with that Nric.","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"gohyongjing"},"content":"    Elderly getElderly(Nric nric);","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"gohyongjing"},"content":"     * Retrieves the volunteer with the given Nric.","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"gohyongjing"},"content":"     * Volunteer of that Nric must exist in the FriendlyLink database.","lastModifiedDate":"2023-02-28"},{"lineNumber":97,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"gohyongjing"},"content":"     * @param nric Nric of the volunteer.","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"gohyongjing"},"content":"     * @return Volunteer with that Nric.","lastModifiedDate":"2023-02-22"},{"lineNumber":100,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"gohyongjing"},"content":"    Volunteer getVolunteer(Nric nric);","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns true if an elderly with the same identity as {@code elderly} exists in the friendly link database.","lastModifiedDate":"2023-02-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":106,"author":{"gitId":"Zxun2"},"content":"    boolean hasElderly(Elderly elderly);","lastModifiedDate":"2023-02-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Deletes the given elderly.","lastModifiedDate":"2023-02-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * The elderly must exist in the friendly link database.","lastModifiedDate":"2023-02-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":112,"author":{"gitId":"Zxun2"},"content":"    void deleteElderly(Elderly target);","lastModifiedDate":"2023-02-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Adds the given elderly.","lastModifiedDate":"2023-02-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code elderly} must not already exist in the friendly link database.","lastModifiedDate":"2023-02-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":118,"author":{"gitId":"Zxun2"},"content":"    void addElderly(Elderly elderly);","lastModifiedDate":"2023-02-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Replaces the given elderly {@code target} with {@code editedPerson}.","lastModifiedDate":"2023-02-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the friendly link database.","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * The elderly identity of {@code editedPerson} must not be the same as another existing elderly in the","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * friendly link database.","lastModifiedDate":"2023-02-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"Zxun2"},"content":"    void setElderly(Elderly target, Elderly editedPerson);","lastModifiedDate":"2023-02-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns true if a volunteer with the same identity as {@code volunteer} exists in the friendly link database.","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":131,"author":{"gitId":"Zxun2"},"content":"    boolean hasVolunteer(Volunteer volunteer);","lastModifiedDate":"2023-02-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Deletes the given volunteer.","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * The volunteer must exist in the friendly link database.","lastModifiedDate":"2023-02-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"Zxun2"},"content":"    void deleteVolunteer(Volunteer target);","lastModifiedDate":"2023-02-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Adds the given volunteer.","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * {@code volunteer} must not already exist in the friendly link database.","lastModifiedDate":"2023-02-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"Zxun2"},"content":"    void addVolunteer(Volunteer volunteer);","lastModifiedDate":"2023-02-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"Zxun2"},"content":"     * Replaces the given volunteer {@code target} with {@code editedVolunteer}.","lastModifiedDate":"2023-02-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the friendly link database.","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"Zxun2"},"content":"     * The volunteer identity of {@code editedVolunteer} must not be the same as another existing volunteer in the","lastModifiedDate":"2023-02-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * friendly link database.","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"Zxun2"},"content":"    void setVolunteer(Volunteer target, Volunteer editedPerson);","lastModifiedDate":"2023-02-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Returns true if a pair with the same identity as {@code pair} exists in the address book.","lastModifiedDate":"2023-02-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    boolean hasPair(Pair pair);","lastModifiedDate":"2023-02-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Deletes the given pair.","lastModifiedDate":"2023-02-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * The pair must exist in the address book.","lastModifiedDate":"2023-02-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    void deletePair(Pair target);","lastModifiedDate":"2023-02-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Adds the given pair.","lastModifiedDate":"2023-02-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * {@code pair} must not already exist in the address book.","lastModifiedDate":"2023-02-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    void addPair(Pair pair);","lastModifiedDate":"2023-02-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Replaces the given pair {@code target} with {@code editedPair}.","lastModifiedDate":"2023-02-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-02-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * The pair identity of {@code editedPair} must not be the same as another existing pair in the address book.","lastModifiedDate":"2023-02-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    void setPair(Pair target, Pair editedPair);","lastModifiedDate":"2023-02-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered elderly list */","lastModifiedDate":"2023-02-12"},{"lineNumber":189,"author":{"gitId":"Zxun2"},"content":"    ObservableList\u003cElderly\u003e getFilteredElderlyList();","lastModifiedDate":"2023-02-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered elderly list to filter by the given {@code predicate}.","lastModifiedDate":"2023-02-12"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-02-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":195,"author":{"gitId":"heeeyi"},"content":"    void updateFilteredElderlyList(Predicate\u003cElderly\u003e predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered volunteers list */","lastModifiedDate":"2023-02-12"},{"lineNumber":199,"author":{"gitId":"zhacatomn"},"content":"    ObservableList\u003cVolunteer\u003e getFilteredVolunteerList();","lastModifiedDate":"2023-02-28"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered volunteers list to filter by the given {@code predicate}.","lastModifiedDate":"2023-02-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-02-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    void updateFilteredVolunteerList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2023-02-12"},{"lineNumber":206,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered pair list */","lastModifiedDate":"2023-02-11"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    ObservableList\u003cPair\u003e getFilteredPairList();","lastModifiedDate":"2023-02-11"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered pair list to filter by the given {@code predicate}.","lastModifiedDate":"2023-02-11"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-02-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    void updateFilteredPairList(Predicate\u003cPair\u003e predicate);","lastModifiedDate":"2023-02-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Zxun2":16,"gohyongjing":27,"heeeyi":2,"-":169,"zhacatomn":2}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.pair.Pair;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":" * Represents the in-memory model of the FriendlyLink data.","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FriendlyLink friendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    private final FilteredList\u003cElderly\u003e filteredElderly;","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"    private final FilteredList\u003cVolunteer\u003e filteredVolunteers;","lastModifiedDate":"2023-02-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPair\u003e filteredPairs;","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given friendlyLink and userPrefs.","lastModifiedDate":"2023-02-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyFriendlyLink friendlyLink, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-02-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireAllNonNull(friendlyLink, userPrefs);","lastModifiedDate":"2023-02-12"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"        logger.fine(\"Initializing with FriendlyLink: \" + friendlyLink + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-02-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.friendlyLink \u003d new FriendlyLink(friendlyLink);","lastModifiedDate":"2023-02-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.friendlyLink.getPersonList());","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        filteredElderly \u003d new FilteredList\u003c\u003e(this.friendlyLink.getElderlyList());","lastModifiedDate":"2023-02-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        filteredVolunteers \u003d new FilteredList\u003c\u003e(this.friendlyLink.getVolunteerList());","lastModifiedDate":"2023-02-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        filteredPairs \u003d new FilteredList\u003c\u003e(this.friendlyLink.getPairList());","lastModifiedDate":"2023-02-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this(new FriendlyLink(), new UserPrefs());","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Path getFriendlyLinkFilePath() {","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs.getFriendlyLinkFilePath();","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setFriendlyLinkFilePath(Path friendlyLinkFilePath) {","lastModifiedDate":"2023-02-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(friendlyLinkFilePath);","lastModifiedDate":"2023-02-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userPrefs.setFriendlyLinkFilePath(friendlyLinkFilePath);","lastModifiedDate":"2023-02-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"gohyongjing"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FriendlyLink \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setFriendlyLink(ReadOnlyFriendlyLink friendlyLink) {","lastModifiedDate":"2023-02-12"},{"lineNumber":90,"author":{"gitId":"Zxun2"},"content":"        this.friendlyLink.resetFriendlyLinkData(friendlyLink);","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public ReadOnlyFriendlyLink getFriendlyLink() {","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return friendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FriendlyLink Persons  \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return friendlyLink.hasPerson(person);","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        friendlyLink.removePerson(target);","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        friendlyLink.addPerson(person);","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        friendlyLink.setPerson(target, editedPerson);","lastModifiedDate":"2023-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FriendlyLink Elderly  \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":124,"author":{"gitId":"Zxun2"},"content":"    public boolean hasElderly(Elderly e) {","lastModifiedDate":"2023-02-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return friendlyLink.hasElderly(e);","lastModifiedDate":"2023-02-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":130,"author":{"gitId":"Zxun2"},"content":"    public void deleteElderly(Elderly target) {","lastModifiedDate":"2023-02-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        friendlyLink.removeElderly(target);","lastModifiedDate":"2023-02-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":135,"author":{"gitId":"Zxun2"},"content":"    public void addElderly(Elderly person) {","lastModifiedDate":"2023-02-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        friendlyLink.addElderly(person);","lastModifiedDate":"2023-02-12"},{"lineNumber":137,"author":{"gitId":"heeeyi"},"content":"        updateFilteredElderlyList(PREDICATE_SHOW_ALL_ELDERLYS);","lastModifiedDate":"2023-02-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":141,"author":{"gitId":"Zxun2"},"content":"    public void setElderly(Elderly target, Elderly editedPerson) {","lastModifiedDate":"2023-02-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2023-02-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        friendlyLink.setElderly(target, editedPerson);","lastModifiedDate":"2023-02-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FriendlyLink Volunteers  \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"Zxun2"},"content":"    public boolean hasVolunteer(Volunteer person) {","lastModifiedDate":"2023-02-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-02-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return friendlyLink.hasVolunteer(person);","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"Zxun2"},"content":"    public void deleteVolunteer(Volunteer target) {","lastModifiedDate":"2023-02-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        friendlyLink.removeVolunteer(target);","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":159,"author":{"gitId":"Zxun2"},"content":"    public void addVolunteer(Volunteer person) {","lastModifiedDate":"2023-02-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        friendlyLink.addVolunteer(person);","lastModifiedDate":"2023-02-12"},{"lineNumber":161,"author":{"gitId":"Zxun2"},"content":"        updateFilteredVolunteerList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-02-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":165,"author":{"gitId":"Zxun2"},"content":"    public void setVolunteer(Volunteer target, Volunteer editedVolunteer) {","lastModifiedDate":"2023-02-24"},{"lineNumber":166,"author":{"gitId":"Zxun2"},"content":"        requireAllNonNull(target, editedVolunteer);","lastModifiedDate":"2023-02-24"},{"lineNumber":167,"author":{"gitId":"Zxun2"},"content":"        friendlyLink.setVolunteer(target, editedVolunteer);","lastModifiedDate":"2023-02-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":170,"author":{"gitId":"gohyongjing"},"content":"    public Elderly getElderly(Nric nric) {","lastModifiedDate":"2023-02-22"},{"lineNumber":171,"author":{"gitId":"gohyongjing"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-02-22"},{"lineNumber":172,"author":{"gitId":"gohyongjing"},"content":"        return friendlyLink.getElderly(nric);","lastModifiedDate":"2023-02-22"},{"lineNumber":173,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":174,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":175,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":176,"author":{"gitId":"gohyongjing"},"content":"    public Volunteer getVolunteer(Nric nric) {","lastModifiedDate":"2023-02-22"},{"lineNumber":177,"author":{"gitId":"gohyongjing"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-02-22"},{"lineNumber":178,"author":{"gitId":"gohyongjing"},"content":"        return friendlyLink.getVolunteer(nric);","lastModifiedDate":"2023-02-22"},{"lineNumber":179,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":180,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public boolean hasPair(Pair pair) {","lastModifiedDate":"2023-02-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        requireNonNull(pair);","lastModifiedDate":"2023-02-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return friendlyLink.hasPair(pair);","lastModifiedDate":"2023-02-13"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void deletePair(Pair target) {","lastModifiedDate":"2023-02-11"},{"lineNumber":189,"author":{"gitId":"gohyongjing"},"content":"        // TODO: implement friendlyLink.removePair(target);","lastModifiedDate":"2023-02-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void addPair(Pair pair) {","lastModifiedDate":"2023-02-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        friendlyLink.addPair(pair);","lastModifiedDate":"2023-02-13"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // TODO: implement updateFilteredPersonList(PREDICATE_SHOW_ALL_PAIRS);","lastModifiedDate":"2023-02-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void setPair(Pair target, Pair editedPair) {","lastModifiedDate":"2023-02-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPair);","lastModifiedDate":"2023-02-11"},{"lineNumber":201,"author":{"gitId":"gohyongjing"},"content":"        // TODO: implement friendlyLink.setPair(target, editedPair);","lastModifiedDate":"2023-02-22"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     * {@code versionedFriendlyLink}","lastModifiedDate":"2023-02-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Elderly List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Elderly} backed by the internal list of","lastModifiedDate":"2023-02-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"     * {@code versionedFriendlyLink}","lastModifiedDate":"2023-02-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":228,"author":{"gitId":"Zxun2"},"content":"    public ObservableList\u003cElderly\u003e getFilteredElderlyList() {","lastModifiedDate":"2023-02-21"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        return filteredElderly;","lastModifiedDate":"2023-02-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":233,"author":{"gitId":"heeeyi"},"content":"    public void updateFilteredElderlyList(Predicate\u003cElderly\u003e predicate) {","lastModifiedDate":"2023-02-28"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-02-12"},{"lineNumber":235,"author":{"gitId":"heeeyi"},"content":"        filteredElderly.setPredicate(predicate);","lastModifiedDate":"2023-02-28"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Volunteer List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2023-02-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     * {@code versionedFriendlyLink}","lastModifiedDate":"2023-02-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":245,"author":{"gitId":"zhacatomn"},"content":"    public ObservableList\u003cVolunteer\u003e getFilteredVolunteerList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        return filteredVolunteers;","lastModifiedDate":"2023-02-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    public void updateFilteredVolunteerList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-02-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-02-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2023-02-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Pair List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-11"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":258,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Pair} backed by the internal list of","lastModifiedDate":"2023-02-11"},{"lineNumber":259,"author":{"gitId":"gohyongjing"},"content":"     * {@code versionedFriendlyLink}","lastModifiedDate":"2023-02-22"},{"lineNumber":260,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPair\u003e getFilteredPairList() {","lastModifiedDate":"2023-02-11"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        return filteredPairs;","lastModifiedDate":"2023-02-11"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    public void updateFilteredPairList(Predicate\u003cPair\u003e predicate) {","lastModifiedDate":"2023-02-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-02-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        // TODO: implement filteredPairs.setPredicate(predicate);","lastModifiedDate":"2023-02-13"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":284,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":286,"author":{"gitId":"-"},"content":"        return friendlyLink.equals(other.friendlyLink)","lastModifiedDate":"2023-02-11"},{"lineNumber":287,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":288,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zxun2":16,"gohyongjing":17,"heeeyi":3,"-":252,"zhacatomn":3}},{"path":"src/main/java/seedu/address/model/ReadOnlyElderly.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":" * Unmodifiable list of Elderly","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"public interface ReadOnlyElderly {","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"     * Returns an unmodifiable view of the elderly list.","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"     * This list will not contain any duplicate elderly.","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    ObservableList\u003cElderly\u003e getElderlyList();","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Zxun2":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyFriendlyLink.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.pair.Pair;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":" * Unmodifiable view of FriendlyLink.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"public interface ReadOnlyFriendlyLink extends ReadOnlyElderly, ReadOnlyVolunteer {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the pairs list.","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate pairs.","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    ObservableList\u003cPair\u003e getPairList();","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":21,"zhacatomn":2}},{"path":"src/main/java/seedu/address/model/ReadOnlyVolunteer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package seedu.address.model;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":" * Unmodifiable list of volunteers","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"public interface ReadOnlyVolunteer {","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"     * Returns an unmodifiable view of the volunteer list.","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"     * This list will not contain any duplicate volunteers.","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"    ObservableList\u003cVolunteer\u003e getVolunteerList();","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Zxun2":13,"zhacatomn":3}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path friendlyLinkFilePath \u003d Paths.get(\"data\" , \"friendlylink.json\");","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"    private final Path elderlyFilePath \u003d Paths.get(\"data\" , \"elderly.json\");","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    private final Path volunteerFilePath \u003d Paths.get(\"data\" , \"volunteer.json\");","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        setFriendlyLinkFilePath(newUserPrefs.getFriendlyLinkFilePath());","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getFriendlyLinkFilePath() {","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return friendlyLinkFilePath;","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"    public Path getElderlyFilePath() {","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"        return elderlyFilePath;","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"    public Path getVolunteerFilePath() {","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"        return volunteerFilePath;","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setFriendlyLinkFilePath(Path friendlyLinkFilePath) {","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(friendlyLinkFilePath);","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.friendlyLinkFilePath \u003d friendlyLinkFilePath;","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 friendlyLinkFilePath.equals(o.friendlyLinkFilePath);","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, friendlyLinkFilePath);","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return \"Gui Settings : \" + guiSettings","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                + \"\\nLocal data file location : \" + friendlyLinkFilePath;","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zxun2":10,"-":85}},{"path":"src/main/java/seedu/address/model/pair/Pair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.pair;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Represents a Pair of elderly and volunteer in the address book.","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Pair {","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"    private final Elderly elderly;","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"    private final Volunteer volunteer;","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    public Pair(Elderly elderly, Volunteer volunteer) {","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireAllNonNull(elderly, volunteer);","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.elderly \u003d elderly;","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.volunteer \u003d volunteer;","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"    public Elderly getElderly() {","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return elderly;","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"    public Volunteer getVolunteer() {","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return volunteer;","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"     * Returns true if both pairs have the same volunteer and elderly.","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two pairs.","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean isSamePair(Pair otherPair) {","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (otherPair \u003d\u003d this) {","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return otherPair !\u003d null","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 getElderly().isSamePerson(otherPair.getElderly())","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                \u0026\u0026 getVolunteer().isSamePerson(otherPair.getVolunteer());","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if both pairs have the same elderly and volunteer.","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two pairs.","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!(other instanceof Pair)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Pair otherPair \u003d (Pair) other;","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return getElderly().equals(otherPair.getElderly())","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 getVolunteer().equals(otherPair.getVolunteer());","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return Objects.hash(elderly, volunteer);","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        builder.append(\"Elderly: \")","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .append(getElderly())","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .append(\"; Volunteer: \")","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .append(getVolunteer());","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"gohyongjing":8,"-":79}},{"path":"src/main/java/seedu/address/model/pair/exceptions/DuplicatePairException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package seedu.address.model.pair.exceptions;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.commons.exceptions.DuplicateObjectException;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":" * Signals that the operation will result in duplicate Pairs (Pairs are considered duplicates","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":" * if its volunteer and elderly have the same identity).","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"public class DuplicatePairException extends DuplicateObjectException {","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a new duplicate pair exception.","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"    public DuplicatePairException() {","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"        super(\"pairs\");","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"gohyongjing":17}},{"path":"src/main/java/seedu/address/model/person/NricMatchesKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"heeeyi"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-02-28"},{"lineNumber":2,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":3,"author":{"gitId":"heeeyi"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-28"},{"lineNumber":4,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":5,"author":{"gitId":"heeeyi"},"content":"/**","lastModifiedDate":"2023-02-28"},{"lineNumber":6,"author":{"gitId":"heeeyi"},"content":" * Now temporarily make this Elderly, because NRIC not put in Person yet","lastModifiedDate":"2023-02-28"},{"lineNumber":7,"author":{"gitId":"heeeyi"},"content":" * Later this should actually be Predicate Person","lastModifiedDate":"2023-02-28"},{"lineNumber":8,"author":{"gitId":"heeeyi"},"content":" */","lastModifiedDate":"2023-02-28"},{"lineNumber":9,"author":{"gitId":"heeeyi"},"content":"public class NricMatchesKeywordsPredicate implements Predicate\u003cElderly\u003e {","lastModifiedDate":"2023-02-28"},{"lineNumber":10,"author":{"gitId":"heeeyi"},"content":"    private final String keywords;","lastModifiedDate":"2023-02-28"},{"lineNumber":11,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":12,"author":{"gitId":"heeeyi"},"content":"    public NricMatchesKeywordsPredicate(String keywords) {","lastModifiedDate":"2023-02-28"},{"lineNumber":13,"author":{"gitId":"heeeyi"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-02-28"},{"lineNumber":14,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":15,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"heeeyi"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":17,"author":{"gitId":"heeeyi"},"content":"    public boolean test(Elderly elderly) {","lastModifiedDate":"2023-02-28"},{"lineNumber":18,"author":{"gitId":"heeeyi"},"content":"        String nric \u003d elderly.getNric().toString();","lastModifiedDate":"2023-02-28"},{"lineNumber":19,"author":{"gitId":"heeeyi"},"content":"        return this.keywords.toLowerCase().equals(nric.toLowerCase());","lastModifiedDate":"2023-02-28"},{"lineNumber":20,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":21,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":22,"author":{"gitId":"heeeyi"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":23,"author":{"gitId":"heeeyi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-28"},{"lineNumber":24,"author":{"gitId":"heeeyi"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-02-28"},{"lineNumber":25,"author":{"gitId":"heeeyi"},"content":"                || (other instanceof NricMatchesKeywordsPredicate","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"heeeyi"},"content":"                \u0026\u0026 keywords.equals(((NricMatchesKeywordsPredicate) other).keywords));","lastModifiedDate":"2023-02-28"},{"lineNumber":27,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":28,"author":{"gitId":"heeeyi"},"content":"}","lastModifiedDate":"2023-02-28"}],"authorContributionMap":{"heeeyi":28}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":" * persons uses Person#isSamePerson(Person) for equality to ensure that the person being added or updated is","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object)","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":" * to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-02-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"public class UniquePersonList\u003cT extends Person\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    private final ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    private final ObservableList\u003cT\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"    public void setPerson(T target, T editedPerson) {","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2023-02-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"gohyongjing"},"content":"     * Retrieves one of the elderly with the given nric from the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"gohyongjing"},"content":"     * The elderly with such a nric must exist in the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":87,"author":{"gitId":"gohyongjing"},"content":"     * @param nric Nric of the elderly.","lastModifiedDate":"2023-02-22"},{"lineNumber":88,"author":{"gitId":"gohyongjing"},"content":"     * @return Elderly with that name.","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":90,"author":{"gitId":"gohyongjing"},"content":"    public Elderly getElderly(Nric nric) {","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"gohyongjing"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"gohyongjing"},"content":"        for (Person person : this) {","lastModifiedDate":"2023-02-22"},{"lineNumber":93,"author":{"gitId":"gohyongjing"},"content":"            if (person instanceof Elderly) {","lastModifiedDate":"2023-02-22"},{"lineNumber":94,"author":{"gitId":"gohyongjing"},"content":"                Elderly elderly \u003d (Elderly) person;","lastModifiedDate":"2023-02-22"},{"lineNumber":95,"author":{"gitId":"gohyongjing"},"content":"                if (elderly.getNric().equals(nric)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"gohyongjing"},"content":"                    return elderly;","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"gohyongjing"},"content":"                }","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"gohyongjing"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":100,"author":{"gitId":"gohyongjing"},"content":"        throw new PersonNotFoundException();","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"gohyongjing"},"content":"     * Retrieves one of the volunteer with the given nric from the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":105,"author":{"gitId":"gohyongjing"},"content":"     * The volunteer with such a nric must exist in the list.","lastModifiedDate":"2023-02-22"},{"lineNumber":106,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":107,"author":{"gitId":"gohyongjing"},"content":"     * @param nric Nric of the volunteer.","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"gohyongjing"},"content":"     * @return volunteer with that name.","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":110,"author":{"gitId":"gohyongjing"},"content":"    public Volunteer getVolunteer(Nric nric) {","lastModifiedDate":"2023-02-22"},{"lineNumber":111,"author":{"gitId":"gohyongjing"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-02-22"},{"lineNumber":112,"author":{"gitId":"gohyongjing"},"content":"        for (Person person : this) {","lastModifiedDate":"2023-02-22"},{"lineNumber":113,"author":{"gitId":"gohyongjing"},"content":"            if (person instanceof Volunteer) {","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"gohyongjing"},"content":"                Volunteer volunteer \u003d (Volunteer) person;","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"gohyongjing"},"content":"                if (volunteer.getNric().equals(nric)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"gohyongjing"},"content":"                    return volunteer;","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"gohyongjing"},"content":"                }","lastModifiedDate":"2023-02-22"},{"lineNumber":118,"author":{"gitId":"gohyongjing"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":119,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"gohyongjing"},"content":"        throw new PersonNotFoundException();","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"Zxun2"},"content":"    public void setPersons(UniquePersonList\u003cT\u003e replacement) {","lastModifiedDate":"2023-02-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":132,"author":{"gitId":"Zxun2"},"content":"    public void setPersons(List\u003cT\u003e persons) {","lastModifiedDate":"2023-02-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":144,"author":{"gitId":"Zxun2"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-02-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"Zxun2"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2023-02-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":157,"author":{"gitId":"Zxun2"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList\u003c?\u003e) other).internalList));","lastModifiedDate":"2023-02-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":168,"author":{"gitId":"Zxun2"},"content":"    private boolean personsAreUnique(List\u003cT\u003e persons) {","lastModifiedDate":"2023-02-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zxun2":16,"gohyongjing":41,"-":121}},{"path":"src/main/java/seedu/address/model/person/Volunteer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Address;","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Age;","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Email;","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Name;","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Phone;","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":" * Represents an Volunteer in the database.","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"public class Volunteer extends Person {","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"    private final Nric nric;","lastModifiedDate":"2023-02-19"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"    private final Age age;","lastModifiedDate":"2023-02-19"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"    public Volunteer(Name name, Phone phone, Email email,","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"                     Address address, Nric nric, Age age, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-02-19"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-02-19"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"    public Nric getNric() {","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"        return nric;","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"    public Age getAge() {","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"        return age;","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"     * Returns true if both volunteer have the same name and NRIC.","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"     * This defines a weaker notion of equality between two volunteers.","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"     * Used to detect if the new volunteer is \"Duplicate\" of existing ones","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"     * in the database.","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"    public boolean isSamePerson(Volunteer otherVolunteer) {","lastModifiedDate":"2023-02-19"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"        if (this \u003d\u003d otherVolunteer) {","lastModifiedDate":"2023-02-19"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"            return true;","lastModifiedDate":"2023-02-19"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"        return super.isSamePerson(otherVolunteer) \u0026\u0026 getNric().equals(otherVolunteer.getNric());","lastModifiedDate":"2023-02-19"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-19"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-19"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"            return true;","lastModifiedDate":"2023-02-19"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"        if (!(other instanceof Volunteer)) {","lastModifiedDate":"2023-02-19"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"            return false;","lastModifiedDate":"2023-02-19"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"        Volunteer otherVolunteer \u003d (Volunteer) other;","lastModifiedDate":"2023-02-19"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"        return super.equals(otherVolunteer)","lastModifiedDate":"2023-02-19"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"                \u0026\u0026 getNric().equals(otherVolunteer.getNric())","lastModifiedDate":"2023-02-19"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"                \u0026\u0026 getAge().equals(otherVolunteer.getAge());","lastModifiedDate":"2023-02-19"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"    @Override","lastModifiedDate":"2023-02-19"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"    public String toString() {","lastModifiedDate":"2023-02-19"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-02-19"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"        builder.append(getName())","lastModifiedDate":"2023-02-19"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2023-02-19"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"                .append(getPhone())","lastModifiedDate":"2023-02-19"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2023-02-19"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"                .append(getEmail())","lastModifiedDate":"2023-02-19"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2023-02-19"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"                .append(getAddress())","lastModifiedDate":"2023-02-19"},{"lineNumber":75,"author":{"gitId":"zhacatomn"},"content":"                .append(\"; NRIC: \")","lastModifiedDate":"2023-02-19"},{"lineNumber":76,"author":{"gitId":"zhacatomn"},"content":"                .append(getNric())","lastModifiedDate":"2023-02-19"},{"lineNumber":77,"author":{"gitId":"zhacatomn"},"content":"                .append(\"; Age: \")","lastModifiedDate":"2023-02-19"},{"lineNumber":78,"author":{"gitId":"zhacatomn"},"content":"                .append(getAge());","lastModifiedDate":"2023-02-19"},{"lineNumber":79,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":80,"author":{"gitId":"zhacatomn"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-02-19"},{"lineNumber":81,"author":{"gitId":"zhacatomn"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-02-19"},{"lineNumber":82,"author":{"gitId":"zhacatomn"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-02-19"},{"lineNumber":83,"author":{"gitId":"zhacatomn"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-02-19"},{"lineNumber":84,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-19"},{"lineNumber":85,"author":{"gitId":"zhacatomn"},"content":"        return builder.toString();","lastModifiedDate":"2023-02-19"},{"lineNumber":86,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-19"},{"lineNumber":87,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":88,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"zhacatomn":88}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.commons.exceptions.DuplicateObjectException;","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"public class DuplicatePersonException extends DuplicateObjectException {","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a new duplicate person exception.","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"        super(\"persons\");","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"gohyongjing":8,"-":9}},{"path":"src/main/java/seedu/address/model/tag/MedicalConditionTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents medical conditions that an elderly might have.","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * @author wz2k","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class MedicalConditionTag extends Tag {","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"     * Represents the level of importance.","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public enum Priority {","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        LOW,","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        MEDIUM,","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        HIGH","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /* Additional description of the condition */","lastModifiedDate":"2023-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private String notes;","lastModifiedDate":"2023-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /* Signifies whether attention is needed */","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private boolean requiresAttention;","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /* The importance of the condition */","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Priority priority;","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code MedicalConditionTag}","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param notes Additional description.","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @param requiresAttention Whether attention is needed.","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param priority Importance level.","lastModifiedDate":"2023-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public MedicalConditionTag(String tagName, String notes, boolean requiresAttention, Priority priority) {","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(tagName);","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.requiresAttention \u003d requiresAttention;","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the notes of the medical condition, if present.","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @return Medical condition notes.","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public String getNotes() {","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (notes \u003d\u003d null) {","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"            return \"No notes added.\";","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return notes;","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns whether attention is required.","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return True if attention is required and false otherwise.","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean isRequiresAttention() {","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return requiresAttention;","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Returns the priority level of the medical condition.","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * @return Priority level.","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public Priority getPriority() {","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return priority;","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Changes the notes of the medical condition to the given notes.","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @param notes The new notes.","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setNotes(String notes) {","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.notes \u003d notes;","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Changes attention level to required.","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setAttentionRequired() {","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.requiresAttention \u003d true;","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Changes attention level to not required.","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setAttentionNotRequired() {","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.requiresAttention \u003d false;","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Changes the priority of the medical condition to the given priority.","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param priority The new priority.","lastModifiedDate":"2023-02-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setPriority(Priority priority) {","lastModifiedDate":"2023-02-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.priority \u003d priority;","lastModifiedDate":"2023-02-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Returns the full details of the medical condition.","lastModifiedDate":"2023-02-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @return Full details.","lastModifiedDate":"2023-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public String toFullString() {","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String requiresAttentionString \u003d String.valueOf(requiresAttention);","lastModifiedDate":"2023-02-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String priorityString \u003d priority.name();","lastModifiedDate":"2023-02-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":114,"author":{"gitId":"Zxun2"},"content":"        return super.toString() + \" \"","lastModifiedDate":"2023-02-21"},{"lineNumber":115,"author":{"gitId":"Zxun2"},"content":"                + requiresAttentionString + \" \"","lastModifiedDate":"2023-02-21"},{"lineNumber":116,"author":{"gitId":"Zxun2"},"content":"                + priorityString + \" \"","lastModifiedDate":"2023-02-21"},{"lineNumber":117,"author":{"gitId":"Zxun2"},"content":"                + notes;","lastModifiedDate":"2023-02-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"Zxun2":5,"-":114}},{"path":"src/main/java/seedu/address/model/tag/MedicalQualificationTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents medical qualifications that a volunteer might have.","lastModifiedDate":"2023-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2023-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * @author wz2k","lastModifiedDate":"2023-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class MedicalQualificationTag extends Tag {","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Represents the different skill level a person can have.","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public enum SkillLevel {","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        BASIC,","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        INTERMEDIATE,","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        ADVANCED","lastModifiedDate":"2023-02-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /* Level of training attained */","lastModifiedDate":"2023-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private SkillLevel qualificationLevel;","lastModifiedDate":"2023-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /* Date where qualification becomes invalid */","lastModifiedDate":"2023-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private LocalDate expiryDate;","lastModifiedDate":"2023-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code MedicalQualification}","lastModifiedDate":"2023-02-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2023-02-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param qualificationLevel How qualified it is.","lastModifiedDate":"2023-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param expiryDate Validity end date.","lastModifiedDate":"2023-02-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public MedicalQualificationTag(String tagName, SkillLevel qualificationLevel, LocalDate expiryDate) {","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        super(tagName);","lastModifiedDate":"2023-02-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.qualificationLevel \u003d qualificationLevel;","lastModifiedDate":"2023-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the level of training attained.","lastModifiedDate":"2023-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return Level of training.","lastModifiedDate":"2023-02-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public SkillLevel getQualificationLevel() {","lastModifiedDate":"2023-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return qualificationLevel;","lastModifiedDate":"2023-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the date where qualification becomes invalid.","lastModifiedDate":"2023-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @return Qualification expiry date.","lastModifiedDate":"2023-02-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public LocalDate getExpiryDate() {","lastModifiedDate":"2023-02-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return expiryDate;","lastModifiedDate":"2023-02-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns whether the qualification has expired.","lastModifiedDate":"2023-02-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @return True is the expiry date is over and false otherwise","lastModifiedDate":"2023-02-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean isExpired() {","lastModifiedDate":"2023-02-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        LocalDate currentDate \u003d LocalDate.now();","lastModifiedDate":"2023-02-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return currentDate.isAfter(expiryDate);","lastModifiedDate":"2023-02-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Changes the skill level of the medical qualification to the given level.","lastModifiedDate":"2023-02-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param qualificationLevel The new level.","lastModifiedDate":"2023-02-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setQualificationLevel(SkillLevel qualificationLevel) {","lastModifiedDate":"2023-02-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.qualificationLevel \u003d qualificationLevel;","lastModifiedDate":"2023-02-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Changes the expiry date of the medical qualification to the given date.","lastModifiedDate":"2023-02-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @param expiryDate The new end date.","lastModifiedDate":"2023-02-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setExpiryDate(LocalDate expiryDate) {","lastModifiedDate":"2023-02-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.expiryDate \u003d expiryDate;","lastModifiedDate":"2023-02-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns the full details of the medical qualification.","lastModifiedDate":"2023-02-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-02-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @return Full details.","lastModifiedDate":"2023-02-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public String toFullString() {","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        String qualificationLevelString \u003d qualificationLevel.name();","lastModifiedDate":"2023-02-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expiryDateString \u003d expiryDate.toString();","lastModifiedDate":"2023-02-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-08"},{"lineNumber":95,"author":{"gitId":"Zxun2"},"content":"        return super.toString() + \" \"","lastModifiedDate":"2023-02-21"},{"lineNumber":96,"author":{"gitId":"Zxun2"},"content":"                + qualificationLevelString + \" \" + expiryDateString;","lastModifiedDate":"2023-02-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-08"}],"authorContributionMap":{"Zxun2":2,"-":96}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.FriendlyLink;","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyFriendlyLink;","lastModifiedDate":"2023-02-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Address;","lastModifiedDate":"2023-02-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Email;","lastModifiedDate":"2023-02-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Name;","lastModifiedDate":"2023-02-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Phone;","lastModifiedDate":"2023-02-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":" * Contains utility methods for populating {@code FriendlyLink} with sample data.","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"    public static ReadOnlyFriendlyLink getSampleFriendlyLink() {","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FriendlyLink sampleAb \u003d new FriendlyLink();","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"gohyongjing":2,"-":58}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.FriendlyLink;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.pair.Pair;","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":" * Jackson-friendly version of {@link Pair}.","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"class JsonAdaptedPair {","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"    public static final String MISSING_ELDERLY_FIELD_MESSAGE_FORMAT \u003d \"Pair\u0027s Elderly\u0027s %s field is missing!\";","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"    public static final String MISSING_VOLUNTEER_FIELD_MESSAGE_FORMAT \u003d \"Pair\u0027s Volunteer\u0027s %s field is missing!\";","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"    private final String elderlyNric;","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"    private final String volunteerNric;","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"     * Constructs a {@code JsonAdaptedPair} with the given pair details.","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"    public JsonAdaptedPair(@JsonProperty(\"elderlyNric\") String elderlyNric,","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"            @JsonProperty(\"volunteerNric\") String volunteerNric) {","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"        this.elderlyNric \u003d elderlyNric;","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"        this.volunteerNric \u003d volunteerNric;","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"     * Converts a given {@code Pair} into this class for Jackson use.","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"    public JsonAdaptedPair(Pair source) {","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"        elderlyNric \u003d source.getElderly().getNric().value;","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"        volunteerNric \u003d source.getVolunteer().getNric().value;","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"     * Converts this Jackson-friendly adapted pair object into the model\u0027s {@code Pair} object.","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"     *","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted pair.","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"    public Pair toModelType(FriendlyLink friendlyLink) throws IllegalValueException {","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"        if (elderlyNric \u003d\u003d null) {","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"            throw new IllegalValueException(String.format(MISSING_ELDERLY_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"                    Nric.class.getSimpleName()));","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"        if (volunteerNric \u003d\u003d null) {","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"            throw new IllegalValueException(String.format(MISSING_VOLUNTEER_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"                    Nric.class.getSimpleName()));","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"        if (!(Nric.isValidNric(elderlyNric) \u0026\u0026 Nric.isValidNric(volunteerNric))) {","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"gohyongjing"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-02-22"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"        final Nric modelElderlyNric \u003d new Nric(elderlyNric);","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"        Elderly elderly \u003d friendlyLink.getElderly(modelElderlyNric);","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":62,"author":{"gitId":"gohyongjing"},"content":"        final Nric modelVolunteerNric \u003d new Nric(volunteerNric);","lastModifiedDate":"2023-02-22"},{"lineNumber":63,"author":{"gitId":"gohyongjing"},"content":"        Volunteer volunteer \u003d friendlyLink.getVolunteer(modelVolunteerNric);","lastModifiedDate":"2023-02-22"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"        return new Pair(elderly, volunteer);","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"gohyongjing":68}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Address;","lastModifiedDate":"2023-02-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Email;","lastModifiedDate":"2023-02-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Name;","lastModifiedDate":"2023-02-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.information.Phone;","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"public class JsonAdaptedPerson {","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Zxun2":1,"-":107}},{"path":"src/main/java/seedu/address/storage/JsonSerializableFriendlyLink.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.FriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyFriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.pair.Pair;","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable FriendlyLink that is serializable to JSON format.","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"friendlylink\")","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableFriendlyLink {","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"    public static final String MESSAGE_DUPLICATE_PAIR \u003d \"Persons list contains duplicate pair(s).\";","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"    private final List\u003cJsonAdaptedPair\u003e pairs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableFriendlyLink} with the given persons.","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"    public JsonSerializableFriendlyLink(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"            @JsonProperty(\"pairs\") List\u003cJsonAdaptedPair\u003e pairs) {","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"        serializePairs(this.pairs, pairs);","lastModifiedDate":"2023-02-28"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"        serializePersons(this.persons, persons);","lastModifiedDate":"2023-02-28"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyFriendlyLink} into this class for Jackson use.","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableFriendlyLink}.","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableFriendlyLink(ReadOnlyFriendlyLink source) {","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"        serializePairs(pairs,","lastModifiedDate":"2023-02-28"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"                source.getPairList().stream().map(JsonAdaptedPair::new).collect(Collectors.toList()));","lastModifiedDate":"2023-02-28"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"        serializePersons(persons,","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2023-02-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"    private void serializePersons(List\u003cJsonAdaptedPerson\u003e entities, List\u003cJsonAdaptedPerson\u003e source) {","lastModifiedDate":"2023-02-28"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"        entities.addAll(source);","lastModifiedDate":"2023-02-28"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"    private void serializePairs(List\u003cJsonAdaptedPair\u003e entities, List\u003cJsonAdaptedPair\u003e source) {","lastModifiedDate":"2023-02-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        entities.addAll(source);","lastModifiedDate":"2023-02-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code FriendlyLink} object.","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public FriendlyLink toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        FriendlyLink friendlyLink \u003d new FriendlyLink();","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        unserializeEntities(persons, friendlyLink);","lastModifiedDate":"2023-02-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return friendlyLink;","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private void unserializeEntities(","lastModifiedDate":"2023-02-12"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"            List\u003cJsonAdaptedPerson\u003e entities, FriendlyLink friendlyLink) throws IllegalValueException {","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : entities) {","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            if (friendlyLink.hasPerson(person)) {","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            friendlyLink.addPerson(person);","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"gohyongjing"},"content":"        for (JsonAdaptedPair jsonAdaptedPair : pairs) {","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"gohyongjing"},"content":"            Pair pair \u003d jsonAdaptedPair.toModelType(friendlyLink);","lastModifiedDate":"2023-02-22"},{"lineNumber":81,"author":{"gitId":"gohyongjing"},"content":"            if (friendlyLink.hasPair(pair)) {","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"gohyongjing"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PAIR);","lastModifiedDate":"2023-02-22"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"            }","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"gohyongjing"},"content":"            friendlyLink.addPair(pair);","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Zxun2":2,"gohyongjing":23,"-":63}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyFriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"import seedu.address.storage.elderly.ElderlyStorage;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"import seedu.address.storage.volunteer.VolunteerStorage;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"public interface Storage extends FriendlyLinkStorage, VolunteerStorage, ElderlyStorage, UserPrefsStorage {","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Path getFriendlyLinkFilePath();","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    Path getElderlyFilePath();","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    Path getVolunteerFilePath();","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyFriendlyLink\u003e readFriendlyLink() throws DataConversionException, IOException;","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"    void saveFriendlyLink(ReadOnlyFriendlyLink friendlyLink) throws IOException;","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Zxun2":9,"gohyongjing":1,"-":30}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.ReadOnlyElderly;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyFriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.ReadOnlyVolunteer;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"import seedu.address.storage.elderly.ElderlyStorage;","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"import seedu.address.storage.volunteer.VolunteerStorage;","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":" * Manages storage of FriendlyLink data in local storage.","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final FriendlyLinkStorage friendlyLinkStorage;","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    private final ElderlyStorage elderlyStorage;","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    private final VolunteerStorage volunteerStorage;","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"     * Creates a {@code StorageManager} with the given {@code FriendlyLinkStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    public StorageManager(FriendlyLinkStorage friendlyLinkStorage, ElderlyStorage elderlyStorage,","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"                          VolunteerStorage volunteerStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.friendlyLinkStorage \u003d friendlyLinkStorage;","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"        this.elderlyStorage \u003d elderlyStorage;","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"        this.volunteerStorage \u003d volunteerStorage;","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d FriendlyLink methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Path getFriendlyLinkFilePath() {","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return friendlyLinkStorage.getFriendlyLinkFilePath();","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"    public Path getElderlyFilePath() {","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"        return elderlyStorage.getElderlyFilePath();","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"     * Returns FriendlyLink data as a {@link ReadOnlyElderly}.","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"Zxun2"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"Zxun2"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"Zxun2"},"content":"    public Optional\u003cReadOnlyElderly\u003e readElderly() throws DataConversionException, IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"Zxun2"},"content":"        return readElderly(elderlyStorage.getElderlyFilePath());","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"Zxun2"},"content":"    public Optional\u003cReadOnlyElderly\u003e readElderly(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"Zxun2"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"Zxun2"},"content":"        return elderlyStorage.readElderly(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"Zxun2"},"content":"     * Saves the given {@link ReadOnlyElderly} to the storage.","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"Zxun2"},"content":"     * @param elderly cannot be null.","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"Zxun2"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"Zxun2"},"content":"    public void saveElderly(ReadOnlyElderly elderly) throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"Zxun2"},"content":"        saveElderly(elderly, elderlyStorage.getElderlyFilePath());","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"Zxun2"},"content":"    public void saveElderly(ReadOnlyElderly elderly, Path filePath) throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"Zxun2"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":103,"author":{"gitId":"Zxun2"},"content":"        elderlyStorage.saveElderly(elderly, filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"Zxun2"},"content":"    public Path getVolunteerFilePath() {","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"Zxun2"},"content":"        return volunteerStorage.getVolunteerFilePath();","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":110,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":111,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"Zxun2"},"content":"     * Returns FriendlyLink data as a {@link ReadOnlyVolunteer}.","lastModifiedDate":"2023-02-24"},{"lineNumber":113,"author":{"gitId":"Zxun2"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":115,"author":{"gitId":"Zxun2"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-02-24"},{"lineNumber":116,"author":{"gitId":"Zxun2"},"content":"     * @throws IOException             if there was any problem when reading from the storage.","lastModifiedDate":"2023-02-24"},{"lineNumber":117,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":118,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":119,"author":{"gitId":"Zxun2"},"content":"    public Optional\u003cReadOnlyVolunteer\u003e readVolunteer() throws DataConversionException, IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":120,"author":{"gitId":"Zxun2"},"content":"        return readVolunteer(volunteerStorage.getVolunteerFilePath());","lastModifiedDate":"2023-02-24"},{"lineNumber":121,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":122,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":123,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":124,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":125,"author":{"gitId":"Zxun2"},"content":"    public Optional\u003cReadOnlyVolunteer\u003e readVolunteer(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":126,"author":{"gitId":"Zxun2"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":127,"author":{"gitId":"Zxun2"},"content":"        return volunteerStorage.readVolunteer(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":128,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":129,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":130,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":131,"author":{"gitId":"Zxun2"},"content":"    public void saveVolunteer(ReadOnlyVolunteer volunteer) throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":132,"author":{"gitId":"Zxun2"},"content":"        saveVolunteer(volunteer, volunteerStorage.getVolunteerFilePath());","lastModifiedDate":"2023-02-24"},{"lineNumber":133,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":134,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":135,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":136,"author":{"gitId":"Zxun2"},"content":"    public void saveVolunteer(ReadOnlyVolunteer volunteer, Path filePath) throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":137,"author":{"gitId":"Zxun2"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":138,"author":{"gitId":"Zxun2"},"content":"        volunteerStorage.saveVolunteer(volunteer, filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":139,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":140,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyFriendlyLink\u003e readFriendlyLink() throws DataConversionException, IOException {","lastModifiedDate":"2023-02-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return readFriendlyLink(friendlyLinkStorage.getFriendlyLinkFilePath());","lastModifiedDate":"2023-02-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyFriendlyLink\u003e readFriendlyLink(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-02-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return friendlyLinkStorage.readFriendlyLink(filePath);","lastModifiedDate":"2023-02-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"gohyongjing"},"content":"    public void saveFriendlyLink(ReadOnlyFriendlyLink friendlyLink) throws IOException {","lastModifiedDate":"2023-02-22"},{"lineNumber":154,"author":{"gitId":"gohyongjing"},"content":"        saveFriendlyLink(friendlyLink, friendlyLinkStorage.getFriendlyLinkFilePath());","lastModifiedDate":"2023-02-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":158,"author":{"gitId":"gohyongjing"},"content":"    public void saveFriendlyLink(ReadOnlyFriendlyLink friendlyLink, Path filePath) throws IOException {","lastModifiedDate":"2023-02-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":160,"author":{"gitId":"gohyongjing"},"content":"        friendlyLinkStorage.saveFriendlyLink(friendlyLink, filePath);","lastModifiedDate":"2023-02-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zxun2":86,"gohyongjing":7,"-":70}},{"path":"src/main/java/seedu/address/storage/elderly/ElderlyStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package seedu.address.storage.elderly;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.ReadOnlyElderly;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":" * Storage class for handling serializing and unserializing of the elderly entity","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"public interface ElderlyStorage {","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    Path getElderlyFilePath();","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"     * Returns FriendlyLink data as a {@link ReadOnlyElderly}.","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    Optional\u003cReadOnlyElderly\u003e readElderly() throws DataConversionException, IOException;","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"     * @see #getElderlyFilePath()","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    Optional\u003cReadOnlyElderly\u003e readElderly(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"     * Saves the given {@link ReadOnlyElderly} to the storage.","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"     * @param elderly cannot be null.","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"    void saveElderly(ReadOnlyElderly elderly) throws IOException;","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"     * @see #saveElderly(ReadOnlyElderly)","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"    void saveElderly(ReadOnlyElderly elderly, Path filePath) throws IOException;","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Zxun2":43}},{"path":"src/main/java/seedu/address/storage/elderly/JsonElderlyStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package seedu.address.storage.elderly;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.ReadOnlyElderly;","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":" * A class to access elderly data stored as a json file on the hard disk.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"public class JsonElderlyStorage implements ElderlyStorage {","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonElderlyStorage.class);","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    private final Path filePath;","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    public JsonElderlyStorage(Path filePath) {","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"    public Path getElderlyFilePath() {","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"        return filePath;","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"    public Optional\u003cReadOnlyElderly\u003e readElderly() throws DataConversionException {","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"        return readElderly(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"     * Similar to {@link #readElderly()}.","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"    public Optional\u003cReadOnlyElderly\u003e readElderly(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"        Optional\u003cJsonSerializableElderly\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"                filePath, JsonSerializableElderly.class);","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"        if (jsonAddressBook.isEmpty()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"            return Optional.empty();","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"    public void saveElderly(ReadOnlyElderly friendlyLink) throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"        saveElderly(friendlyLink, filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"     * Similar to {@link #saveElderly(ReadOnlyElderly)}.","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"Zxun2"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"Zxun2"},"content":"    public void saveElderly(ReadOnlyElderly friendlyLink, Path filePath) throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"        requireNonNull(friendlyLink);","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"Zxun2"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"Zxun2"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"Zxun2"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableElderly(friendlyLink), filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Zxun2":82}},{"path":"src/main/java/seedu/address/storage/elderly/JsonSerializableElderly.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package seedu.address.storage.elderly;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.List;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.FriendlyLink;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.ReadOnlyElderly;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"import seedu.address.storage.JsonAdaptedPerson;","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":" * An Immutable Elderly that is serializable to JSON format.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"@JsonRootName(value \u003d \"elderlies\")","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"public class JsonSerializableElderly {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    public static final String MESSAGE_DUPLICATE_ELDERLY \u003d \"Elderly list contains duplicate elderly.\";","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    private final List\u003cJsonAdaptedPerson\u003e elderly \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"     * Constructs a {@code JsonSerializableElderly} with the given elderly.","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    public JsonSerializableElderly(@JsonProperty(\"elderlies\") List\u003cJsonAdaptedPerson\u003e elderly) {","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"        serializeEntities(this.elderly, elderly);","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"     * Converts a given {@code ReadOnlyElderly} into this class for Jackson use.","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableElderly}.","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"    public JsonSerializableElderly(ReadOnlyElderly source) {","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"        serializeEntities(elderly,","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"                source.getElderlyList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"    private void serializeEntities(List\u003cJsonAdaptedPerson\u003e entities, List\u003cJsonAdaptedPerson\u003e source) {","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"        entities.addAll(source);","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"     * Converts this elderly list into the model\u0027s {@code Elderly} object.","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"    public FriendlyLink toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"        FriendlyLink friendlyLink \u003d new FriendlyLink();","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"        unserializeEntities(elderly, friendlyLink);","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"        return friendlyLink;","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"    private void unserializeEntities(","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"            List\u003cJsonAdaptedPerson\u003e entity, FriendlyLink friendlyLink) throws IllegalValueException {","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : entity) {","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"            // TODO: Check if there is a need to cast","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"            Elderly elderly \u003d (Elderly) jsonAdaptedPerson.toModelType();","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"            if (friendlyLink.hasElderly(elderly)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_ELDERLY);","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"            }","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"            friendlyLink.addElderly(elderly);","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Zxun2":71}},{"path":"src/main/java/seedu/address/storage/volunteer/JsonSerializableVolunteer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package seedu.address.storage.volunteer;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.List;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.FriendlyLink;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.ReadOnlyVolunteer;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"import seedu.address.storage.JsonAdaptedPerson;","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":" * An Immutable Volunteer that is serializable to JSON format.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"@JsonRootName(value \u003d \"volunteers\")","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"public class JsonSerializableVolunteer {","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    public static final String MESSAGE_DUPLICATE_VOLUNTEER \u003d \"Volunteer list contains duplicate volunteer(s).\";","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    private final List\u003cJsonAdaptedPerson\u003e volunteer \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"     * Constructs a {@code JsonSerializableVolunteer} with the given volunteer.","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    @JsonCreator","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    public JsonSerializableVolunteer(@JsonProperty(\"volunteers\") List\u003cJsonAdaptedPerson\u003e volunteer) {","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"        serializeEntities(this.volunteer, volunteer);","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"     * Converts a given {@code ReadOnlyVolunteer} into this class for Jackson use.","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableVolunteer}.","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"    public JsonSerializableVolunteer(ReadOnlyVolunteer source) {","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"        serializeEntities(volunteer,","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"                source.getVolunteerList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"    private void serializeEntities(List\u003cJsonAdaptedPerson\u003e entities, List\u003cJsonAdaptedPerson\u003e source) {","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"        entities.addAll(source);","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"     * Converts this address book into the model\u0027s {@code Volunteer} object.","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"    public FriendlyLink toModelType() throws IllegalValueException {","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"        FriendlyLink friendlyLink \u003d new FriendlyLink();","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"        unserializeEntities(volunteer, friendlyLink);","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"        return friendlyLink;","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"    private void unserializeEntities(","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"            List\u003cJsonAdaptedPerson\u003e entity, FriendlyLink friendlyLink) throws IllegalValueException {","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : entity) {","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"            // TODO: Check if there is a need to cast","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"            Volunteer volunteer \u003d (Volunteer) jsonAdaptedPerson.toModelType();","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"            if (friendlyLink.hasVolunteer(volunteer)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_VOLUNTEER);","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"            }","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"            friendlyLink.addVolunteer(volunteer);","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Zxun2":71}},{"path":"src/main/java/seedu/address/storage/volunteer/JsonVolunteerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package seedu.address.storage.volunteer;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.ReadOnlyVolunteer;","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":" * A class to access volunteer. data stored as a json file on the hard disk.","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"public class JsonVolunteerStorage implements VolunteerStorage {","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    private static final Logger logger \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"            LogsCenter.getLogger(seedu.address.storage.volunteer.JsonVolunteerStorage.class);","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    private final Path filePath;","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    public JsonVolunteerStorage(Path filePath) {","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    public Path getVolunteerFilePath() {","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"        return filePath;","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"    public Optional\u003cReadOnlyVolunteer\u003e readVolunteer() throws DataConversionException {","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"        return readVolunteer(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"     * Similar to {@link #readVolunteer()}.","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"    public Optional\u003cReadOnlyVolunteer\u003e readVolunteer(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"        Optional\u003cJsonSerializableVolunteer\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"                filePath, JsonSerializableVolunteer.class);","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"        if (jsonAddressBook.isEmpty()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"            return Optional.empty();","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"        try {","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"    public void saveVolunteer(ReadOnlyVolunteer friendlyLink) throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"        saveVolunteer(friendlyLink, filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"Zxun2"},"content":"     * Similar to {@link #saveVolunteer(ReadOnlyVolunteer)}.","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"Zxun2"},"content":"     *","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"Zxun2"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"Zxun2"},"content":"    public void saveVolunteer(ReadOnlyVolunteer volunteer, Path filePath) throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"Zxun2"},"content":"        requireNonNull(volunteer);","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"Zxun2"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"Zxun2"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"Zxun2"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableVolunteer(volunteer), filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Zxun2":84}},{"path":"src/main/java/seedu/address/storage/volunteer/VolunteerStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package seedu.address.storage.volunteer;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.io.IOException;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import java.util.Optional;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.ReadOnlyVolunteer;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":" * Storage class for serializing and unserializing of the volunteer entity.","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"public interface VolunteerStorage {","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"    Path getVolunteerFilePath();","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"     * Returns FriendlyLink data as a {@link ReadOnlyVolunteer}.","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"    Optional\u003cReadOnlyVolunteer\u003e readVolunteer() throws DataConversionException, IOException;","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"     * @see #getVolunteerFilePath()","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"    Optional\u003cReadOnlyVolunteer\u003e readVolunteer(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"     * Saves the given {@link ReadOnlyVolunteer} to the storage.","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"     * @param volunteer cannot be null.","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"    void saveVolunteer(ReadOnlyVolunteer volunteer) throws IOException;","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"     * @see #saveVolunteer(ReadOnlyVolunteer)","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"    void saveVolunteer(ReadOnlyVolunteer volunteer, Path filePath) throws IOException;","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"Zxun2":43}},{"path":"src/test/java/seedu/address/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2018-04-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"        private final Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"Zxun2":1,"-":57}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.logic.commands.DeleteVolunteerCommand;","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.ReadOnlyElderly;","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyFriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.ReadOnlyVolunteer;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonFriendlyLinkStorage;","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"import seedu.address.storage.elderly.JsonElderlyStorage;","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"import seedu.address.storage.volunteer.JsonVolunteerStorage;","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"        JsonFriendlyLinkStorage friendlyLinkStorage \u003d","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new JsonFriendlyLinkStorage(temporaryFolder.resolve(\"friendlylink.json\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"        JsonElderlyStorage elderlyStorage \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"                new JsonElderlyStorage(temporaryFolder.resolve(\"elderly.json\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"        JsonVolunteerStorage volunteerStorage \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"                new JsonVolunteerStorage(temporaryFolder.resolve(\"volunteer.json\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"        StorageManager storage \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"                new StorageManager(friendlyLinkStorage, elderlyStorage, volunteerStorage, userPrefsStorage);","lastModifiedDate":"2023-02-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"        String deleteCommand \u003d \"delete_volunteer vnr/T9999999I\";","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"        assertCommandException(deleteCommand, DeleteVolunteerCommand.MESSAGE_INVALID_NRIC_VOLUNTEER);","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"        // Setup LogicManager with JsonFriendlyLinkIoExceptionThrowingStub","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"gohyongjing"},"content":"        JsonFriendlyLinkStorage friendlyLinkStorage \u003d","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                new JsonFriendlyLinkIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionFriendlyLink.json\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"Zxun2"},"content":"        JsonElderlyStorage elderlyStorage \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"Zxun2"},"content":"                new JsonElderlyStorage(temporaryFolder.resolve(\"ioExceptionElderly.json\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"Zxun2"},"content":"        JsonVolunteerStorage volunteerStorage \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"Zxun2"},"content":"                new JsonVolunteerIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionVolunteer.json\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":92,"author":{"gitId":"Zxun2"},"content":"        StorageManager storage \u003d","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"gohyongjing"},"content":"                new StorageManager(friendlyLinkStorage, elderlyStorage, volunteerStorage, userPrefsStorage);","lastModifiedDate":"2023-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getFriendlyLink(), new UserPrefs());","lastModifiedDate":"2023-02-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    private static class JsonFriendlyLinkIoExceptionThrowingStub extends JsonFriendlyLinkStorage {","lastModifiedDate":"2023-02-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        private JsonFriendlyLinkIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-02-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"gohyongjing"},"content":"        public void saveFriendlyLink(ReadOnlyFriendlyLink friendlyLink, Path filePath) throws IOException {","lastModifiedDate":"2023-02-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":178,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":179,"author":{"gitId":"Zxun2"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2023-02-24"},{"lineNumber":180,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":181,"author":{"gitId":"Zxun2"},"content":"    private static class JsonElderlyIoExceptionThrowingStub extends JsonElderlyStorage {","lastModifiedDate":"2023-02-24"},{"lineNumber":182,"author":{"gitId":"Zxun2"},"content":"        private JsonElderlyIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-02-24"},{"lineNumber":183,"author":{"gitId":"Zxun2"},"content":"            super(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":184,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":185,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":186,"author":{"gitId":"Zxun2"},"content":"        @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":187,"author":{"gitId":"Zxun2"},"content":"        public void saveElderly(ReadOnlyElderly elderly, Path filePath) throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":188,"author":{"gitId":"Zxun2"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2023-02-24"},{"lineNumber":189,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":190,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":191,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":192,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":193,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":194,"author":{"gitId":"Zxun2"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2023-02-24"},{"lineNumber":195,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":196,"author":{"gitId":"Zxun2"},"content":"    private static class JsonVolunteerIoExceptionThrowingStub extends JsonVolunteerStorage {","lastModifiedDate":"2023-02-24"},{"lineNumber":197,"author":{"gitId":"Zxun2"},"content":"        public JsonVolunteerIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-02-24"},{"lineNumber":198,"author":{"gitId":"Zxun2"},"content":"            super(filePath);","lastModifiedDate":"2023-02-24"},{"lineNumber":199,"author":{"gitId":"Zxun2"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":200,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":201,"author":{"gitId":"Zxun2"},"content":"        @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":202,"author":{"gitId":"Zxun2"},"content":"        public void saveVolunteer(ReadOnlyVolunteer volunteer, Path filePath) throws IOException {","lastModifiedDate":"2023-02-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2023-02-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Zxun2":42,"gohyongjing":6,"-":155,"zhacatomn":3}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.FriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyFriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"        assertEquals(Collections.singletonList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(addAliceCommand, addAliceCommand);","lastModifiedDate":"2023-02-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertEquals(addAliceCommand, addAliceCommandCopy);","lastModifiedDate":"2023-02-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertNotEquals(1, addAliceCommand);","lastModifiedDate":"2023-02-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertNotEquals(null, addAliceCommand);","lastModifiedDate":"2023-02-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertNotEquals(addAliceCommand, addBobCommand);","lastModifiedDate":"2023-02-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private static class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2023-02-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private static class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2023-02-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public ReadOnlyFriendlyLink getFriendlyLink() {","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return new FriendlyLink();","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Zxun2":2,"-":110}},{"path":"src/test/java/seedu/address/logic/commands/AddElderlyCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"heeeyi"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"heeeyi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"heeeyi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"heeeyi"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"heeeyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"heeeyi"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"heeeyi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"heeeyi"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"heeeyi"},"content":"import seedu.address.model.FriendlyLink;","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"heeeyi"},"content":"import seedu.address.model.ReadOnlyFriendlyLink;","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"heeeyi"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"heeeyi"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"heeeyi"},"content":"import seedu.address.testutil.ElderlyBuilder;","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"heeeyi"},"content":"public class AddElderlyCommandTest {","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"heeeyi"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"heeeyi"},"content":"    public void constructor_nullElderly_throwsNullPointerException() {","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"heeeyi"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddElderlyCommand(null));","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"heeeyi"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"heeeyi"},"content":"    public void execute_elderlyAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"heeeyi"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"heeeyi"},"content":"        Elderly validElderly \u003d new ElderlyBuilder().build();","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"heeeyi"},"content":"        CommandResult commandResult \u003d new AddElderlyCommand(validElderly).execute(modelStub);","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"heeeyi"},"content":"        assertEquals(String.format(AddElderlyCommand.MESSAGE_SUCCESS, validElderly),","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"heeeyi"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"heeeyi"},"content":"        assertEquals(Arrays.asList(validElderly), modelStub.personsAdded);","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"heeeyi"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"heeeyi"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"heeeyi"},"content":"        Elderly validElderly \u003d new ElderlyBuilder().build();","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"heeeyi"},"content":"        AddElderlyCommand addCommand \u003d new AddElderlyCommand(validElderly);","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"heeeyi"},"content":"        ModelStub modelStub \u003d new ModelStubWithElderly(validElderly);","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"heeeyi"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"heeeyi"},"content":"                AddElderlyCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"heeeyi"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"heeeyi"},"content":"    public void equals() {","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"heeeyi"},"content":"        Elderly alice \u003d new ElderlyBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"heeeyi"},"content":"        Elderly bob \u003d new ElderlyBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"heeeyi"},"content":"        AddElderlyCommand addAliceCommand \u003d new AddElderlyCommand(alice);","lastModifiedDate":"2023-02-21"},{"lineNumber":55,"author":{"gitId":"heeeyi"},"content":"        AddElderlyCommand addBobCommand \u003d new AddElderlyCommand(bob);","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"heeeyi"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"heeeyi"},"content":"        assertEquals(addAliceCommand, addAliceCommand);","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"heeeyi"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"heeeyi"},"content":"        AddElderlyCommand addAliceCommandCopy \u003d new AddElderlyCommand(alice);","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"heeeyi"},"content":"        assertEquals(addAliceCommand, addAliceCommandCopy);","lastModifiedDate":"2023-02-21"},{"lineNumber":63,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"heeeyi"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":65,"author":{"gitId":"heeeyi"},"content":"        assertNotEquals(1, addAliceCommand);","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"heeeyi"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":68,"author":{"gitId":"heeeyi"},"content":"        assertNotEquals(null, addAliceCommand);","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"heeeyi"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"heeeyi"},"content":"        assertNotEquals(addAliceCommand, addBobCommand);","lastModifiedDate":"2023-02-21"},{"lineNumber":72,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":73,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"heeeyi"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":75,"author":{"gitId":"heeeyi"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"heeeyi"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":77,"author":{"gitId":"heeeyi"},"content":"    private class ModelStubWithElderly extends ModelStub {","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"heeeyi"},"content":"        private final Person person;","lastModifiedDate":"2023-02-21"},{"lineNumber":79,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":80,"author":{"gitId":"heeeyi"},"content":"        ModelStubWithElderly(Elderly person) {","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"heeeyi"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-02-21"},{"lineNumber":82,"author":{"gitId":"heeeyi"},"content":"            this.person \u003d person;","lastModifiedDate":"2023-02-21"},{"lineNumber":83,"author":{"gitId":"heeeyi"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":84,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":85,"author":{"gitId":"heeeyi"},"content":"        @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":86,"author":{"gitId":"heeeyi"},"content":"        public boolean hasElderly(Elderly person) {","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"heeeyi"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"heeeyi"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2023-02-21"},{"lineNumber":89,"author":{"gitId":"heeeyi"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":91,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":92,"author":{"gitId":"heeeyi"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":93,"author":{"gitId":"heeeyi"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2023-02-21"},{"lineNumber":94,"author":{"gitId":"heeeyi"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":95,"author":{"gitId":"heeeyi"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"heeeyi"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":97,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":98,"author":{"gitId":"heeeyi"},"content":"        @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":99,"author":{"gitId":"heeeyi"},"content":"        public boolean hasElderly(Elderly person) {","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"heeeyi"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-02-21"},{"lineNumber":101,"author":{"gitId":"heeeyi"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2023-02-21"},{"lineNumber":102,"author":{"gitId":"heeeyi"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":103,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":104,"author":{"gitId":"heeeyi"},"content":"        @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":105,"author":{"gitId":"heeeyi"},"content":"        public void addElderly(Elderly person) {","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"heeeyi"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-02-21"},{"lineNumber":107,"author":{"gitId":"heeeyi"},"content":"            personsAdded.add(person);","lastModifiedDate":"2023-02-21"},{"lineNumber":108,"author":{"gitId":"heeeyi"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":109,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":110,"author":{"gitId":"heeeyi"},"content":"        @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":111,"author":{"gitId":"heeeyi"},"content":"        public ReadOnlyFriendlyLink getFriendlyLink() {","lastModifiedDate":"2023-02-21"},{"lineNumber":112,"author":{"gitId":"heeeyi"},"content":"            return new FriendlyLink();","lastModifiedDate":"2023-02-21"},{"lineNumber":113,"author":{"gitId":"heeeyi"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":114,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":115,"author":{"gitId":"heeeyi"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"heeeyi":115}},{"path":"src/test/java/seedu/address/logic/commands/AddPairCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_CHARLIE;","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.FriendlyLink;","lastModifiedDate":"2023-02-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyFriendlyLink;","lastModifiedDate":"2023-02-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.pair.Pair;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PairBuilder;","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddPairCommandTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"    private final Nric validAmyNric \u003d new Nric(VALID_NRIC_AMY);","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"    private final Nric validBobNric \u003d new Nric(VALID_NRIC_BOB);","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"    private final Nric validCharlieNric \u003d new Nric(VALID_NRIC_CHARLIE);","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"    public void constructor_nullElderly_throwsNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPairCommand(null, validAmyNric));","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"    public void constructor_nullVolunteer_throwsNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"gohyongjing"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPairCommand(validAmyNric, null));","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"    @Test","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"    public void execute_pairAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"        Pair validPair \u003d new PairBuilder().build();","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"        Elderly elderly \u003d validPair.getElderly();","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"        Volunteer volunteer \u003d validPair.getVolunteer();","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"        ModelStubAcceptingPairAdded modelStub \u003d new ModelStubAcceptingPairAdded(elderly, volunteer);","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"        CommandResult commandResult \u003d new AddPairCommand(elderly.getNric(), volunteer.getNric()).execute(modelStub);","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddPairCommand.MESSAGE_SUCCESS, validPair), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"        assertEquals(validPair, modelStub.pair);","lastModifiedDate":"2023-02-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_duplicatePair_throwsCommandException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Pair validPair \u003d new PairBuilder().build();","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"        ModelStub modelStub \u003d new ModelStubWithPair(validPair);","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"        Nric elderlyNric \u003d validPair.getElderly().getNric();","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"        Nric volunteerNric \u003d validPair.getVolunteer().getNric();","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"gohyongjing"},"content":"        AddPairCommand addPairCommand \u003d new AddPairCommand(elderlyNric, volunteerNric);","lastModifiedDate":"2023-02-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                AddPairCommand.MESSAGE_DUPLICATE_PAIR, () -\u003e addPairCommand.execute(modelStub));","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"        AddPairCommand addPair1Command \u003d new AddPairCommand(validAmyNric, validBobNric);","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"        AddPairCommand addPair2Command \u003d new AddPairCommand(validAmyNric, validCharlieNric);","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"        assertEquals(addPair1Command, addPair1Command);","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"        AddPairCommand addPair1CommandCopy \u003d new AddPairCommand(validAmyNric, validBobNric);","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"        assertEquals(addPair1CommandCopy, addPair1CommandCopy);","lastModifiedDate":"2023-02-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"Zxun2"},"content":"        assertNotEquals(1, addPair1Command);","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"Zxun2"},"content":"        assertNotEquals(null, addPair1Command);","lastModifiedDate":"2023-02-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"Zxun2"},"content":"        assertNotEquals(addPair1Command, addPair2Command);","lastModifiedDate":"2023-02-21"},{"lineNumber":82,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":83,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single pair.","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"Zxun2"},"content":"    private static class ModelStubWithPair extends ModelStub {","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        private final Pair pair;","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        ModelStubWithPair(Pair pair) {","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            requireNonNull(pair);","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            this.pair \u003d pair;","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"gohyongjing"},"content":"        @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"gohyongjing"},"content":"        public Elderly getElderly(Nric nric) {","lastModifiedDate":"2023-02-22"},{"lineNumber":97,"author":{"gitId":"gohyongjing"},"content":"            return pair.getElderly();","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":99,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":100,"author":{"gitId":"gohyongjing"},"content":"        @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"gohyongjing"},"content":"        public Volunteer getVolunteer(Nric nric) {","lastModifiedDate":"2023-02-22"},{"lineNumber":102,"author":{"gitId":"gohyongjing"},"content":"            return pair.getVolunteer();","lastModifiedDate":"2023-02-22"},{"lineNumber":103,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":104,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public boolean hasPair(Pair pair) {","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            requireNonNull(pair);","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return this.pair.isSamePair(pair);","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"gohyongjing"},"content":"     * A Model stub that accepts the pair being added if elderly and volunteer already exists.","lastModifiedDate":"2023-02-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"Zxun2"},"content":"    private static class ModelStubAcceptingPairAdded extends ModelStub {","lastModifiedDate":"2023-02-21"},{"lineNumber":116,"author":{"gitId":"gohyongjing"},"content":"        private Pair pair;","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"gohyongjing"},"content":"        private final Elderly elderly;","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"gohyongjing"},"content":"        private final Volunteer volunteer;","lastModifiedDate":"2023-02-28"},{"lineNumber":119,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":120,"author":{"gitId":"gohyongjing"},"content":"        ModelStubAcceptingPairAdded(Elderly elderly, Volunteer volunteer) {","lastModifiedDate":"2023-02-22"},{"lineNumber":121,"author":{"gitId":"gohyongjing"},"content":"            requireAllNonNull(elderly, volunteer);","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"gohyongjing"},"content":"            this.elderly \u003d elderly;","lastModifiedDate":"2023-02-22"},{"lineNumber":123,"author":{"gitId":"gohyongjing"},"content":"            this.volunteer \u003d volunteer;","lastModifiedDate":"2023-02-22"},{"lineNumber":124,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        public boolean hasPair(Pair pair) {","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            requireNonNull(pair);","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"gohyongjing"},"content":"            return pair.isSamePair(this.pair);","lastModifiedDate":"2023-02-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        public void addPair(Pair pair) {","lastModifiedDate":"2023-02-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            requireNonNull(pair);","lastModifiedDate":"2023-02-11"},{"lineNumber":135,"author":{"gitId":"gohyongjing"},"content":"            this.pair \u003d pair;","lastModifiedDate":"2023-02-22"},{"lineNumber":136,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":137,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":138,"author":{"gitId":"gohyongjing"},"content":"        @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":139,"author":{"gitId":"gohyongjing"},"content":"        public Elderly getElderly(Nric nric) {","lastModifiedDate":"2023-02-22"},{"lineNumber":140,"author":{"gitId":"gohyongjing"},"content":"            return elderly;","lastModifiedDate":"2023-02-22"},{"lineNumber":141,"author":{"gitId":"gohyongjing"},"content":"        }","lastModifiedDate":"2023-02-22"},{"lineNumber":142,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"gohyongjing"},"content":"        @Override","lastModifiedDate":"2023-02-22"},{"lineNumber":144,"author":{"gitId":"gohyongjing"},"content":"        public Volunteer getVolunteer(Nric nric) {","lastModifiedDate":"2023-02-22"},{"lineNumber":145,"author":{"gitId":"gohyongjing"},"content":"            return volunteer;","lastModifiedDate":"2023-02-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public ReadOnlyFriendlyLink getFriendlyLink() {","lastModifiedDate":"2023-02-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return new FriendlyLink();","lastModifiedDate":"2023-02-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":153,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"Zxun2":8,"gohyongjing":63,"-":80,"zhacatomn":3}},{"path":"src/test/java/seedu/address/logic/commands/AddVolunteerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.FriendlyLink;","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.ReadOnlyFriendlyLink;","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.testutil.VolunteerBuilder;","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"public class AddVolunteerCommandTest {","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"    public void constructor_nullVolunteer_throwsNullPointerException() {","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddVolunteerCommand(null));","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"    public void execute_volunteerAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"        Volunteer validVolunteer \u003d new VolunteerBuilder().build();","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"        CommandResult commandResult \u003d new AddVolunteerCommand(validVolunteer).execute(modelStub);","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"        assertEquals(String.format(AddVolunteerCommand.MESSAGE_SUCCESS, validVolunteer),","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"        assertEquals(Arrays.asList(validVolunteer), modelStub.personsAdded);","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"        Volunteer validVolunteer \u003d new VolunteerBuilder().build();","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"        AddVolunteerCommand addCommand \u003d new AddVolunteerCommand(validVolunteer);","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"        ModelStub modelStub \u003d new ModelStubWithVolunteer(validVolunteer);","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"                AddVolunteerCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"    public void equals() {","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"        Volunteer alice \u003d new VolunteerBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"        Volunteer bob \u003d new VolunteerBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"        AddVolunteerCommand addAliceCommand \u003d new AddVolunteerCommand(alice);","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"        AddVolunteerCommand addBobCommand \u003d new AddVolunteerCommand(bob);","lastModifiedDate":"2023-02-21"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"        assertEquals(addAliceCommand, addAliceCommand);","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"        AddVolunteerCommand addAliceCommandCopy \u003d new AddVolunteerCommand(alice);","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"        assertEquals(addAliceCommand, addAliceCommandCopy);","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"        assertNotEquals(1, addAliceCommand);","lastModifiedDate":"2023-02-21"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"        assertNotEquals(null, addAliceCommand);","lastModifiedDate":"2023-02-21"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"        assertNotEquals(addAliceCommand, addBobCommand);","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2023-02-21"},{"lineNumber":75,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"    private static class ModelStubWithVolunteer extends ModelStub {","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"zhacatomn"},"content":"        private final Person person;","lastModifiedDate":"2023-02-21"},{"lineNumber":78,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":79,"author":{"gitId":"Zxun2"},"content":"        ModelStubWithVolunteer(Volunteer person) {","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"zhacatomn"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-02-21"},{"lineNumber":81,"author":{"gitId":"zhacatomn"},"content":"            this.person \u003d person;","lastModifiedDate":"2023-02-21"},{"lineNumber":82,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":83,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":84,"author":{"gitId":"zhacatomn"},"content":"        @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":85,"author":{"gitId":"Zxun2"},"content":"        public boolean hasVolunteer(Volunteer person) {","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"zhacatomn"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-02-21"},{"lineNumber":87,"author":{"gitId":"zhacatomn"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":89,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":91,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":92,"author":{"gitId":"zhacatomn"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2023-02-21"},{"lineNumber":93,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":94,"author":{"gitId":"zhacatomn"},"content":"    private static class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2023-02-21"},{"lineNumber":95,"author":{"gitId":"zhacatomn"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":96,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":97,"author":{"gitId":"zhacatomn"},"content":"        @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":98,"author":{"gitId":"Zxun2"},"content":"        public boolean hasVolunteer(Volunteer person) {","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"zhacatomn"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-02-21"},{"lineNumber":100,"author":{"gitId":"zhacatomn"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2023-02-21"},{"lineNumber":101,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":102,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":103,"author":{"gitId":"zhacatomn"},"content":"        @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":104,"author":{"gitId":"Zxun2"},"content":"        public void addVolunteer(Volunteer person) {","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"zhacatomn"},"content":"            requireNonNull(person);","lastModifiedDate":"2023-02-21"},{"lineNumber":106,"author":{"gitId":"zhacatomn"},"content":"            personsAdded.add(person);","lastModifiedDate":"2023-02-21"},{"lineNumber":107,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":108,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":109,"author":{"gitId":"zhacatomn"},"content":"        @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":110,"author":{"gitId":"zhacatomn"},"content":"        public ReadOnlyFriendlyLink getFriendlyLink() {","lastModifiedDate":"2023-02-21"},{"lineNumber":111,"author":{"gitId":"zhacatomn"},"content":"            return new FriendlyLink();","lastModifiedDate":"2023-02-21"},{"lineNumber":112,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-02-21"},{"lineNumber":113,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":114,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"Zxun2":6,"zhacatomn":108}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalFriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.FriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"    public void execute_emptyFriendlyLink_success() {","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"    public void execute_nonEmptyFriendlyLink_success() {","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalFriendlyLink(), new UserPrefs());","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalFriendlyLink(), new UserPrefs());","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setFriendlyLink(new FriendlyLink());","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"gohyongjing":2,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"Zxun2"},"content":"        assertEquals(commandResult, new CommandResult(\"feedback\"));","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"        assertEquals(commandResult, new CommandResult(\"feedback\", false, false));","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":"        assertEquals(commandResult, commandResult);","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"        assertNotEquals(null, commandResult);","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"        assertNotEquals(commandResult, new CommandResult(\"different\"));","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"        assertNotEquals(commandResult, new CommandResult(\"feedback\", true, false));","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"        assertNotEquals(commandResult, new CommandResult(\"feedback\", false, true));","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"Zxun2":7,"-":46}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_AGE;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC_ELDERLY;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC_VOLUNTEER;","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.FriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"    public static final String VALID_NAME_CHARLIE \u003d \"Charlie Tan\";","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_NRIC_AMY \u003d \"S1234567A\";","lastModifiedDate":"2023-02-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_NRIC_BOB \u003d \"T2345678C\";","lastModifiedDate":"2023-02-14"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"    public static final String VALID_NRIC_CHARLIE \u003d \"T3456789D\";","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_AGE_AMY \u003d \"68\";","lastModifiedDate":"2023-02-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_AGE_BOB \u003d \"85\";","lastModifiedDate":"2023-02-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_RISKLEVEL_AMY \u003d \"LOW\";","lastModifiedDate":"2023-02-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_RISKLEVEL_BOB \u003d \"MEDIUM\";","lastModifiedDate":"2023-02-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"    public static final String AGE_DESC_AMY \u003d \" \" + PREFIX_AGE + VALID_AGE_AMY;","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"    public static final String AGE_DESC_BOB \u003d \" \" + PREFIX_AGE + VALID_AGE_BOB;","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String RISK_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_RISKLEVEL_AMY;","lastModifiedDate":"2023-02-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String RISK_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_RISKLEVEL_BOB;","lastModifiedDate":"2023-02-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"    public static final String NRIC_ELDERLY_DESC_AMY \u003d \" \" + PREFIX_NRIC_ELDERLY + VALID_NRIC_AMY;","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"    public static final String NRIC_ELDERLY_DESC_BOB \u003d \" \" + PREFIX_NRIC_ELDERLY + VALID_NRIC_BOB;","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"    public static final String NRIC_VOLUNTEER_DESC_AMY \u003d \" \" + PREFIX_NRIC_VOLUNTEER + VALID_NRIC_AMY;","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"zhacatomn"},"content":"    public static final String NRIC_VOLUNTEER_DESC_BOB \u003d \" \" + PREFIX_NRIC_VOLUNTEER + VALID_NRIC_BOB;","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static final String INVALID_NRIC_DESC \u003d \" \" + PREFIX_EMAIL + \"S1234567890B\";","lastModifiedDate":"2023-02-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String INVALID_AGE_DESC \u003d \" \" + PREFIX_EMAIL + \"1835\";","lastModifiedDate":"2023-02-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_RISK_DESC \u003d \" \" + PREFIX_EMAIL + \"safe\";","lastModifiedDate":"2023-02-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        FriendlyLink expectedFriendlyLink \u003d new FriendlyLink(actualModel.getFriendlyLink());","lastModifiedDate":"2023-02-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertEquals(expectedFriendlyLink, actualModel.getFriendlyLink());","lastModifiedDate":"2023-02-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":152,"author":{"gitId":"Zxun2"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Collections.singletonList(splitName[0])));","lastModifiedDate":"2023-02-21"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Zxun2":2,"gohyongjing":2,"-":143,"zhacatomn":9}},{"path":"src/test/java/seedu/address/logic/commands/DeleteVolunteerCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.testutil.TestUtil.getTypicalFriendlyLink;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.testutil.TypicalVolunteers;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"public class DeleteVolunteerCommandTest {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"    private final Model model \u003d new ModelManager(getTypicalFriendlyLink(), new UserPrefs());","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"    public void execute_validNric_success() {","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"        Volunteer volunteerToDelete \u003d TypicalVolunteers.getTypicalVolunteers().get(0);","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"        DeleteVolunteerCommand deleteVolunteerCommand \u003d new DeleteVolunteerCommand(volunteerToDelete.getNric());","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"        String expectedMessage \u003d String.format(DeleteVolunteerCommand.MESSAGE_DELETE_SUCCESS, volunteerToDelete);","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getFriendlyLink(), new UserPrefs());","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"        expectedModel.deleteVolunteer(volunteerToDelete);","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"        assertCommandSuccess(deleteVolunteerCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"    public void execute_invalidNric_throwsCommandException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"        Nric invalidNric \u003d new Nric(\"T9999999I\");","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"        DeleteVolunteerCommand deleteVolunteerCommand \u003d new DeleteVolunteerCommand(invalidNric);","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"        assertCommandFailure(deleteVolunteerCommand, model, DeleteVolunteerCommand.MESSAGE_INVALID_NRIC_VOLUNTEER);","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"    public void equals() {","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"        Nric firstNric \u003d new Nric(\"S1234567I\");","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"        Nric secondNric \u003d new Nric(\"S7654321I\");","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"        DeleteVolunteerCommand deleteFirstCommand \u003d new DeleteVolunteerCommand(firstNric);","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"        DeleteVolunteerCommand deleteSecondCommand \u003d new DeleteVolunteerCommand(secondNric);","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommand);","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"        DeleteVolunteerCommand deleteFirstCommandCopy \u003d new DeleteVolunteerCommand(firstNric);","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"        assertEquals(deleteFirstCommand, deleteFirstCommandCopy);","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"        assertNotEquals(1, deleteFirstCommand);","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"        assertNotEquals(null, deleteFirstCommand);","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"        assertNotEquals(deleteFirstCommand, deleteSecondCommand);","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"zhacatomn":74}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Zxun2":2,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"    private final Model model \u003d new ModelManager();","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"    private final Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Zxun2":2,"-":18}},{"path":"src/test/java/seedu/address/logic/commands/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zxun2"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-02-21"},{"lineNumber":2,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":3,"author":{"gitId":"Zxun2"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"Zxun2"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"Zxun2"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"Zxun2"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.ReadOnlyFriendlyLink;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.pair.Pair;","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-02-28"},{"lineNumber":16,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":" * A default model stub that have all the methods failing.","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"Zxun2"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"Zxun2"},"content":"class ModelStub implements Model {","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"Zxun2"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"Zxun2"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"Zxun2"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"Zxun2"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"    public Path getFriendlyLinkFilePath() {","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"Zxun2"},"content":"    public void setFriendlyLinkFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"Zxun2"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":55,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"Zxun2"},"content":"    public void setFriendlyLink(ReadOnlyFriendlyLink newData) {","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"Zxun2"},"content":"    public ReadOnlyFriendlyLink getFriendlyLink() {","lastModifiedDate":"2023-02-21"},{"lineNumber":63,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":65,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"Zxun2"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2023-02-21"},{"lineNumber":68,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":72,"author":{"gitId":"Zxun2"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2023-02-21"},{"lineNumber":73,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":75,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":77,"author":{"gitId":"Zxun2"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-02-21"},{"lineNumber":78,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":79,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":80,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":81,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":82,"author":{"gitId":"Zxun2"},"content":"    public void addPair(Pair pair) {","lastModifiedDate":"2023-02-21"},{"lineNumber":83,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":84,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":85,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":86,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":87,"author":{"gitId":"Zxun2"},"content":"    public boolean hasPair(Pair pair) {","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":89,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":91,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":92,"author":{"gitId":"Zxun2"},"content":"    public void deletePair(Pair target) {","lastModifiedDate":"2023-02-21"},{"lineNumber":93,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":94,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":95,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":96,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":97,"author":{"gitId":"Zxun2"},"content":"    public void setPair(Pair target, Pair editedPair) {","lastModifiedDate":"2023-02-21"},{"lineNumber":98,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":99,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":100,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":101,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":102,"author":{"gitId":"gohyongjing"},"content":"    public void addElderly(Elderly elderly) {","lastModifiedDate":"2023-02-28"},{"lineNumber":103,"author":{"gitId":"gohyongjing"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-28"},{"lineNumber":104,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":105,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":106,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":107,"author":{"gitId":"Zxun2"},"content":"    public boolean hasElderly(Elderly elderly) {","lastModifiedDate":"2023-02-21"},{"lineNumber":108,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":109,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":110,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":111,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":112,"author":{"gitId":"Zxun2"},"content":"    public void deleteElderly(Elderly target) {","lastModifiedDate":"2023-02-21"},{"lineNumber":113,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":114,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":115,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":116,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":117,"author":{"gitId":"gohyongjing"},"content":"    public void setElderly(Elderly target, Elderly editedElderly) {","lastModifiedDate":"2023-02-28"},{"lineNumber":118,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":119,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":120,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":121,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":122,"author":{"gitId":"gohyongjing"},"content":"    public Elderly getElderly(Nric nric) {","lastModifiedDate":"2023-02-28"},{"lineNumber":123,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":124,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":125,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":126,"author":{"gitId":"gohyongjing"},"content":"    @Override","lastModifiedDate":"2023-02-28"},{"lineNumber":127,"author":{"gitId":"gohyongjing"},"content":"    public void addVolunteer(Volunteer volunteer) {","lastModifiedDate":"2023-02-28"},{"lineNumber":128,"author":{"gitId":"gohyongjing"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-28"},{"lineNumber":129,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-28"},{"lineNumber":130,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":131,"author":{"gitId":"Zxun2"},"content":"    public boolean hasVolunteer(Volunteer volunteer) {","lastModifiedDate":"2023-02-24"},{"lineNumber":132,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":133,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":134,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":135,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":136,"author":{"gitId":"Zxun2"},"content":"    public void deleteVolunteer(Volunteer target) {","lastModifiedDate":"2023-02-24"},{"lineNumber":137,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":138,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":139,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":140,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":141,"author":{"gitId":"gohyongjing"},"content":"    public void setVolunteer(Volunteer target, Volunteer editedPerson) {","lastModifiedDate":"2023-02-28"},{"lineNumber":142,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":143,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":144,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":145,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":146,"author":{"gitId":"gohyongjing"},"content":"    public Volunteer getVolunteer(Nric nric) {","lastModifiedDate":"2023-02-28"},{"lineNumber":147,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":148,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":149,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":150,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":151,"author":{"gitId":"Zxun2"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-02-21"},{"lineNumber":152,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":153,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":154,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":155,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":156,"author":{"gitId":"Zxun2"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-02-21"},{"lineNumber":157,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":158,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":159,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":160,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":161,"author":{"gitId":"Zxun2"},"content":"    public ObservableList\u003cPair\u003e getFilteredPairList() {","lastModifiedDate":"2023-02-21"},{"lineNumber":162,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":163,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":164,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":165,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":166,"author":{"gitId":"Zxun2"},"content":"    public void updateFilteredPairList(Predicate\u003cPair\u003e predicate) {","lastModifiedDate":"2023-02-21"},{"lineNumber":167,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":168,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":169,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":170,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":171,"author":{"gitId":"Zxun2"},"content":"     * Returns an unmodifiable view of the filtered elderly list","lastModifiedDate":"2023-02-21"},{"lineNumber":172,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":173,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":174,"author":{"gitId":"Zxun2"},"content":"    public ObservableList\u003cElderly\u003e getFilteredElderlyList() {","lastModifiedDate":"2023-02-21"},{"lineNumber":175,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":176,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":177,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":178,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":179,"author":{"gitId":"heeeyi"},"content":"    public void updateFilteredElderlyList(Predicate\u003cElderly\u003e predicate) {","lastModifiedDate":"2023-02-28"},{"lineNumber":180,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":181,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":182,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":183,"author":{"gitId":"Zxun2"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":184,"author":{"gitId":"Zxun2"},"content":"     * Returns an unmodifiable view of the filtered volunteers list","lastModifiedDate":"2023-02-21"},{"lineNumber":185,"author":{"gitId":"Zxun2"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":186,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":187,"author":{"gitId":"zhacatomn"},"content":"    public ObservableList\u003cVolunteer\u003e getFilteredVolunteerList() {","lastModifiedDate":"2023-02-28"},{"lineNumber":188,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":189,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":190,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":191,"author":{"gitId":"Zxun2"},"content":"    @Override","lastModifiedDate":"2023-02-21"},{"lineNumber":192,"author":{"gitId":"Zxun2"},"content":"    public void updateFilteredVolunteerList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-02-21"},{"lineNumber":193,"author":{"gitId":"Zxun2"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-02-21"},{"lineNumber":194,"author":{"gitId":"Zxun2"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":195,"author":{"gitId":"Zxun2"},"content":"}","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"Zxun2":179,"gohyongjing":13,"heeeyi":1,"zhacatomn":2}},{"path":"src/test/java/seedu/address/logic/parser/AddPairCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_ELDERLY_DESC_AMY;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_VOLUNTEER_DESC_BOB;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddPairCommand;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class AddPairCommandParserTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private AddPairCommandParser parser \u003d new AddPairCommandParser();","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // TODO: test with the same format as AddCommandParserTest::parse_allFieldsPresent_success()","lastModifiedDate":"2023-02-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPairCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // missing elderly prefix","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"        assertParseFailure(parser, NRIC_ELDERLY_DESC_AMY,","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // missing volunteer prefix","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"        assertParseFailure(parser, NRIC_VOLUNTEER_DESC_BOB,","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_NAME_AMY,","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // TODO: Check for invalid elderly or volunteer","lastModifiedDate":"2023-02-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"-":39,"zhacatomn":4}},{"path":"src/test/java/seedu/address/logic/parser/DeleteVolunteerCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_VOLUNTEER_DESC_BOB;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.logic.commands.DeleteVolunteerCommand;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":" * outside the DeleteVolunteerCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":" * same path through the DeleteVolunteerCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"public class DeleteVolunteerCommandParserTest {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"    private DeleteVolunteerCommandParser parser \u003d new DeleteVolunteerCommandParser();","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"    public void parse_validArgs_returnsDeleteVolunteerCommand() {","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NRIC_VOLUNTEER_DESC_BOB,","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"                new DeleteVolunteerCommand(new Nric(VALID_NRIC_BOB)));","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteVolunteerCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"zhacatomn":37}},{"path":"src/test/java/seedu/address/logic/parser/FriendLinkParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC_VOLUNTEER;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.logic.commands.DeleteVolunteerCommand;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.pair.Pair;","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PairBuilder;","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class FriendLinkParserTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final FriendLinkParser parser \u003d new FriendLinkParser();","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"    public void parseCommand_deleteVolunteer() throws Exception {","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"        String nricStr \u003d \"T1234567I\";","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"        DeleteVolunteerCommand command \u003d (DeleteVolunteerCommand) parser.parseCommand(","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"                DeleteVolunteerCommand.COMMAND_WORD + \" \" + PREFIX_NRIC_VOLUNTEER + nricStr);","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"        assertEquals(new DeleteVolunteerCommand(new Nric(nricStr)), command);","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parseCommand_addPair() throws Exception {","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Pair pair \u003d new PairBuilder().build();","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"gohyongjing"},"content":"        /* TODO: check that parser.parseCommand works properly. */","lastModifiedDate":"2023-02-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"gohyongjing":1,"-":100,"zhacatomn":11}},{"path":"src/test/java/seedu/address/model/FriendlyLinkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPairs.PAIR1;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalFriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.pair.Pair;","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"Zxun2"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PairBuilder;","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class FriendlyLinkTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final FriendlyLink friendlyLink \u003d new FriendlyLink();","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), friendlyLink.getPersonList());","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // TODO: implement assertEquals(Collections.emptyList(), addressBook.getPairList());","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"Zxun2"},"content":"        assertThrows(NullPointerException.class, () -\u003e friendlyLink.resetFriendlyLinkData(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"Zxun2"},"content":"    public void resetData_withValidReadOnlyFriendlyLink_replacesData() {","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        FriendlyLink newData \u003d getTypicalFriendlyLink();","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"Zxun2"},"content":"        friendlyLink.resetFriendlyLinkData(newData);","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(newData, friendlyLink);","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // TODO: check if reset data resets the pair list.","lastModifiedDate":"2023-02-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        FriendlyLinkStub newData \u003d new FriendlyLinkStub(newPersons);","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"Zxun2"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e friendlyLink.resetFriendlyLinkData(newData));","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // TODO: check that duplicate pairs throws exceptions.","lastModifiedDate":"2023-02-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e friendlyLink.hasPerson(null));","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"Zxun2"},"content":"    public void hasPerson_personNotInFriendlyLink_returnsFalse() {","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(friendlyLink.hasPerson(ALICE));","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"Zxun2"},"content":"    public void hasPerson_personInFriendlyLink_returnsTrue() {","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        friendlyLink.addPerson(ALICE);","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(friendlyLink.hasPerson(ALICE));","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"Zxun2"},"content":"    public void hasPerson_personWithSameIdentityFieldsInFriendlyLink_returnsTrue() {","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        friendlyLink.addPerson(ALICE);","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(friendlyLink.hasPerson(editedAlice));","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e friendlyLink.getPersonList().remove(0));","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void hasPair_nullPair_throwsNullPointerException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e friendlyLink.hasPair(null));","lastModifiedDate":"2023-02-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"Zxun2"},"content":"    public void hasPair_pairNotInFriendlyLink_returnsFalse() {","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertFalse(friendlyLink.hasPair(PAIR1));","lastModifiedDate":"2023-02-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"Zxun2"},"content":"    public void hasPair_pairInFriendlyLink_returnsTrue() {","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        friendlyLink.addPair(PAIR1);","lastModifiedDate":"2023-02-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(friendlyLink.hasPair(PAIR1));","lastModifiedDate":"2023-02-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void hasPair_pairWithSameElderlyAndVolunteer_returnsTrue() {","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        friendlyLink.addPair(PAIR1);","lastModifiedDate":"2023-02-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Pair editedPair \u003d new PairBuilder(PAIR1).build();","lastModifiedDate":"2023-02-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertTrue(friendlyLink.hasPair(editedPair));","lastModifiedDate":"2023-02-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setPair_nullPair_throwsNullPointerException() {","lastModifiedDate":"2023-02-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e friendlyLink.setPair(null, null));","lastModifiedDate":"2023-02-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e friendlyLink.setPair(PAIR1, null));","lastModifiedDate":"2023-02-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e friendlyLink.setPair(null, PAIR1));","lastModifiedDate":"2023-02-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void getPairList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // TODO: assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPairList().remove(0));","lastModifiedDate":"2023-02-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":131,"author":{"gitId":"Zxun2"},"content":"     * A stub ReadOnlyFriendlyLink whose persons list can violate interface constraints.","lastModifiedDate":"2023-02-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":133,"author":{"gitId":"Zxun2"},"content":"    private static class FriendlyLinkStub implements ReadOnlyFriendlyLink, ReadOnlyVolunteer, ReadOnlyElderly {","lastModifiedDate":"2023-02-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"Zxun2"},"content":"        private final ObservableList\u003cElderly\u003e elderly \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-21"},{"lineNumber":136,"author":{"gitId":"zhacatomn"},"content":"        private final ObservableList\u003cVolunteer\u003e volunteers \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-28"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPair\u003e pairs \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        FriendlyLinkStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2023-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":149,"author":{"gitId":"Zxun2"},"content":"        public ObservableList\u003cElderly\u003e getElderlyList() {","lastModifiedDate":"2023-02-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return elderly;","lastModifiedDate":"2023-02-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"zhacatomn"},"content":"        public ObservableList\u003cVolunteer\u003e getVolunteerList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return volunteers;","lastModifiedDate":"2023-02-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"Zxun2"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-02-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPair\u003e getPairList() {","lastModifiedDate":"2023-02-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            return pairs;","lastModifiedDate":"2023-02-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Zxun2":15,"-":146,"zhacatomn":3}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPairs.PAIR1;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.FriendlyLinkBuilder;","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new FriendlyLink(), new FriendlyLink(modelManager.getFriendlyLink()));","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setFriendlyLinkFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setFriendlyLinkFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"    public void setFriendlyLinkFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setFriendlyLinkFilePath(null));","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"    public void setFriendlyLinkFilePath_validPath_setsFriendlyLinkFilePath() {","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setFriendlyLinkFilePath(path);","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getFriendlyLinkFilePath());","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"    public void hasPerson_personNotInFriendlyLink_returnsFalse() {","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"gohyongjing"},"content":"    public void hasPerson_personInFriendlyLink_returnsTrue() {","lastModifiedDate":"2023-02-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-02-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPerson(null, null));","lastModifiedDate":"2023-02-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPerson(ALICE, null));","lastModifiedDate":"2023-02-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPerson(null, ALICE));","lastModifiedDate":"2023-02-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList_nullPredicate_throwsNullPointerException() {","lastModifiedDate":"2023-02-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.updateFilteredPersonList(null));","lastModifiedDate":"2023-02-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void hasPair_nullPair_throwsNullPointerException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPair(null));","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":116,"author":{"gitId":"gohyongjing"},"content":"    public void hasPair_pairNotInFriendlyLink_returnsFalse() {","lastModifiedDate":"2023-02-22"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPair(PAIR1));","lastModifiedDate":"2023-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":121,"author":{"gitId":"gohyongjing"},"content":"    public void hasPair_pairInFriendlyLink_returnsTrue() {","lastModifiedDate":"2023-02-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        modelManager.addPair(PAIR1);","lastModifiedDate":"2023-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPair(PAIR1));","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void setPair_nullPair_throwsNullPointerException() {","lastModifiedDate":"2023-02-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPair(null, null));","lastModifiedDate":"2023-02-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPair(PAIR1, null));","lastModifiedDate":"2023-02-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setPair(null, PAIR1));","lastModifiedDate":"2023-02-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void getFilteredPairList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPairList().remove(0));","lastModifiedDate":"2023-02-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void updateFilteredPairList_nullPredicate_throwsNullPointerException() {","lastModifiedDate":"2023-02-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.updateFilteredPairList(null));","lastModifiedDate":"2023-02-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        FriendlyLink friendlyLink \u003d new FriendlyLinkBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2023-02-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        FriendlyLink differentFriendlyLink \u003d new FriendlyLink();","lastModifiedDate":"2023-02-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(friendlyLink, userPrefs);","lastModifiedDate":"2023-02-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(friendlyLink, userPrefs);","lastModifiedDate":"2023-02-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(modelManager, modelManagerCopy);","lastModifiedDate":"2023-02-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(modelManager, modelManager);","lastModifiedDate":"2023-02-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertNotEquals(null, modelManager);","lastModifiedDate":"2023-02-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertNotEquals(5, modelManager);","lastModifiedDate":"2023-02-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"gohyongjing"},"content":"        // different friendlyLink -\u003e returns false","lastModifiedDate":"2023-02-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertNotEquals(modelManager, new ModelManager(differentFriendlyLink, userPrefs));","lastModifiedDate":"2023-02-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // different filteredPersonList -\u003e returns false","lastModifiedDate":"2023-02-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertNotEquals(modelManager, new ModelManager(friendlyLink, userPrefs));","lastModifiedDate":"2023-02-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // TODO: different filteredPairList -\u003e returns false","lastModifiedDate":"2023-02-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // TODO: resets modelManager to initial state for upcoming tests","lastModifiedDate":"2023-02-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        differentUserPrefs.setFriendlyLinkFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-02-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        assertNotEquals(modelManager, new ModelManager(friendlyLink, differentUserPrefs));","lastModifiedDate":"2023-02-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"gohyongjing":7,"-":177}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"    public void setFriendlyLinkFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setFriendlyLinkFilePath(null));","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"gohyongjing":1,"-":20}},{"path":"src/test/java/seedu/address/model/pair/PairTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.pair;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":"import static seedu.address.testutil.TypicalElderlys.AMY;","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"import static seedu.address.testutil.TypicalElderlys.CHARLIE;","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPairs.PAIR1;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPairs.PAIR2;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"gohyongjing"},"content":"import static seedu.address.testutil.TypicalVolunteers.DANIEL;","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.testutil.ElderlyBuilder;","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PairBuilder;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PairTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void isSamePair() {","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(PAIR1.isSamePair(PAIR1));","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(PAIR1.isSamePair(null));","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"        // same nric, all other attributes different -\u003e returns true","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"        Elderly editedAmy \u003d new ElderlyBuilder(AMY).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"        Pair editedPair1 \u003d new PairBuilder(PAIR1).withElderly(editedAmy).build();","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(PAIR1.isSamePair(editedPair1));","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"        // TODO: check that a different name returns true if nric is the same.","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"        // different nric, all other attributes same -\u003e returns false","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"        editedAmy \u003d new ElderlyBuilder(AMY).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"        editedPair1 \u003d new PairBuilder(PAIR1).withElderly(editedAmy).build();","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(PAIR1.isSamePair(editedPair1));","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Pair pair1Copy \u003d new PairBuilder(PAIR1).build();","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(PAIR1.equals(pair1Copy));","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(PAIR1.equals(PAIR1));","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(PAIR1.equals(null));","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(PAIR1.equals(5));","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different pair -\u003e returns false","lastModifiedDate":"2023-02-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(PAIR1.equals(PAIR2));","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // different elderly -\u003e returns false","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"        Pair editedPair1 \u003d new PairBuilder(PAIR1).withElderly(CHARLIE).build();","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(PAIR1.equals(editedPair1));","lastModifiedDate":"2023-02-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // different volunteer -\u003e returns false","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        editedPair1 \u003d new PairBuilder(PAIR1).withVolunteer(DANIEL).build();","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(PAIR1.equals(editedPair1));","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"gohyongjing":14,"-":57}},{"path":"src/test/java/seedu/address/model/pair/UniquePairListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.pair;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPairs.PAIR1;","lastModifiedDate":"2023-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPairs.PAIR2;","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-02-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.pair.exceptions.DuplicatePairException;","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.pair.exceptions.PairNotFoundException;","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PairBuilder;","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class UniquePairListTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final UniquePairList uniquePairList \u003d new UniquePairList();","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void contains_nullPair_throwsNullPointerException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePairList.contains(null));","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void contains_pairNotInList_returnsFalse() {","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(uniquePairList.contains(PAIR1));","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        uniquePairList.add(PAIR1);","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(uniquePairList.contains(PAIR1));","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void contains_pairWithSameElderlyAndVolunteer_returnsTrue() {","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        uniquePairList.add(PAIR1);","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"        Pair editedPair1 \u003d new PairBuilder(PAIR1).build();","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(uniquePairList.contains(editedPair1));","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void add_nullPair_throwsNullPointerException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePairList.add(null));","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void add_duplicatePair_throwsDuplicatePairException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        uniquePairList.add(PAIR1);","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePairException.class, () -\u003e uniquePairList.add(PAIR1));","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setPair_nullTargetPair_throwsNullPointerException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePairList.setPair(null, PAIR1));","lastModifiedDate":"2023-02-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setPair_nullEditedPair_throwsNullPointerException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePairList.setPair(PAIR1, null));","lastModifiedDate":"2023-02-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPair_targetPairNotInList_throwsPairNotFoundException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(PairNotFoundException.class, () -\u003e uniquePairList.setPair(PAIR1, PAIR1));","lastModifiedDate":"2023-02-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setPair_editedPairIsSamePair_success() {","lastModifiedDate":"2023-02-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        uniquePairList.add(PAIR1);","lastModifiedDate":"2023-02-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        uniquePairList.setPair(PAIR1, PAIR1);","lastModifiedDate":"2023-02-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        UniquePairList expectedUniquePairList \u003d new UniquePairList();","lastModifiedDate":"2023-02-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        expectedUniquePairList.add(PAIR1);","lastModifiedDate":"2023-02-11"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePairList, uniquePairList);","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPair_editedPairHasSameIdentity_success() {","lastModifiedDate":"2023-02-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        uniquePairList.add(PAIR1);","lastModifiedDate":"2023-02-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Pair editedPair1 \u003d new PairBuilder(PAIR1).build();","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        uniquePairList.setPair(PAIR1, editedPair1);","lastModifiedDate":"2023-02-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        UniquePairList expectedUniquePairList \u003d new UniquePairList();","lastModifiedDate":"2023-02-11"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        expectedUniquePairList.add(editedPair1);","lastModifiedDate":"2023-02-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePairList, uniquePairList);","lastModifiedDate":"2023-02-11"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setPair_editedPairHasDifferentIdentity_success() {","lastModifiedDate":"2023-02-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        uniquePairList.add(PAIR1);","lastModifiedDate":"2023-02-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        uniquePairList.setPair(PAIR1, PAIR2);","lastModifiedDate":"2023-02-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        UniquePairList expectedUniquePairList \u003d new UniquePairList();","lastModifiedDate":"2023-02-11"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        expectedUniquePairList.add(PAIR2);","lastModifiedDate":"2023-02-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePairList, uniquePairList);","lastModifiedDate":"2023-02-11"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setPair_editedPairHasNonUniqueIdentity_throwsDuplicatePairException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        uniquePairList.add(PAIR1);","lastModifiedDate":"2023-02-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        uniquePairList.add(PAIR2);","lastModifiedDate":"2023-02-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePairException.class, () -\u003e uniquePairList.setPair(PAIR1, PAIR2));","lastModifiedDate":"2023-02-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void remove_nullPair_throwsNullPointerException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePairList.remove(null));","lastModifiedDate":"2023-02-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPairNotFoundException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(PairNotFoundException.class, () -\u003e uniquePairList.remove(PAIR1));","lastModifiedDate":"2023-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void remove_existingPair_removesPair() {","lastModifiedDate":"2023-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        uniquePairList.add(PAIR1);","lastModifiedDate":"2023-02-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        uniquePairList.remove(PAIR1);","lastModifiedDate":"2023-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        UniquePairList expectedUniquePairList \u003d new UniquePairList();","lastModifiedDate":"2023-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePairList, uniquePairList);","lastModifiedDate":"2023-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public void setPairs_nullUniquePairList_throwsNullPointerException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePairList.setPairs((UniquePairList) null));","lastModifiedDate":"2023-02-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setPairs_uniquePairList_replacesOwnListWithProvidedUniquePairList() {","lastModifiedDate":"2023-02-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        uniquePairList.add(PAIR1);","lastModifiedDate":"2023-02-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        UniquePairList expectedUniquePairList \u003d new UniquePairList();","lastModifiedDate":"2023-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        expectedUniquePairList.add(PAIR2);","lastModifiedDate":"2023-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        uniquePairList.setPairs(expectedUniquePairList);","lastModifiedDate":"2023-02-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePairList, uniquePairList);","lastModifiedDate":"2023-02-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void setPairs_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePairList.setPairs((List\u003cPair\u003e) null));","lastModifiedDate":"2023-02-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void setPairs_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-02-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        uniquePairList.add(PAIR1);","lastModifiedDate":"2023-02-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        List\u003cPair\u003e pairList \u003d Collections.singletonList(PAIR2);","lastModifiedDate":"2023-02-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        uniquePairList.setPairs(pairList);","lastModifiedDate":"2023-02-11"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        UniquePairList expectedUniquePairList \u003d new UniquePairList();","lastModifiedDate":"2023-02-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedUniquePairList.add(PAIR2);","lastModifiedDate":"2023-02-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePairList, uniquePairList);","lastModifiedDate":"2023-02-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void setPairs_listWithDuplicatePairs_throwsDuplicatePairException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        List\u003cPair\u003e listWithDuplicatePairs \u003d Arrays.asList(PAIR1, PAIR1);","lastModifiedDate":"2023-02-11"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePairException.class, () -\u003e uniquePairList.setPairs(listWithDuplicatePairs));","lastModifiedDate":"2023-02-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-02-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            -\u003e uniquePairList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-02-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"gohyongjing":1,"-":165}},{"path":"src/test/java/seedu/address/model/person/ElderlyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"heeeyi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"heeeyi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"heeeyi"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"heeeyi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RISKLEVEL_BOB;","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.testutil.TypicalElderlys.ALICE;","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.testutil.TypicalElderlys.BOB;","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"heeeyi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"heeeyi"},"content":"import seedu.address.testutil.ElderlyBuilder;","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"heeeyi"},"content":"public class ElderlyTest {","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"heeeyi"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"heeeyi"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"heeeyi"},"content":"        Person person \u003d new ElderlyBuilder().build();","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"heeeyi"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"heeeyi"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"heeeyi"},"content":"    public void isSamePerson() {","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"heeeyi"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"heeeyi"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"heeeyi"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"heeeyi"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2023-02-21"},{"lineNumber":39,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"heeeyi"},"content":"        // same name, same nric, all other attributes different -\u003e returns true","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"heeeyi"},"content":"        Elderly editedAlice \u003d new ElderlyBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"heeeyi"},"content":"                .withAddress(VALID_ADDRESS_BOB).withAge(VALID_AGE_BOB).withRiskLevel(VALID_RISKLEVEL_BOB)","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"heeeyi"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"heeeyi"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"heeeyi"},"content":"        // same name, different nric, all other attributes different -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"heeeyi"},"content":"        editedAlice \u003d new ElderlyBuilder(ALICE).withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"heeeyi"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).withNric(VALID_NRIC_BOB)","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"heeeyi"},"content":"                .withRiskLevel(VALID_RISKLEVEL_BOB).withAge(VALID_AGE_BOB).build();","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"heeeyi"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"heeeyi"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"heeeyi"},"content":"        editedAlice \u003d new ElderlyBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"heeeyi"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-02-21"},{"lineNumber":55,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"heeeyi"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"heeeyi"},"content":"        Person editedBob \u003d new ElderlyBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"heeeyi"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"heeeyi"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"heeeyi"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"heeeyi"},"content":"        editedBob \u003d new ElderlyBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-02-21"},{"lineNumber":63,"author":{"gitId":"heeeyi"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":65,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"heeeyi"},"content":"    @Test","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"heeeyi"},"content":"    public void equals() {","lastModifiedDate":"2023-02-21"},{"lineNumber":68,"author":{"gitId":"heeeyi"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"heeeyi"},"content":"        Person aliceCopy \u003d new ElderlyBuilder(ALICE).build();","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"heeeyi"},"content":"        assertEquals(ALICE, aliceCopy);","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":72,"author":{"gitId":"heeeyi"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-02-21"},{"lineNumber":73,"author":{"gitId":"heeeyi"},"content":"        assertEquals(ALICE, ALICE);","lastModifiedDate":"2023-02-21"},{"lineNumber":74,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":75,"author":{"gitId":"heeeyi"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":76,"author":{"gitId":"heeeyi"},"content":"        assertNotEquals(null, ALICE);","lastModifiedDate":"2023-02-21"},{"lineNumber":77,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":78,"author":{"gitId":"heeeyi"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":79,"author":{"gitId":"heeeyi"},"content":"        assertNotEquals(5, ALICE);","lastModifiedDate":"2023-02-21"},{"lineNumber":80,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":81,"author":{"gitId":"heeeyi"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":82,"author":{"gitId":"heeeyi"},"content":"        assertNotEquals(ALICE, BOB);","lastModifiedDate":"2023-02-21"},{"lineNumber":83,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":84,"author":{"gitId":"heeeyi"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":85,"author":{"gitId":"heeeyi"},"content":"        Person editedAlice \u003d new ElderlyBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-21"},{"lineNumber":86,"author":{"gitId":"heeeyi"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2023-02-21"},{"lineNumber":87,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":88,"author":{"gitId":"heeeyi"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":89,"author":{"gitId":"heeeyi"},"content":"        editedAlice \u003d new ElderlyBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-02-21"},{"lineNumber":90,"author":{"gitId":"heeeyi"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2023-02-21"},{"lineNumber":91,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":92,"author":{"gitId":"heeeyi"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":93,"author":{"gitId":"heeeyi"},"content":"        editedAlice \u003d new ElderlyBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-02-21"},{"lineNumber":94,"author":{"gitId":"heeeyi"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2023-02-21"},{"lineNumber":95,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":96,"author":{"gitId":"heeeyi"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":97,"author":{"gitId":"heeeyi"},"content":"        editedAlice \u003d new ElderlyBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-02-21"},{"lineNumber":98,"author":{"gitId":"heeeyi"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2023-02-21"},{"lineNumber":99,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":100,"author":{"gitId":"heeeyi"},"content":"        // different age -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":101,"author":{"gitId":"heeeyi"},"content":"        editedAlice \u003d new ElderlyBuilder(ALICE).withAge(VALID_AGE_BOB).build();","lastModifiedDate":"2023-02-21"},{"lineNumber":102,"author":{"gitId":"heeeyi"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2023-02-21"},{"lineNumber":103,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":104,"author":{"gitId":"heeeyi"},"content":"        // different nric -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":105,"author":{"gitId":"heeeyi"},"content":"        editedAlice \u003d new ElderlyBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-02-21"},{"lineNumber":106,"author":{"gitId":"heeeyi"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2023-02-21"},{"lineNumber":107,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":108,"author":{"gitId":"heeeyi"},"content":"        // different risklevel -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":109,"author":{"gitId":"heeeyi"},"content":"        editedAlice \u003d new ElderlyBuilder(ALICE).withRiskLevel(VALID_RISKLEVEL_BOB).build();","lastModifiedDate":"2023-02-21"},{"lineNumber":110,"author":{"gitId":"heeeyi"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2023-02-21"},{"lineNumber":111,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":112,"author":{"gitId":"heeeyi"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-02-21"},{"lineNumber":113,"author":{"gitId":"heeeyi"},"content":"        editedAlice \u003d new ElderlyBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-02-21"},{"lineNumber":114,"author":{"gitId":"heeeyi"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2023-02-21"},{"lineNumber":115,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"heeeyi":112,"-":4}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"Zxun2"},"content":"    private final UniquePersonList\u003cPerson\u003e uniquePersonList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"Zxun2"},"content":"        UniquePersonList\u003cPerson\u003e expectedUniquePersonList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"Zxun2"},"content":"        UniquePersonList\u003cPerson\u003e expectedUniquePersonList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"Zxun2"},"content":"        UniquePersonList\u003cPerson\u003e expectedUniquePersonList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"Zxun2"},"content":"        UniquePersonList\u003c?\u003e expectedUniquePersonList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"Zxun2"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList\u003cPerson\u003e) null));","lastModifiedDate":"2023-02-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"Zxun2"},"content":"        UniquePersonList\u003cPerson\u003e expectedUniquePersonList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"Zxun2"},"content":"        UniquePersonList\u003cPerson\u003e expectedUniquePersonList \u003d new UniquePersonList\u003c\u003e();","lastModifiedDate":"2023-02-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Zxun2":8,"-":162}},{"path":"src/test/java/seedu/address/model/person/VolunteerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.testutil.TypicalVolunteers.ALICE;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.testutil.TypicalVolunteers.BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.testutil.VolunteerBuilder;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"public class VolunteerTest {","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"        Person person \u003d new VolunteerBuilder().build();","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"    public void isSamePerson() {","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"        // same name, same nric, all other attributes different -\u003e returns true","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"        Volunteer editedAlice \u003d new VolunteerBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"        // same name, different nric, all other attributes different -\u003e returns true","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"        editedAlice \u003d new VolunteerBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"        editedAlice \u003d new VolunteerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"        Person editedBob \u003d new VolunteerBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"        editedBob \u003d new VolunteerBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"    @Test","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"    public void equals() {","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"        Person aliceCopy \u003d new VolunteerBuilder(ALICE).build();","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"        assertEquals(ALICE, aliceCopy);","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"        assertEquals(ALICE, ALICE);","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"        assertNotEquals(null, ALICE);","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"zhacatomn"},"content":"        assertNotEquals(5, ALICE);","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"zhacatomn"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"zhacatomn"},"content":"        assertNotEquals(ALICE, BOB);","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"zhacatomn"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"zhacatomn"},"content":"        Person editedAlice \u003d new VolunteerBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"zhacatomn"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"zhacatomn"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"zhacatomn"},"content":"        editedAlice \u003d new VolunteerBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"zhacatomn"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"zhacatomn"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"zhacatomn"},"content":"        editedAlice \u003d new VolunteerBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"zhacatomn"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"zhacatomn"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"zhacatomn"},"content":"        editedAlice \u003d new VolunteerBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"zhacatomn"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"zhacatomn"},"content":"        // different age -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"zhacatomn"},"content":"        editedAlice \u003d new VolunteerBuilder(ALICE).withAge(VALID_AGE_BOB).build();","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"zhacatomn"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"zhacatomn"},"content":"        // different nric -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"zhacatomn"},"content":"        editedAlice \u003d new VolunteerBuilder(ALICE).withNric(VALID_NRIC_BOB).build();","lastModifiedDate":"2023-02-20"},{"lineNumber":102,"author":{"gitId":"zhacatomn"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2023-02-20"},{"lineNumber":103,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":104,"author":{"gitId":"zhacatomn"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-02-20"},{"lineNumber":105,"author":{"gitId":"zhacatomn"},"content":"        editedAlice \u003d new VolunteerBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-02-20"},{"lineNumber":106,"author":{"gitId":"zhacatomn"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2023-02-20"},{"lineNumber":107,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":108,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"zhacatomn":108}},{"path":"src/test/java/seedu/address/model/person/information/NricTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person.information;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"class NricTest {","lastModifiedDate":"2023-02-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Nric(null));","lastModifiedDate":"2023-02-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"    public void constructor_invalidNric_throwsIllegalArgumentException() {","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        String invalidNric \u003d \"\";","lastModifiedDate":"2023-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Nric(invalidNric));","lastModifiedDate":"2023-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void isValidNric() {","lastModifiedDate":"2023-02-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Nric.isValidNric(null));","lastModifiedDate":"2023-02-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // invalid NRIC","lastModifiedDate":"2023-02-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(Nric.isValidNric(\"\")); // empty string","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Nric.isValidNric(\" \")); // spaces only","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Nric.isValidNric(\"hello\")); // too little characters","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Nric.isValidNric(\"hellokitty123\")); // too much characters","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // valid NRIC","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Nric.isValidNric(\"T1234567C\"));","lastModifiedDate":"2023-02-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Nric.isValidNric(\"S2345678B\")); // 9 characters","lastModifiedDate":"2023-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"-":36,"zhacatomn":1}},{"path":"src/test/java/seedu/address/storage/JsonFriendlyLinkStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalFriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.FriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyFriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonFriendlyLinkStorageTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonFriendlyLinkStorageTest\");","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"    public void readFriendlyLink_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"        assertThrows(NullPointerException.class, () -\u003e readFriendlyLink(null));","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"    private java.util.Optional\u003cReadOnlyFriendlyLink\u003e readFriendlyLink(String filePath) throws Exception {","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonFriendlyLinkStorage(Paths.get(filePath)).readFriendlyLink(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"        assertFalse(readFriendlyLink(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFriendlyLink(\"notJsonFormatFriendlyLink.json\"));","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"    public void readFriendlyLink_invalidPersonFriendlyLink_throwDataConversionException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFriendlyLink(\"invalidPersonFriendlyLink.json\"));","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"    public void readFriendlyLink_invalidAndValidPersonFriendlyLink_throwDataConversionException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"gohyongjing"},"content":"        assertThrows(DataConversionException.class, () -\u003e readFriendlyLink(\"invalidAndValidPersonFriendlyLink.json\"));","lastModifiedDate":"2023-02-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"gohyongjing"},"content":"    public void readAndSaveFriendlyLink_allInOrder_success() throws Exception {","lastModifiedDate":"2023-02-22"},{"lineNumber":65,"author":{"gitId":"gohyongjing"},"content":"        Path filePath \u003d testFolder.resolve(\"TempFriendlyLink.json\");","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        FriendlyLink original \u003d getTypicalFriendlyLink();","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"gohyongjing"},"content":"        JsonFriendlyLinkStorage jsonFriendlyLinkStorage \u003d new JsonFriendlyLinkStorage(filePath);","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"gohyongjing"},"content":"        jsonFriendlyLinkStorage.saveFriendlyLink(original, filePath);","lastModifiedDate":"2023-02-22"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"        ReadOnlyFriendlyLink readBack \u003d jsonFriendlyLinkStorage.readFriendlyLink(filePath).get();","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new FriendlyLink(readBack));","lastModifiedDate":"2023-02-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"gohyongjing"},"content":"        jsonFriendlyLinkStorage.saveFriendlyLink(original, filePath);","lastModifiedDate":"2023-02-22"},{"lineNumber":78,"author":{"gitId":"gohyongjing"},"content":"        readBack \u003d jsonFriendlyLinkStorage.readFriendlyLink(filePath).get();","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new FriendlyLink(readBack));","lastModifiedDate":"2023-02-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"gohyongjing"},"content":"        jsonFriendlyLinkStorage.saveFriendlyLink(original); // file path not specified","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"gohyongjing"},"content":"        readBack \u003d jsonFriendlyLinkStorage.readFriendlyLink().get(); // file path not specified","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new FriendlyLink(readBack));","lastModifiedDate":"2023-02-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"gohyongjing"},"content":"    public void saveFriendlyLink_nullFriendlyLink_throwsNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":91,"author":{"gitId":"gohyongjing"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveFriendlyLink(null, \"SomeFile.json\"));","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"gohyongjing"},"content":"     * Saves {@code friendlyLink} at the specified {@code filePath}.","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"gohyongjing"},"content":"    private void saveFriendlyLink(ReadOnlyFriendlyLink friendlyLink, String filePath) {","lastModifiedDate":"2023-02-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonFriendlyLinkStorage(Paths.get(filePath))","lastModifiedDate":"2023-02-11"},{"lineNumber":100,"author":{"gitId":"gohyongjing"},"content":"                    .saveFriendlyLink(friendlyLink, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-02-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"gohyongjing"},"content":"    public void saveFriendlyLink_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-02-22"},{"lineNumber":108,"author":{"gitId":"gohyongjing"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveFriendlyLink(new FriendlyLink(), null));","lastModifiedDate":"2023-02-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"gohyongjing":26,"-":84}},{"path":"src/test/java/seedu/address/storage/JsonSerializableFriendlyLinkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.FriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableFriendlyLinkTest {","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableFriendlyLinkTest\");","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsFriendlyLink.json\");","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonFriendlyLink.json\");","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonFriendlyLink.json\");","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableFriendlyLink dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableFriendlyLink.class).get();","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FriendlyLink friendlyLinkFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        FriendlyLink typicalPersonsFriendlyLink \u003d TypicalPersons.getTypicalFriendlyLink();","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(friendlyLinkFromFile, typicalPersonsFriendlyLink);","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableFriendlyLink dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableFriendlyLink.class).get();","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableFriendlyLink dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableFriendlyLink.class).get();","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableFriendlyLink.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"gohyongjing":4,"-":43}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalFriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.FriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyFriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"Zxun2"},"content":"import seedu.address.storage.elderly.JsonElderlyStorage;","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"Zxun2"},"content":"import seedu.address.storage.volunteer.JsonVolunteerStorage;","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"        JsonFriendlyLinkStorage friendlyLinkStorage \u003d new JsonFriendlyLinkStorage(getTempFilePath(\"friendlylink\"));","lastModifiedDate":"2023-02-28"},{"lineNumber":30,"author":{"gitId":"Zxun2"},"content":"        JsonElderlyStorage elderlyStorage \u003d new JsonElderlyStorage(getTempFilePath(\"elderly\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"Zxun2"},"content":"        JsonVolunteerStorage volunteerStorage \u003d new JsonVolunteerStorage(getTempFilePath(\"volunteer\"));","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"        storageManager \u003d new StorageManager(friendlyLinkStorage, elderlyStorage, volunteerStorage, userPrefsStorage);","lastModifiedDate":"2023-02-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"gohyongjing"},"content":"    public void friendlyLinkReadSave() throws Exception {","lastModifiedDate":"2023-02-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"gohyongjing"},"content":"         * {@link JsonFriendlyLinkStorage} class.","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"gohyongjing"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonFriendlyLinkStorageTest} class.","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FriendlyLink original \u003d getTypicalFriendlyLink();","lastModifiedDate":"2023-02-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        storageManager.saveFriendlyLink(original);","lastModifiedDate":"2023-02-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ReadOnlyFriendlyLink retrieved \u003d storageManager.readFriendlyLink().get();","lastModifiedDate":"2023-02-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(original, new FriendlyLink(retrieved));","lastModifiedDate":"2023-02-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"gohyongjing"},"content":"    public void getFriendlyLinkFilePath() {","lastModifiedDate":"2023-02-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getFriendlyLinkFilePath());","lastModifiedDate":"2023-02-11"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zxun2":4,"gohyongjing":6,"-":62}},{"path":"src/test/java/seedu/address/testutil/ElderlyBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"gohyongjing"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.information.Age;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.information.RiskLevel;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"/**","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":" * A utility class to help with building Elderly objects.","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"gohyongjing"},"content":" */","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"public class ElderlyBuilder extends PersonBuilderScaffold\u003cElderlyBuilder\u003e {","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"heeeyi"},"content":"    public static final String DEFAULT_AGE \u003d \"65\";","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"heeeyi"},"content":"    public static final String DEFAULT_NRIC \u003d \"S1234567A\";","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"heeeyi"},"content":"    public static final String DEFAULT_RISK \u003d \"LOW\";","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"    private Age age;","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"    private Nric nric;","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"heeeyi"},"content":"    private RiskLevel riskLevel;","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"gohyongjing"},"content":"     * Creates a {@code ElderlyBuilder} with the default details.","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"    public ElderlyBuilder() {","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"        super();","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"        this.age \u003d new Age(DEFAULT_AGE);","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"        this.nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"heeeyi"},"content":"        this.riskLevel \u003d new RiskLevel(DEFAULT_RISK);","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"gohyongjing"},"content":"     * Initializes the ElderlyBuilder with the data of {@code elderlyToCopy}.","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"gohyongjing"},"content":"    public ElderlyBuilder(Elderly elderlyToCopy) {","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"gohyongjing"},"content":"        super(elderlyToCopy);","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"gohyongjing"},"content":"        age \u003d elderlyToCopy.getAge();","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"gohyongjing"},"content":"        nric \u003d elderlyToCopy.getNric();","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"heeeyi"},"content":"        riskLevel \u003d elderlyToCopy.getRiskLevel();","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"gohyongjing"},"content":"     * Sets the {@code Age} of the {@code Elderly} that we are building.","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"gohyongjing"},"content":"    public ElderlyBuilder withAge(String age) {","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"gohyongjing"},"content":"        this.age \u003d new Age(age);","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"gohyongjing"},"content":"        return this;","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"    /**","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"gohyongjing"},"content":"     * Sets the {@code Nric} of the {@code Elderly} that we are building.","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"gohyongjing"},"content":"     */","lastModifiedDate":"2023-02-22"},{"lineNumber":50,"author":{"gitId":"gohyongjing"},"content":"    public ElderlyBuilder withNric(String nric) {","lastModifiedDate":"2023-02-22"},{"lineNumber":51,"author":{"gitId":"gohyongjing"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2023-02-22"},{"lineNumber":52,"author":{"gitId":"gohyongjing"},"content":"        return this;","lastModifiedDate":"2023-02-22"},{"lineNumber":53,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"heeeyi"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"heeeyi"},"content":"     * Sets the {@code RiskLevel} of the {@code Elderly} that we are building.","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"heeeyi"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"heeeyi"},"content":"    public ElderlyBuilder withRiskLevel(String riskLevel) {","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"heeeyi"},"content":"        this.riskLevel \u003d new RiskLevel(riskLevel.toUpperCase());","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"heeeyi"},"content":"        return this;","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":63,"author":{"gitId":"heeeyi"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"heeeyi"},"content":"     * Build the elderly object.","lastModifiedDate":"2023-02-21"},{"lineNumber":65,"author":{"gitId":"heeeyi"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"gohyongjing"},"content":"    public Elderly build() {","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"heeeyi"},"content":"        return new Elderly(name, phone, email, address,","lastModifiedDate":"2023-02-21"},{"lineNumber":68,"author":{"gitId":"heeeyi"},"content":"                nric, age, riskLevel, tags);","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"gohyongjing"},"content":"    }","lastModifiedDate":"2023-02-22"},{"lineNumber":70,"author":{"gitId":"gohyongjing"},"content":"}","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"gohyongjing":51,"heeeyi":19}},{"path":"src/test/java/seedu/address/testutil/FriendlyLinkBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.FriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":" * A utility class to help with building FriendlyLink objects.","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"gohyongjing"},"content":" *     {@code FriendlyLink fl \u003d new FriendlyLinkBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class FriendlyLinkBuilder {","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final FriendlyLink friendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public FriendlyLinkBuilder() {","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        friendlyLink \u003d new FriendlyLink();","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public FriendlyLinkBuilder(FriendlyLink friendlyLink) {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.friendlyLink \u003d friendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"     * Adds a new {@code Person} to the {@code FriendlyLink} that we are building.","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public FriendlyLinkBuilder withPerson(Person person) {","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        friendlyLink.addPerson(person);","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public FriendlyLink build() {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return friendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"gohyongjing":3,"-":31}},{"path":"src/test/java/seedu/address/testutil/PairBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import static seedu.address.testutil.TypicalElderlys.AMY;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import static seedu.address.testutil.TypicalVolunteers.BOB;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.pair.Pair;","lastModifiedDate":"2023-02-11"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A utility class to help with building Pair objects.","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class PairBuilder {","lastModifiedDate":"2023-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"gohyongjing"},"content":"    public static final Elderly DEFAULT_ELDERLY \u003d AMY;","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"gohyongjing"},"content":"    public static final Volunteer DEFAULT_VOLUNTEER \u003d BOB;","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"gohyongjing"},"content":"    private Elderly elderly;","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"gohyongjing"},"content":"    private Volunteer volunteer;","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code PairBuilder} with the default details.","lastModifiedDate":"2023-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public PairBuilder() {","lastModifiedDate":"2023-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        elderly \u003d DEFAULT_ELDERLY;","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        volunteer \u003d DEFAULT_VOLUNTEER;","lastModifiedDate":"2023-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Initializes the PairBuilder with the data of {@code pairToCopy}.","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public PairBuilder(Pair pairToCopy) {","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        elderly \u003d pairToCopy.getElderly();","lastModifiedDate":"2023-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        volunteer \u003d pairToCopy.getVolunteer();","lastModifiedDate":"2023-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Sets the {@code Elderly} of the {@code pair} that we are building.","lastModifiedDate":"2023-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"gohyongjing"},"content":"    public PairBuilder withElderly(Elderly elderly) {","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.elderly \u003d elderly;","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Volunteer} of the {@code pair} that we are building.","lastModifiedDate":"2023-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":47,"author":{"gitId":"gohyongjing"},"content":"    public PairBuilder withVolunteer(Volunteer volunteer) {","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.volunteer \u003d volunteer;","lastModifiedDate":"2023-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-02-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Pair build() {","lastModifiedDate":"2023-02-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new Pair(elderly, volunteer);","lastModifiedDate":"2023-02-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"gohyongjing":10,"-":46}},{"path":"src/test/java/seedu/address/testutil/PairUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC_ELDERLY;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC_VOLUNTEER;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddPairCommand;","lastModifiedDate":"2023-02-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.pair.Pair;","lastModifiedDate":"2023-02-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2023-02-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class PairUtil {","lastModifiedDate":"2023-02-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2023-02-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static String getAddPairCommand(Pair pair) {","lastModifiedDate":"2023-02-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return AddPairCommand.COMMAND_WORD + \" \" + getPairDetails(pair);","lastModifiedDate":"2023-02-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2023-02-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static String getPairDetails(Pair pair) {","lastModifiedDate":"2023-02-14"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"        String sb \u003d PREFIX_NRIC_ELDERLY + pair.getElderly().getName().fullName + \" \"","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"                + PREFIX_NRIC_VOLUNTEER + pair.getVolunteer().getName().fullName + \" \";","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return sb;","lastModifiedDate":"2023-02-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"-":25,"zhacatomn":4}},{"path":"src/test/java/seedu/address/testutil/PersonBuilderScaffold.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import java.util.Set;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Address;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Email;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Name;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Phone;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"public abstract class PersonBuilderScaffold\u003cT extends PersonBuilderScaffold\u003cT\u003e\u003e {","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"    protected Name name;","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"    protected Phone phone;","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"    protected Email email;","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"    protected Address address;","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"    protected Set\u003cTag\u003e tags;","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"    protected PersonBuilderScaffold() {","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"    protected PersonBuilderScaffold(Person personToCopy) {","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"    private T castSelf() {","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"        @SuppressWarnings(\"unchecked\") T casted \u003d (T) this;","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"        return casted;","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"    public T withName(String name) {","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"        return castSelf();","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"    public T withTags(String ... tags) {","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"        return castSelf();","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":72,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":73,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":74,"author":{"gitId":"zhacatomn"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2023-02-20"},{"lineNumber":75,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":76,"author":{"gitId":"zhacatomn"},"content":"    public T withAddress(String address) {","lastModifiedDate":"2023-02-20"},{"lineNumber":77,"author":{"gitId":"zhacatomn"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2023-02-20"},{"lineNumber":78,"author":{"gitId":"zhacatomn"},"content":"        return castSelf();","lastModifiedDate":"2023-02-20"},{"lineNumber":79,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":80,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":81,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":82,"author":{"gitId":"zhacatomn"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2023-02-20"},{"lineNumber":83,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":84,"author":{"gitId":"zhacatomn"},"content":"    public T withPhone(String phone) {","lastModifiedDate":"2023-02-20"},{"lineNumber":85,"author":{"gitId":"zhacatomn"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-02-20"},{"lineNumber":86,"author":{"gitId":"zhacatomn"},"content":"        return castSelf();","lastModifiedDate":"2023-02-20"},{"lineNumber":87,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":88,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-20"},{"lineNumber":90,"author":{"gitId":"zhacatomn"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2023-02-20"},{"lineNumber":91,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-20"},{"lineNumber":92,"author":{"gitId":"zhacatomn"},"content":"    public T withEmail(String email) {","lastModifiedDate":"2023-02-20"},{"lineNumber":93,"author":{"gitId":"zhacatomn"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"zhacatomn"},"content":"        return castSelf();","lastModifiedDate":"2023-02-20"},{"lineNumber":95,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":96,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":97,"author":{"gitId":"zhacatomn"},"content":"    public Person build() {","lastModifiedDate":"2023-02-20"},{"lineNumber":98,"author":{"gitId":"zhacatomn"},"content":"        return new Person(name, phone, email, address, tags);","lastModifiedDate":"2023-02-20"},{"lineNumber":99,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":100,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":101,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"zhacatomn":101}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.FriendlyLink;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"    public static FriendlyLink getTypicalFriendlyLink() {","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"        FriendlyLink ab \u003d new FriendlyLink();","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"        for (Volunteer volunteer : TypicalVolunteers.getTypicalVolunteers()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"            ab.addVolunteer(volunteer);","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"        for (Elderly elderly : TypicalElderlys.getTypicalElderlys()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"            ab.addElderly(elderly);","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"        return ab;","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":55,"zhacatomn":17}},{"path":"src/test/java/seedu/address/testutil/TypicalElderlys.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-02-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":3,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-02-21"},{"lineNumber":4,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-02-21"},{"lineNumber":5,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_AMY;","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"gohyongjing"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"gohyongjing"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"gohyongjing"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_CHARLIE;","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RISKLEVEL_AMY;","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_RISKLEVEL_BOB;","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"heeeyi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"heeeyi"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"heeeyi"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"heeeyi"},"content":"import java.util.List;","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"import seedu.address.model.person.Elderly;","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Elderly} objects to be used in tests.","lastModifiedDate":"2023-02-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * (to be finished)","lastModifiedDate":"2023-02-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class TypicalElderlys {","lastModifiedDate":"2023-02-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":33,"author":{"gitId":"heeeyi"},"content":"    public static final Elderly ALICE \u003d new ElderlyBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-02-21"},{"lineNumber":34,"author":{"gitId":"heeeyi"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"heeeyi"},"content":"            .withPhone(\"94351253\").withTags(\"friends\")","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"heeeyi"},"content":"            .withAge(\"20\").withNric(\"S9673908G\").withRiskLevel(\"low\").build();","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"heeeyi"},"content":"    public static final Elderly BENSON \u003d new ElderlyBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-02-21"},{"lineNumber":38,"author":{"gitId":"gohyongjing"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"heeeyi"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\").withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-02-21"},{"lineNumber":40,"author":{"gitId":"heeeyi"},"content":"            .withAge(\"23\").withNric(\"S6878241D\").withRiskLevel(\"medium\").build();","lastModifiedDate":"2023-02-21"},{"lineNumber":41,"author":{"gitId":"heeeyi"},"content":"    public static final Elderly CARL \u003d new ElderlyBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-02-21"},{"lineNumber":42,"author":{"gitId":"heeeyi"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"heeeyi"},"content":"            .withAge(\"31\").withNric(\"S3634466J\").withRiskLevel(\"high\").build();","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"heeeyi"},"content":"    public static final Elderly DANIEL \u003d new ElderlyBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"heeeyi"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").withAge(\"25\")","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"heeeyi"},"content":"            .withNric(\"S0203151E\").withRiskLevel(\"LOW\").build();","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"heeeyi"},"content":"    public static final Elderly ELLE \u003d new ElderlyBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"heeeyi"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withAge(\"28\")","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"heeeyi"},"content":"            .withNric(\"S7238791J\").withRiskLevel(\"HIGH\").build();","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"heeeyi"},"content":"    public static final Elderly FIONA \u003d new ElderlyBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"heeeyi"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withAge(\"26\")","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"heeeyi"},"content":"            .withNric(\"S3576311B\").withRiskLevel(\"MEDIUM\").build();","lastModifiedDate":"2023-02-21"},{"lineNumber":53,"author":{"gitId":"heeeyi"},"content":"    public static final Elderly GEORGE \u003d new ElderlyBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-02-21"},{"lineNumber":54,"author":{"gitId":"heeeyi"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withAge(\"24\")","lastModifiedDate":"2023-02-21"},{"lineNumber":55,"author":{"gitId":"heeeyi"},"content":"            .withNric(\"S1262951F\").withRiskLevel(\"LoW\").build();","lastModifiedDate":"2023-02-21"},{"lineNumber":56,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":57,"author":{"gitId":"heeeyi"},"content":"    // Manually added","lastModifiedDate":"2023-02-21"},{"lineNumber":58,"author":{"gitId":"heeeyi"},"content":"    public static final Elderly HOON \u003d new ElderlyBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-02-21"},{"lineNumber":59,"author":{"gitId":"heeeyi"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2023-02-21"},{"lineNumber":60,"author":{"gitId":"heeeyi"},"content":"    public static final Elderly IDA \u003d new ElderlyBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-02-21"},{"lineNumber":61,"author":{"gitId":"heeeyi"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-02-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-14"},{"lineNumber":63,"author":{"gitId":"heeeyi"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-02-21"},{"lineNumber":64,"author":{"gitId":"heeeyi"},"content":"    public static final Elderly AMY \u003d new ElderlyBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-02-21"},{"lineNumber":65,"author":{"gitId":"heeeyi"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-02-21"},{"lineNumber":66,"author":{"gitId":"heeeyi"},"content":"            .withNric(VALID_NRIC_AMY).withAge(VALID_AGE_AMY).withRiskLevel(VALID_RISKLEVEL_AMY).build();","lastModifiedDate":"2023-02-21"},{"lineNumber":67,"author":{"gitId":"heeeyi"},"content":"    public static final Elderly BOB \u003d new ElderlyBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-02-21"},{"lineNumber":68,"author":{"gitId":"heeeyi"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-02-21"},{"lineNumber":69,"author":{"gitId":"heeeyi"},"content":"            .withNric(VALID_NRIC_BOB).withAge(VALID_AGE_BOB).withRiskLevel(VALID_RISKLEVEL_BOB).build();","lastModifiedDate":"2023-02-21"},{"lineNumber":70,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":71,"author":{"gitId":"gohyongjing"},"content":"    // TODO: Replace magic strings","lastModifiedDate":"2023-02-28"},{"lineNumber":72,"author":{"gitId":"gohyongjing"},"content":"    public static final Elderly CHARLIE \u003d new ElderlyBuilder().withName(\"Charlie Kurz\")","lastModifiedDate":"2023-02-22"},{"lineNumber":73,"author":{"gitId":"gohyongjing"},"content":"            .withPhone(\"95352563\").withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"gohyongjing"},"content":"            .withAge(\"31\").withNric(VALID_NRIC_CHARLIE).build();","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"gohyongjing"},"content":"","lastModifiedDate":"2023-02-28"},{"lineNumber":76,"author":{"gitId":"heeeyi"},"content":"    private TypicalElderlys() {} // prevents instantiation","lastModifiedDate":"2023-02-21"},{"lineNumber":77,"author":{"gitId":"heeeyi"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":78,"author":{"gitId":"heeeyi"},"content":"    public static List\u003cElderly\u003e getTypicalElderlys() {","lastModifiedDate":"2023-02-21"},{"lineNumber":79,"author":{"gitId":"heeeyi"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-02-21"},{"lineNumber":80,"author":{"gitId":"heeeyi"},"content":"    }","lastModifiedDate":"2023-02-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-14"}],"authorContributionMap":{"gohyongjing":12,"heeeyi":59,"-":10}},{"path":"src/test/java/seedu/address/testutil/TypicalPairs.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":3,"author":{"gitId":"gohyongjing"},"content":"import static seedu.address.testutil.TypicalElderlys.AMY;","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"gohyongjing"},"content":"import static seedu.address.testutil.TypicalElderlys.BOB;","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"gohyongjing"},"content":"import static seedu.address.testutil.TypicalElderlys.CHARLIE;","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"gohyongjing"},"content":"import static seedu.address.testutil.TypicalVolunteers.DANIEL;","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"gohyongjing"},"content":"import static seedu.address.testutil.TypicalVolunteers.ELLE;","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.FriendlyLink;","lastModifiedDate":"2023-02-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.pair.Pair;","lastModifiedDate":"2023-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2023-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class TypicalPairs {","lastModifiedDate":"2023-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":21,"author":{"gitId":"gohyongjing"},"content":"    public static final Pair PAIR1 \u003d new PairBuilder().withElderly(AMY)","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"gohyongjing"},"content":"            .withVolunteer(ELLE).build();","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"gohyongjing"},"content":"    public static final Pair PAIR2 \u003d new PairBuilder().withElderly(CHARLIE)","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            .withVolunteer(DANIEL).build();","lastModifiedDate":"2023-02-11"},{"lineNumber":25,"author":{"gitId":"gohyongjing"},"content":"    public static final Pair PAIR3 \u003d new PairBuilder().withElderly(BOB)","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"gohyongjing"},"content":"            .withVolunteer(ELLE).build();","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private TypicalPairs() {} // prevents instantiation","lastModifiedDate":"2023-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical pairs.","lastModifiedDate":"2023-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static FriendlyLink getTypicalFriendlyLink() {","lastModifiedDate":"2023-02-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        FriendlyLink fl \u003d new FriendlyLink();","lastModifiedDate":"2023-02-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        for (Pair pair : getTypicalPairs()) {","lastModifiedDate":"2023-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            fl.addPair(pair);","lastModifiedDate":"2023-02-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return fl;","lastModifiedDate":"2023-02-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static List\u003cPair\u003e getTypicalPairs() {","lastModifiedDate":"2023-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(PAIR1, PAIR2, PAIR3));","lastModifiedDate":"2023-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-02-11"}],"authorContributionMap":{"gohyongjing":10,"-":33}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.FriendlyLink;","lastModifiedDate":"2023-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"     * [TO REMOVE: Use TestUtil.getTypicalFriendlyLink() instead]","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static FriendlyLink getTypicalFriendlyLink() {","lastModifiedDate":"2023-02-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        FriendlyLink ab \u003d new FriendlyLink();","lastModifiedDate":"2023-02-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"-":76,"zhacatomn":1}},{"path":"src/test/java/seedu/address/testutil/TypicalVolunteers.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"import java.util.List;","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"public class TypicalVolunteers {","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"    public static final Volunteer ALICE \u003d new VolunteerBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"            .withTags(\"friends\").withAge(\"20\").withNric(\"S9673908G\").build();","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"    public static final Volunteer BENSON \u003d new VolunteerBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"            .withTags(\"owesMoney\", \"friends\").withAge(\"23\").withNric(\"S6878241D\").build();","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"    public static final Volunteer CARL \u003d new VolunteerBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").withAge(\"31\").withNric(\"S3634466J\").build();","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"    public static final Volunteer DANIEL \u003d new VolunteerBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").withAge(\"25\")","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"            .withNric(\"S0203151E\").build();","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"    public static final Volunteer ELLE \u003d new VolunteerBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").withAge(\"28\")","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"            .withNric(\"S7238791J\").build();","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"    public static final Volunteer FIONA \u003d new VolunteerBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").withAge(\"26\")","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"            .withNric(\"S3576311B\").build();","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"    public static final Volunteer GEORGE \u003d new VolunteerBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").withAge(\"24\")","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"            .withNric(\"S1262951F\").build();","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"    // Manually added","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"    public static final Volunteer HOON \u003d new VolunteerBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"zhacatomn"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"zhacatomn"},"content":"    public static final Volunteer IDA \u003d new VolunteerBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-02-20"},{"lineNumber":56,"author":{"gitId":"zhacatomn"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":58,"author":{"gitId":"zhacatomn"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-02-20"},{"lineNumber":59,"author":{"gitId":"zhacatomn"},"content":"    public static final Volunteer AMY \u003d new VolunteerBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-02-20"},{"lineNumber":60,"author":{"gitId":"zhacatomn"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2023-02-20"},{"lineNumber":61,"author":{"gitId":"zhacatomn"},"content":"            .withNric(VALID_NRIC_AMY).withAge(VALID_AGE_AMY).build();","lastModifiedDate":"2023-02-20"},{"lineNumber":62,"author":{"gitId":"zhacatomn"},"content":"    public static final Volunteer BOB \u003d new VolunteerBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-02-20"},{"lineNumber":63,"author":{"gitId":"zhacatomn"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-02-20"},{"lineNumber":64,"author":{"gitId":"zhacatomn"},"content":"            .withNric(VALID_NRIC_BOB).withAge(VALID_AGE_BOB).build();","lastModifiedDate":"2023-02-20"},{"lineNumber":65,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":66,"author":{"gitId":"zhacatomn"},"content":"    private TypicalVolunteers() {} // prevents instantiation","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":68,"author":{"gitId":"zhacatomn"},"content":"    public static List\u003cVolunteer\u003e getTypicalVolunteers() {","lastModifiedDate":"2023-02-20"},{"lineNumber":69,"author":{"gitId":"zhacatomn"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-02-20"},{"lineNumber":70,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":71,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"zhacatomn":71}},{"path":"src/test/java/seedu/address/testutil/VolunteerBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"zhacatomn"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.Volunteer;","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Age;","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"zhacatomn"},"content":"import seedu.address.model.person.information.Nric;","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"zhacatomn"},"content":"/**","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"zhacatomn"},"content":" * A utility class to help with building Volunteer objects.","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"zhacatomn"},"content":" */","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"zhacatomn"},"content":"public class VolunteerBuilder extends PersonBuilderScaffold\u003cVolunteerBuilder\u003e {","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"zhacatomn"},"content":"    public static final String DEFAULT_AGE \u003d \"20\";","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"zhacatomn"},"content":"    public static final String DEFAULT_NRIC \u003d \"T1234567I\";","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"zhacatomn"},"content":"    private Age age;","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"zhacatomn"},"content":"    private Nric nric;","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"zhacatomn"},"content":"     * Creates a {@code VolunteerBuilder} with the default details.","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"zhacatomn"},"content":"    public VolunteerBuilder() {","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"zhacatomn"},"content":"        super();","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"zhacatomn"},"content":"        this.age \u003d new Age(DEFAULT_AGE);","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"zhacatomn"},"content":"        this.nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"zhacatomn"},"content":"     * Initializes the VolunteerBuilder with the data of {@code volunteerToCopy}.","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"zhacatomn"},"content":"    public VolunteerBuilder(Volunteer volunteerToCopy) {","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"zhacatomn"},"content":"        super(volunteerToCopy);","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"zhacatomn"},"content":"        age \u003d volunteerToCopy.getAge();","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"zhacatomn"},"content":"        nric \u003d volunteerToCopy.getNric();","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":35,"author":{"gitId":"zhacatomn"},"content":"     * Sets the {@code Age} of the {@code Volunteer} that we are building.","lastModifiedDate":"2023-02-21"},{"lineNumber":36,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":37,"author":{"gitId":"zhacatomn"},"content":"    public VolunteerBuilder withAge(String age) {","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"zhacatomn"},"content":"        this.age \u003d new Age(age);","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"zhacatomn"},"content":"        return this;","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"zhacatomn"},"content":"    /**","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"zhacatomn"},"content":"     * Sets the {@code Nric} of the {@code Volunteer} that we are building.","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"zhacatomn"},"content":"     */","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"zhacatomn"},"content":"    public VolunteerBuilder withNric(String nric) {","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"zhacatomn"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"zhacatomn"},"content":"        return this;","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"zhacatomn"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":50,"author":{"gitId":"zhacatomn"},"content":"    public Volunteer build() {","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"zhacatomn"},"content":"        return new Volunteer(name, phone, email, address, nric, age, tags);","lastModifiedDate":"2023-02-20"},{"lineNumber":52,"author":{"gitId":"zhacatomn"},"content":"    }","lastModifiedDate":"2023-02-20"},{"lineNumber":53,"author":{"gitId":"zhacatomn"},"content":"}","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"zhacatomn":53}}]
