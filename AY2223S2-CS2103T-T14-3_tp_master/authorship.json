[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T14-3/tp/actions)","lastModifiedDate":"2023-02-19"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-T14-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103T-T14-3/tp)\u003cbr\u003e","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"![Logo](docs/images/internbuddy-logo.png)","lastModifiedDate":"2023-02-19"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"## About InternBuddy","lastModifiedDate":"2023-02-19"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"InternBuddy provides a 1-stop platform for **Computing undergraduates** to manage and track their internship applications.","lastModifiedDate":"2023-02-19"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"It is optimized for **typing** which Computing undergraduates are comfortable and proficient in, allowing them to fully and","lastModifiedDate":"2023-02-19"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"efficiently exploit the applicationâ€™s organisational capabilities.","lastModifiedDate":"2023-02-19"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"## Core Features","lastModifiedDate":"2023-02-19"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"1. Add and delete internship entries","lastModifiedDate":"2023-02-19"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"2. Keep track of internship status","lastModifiedDate":"2023-02-19"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"3. Associate tags with each internship","lastModifiedDate":"2023-02-19"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"4. Search internships by names, roles and tags","lastModifiedDate":"2023-02-19"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"5. Saving of internship entries to a local data file (auto-saving included!)","lastModifiedDate":"2023-02-19"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"## Getting Started","lastModifiedDate":"2023-02-19"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"1. Ensure that your computer has **Java 11** or above installed. Otherwise, you can download it","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"   [here](https://www.oracle.com/java/technologies/downloads/#java11).","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"2. Download the latest release of InternBuddy [here](https://github.com/AY2223S2-CS2103T-T14-3/tp/releases).","lastModifiedDate":"2023-02-19"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"3. Copy the downloaded release to a folder that you want as the _home folder_ for InternBuddy.","lastModifiedDate":"2023-02-19"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"4. Open a command terminal and change directory into the folder you chose in step 3 using the `cd` command.","lastModifiedDate":"2023-02-19"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"5. Run the command `java -jar internbuddy.jar`. InternBuddy would then run, where you would see a window","lastModifiedDate":"2023-02-19"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"   like this:","lastModifiedDate":"2023-02-19"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"6. Enjoy tracking your internships using InternBuddy!","lastModifiedDate":"2023-02-19"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"## Additional Information","lastModifiedDate":"2023-02-19"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"- If you are a user who is interested in learning more about what InternBuddy offers, do visit the","lastModifiedDate":"2023-02-19"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"[InternBuddy User Guide](https://ay2223s2-cs2103t-t14-3.github.io/tp/UserGuide.html).","lastModifiedDate":"2023-02-19"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"- Alternatively, if you are a developer who is curious about the implementation of InternBuddy, check","lastModifiedDate":"2023-02-19"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"out the [InternBuddy Developer Guide](https://ay2223s2-cs2103t-t14-3.github.io/tp/DeveloperGuide.html).","lastModifiedDate":"2023-02-19"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-02-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"## Acknowledgements","lastModifiedDate":"2023-02-19"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"InternBuddy is created using **Java 11**, with usage of the [JavaFX](https://openjfx.io/),","lastModifiedDate":"2023-02-19"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"[Jackson](https://github.com/FasterXML/jackson) and [JUnit5](https://github.com/junit-team/junit5) libraries.","lastModifiedDate":"2023-02-19"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"Also, it is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-19"}],"authorContributionMap":{"eugenetangkj":37,"-":3}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"# About InternBuddy","lastModifiedDate":"2023-02-23"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"We are team InternBuddy, and we are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2023-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"## Project Team","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"### Christopher Tan Rui Yang","lastModifiedDate":"2023-02-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"\u003cimg src\u003d\"images/potty10.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"[[github](https://github.com/potty10)]","lastModifiedDate":"2023-02-23"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"[[portfolio](team/potty10.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"* Role: Team Lead","lastModifiedDate":"2023-02-23"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"* Responsibilities: Testing","lastModifiedDate":"2023-02-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"### Eugene Tang KangJie","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"\u003cimg src\u003d\"images/eugenetangkj.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"[[github](http://github.com/eugenetangkj)]","lastModifiedDate":"2023-02-23"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"[[portfolio](team/eugenetangkj.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"* Role: Developer","lastModifiedDate":"2023-02-23"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"* Responsibilities: UI, Documentation","lastModifiedDate":"2023-02-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"### Koh Kai Xun","lastModifiedDate":"2023-02-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"potty10"},"content":"\u003cimg src\u003d\"images/kohkaixun.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"potty10"},"content":"[[github](http://github.com/kohkaixun)]","lastModifiedDate":"2023-02-23"},{"lineNumber":37,"author":{"gitId":"potty10"},"content":"[[portfolio](team/kohkaixun.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"* Responsibilities: Code Quality","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"potty10"},"content":"### Lim Hai Leong Shawn","lastModifiedDate":"2023-02-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"potty10"},"content":"\u003cimg src\u003d\"images/seadragon2000341.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"potty10"},"content":"[[github](http://github.com/seadragon2000341)]","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"potty10"},"content":"[[portfolio](team/seadragon2000341.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"potty10"},"content":"* Responsibilities: Scheduling and Tracking, Deliverables and Deadlines","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"potty10"},"content":"### Ou Chuhao","lastModifiedDate":"2023-02-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"seadragon2000341"},"content":"\u003cimg src\u003d\"images/derricksaltfish.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"potty10"},"content":"[[github](http://github.com/DerrickSaltFish)]","lastModifiedDate":"2023-02-23"},{"lineNumber":57,"author":{"gitId":"potty10"},"content":"[[portfolio](team/DerrickSaltFish.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"potty10"},"content":"* Responsibilities: Integration","lastModifiedDate":"2023-02-23"}],"authorContributionMap":{"eugenetangkj":3,"potty10":26,"seadragon2000341":1,"-":30}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"* InternBuddy is written in **Java 11**, with usage of the [JavaFX](https://openjfx.io/),","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"[Jackson](https://github.com/FasterXML/jackson) and [JUnit5](https://github.com/junit-team/junit5) libraries. It","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"is adapted from the [AddressBook Level 3](https://github.com/se-edu/addressbook-level3) project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"eugenetangkj"},"content":"**Target user profile:**","lastModifiedDate":"2023-03-02"},{"lineNumber":261,"author":{"gitId":"eugenetangkj"},"content":"Computing Undergraduates","lastModifiedDate":"2023-03-02"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"eugenetangkj"},"content":"**Characteristics of user profile:**","lastModifiedDate":"2023-03-02"},{"lineNumber":264,"author":{"gitId":"eugenetangkj"},"content":"* Has a need to manage many internship applications","lastModifiedDate":"2023-03-02"},{"lineNumber":265,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":266,"author":{"gitId":"eugenetangkj"},"content":"Internships form an integral part of the undergraduate curriculum for Computing Undergraduates. In a technical field","lastModifiedDate":"2023-03-02"},{"lineNumber":267,"author":{"gitId":"eugenetangkj"},"content":"like Computing, it is especially important for undergraduates to practice what they have learnt in classrooms.","lastModifiedDate":"2023-03-02"},{"lineNumber":268,"author":{"gitId":"eugenetangkj"},"content":"However, given the tight competition in the market, many undergraduates source for numerous internship opportunities","lastModifiedDate":"2023-03-02"},{"lineNumber":269,"author":{"gitId":"eugenetangkj"},"content":"before being accepted for one. Therefore, many Computing undergraduates face the need to track many applications","lastModifiedDate":"2023-03-02"},{"lineNumber":270,"author":{"gitId":"eugenetangkj"},"content":"where each could be in a different phase of the application process.","lastModifiedDate":"2023-03-02"},{"lineNumber":271,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":272,"author":{"gitId":"eugenetangkj"},"content":"* Prefers typing to mouse interactions, with good typing speed","lastModifiedDate":"2023-03-02"},{"lineNumber":273,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":274,"author":{"gitId":"eugenetangkj"},"content":"Computing undergraduates have great exposure to computer usage where coding assignments and projects in school require","lastModifiedDate":"2023-03-02"},{"lineNumber":275,"author":{"gitId":"eugenetangkj"},"content":"extensive typing. This justifies a sufficiently good level of proficiency with regard to typing. In fact, with the","lastModifiedDate":"2023-03-02"},{"lineNumber":276,"author":{"gitId":"eugenetangkj"},"content":"existence of keyboard shortcuts, many programmers prefer typing over using the mouse because of the efficiency gains.","lastModifiedDate":"2023-03-02"},{"lineNumber":277,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":278,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":279,"author":{"gitId":"eugenetangkj"},"content":"* Reasonably comfortable in using Command Line Interface (CLI) apps","lastModifiedDate":"2023-03-02"},{"lineNumber":280,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":281,"author":{"gitId":"eugenetangkj"},"content":"CLI provides a simple way to interact with computers to run programs and manage files.","lastModifiedDate":"2023-03-02"},{"lineNumber":282,"author":{"gitId":"eugenetangkj"},"content":"Computing undergraduates are taught how to use the CLI in their curriculums, and are often required to use it","lastModifiedDate":"2023-03-02"},{"lineNumber":283,"author":{"gitId":"eugenetangkj"},"content":"to run system tasks that cannot be done over the GUI. Hence, this would imply a reasonable level of comfort in using","lastModifiedDate":"2023-03-02"},{"lineNumber":284,"author":{"gitId":"eugenetangkj"},"content":"the CLI interface.","lastModifiedDate":"2023-03-02"},{"lineNumber":285,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":286,"author":{"gitId":"eugenetangkj"},"content":"* Prefers desktop applications over other types","lastModifiedDate":"2023-03-02"},{"lineNumber":287,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":288,"author":{"gitId":"eugenetangkj"},"content":"**Value proposition**:","lastModifiedDate":"2023-03-02"},{"lineNumber":289,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":290,"author":{"gitId":"eugenetangkj"},"content":"InternBuddy aims to provide a 1-stop platform for a computing undergraduate to view and","lastModifiedDate":"2023-03-02"},{"lineNumber":291,"author":{"gitId":"eugenetangkj"},"content":"manage his internship applications. Consolidating internship information, the application provides organisational","lastModifiedDate":"2023-03-02"},{"lineNumber":292,"author":{"gitId":"eugenetangkj"},"content":"capabilities for easy tracking and follow-ups while eliminating the need to handle data across multiple platforms.","lastModifiedDate":"2023-03-02"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"| Priority | As a â€¦â€‹                                                                                     | I want to â€¦â€‹                                                     | So that I canâ€¦â€‹                                                                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"kohkaixun"},"content":"|----------|---------------------------------------------------------------------------------------------|------------------------------------------------------------------|-----------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-02"},{"lineNumber":302,"author":{"gitId":"kohkaixun"},"content":"| `* * *`  | Computing undergraduate with many internship applications                                   | list out all the entries                                         | browse through my list of applications.                                                             |","lastModifiedDate":"2023-03-02"},{"lineNumber":303,"author":{"gitId":"kohkaixun"},"content":"| `* * *`  | Computing undergraduate applying for many internships                                       | add a new entry                                                  | manage new applications using InternBuddy.                                                          |","lastModifiedDate":"2023-03-02"},{"lineNumber":304,"author":{"gitId":"kohkaixun"},"content":"| `* * *`  | Computing undergraduate managing many concurrent internship applications                    | add a status to each entry                                       | track the status of each application.                                                               |","lastModifiedDate":"2023-03-02"},{"lineNumber":305,"author":{"gitId":"kohkaixun"},"content":"| `* * *`  | Computing undergraduate who is planning to track internship applications in the long run    | delete entries                                                   | remove outdated or irrelevant entries from InternBuddy.                                             |","lastModifiedDate":"2023-03-02"},{"lineNumber":306,"author":{"gitId":"kohkaixun"},"content":"| `* * *`  | Computing undergraduate who is planning to track internship applications in the long run    | store data                                                       | resume from where I left off in my previous run of InternBuddy.                                     |","lastModifiedDate":"2023-03-02"},{"lineNumber":307,"author":{"gitId":"kohkaixun"},"content":"| `* * *`  | Computing undergraduate who is a new user of InternBuddy                                    | view the list of supported commands                              | refer to it when I am unsure about the usage of InternBuddy.                                        |","lastModifiedDate":"2023-03-02"},{"lineNumber":308,"author":{"gitId":"kohkaixun"},"content":"| `* *`    | meticulous Computing undergraduate                                                          | be notified that InternBuddy is exiting                          | be rest assured that InternBuddy has successfully terminated when I exit it.                        |","lastModifiedDate":"2023-03-02"},{"lineNumber":309,"author":{"gitId":"kohkaixun"},"content":"| `* *`    | careless Computing undergraduate                                                            | modify the details of an entry                                   | correct my typos without having to create a new entry from scratch.                                 |","lastModifiedDate":"2023-03-02"},{"lineNumber":310,"author":{"gitId":"kohkaixun"},"content":"| `* *`    | careless Computing undergraduate                                                            | be prompted with a confirmation message before I delete an entry | avoid accidental deletes.                                                                           |","lastModifiedDate":"2023-03-02"},{"lineNumber":311,"author":{"gitId":"kohkaixun"},"content":"| `* *`    | forgetful Computing undergraduate                                                           | rely on auto-saving of data                                      | avoid the problem of forgetting to save my entries when I make changes to them.                     |","lastModifiedDate":"2023-03-02"},{"lineNumber":312,"author":{"gitId":"kohkaixun"},"content":"| `* *`    | Computing undergraduate applying for technical roles                                        | tag each entry with its associated tech stack                    | identify the technical requirements associated with each application.                               |","lastModifiedDate":"2023-03-02"},{"lineNumber":313,"author":{"gitId":"kohkaixun"},"content":"| `* *`    | Computing undergraduate applying for technical roles                                        | filter internship entries by tags                                | narrow down the search to internship applications with the tech stack that I would like to work on. |","lastModifiedDate":"2023-03-02"},{"lineNumber":314,"author":{"gitId":"kohkaixun"},"content":"| `* *`    | Computing undergraduate with many internship applications                                   | search an entry by name                                          | easily and swiftly locate the desired application entry.                                            |","lastModifiedDate":"2023-03-02"},{"lineNumber":315,"author":{"gitId":"kohkaixun"},"content":"| `* *`    | Computing undergraduate who is not extremely proficient with the command line interface     | have intuitive and simple-to-pick-up commands                    | use InternBuddy without much technical difficulties.                                                |","lastModifiedDate":"2023-03-02"},{"lineNumber":316,"author":{"gitId":"kohkaixun"},"content":"| `* * `   | detail-oriented Computing undergraduate                                                     | add custom remarks to each entry                                 | have the flexibility of documenting miscellaneous but relevant information.                         |","lastModifiedDate":"2023-03-02"},{"lineNumber":317,"author":{"gitId":"kohkaixun"},"content":"| `*`      | Computing undergraduate who is slow in learning                                             | go through a step-by-step in-app tutorial                        | learn how to use InternBuddy in a guided and self-paced environment.                                |","lastModifiedDate":"2023-03-02"},{"lineNumber":318,"author":{"gitId":"kohkaixun"},"content":"| `*`      | Computing undergraduate managing many concurrent internship applications                    | filter internship entries by date                                | identify the upcoming tasks or deadlines.                                                           |","lastModifiedDate":"2023-03-02"},{"lineNumber":319,"author":{"gitId":"kohkaixun"},"content":"| `*`      | Computing undergraduate managing many concurrent internship applications                    | obtain reminders                                                 | avoid forgetting about upcoming tasks or deadlines.                                                 |","lastModifiedDate":"2023-03-02"},{"lineNumber":320,"author":{"gitId":"kohkaixun"},"content":"| `*`      | analytical Computing undergraduate                                                          | have a summary overview of all the entries                       | analyse the composition of the entries, such as what percentage of applications were successful.    |","lastModifiedDate":"2023-03-02"},{"lineNumber":321,"author":{"gitId":"kohkaixun"},"content":"| `*`      | Computing undergraduate who is planning to track internship applications in the long run    | archive old entries                                              | delete them from InternBuddy while maintaining a backup copy of the outdated data.                  |","lastModifiedDate":"2023-03-02"},{"lineNumber":322,"author":{"gitId":"kohkaixun"},"content":"| `*`      | Computing undergraduate who is experienced in using InternBuddy                             | have shortcuts to existing commands                              | carry out tasks in InternBuddy even more efficiently than previously.                               |","lastModifiedDate":"2023-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"kohkaixun"},"content":"(For all use cases below, the **System** is `InternBuddy` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-02"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"kohkaixun"},"content":"**Use case: Add an internship entry**","lastModifiedDate":"2023-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":330,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":332,"author":{"gitId":"kohkaixun"},"content":"1.  User enters internship entry","lastModifiedDate":"2023-03-02"},{"lineNumber":333,"author":{"gitId":"kohkaixun"},"content":"2.  InternBuddy adds an internship entry and displays success message","lastModifiedDate":"2023-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"kohkaixun"},"content":"* 1a.  InternBuddy detects one or more fields are missing.","lastModifiedDate":"2023-03-02"},{"lineNumber":340,"author":{"gitId":"kohkaixun"},"content":"  * 1a1. InternBuddy requests for internship entry with correct format.","lastModifiedDate":"2023-03-02"},{"lineNumber":341,"author":{"gitId":"kohkaixun"},"content":"  * 1a2. User enters corrected internship entry.","lastModifiedDate":"2023-03-02"},{"lineNumber":342,"author":{"gitId":"kohkaixun"},"content":"  * Steps 1a1-1a2 are repeated until the internship entry entered is of the correct format.","lastModifiedDate":"2023-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":" ","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"kohkaixun"},"content":"* 1b.  InternBuddy detects one or more fields have invalid parameters.","lastModifiedDate":"2023-03-02"},{"lineNumber":347,"author":{"gitId":"kohkaixun"},"content":"    * 1b1. InternBuddy requests for internship entry with correct format.","lastModifiedDate":"2023-03-02"},{"lineNumber":348,"author":{"gitId":"kohkaixun"},"content":"    * 1b2. User enters corrected internship entry.","lastModifiedDate":"2023-03-02"},{"lineNumber":349,"author":{"gitId":"kohkaixun"},"content":"    * Steps 1b1-1b2 are repeated until the internship entry entered is of the correct format.","lastModifiedDate":"2023-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":351,"author":{"gitId":"kohkaixun"},"content":"      Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"kohkaixun"},"content":"**Use Case: Edit an internship entry**","lastModifiedDate":"2023-03-02"},{"lineNumber":354,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":355,"author":{"gitId":"kohkaixun"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":357,"author":{"gitId":"kohkaixun"},"content":"1.  User edits an internship entry","lastModifiedDate":"2023-03-02"},{"lineNumber":358,"author":{"gitId":"kohkaixun"},"content":"2.  InternBuddy updates that particular internship entry and displays success message","lastModifiedDate":"2023-03-02"},{"lineNumber":359,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":360,"author":{"gitId":"kohkaixun"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":361,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":362,"author":{"gitId":"kohkaixun"},"content":"**Extensions**","lastModifiedDate":"2023-03-02"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":364,"author":{"gitId":"kohkaixun"},"content":"* 1a. InternBuddy detects missing field.","lastModifiedDate":"2023-03-02"},{"lineNumber":365,"author":{"gitId":"kohkaixun"},"content":"  * 1a1. InternBuddy prompts user for edit command of correct format.","lastModifiedDate":"2023-03-02"},{"lineNumber":366,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":367,"author":{"gitId":"kohkaixun"},"content":"    Use case resumes from Step (1).","lastModifiedDate":"2023-03-02"},{"lineNumber":368,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":369,"author":{"gitId":"kohkaixun"},"content":"* 1b. InternBuddy detects one or more fields has invalid parameters.","lastModifiedDate":"2023-03-02"},{"lineNumber":370,"author":{"gitId":"kohkaixun"},"content":"  * 1b1. InternBuddy prompts user for edit command of correct format.","lastModifiedDate":"2023-03-02"},{"lineNumber":371,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":372,"author":{"gitId":"kohkaixun"},"content":"    Use case resumes from Step (1).","lastModifiedDate":"2023-03-02"},{"lineNumber":373,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":374,"author":{"gitId":"kohkaixun"},"content":"**Use case: Display list of all internship applications on InternBuddy.**","lastModifiedDate":"2023-03-02"},{"lineNumber":375,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":376,"author":{"gitId":"kohkaixun"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":377,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":378,"author":{"gitId":"kohkaixun"},"content":"1.  User requests for the list","lastModifiedDate":"2023-03-02"},{"lineNumber":379,"author":{"gitId":"kohkaixun"},"content":"2.  InternBuddy displays a list of all the internship entries","lastModifiedDate":"2023-03-02"},{"lineNumber":380,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":381,"author":{"gitId":"kohkaixun"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":382,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":383,"author":{"gitId":"kohkaixun"},"content":"**Use case: Exit InternBuddy**","lastModifiedDate":"2023-03-02"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"kohkaixun"},"content":"**MSS**","lastModifiedDate":"2023-03-02"},{"lineNumber":386,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":387,"author":{"gitId":"kohkaixun"},"content":"1.  User requests to exit InternBuddy","lastModifiedDate":"2023-03-02"},{"lineNumber":388,"author":{"gitId":"kohkaixun"},"content":"2.  InternBuddy displays exit message and closes the application","lastModifiedDate":"2023-03-02"},{"lineNumber":389,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":390,"author":{"gitId":"kohkaixun"},"content":"    Use case ends.","lastModifiedDate":"2023-03-02"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"potty10"},"content":"2.  Should be able to hold up to 500 internship entries without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-02"},{"lineNumber":398,"author":{"gitId":"potty10"},"content":"3.  Should be able to respond to user input within 6 seconds.","lastModifiedDate":"2023-03-02"},{"lineNumber":399,"author":{"gitId":"potty10"},"content":"3.  A Computing undergraduate student with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-03-02"},{"lineNumber":400,"author":{"gitId":"potty10"},"content":"4.  Should be easily adopted by most Computing undergraduates students who have never used command line applications to track internships before.","lastModifiedDate":"2023-03-02"},{"lineNumber":401,"author":{"gitId":"eugenetangkj"},"content":"5.  The user guide should be clear enough such that most Computing undergraduates know how to use the core features of InternBuddy after reading the the user guide.","lastModifiedDate":"2023-03-02"},{"lineNumber":402,"author":{"gitId":"potty10"},"content":"6.  The developer guide should be clear enough such that new developers are able to understand how the system is designed, and know how to contribute to the codebase after reading the guide.","lastModifiedDate":"2023-03-02"},{"lineNumber":403,"author":{"gitId":"potty10"},"content":"7.  InternBuddy is not required to handle concurrent users.","lastModifiedDate":"2023-03-02"},{"lineNumber":404,"author":{"gitId":"potty10"},"content":"8.  InternBuddy is not required to make data available online.","lastModifiedDate":"2023-03-02"},{"lineNumber":405,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"eugenetangkj"},"content":"* **Computing undergraduate**: Refers to a university undergraduate pursuing a Computing degree.","lastModifiedDate":"2023-03-02"},{"lineNumber":410,"author":{"gitId":"potty10"},"content":"* **Tech stack**: Refers to a set of technologies that a company uses to create or maintain a software system or product.","lastModifiedDate":"2023-03-02"},{"lineNumber":411,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":415,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":439,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":440,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":441,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":443,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":445,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":446,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":447,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":448,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":452,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":454,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":458,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":460,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":461,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":462,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"eugenetangkj":34,"kohkaixun":70,"potty10":11,"-":347}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"InternBuddy is a **desktop app for Computing undergraduate students to manage their internship applications**.","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"It is **optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"Interface (GUI). If you can type fast, InternBuddy can efficiently track your internship applications.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"2. Download the latest `internbuddy.jar` from [here](https://github.com/AY2223S2-CS2103T-T14-3/tp/releases).","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for InternBuddy.","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar internbuddy.jar`","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"   command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"   open the help window.\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"   * `list` : List All Internship Entries.","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"   * `add n/CompanyXYZ r/Software Engineer s/applied d/2023-03-03` : Adds an entry to track the internship","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"      application for Company XYZ for the role of a Software Engineer.","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"potty10"},"content":"   * `delete 3` : Deletes the 3rd internship entry shown in the current list.","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"potty10"},"content":"  e.g. in `add n/COMPANY_NAME`, `COMPANY_NAME` is a parameter which can be used as `add n/Apple`.","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"  e.g. `edit INDEX [n/NAME]` can be used as `edit 2 n/CompanyXYZ` or as `edit 2`.","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Items with `â€¦`â€‹ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]â€¦â€‹` can be used as `Â ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"potty10"},"content":"  e.g. if the command specifies `n/Apple r/Software Engineer`, `r/Software Engineer n/Apple` is also acceptable.","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"* If a parameter is expected only once in the command, but you specified it multiple times, only the last occurrence of","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"  the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"  e.g. if you specify `r/Front-end Developer r/Back-end Developer`, only `r/Back-end Developer` will be taken.","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, and `exit`) will be","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"  ignored.\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"* For any parameters that refer to a date (such as in `add`, `edit`), they must be specified in the format YYYY-MM-DD\u003cbr\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"  e.g. if the command specifies `edit INDEX [d/DATE]`, then 1 March 2023 should be entered as `2023-03-01` for the","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"  parameter `DATE`.","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"### Listing all internship entries : `list`","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"Shows a list of all internship entries that have been added into InternBuddy.","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"Format: `list`","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"### Adding an internship entry: `add`","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"Adds a new internship entry to the list of existing entries.","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"Format: `add n/COMPANY_NAME r/ROLE s/STATUS d/DATE`","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"- The `STATUS` field  must have one of the following values: `new`, `applied`,","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"  `assessment`, `interview`, `offered` or `rejected`.","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"- The meaning of `DATE` would be interpreted with respect to the value of `STATUS`.","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"| Status       | Interpretation of Date       |","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"|--------------|------------------------------|","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"| `new`        | Deadline of Application      |","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"| `applied`    | Date of Application          |","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"eugenetangkj"},"content":"| `assessment` | Date of Technical Assessment |","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"| `interview`  | Date of Behavioral Interview |","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"| `offered`    | Date of Offer                |","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"eugenetangkj"},"content":"| `rejected`   | Date of Rejection            |","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"* `add n/Apple r/Software Engineer s/new d/2023-02-01` Adds a new internship entry with","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"eugenetangkj"},"content":"  company name `Apple`, role `Software Engineer`, status `new` and deadline","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"eugenetangkj"},"content":"  of application `2023-02-01`.","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"eugenetangkj"},"content":"* `add n/Amazon r/Cloud Architect s/assessment d/2023-02-01` Adds a new internship entry","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"eugenetangkj"},"content":"  with company name `Amazon`, role `Cloud Architect`, status `assessment` and","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"eugenetangkj"},"content":"  date of technical assessment `2023-02-01`.","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"eugenetangkj"},"content":"* `add n/Facebook s/new d/2023-02-01` Displays an error because the role is missing.","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"eugenetangkj"},"content":"### Deleting an internship entry : `delete`","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"eugenetangkj"},"content":"Deletes the specified internship entry from InternBuddy.","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"eugenetangkj"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"eugenetangkj"},"content":"* Deletes the internship entry at the specified `INDEX`.","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"eugenetangkj"},"content":"* The index refers to the index number shown in the displayed internship entries list.","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"eugenetangkj"},"content":"* The index **must be a positive integer** 1, 2, 3, â€¦â€‹","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"eugenetangkj"},"content":"Example:","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"eugenetangkj"},"content":"* `list` followed by `delete 2` deletes the 2nd internship entry in InternBuddy.","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"seadragon2000341"},"content":"### Editing an internship entry : `edit`","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"seadragon2000341"},"content":"Edits an internship entry from the list of existing entries.","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"seadragon2000341"},"content":"Format: `edit INDEX [n/COMPANY_NAME] [r/ROLE] [s/STATUS ] [d/DATE]`","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"seadragon2000341"},"content":"* The internship entry whose entry number is `INDEX` would be updated. `INDEX` needs to be a valid entry number as specified in the internship list displayed using the`list` command. ","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"seadragon2000341"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"seadragon2000341"},"content":"* `STATUS` must have one of the following values: `new`, `applied`, `assessment`, `interview`, `offered` or `rejected`.","lastModifiedDate":"2023-03-01"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"seadragon2000341"},"content":"*  `edit 2 s/assessment r/Software Developer` Sets the status and role of the second internship entry as `assessment` and `Software Developer` respectively.","lastModifiedDate":"2023-03-01"},{"lineNumber":136,"author":{"gitId":"seadragon2000341"},"content":"*  `edit 2` Displays an error because the command does not satisfy the criteria of having at least one optional field.","lastModifiedDate":"2023-03-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"eugenetangkj"},"content":"### Getting Help : `help`","lastModifiedDate":"2023-03-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"eugenetangkj"},"content":"Displays the list of commands supported by InternBuddy.","lastModifiedDate":"2023-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"eugenetangkj"},"content":"Format: `help`","lastModifiedDate":"2023-03-02"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"eugenetangkj"},"content":"InternBuddy data are saved in the hard disk automatically after any command that changes the data.","lastModifiedDate":"2023-03-02"},{"lineNumber":155,"author":{"gitId":"eugenetangkj"},"content":"There is no need to save manually.","lastModifiedDate":"2023-03-02"},{"lineNumber":156,"author":{"gitId":"DerrickSaltFish"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":157,"author":{"gitId":"DerrickSaltFish"},"content":"### Loading the data","lastModifiedDate":"2023-03-02"},{"lineNumber":158,"author":{"gitId":"DerrickSaltFish"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":159,"author":{"gitId":"eugenetangkj"},"content":"InternBuddy data are loaded from the hard disk automatically at the beginning of each run.","lastModifiedDate":"2023-03-02"},{"lineNumber":160,"author":{"gitId":"eugenetangkj"},"content":"There is no need to load manually. If the data file is invalid or missing, InternBuddy will discard all data and start","lastModifiedDate":"2023-03-02"},{"lineNumber":161,"author":{"gitId":"eugenetangkj"},"content":"with an empty data file at the next run.","lastModifiedDate":"2023-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":165,"author":{"gitId":"eugenetangkj"},"content":"InternBuddy data are saved as a JSON file `[JAR file location]/data/internbuddy.json`. Advanced users are welcome to","lastModifiedDate":"2023-03-02"},{"lineNumber":166,"author":{"gitId":"eugenetangkj"},"content":"update the data directly by editing that data file.","lastModifiedDate":"2023-03-02"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":169,"author":{"gitId":"eugenetangkj"},"content":"If your changes to the data file makes its format invalid, InternBuddy will discard all data and start with an empty","lastModifiedDate":"2023-03-02"},{"lineNumber":170,"author":{"gitId":"eugenetangkj"},"content":"data file at the next run.","lastModifiedDate":"2023-03-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"eugenetangkj"},"content":"**A**: Install InternBuddy in the other computer and overwrite the empty data file it creates with the file that","lastModifiedDate":"2023-03-02"},{"lineNumber":179,"author":{"gitId":"eugenetangkj"},"content":"contains the data of your previous InternBuddy home folder.","lastModifiedDate":"2023-03-02"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2023-03-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2023-03-02"},{"lineNumber":186,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2023-03-02"},{"lineNumber":187,"author":{"gitId":"-"},"content":"**List** | `list`","lastModifiedDate":"2023-03-02"},{"lineNumber":188,"author":{"gitId":"eugenetangkj"},"content":"**Add** | `add n/COMPANY_NAME r/ROLE s/STATUS d/DATEâ€‹` \u003cbr\u003e e.g., `add n/Apple r/Software Engineer s/new`","lastModifiedDate":"2023-03-02"},{"lineNumber":189,"author":{"gitId":"eugenetangkj"},"content":"**Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2023-03-02"},{"lineNumber":190,"author":{"gitId":"eugenetangkj"},"content":"**Edit** | `edit INDEX [n/NAME] [r/ROLE] [s/STATUS] [d/DATE]â€‹`\u003cbr\u003e e.g.,`edit 2 s/assessment r/SoftWare Developer`","lastModifiedDate":"2023-03-02"},{"lineNumber":191,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2023-03-02"},{"lineNumber":192,"author":{"gitId":"eugenetangkj"},"content":"**Exit** | `exit`","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"eugenetangkj":71,"potty10":4,"DerrickSaltFish":3,"seadragon2000341":8,"-":106}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"DerrickSaltFish"},"content":"    content: \"InternBuddy\";","lastModifiedDate":"2023-02-24"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"DerrickSaltFish":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"DerrickSaltFish"},"content":"title: InternBuddy","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T14-3/tp/actions)","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103T-T14-3/tp)","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"**InternBuddy is a desktop application for Computing undergraduates to manage and track their internship applications.**","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"* If you are interested in using InternBuddy, head over to the [_Quick Start_ section of the **User Guide**](https://ay2223s2-cs2103t-t14-3.github.io/tp/UserGuide.html#quick-start).","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"* If you are interested about developing InternBuddy, the [**Developer Guide**](https://ay2223s2-cs2103t-t14-3.github.io/tp/DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"eugenetangkj":6,"DerrickSaltFish":1,"-":13}},{"path":"docs/team/derricksaltfish.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"DerrickSaltFish"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"DerrickSaltFish"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"DerrickSaltFish"},"content":"title: Ou Chuhao\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"DerrickSaltFish"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"DerrickSaltFish"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"DerrickSaltFish"},"content":"### Project: InternBuddy","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"DerrickSaltFish"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"DerrickSaltFish"},"content":"InternBuddy provides a 1-stop platform for Computing undergraduates to manage and track their internship applications. It is optimized for typing which Computing undergraduates are comfortable and proficient in, allowing them to fully and efficiently exploit the applicationâ€™s organisational capabilities.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"DerrickSaltFish"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"DerrickSaltFish"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"DerrickSaltFish"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"DerrickSaltFish"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"DerrickSaltFish"},"content":"* **New Feature**: [To be added]","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"DerrickSaltFish"},"content":"* **New Feature**: [To be added]","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"DerrickSaltFish"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"DerrickSaltFish"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dDerrickSaltFish\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"DerrickSaltFish"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"DerrickSaltFish"},"content":"* **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"DerrickSaltFish"},"content":"  * [To be added]","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"DerrickSaltFish"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"DerrickSaltFish"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"DerrickSaltFish"},"content":"  * [To be added]","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"DerrickSaltFish"},"content":"  * [To be added]","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"DerrickSaltFish"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"DerrickSaltFish"},"content":"  * Site-Wide Settings:","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"DerrickSaltFish"},"content":"    * Update site-wide settings in `[JAR file location]\\docs\\_config.yml` and `[JAR file location]\\docs\\index.md`","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"DerrickSaltFish"},"content":"  * User Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"DerrickSaltFish"},"content":"    * Add discription for `exit`, save and load the data in User Guide","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"DerrickSaltFish"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"DerrickSaltFish"},"content":"    * [To be added]","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"DerrickSaltFish"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"DerrickSaltFish"},"content":"* **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"DerrickSaltFish"},"content":"  * Contributed PRs (with non-trivial review comments): [\\#19](https://github.com/AY2223S2-CS2103T-T14-3/tp/pull/19), [\\#28](https://github.com/AY2223S2-CS2103T-T14-3/tp/pull/28)","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"DerrickSaltFish"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"DerrickSaltFish"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"DerrickSaltFish"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"DerrickSaltFish"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"DerrickSaltFish"},"content":"* **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"DerrickSaltFish"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"DerrickSaltFish"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"DerrickSaltFish"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"DerrickSaltFish"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"DerrickSaltFish"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"DerrickSaltFish"},"content":"  \u003cimg width\u003d\"300\" height\u003d\"200\" src\u003d\"../images/team-mascots/InternBuddyArtist.png\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"DerrickSaltFish"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"DerrickSaltFish":45}},{"path":"docs/team/eugenetangkj.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"layout: page","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"title: Eugene Tang\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"## About InternBuddy","lastModifiedDate":"2023-02-21"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"InternBuddy is a one-stop and simple platform for **Computing undergraduates** to manage and keep track of their","lastModifiedDate":"2023-02-21"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"internship applications. It is a desktop application that is optimised for **fast typists** where interactions","lastModifiedDate":"2023-02-21"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"primarily revolve around text input, although it does provide a graphical user interface for users.","lastModifiedDate":"2023-02-21"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"## Project Contributions","lastModifiedDate":"2023-02-21"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"Given below are my contributions to InternBuddy:","lastModifiedDate":"2023-02-21"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"### Role","lastModifiedDate":"2023-02-21"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"**1. UI Lead**","lastModifiedDate":"2023-02-21"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"* Responsible for the aesthetics of InternBuddy","lastModifiedDate":"2023-02-21"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"* Lead UI development with the usage of JavaFX","lastModifiedDate":"2023-02-21"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"**2. Documentation Lead**","lastModifiedDate":"2023-02-21"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"* Oversee the quality and adherence to standards for User and Developer Guides","lastModifiedDate":"2023-02-21"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"* Conduct final checks on the documentation","lastModifiedDate":"2023-02-21"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"### Code Contribution","lastModifiedDate":"2023-02-21"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"_Coming soon_","lastModifiedDate":"2023-02-21"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"### Features and Enhancement","lastModifiedDate":"2023-02-21"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"_Coming Soon_","lastModifiedDate":"2023-02-21"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"### Documentation","lastModifiedDate":"2023-02-21"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"**1. Update README for v1.1** [\\#13](https://github.com/AY2223S2-CS2103T-T14-3/tp/pull/13)","lastModifiedDate":"2023-02-21"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"* Create UI mockup for InternBuddy.","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"* Edit information of README, removing AB3-related content and adding InternBuddy-related content.","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"**2. Draft User Guide for v1.1** (_Coming soon_)","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"* Write the documentation for the `add` command.","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"**3. Draft Developer Guide for v1.1** (_Coming soon_)","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"* Write user stories for InternBuddy.","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"### Code Review","lastModifiedDate":"2023-02-21"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"_Coming soon_","lastModifiedDate":"2023-02-21"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"### Others","lastModifiedDate":"2023-02-21"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"_Coming Soon_","lastModifiedDate":"2023-02-21"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-02-21"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"  \u003cimg width\u003d\"300\" height\u003d\"200\" src\u003d\"../images/team-mascots/InternBuddyArtist.png\"\u003e","lastModifiedDate":"2023-02-21"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-02-21"}],"authorContributionMap":{"eugenetangkj":52}},{"path":"docs/team/kohkaixun.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kohkaixun"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"kohkaixun"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"kohkaixun"},"content":"title: Kai Xun\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"kohkaixun"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"kohkaixun"},"content":"### Project: InternBuddy","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"kohkaixun"},"content":"InternBuddy provides a 1-stop platform for Computing undergraduates to manage and track their internship applications. It is optimized for typing which Computing undergraduates are comfortable and proficient in, allowing them to fully and efficiently exploit the applicationâ€™s organisational capabilities.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"kohkaixun"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"kohkaixun"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"kohkaixun"},"content":"* **New Feature**: [To be added]","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"kohkaixun"},"content":"* **New Feature**: [To be added]","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"kohkaixun"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"kohkaixun"},"content":"* **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"kohkaixun"},"content":"  * [To be added]","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"kohkaixun"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"kohkaixun"},"content":"  * [To be added]","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"kohkaixun"},"content":"  * [To be added]","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"kohkaixun"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"kohkaixun"},"content":"  * User Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"kohkaixun"},"content":"    * [To be added]","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"kohkaixun"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"kohkaixun"},"content":"    * [To be added]","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"kohkaixun"},"content":"* **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"kohkaixun"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"kohkaixun"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"kohkaixun"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"kohkaixun"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"kohkaixun"},"content":"* **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"kohkaixun"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"kohkaixun"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"kohkaixun"},"content":"","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"kohkaixun":41}},{"path":"docs/team/potty10.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"potty10"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"potty10"},"content":"layout: page","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"potty10"},"content":"title: Christopher\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"potty10"},"content":"---","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"potty10"},"content":"### Project: InternBuddy","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"potty10"},"content":"InternBuddy provides a 1-stop platform for Computing undergraduates to manage and track their internship applications. It is optimized for typing which Computing undergraduates are comfortable and proficient in, allowing them to fully and efficiently exploit the applicationâ€™s organisational capabilities.","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"potty10"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"potty10"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"potty10"},"content":"* **New Feature**: [To be added]","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"potty10"},"content":"* **New Feature**: [To be added]","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"potty10"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dpotty10\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"potty10"},"content":"* **Project management**:","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"potty10"},"content":"  * [To be added]","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"potty10"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"potty10"},"content":"  * [To be added]","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"potty10"},"content":"  * [To be added]","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"potty10"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"potty10"},"content":"  * User Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"potty10"},"content":"    * [To be added]","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"potty10"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"potty10"},"content":"    * [To be added]","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"potty10"},"content":"    ","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"potty10"},"content":"* **Community**:","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"potty10"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#20](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"potty10"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"potty10"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"potty10"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"potty10"},"content":"* **Tools**:","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"potty10"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"potty10"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"potty10"},"content":"","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"potty10":40}},{"path":"docs/team/seadragon2000341.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"seadragon2000341"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"seadragon2000341"},"content":"layout: page","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"seadragon2000341"},"content":"title: Shawn\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"seadragon2000341"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"seadragon2000341"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"seadragon2000341"},"content":"### Project: InternBuddy","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"seadragon2000341"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"seadragon2000341"},"content":"InternBuddy provides a 1-stop platform for Computing undergraduates to manage and track their internship applications. It is optimized for typing which Computing undergraduates are comfortable and proficient in, allowing them to fully and efficiently exploit the applicationâ€™s organisational capabilities.","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"seadragon2000341"},"content":"The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"seadragon2000341"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"seadragon2000341"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"seadragon2000341"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"seadragon2000341"},"content":"* **New Feature**: [To be added]","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"seadragon2000341"},"content":"* **New Feature**: [To be added]","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"seadragon2000341"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"seadragon2000341"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dseadragon2000341\u0026breakdown\u003dtrue)","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"seadragon2000341"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"seadragon2000341"},"content":"* **Project management**:","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"seadragon2000341"},"content":"  * [To be added]","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"seadragon2000341"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"seadragon2000341"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"seadragon2000341"},"content":"  * [To be added]","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"seadragon2000341"},"content":"  * [To be added]","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"seadragon2000341"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"seadragon2000341"},"content":"  * User Guide:","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"seadragon2000341"},"content":"    * [To be added]","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"seadragon2000341"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"seadragon2000341"},"content":"    * [To be added]","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"seadragon2000341"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"seadragon2000341"},"content":"* **Community**:","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"seadragon2000341"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"seadragon2000341"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"seadragon2000341"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"seadragon2000341"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"seadragon2000341"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"seadragon2000341"},"content":"* **Tools**:","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"seadragon2000341"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"seadragon2000341"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"seadragon2000341"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"seadragon2000341"},"content":"","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"seadragon2000341":40}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new commandâ€‰â€”â€‰`remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Weâ€™ll assume that you have already set up the development environment as outlined in the Developerâ€™s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Letâ€™s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, letâ€™s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Letâ€™s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, letâ€™s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now letâ€™s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Letâ€™s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now letâ€™s find out what we need to do in order to obtain the Index and String that we need. Letâ€™s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the userâ€™s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Donâ€™t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, letâ€™s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the personâ€™s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"eugenetangkj"},"content":"Create a new `Remark` in `seedu.address.model.internship`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-03-02"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, letâ€™s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, donâ€™t worryâ€‰â€”â€‰we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"Thatâ€™s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external libraryâ€‰â€”â€‰Jackson. Letâ€™s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBookâ€™s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regressionâ€‰â€”â€‰we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs donâ€™t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Letâ€™s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Letâ€™s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, letâ€™s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Letâ€™s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"eugenetangkj":1,"-":400}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Letâ€™s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.internship.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Letâ€™s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. Whatâ€™s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"eugenetangkj":1,"-":111}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"    public static final String MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX \u003d \"The internship index provided is invalid\";","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"    public static final String MESSAGE_INTERNSHIP_LISTED_OVERVIEW \u003d \"%1$d internships listed!\";","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eugenetangkj":2,"-":11}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"    /** Returns an unmodifiable view of the filtered list of internships */","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"    ObservableList\u003cInternship\u003e getFilteredInternshipList();","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"eugenetangkj":3,"-":47}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"    public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"        return model.getFilteredInternshipList();","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"eugenetangkj":3,"-":78}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":" * Adds a person to InternBuddy.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an internship to InternBuddy. \"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"            + PREFIX_COMPANY_NAME + \"COMPANY NAME \"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"            + PREFIX_ROLE + \"ROLE \"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"            + PREFIX_STATUS + \"STATUS \"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"            + PREFIX_DATE + \"DATE \"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"            + PREFIX_COMPANY_NAME + \"Google \"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"            + PREFIX_ROLE + \"Software Engineer \"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"            + PREFIX_STATUS + \"applied \"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"            + PREFIX_DATE + \"2023-02-01 \"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"            + PREFIX_TAG + \"Go \"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"            + PREFIX_TAG + \"Java\";","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New internship added: %1$s\";","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"    public static final String MESSAGE_DUPLICATE_INTERNSHIP \u003d \"This internship already exists in the address book\";","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"    private final Internship toAdd;","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"     * Creates an AddCommand to add the specified {@code Internship}","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"    public AddCommand(Internship internship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"        requireNonNull(internship);","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"        toAdd \u003d internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        if (model.hasInternship(toAdd)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"        model.addInternship(toAdd);","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eugenetangkj":27,"-":40}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"InternBuddy data has been cleared!\";","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eugenetangkj":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":" * Deletes an internship identified using it\u0027s displayed index from InternBuddy.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"            + \": Deletes the internship identified by the index number used in the displayed internship list.\\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"    public static final String MESSAGE_DELETE_INTERNSHIP_SUCCESS \u003d \"Deleted Internship: %1$s\";","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"        List\u003cInternship\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"        Internship internshipToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"        model.deleteInternship(internshipToDelete);","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_INTERNSHIP_SUCCESS, internshipToDelete));","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eugenetangkj":9,"-":44}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_INTERNSHIPS;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Date;","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Role;","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Status;","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":" * Edits the details of an existing internship in the address book.","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the internship identified \"","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"            + \"by the index number used in the displayed internship list. \"","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"            + \"[\" + PREFIX_COMPANY_NAME + \"NAME] \"","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"            + \"[\" + PREFIX_ROLE + \"ROLE] \"","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"            + \"[\" + PREFIX_STATUS + \"STATUS] \"","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"            + \"[\" + PREFIX_DATE + \"DATE] \"","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"            + PREFIX_ROLE + \"Backend Engineer \"","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"            + PREFIX_STATUS + \"interview\";","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"    public static final String MESSAGE_EDIT_INTERNSHIP_SUCCESS \u003d \"Edited Internship: %1$s\";","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"    public static final String MESSAGE_DUPLICATE_INTERNSHIP \u003d \"This internship already exists in the address book.\";","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"    private final EditInternshipDescriptor editInternshipDescriptor;","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"     * @param index of the internship in the filtered internship list to edit","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"     * @param editInternshipDescriptor details to edit the internship with","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"    public EditCommand(Index index, EditInternshipDescriptor editInternshipDescriptor) {","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"        requireNonNull(editInternshipDescriptor);","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"        this.editInternshipDescriptor \u003d new EditInternshipDescriptor(editInternshipDescriptor);","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"        List\u003cInternship\u003e lastShownList \u003d model.getFilteredInternshipList();","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"        Internship internshipToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"        Internship editedInternship \u003d createEditedInternship(internshipToEdit, editInternshipDescriptor);","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"        if (!internshipToEdit.isSameInternship(editedInternship) \u0026\u0026 model.hasInternship(editedInternship)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"        model.setInternship(internshipToEdit, editedInternship);","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"        model.updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_INTERNSHIP_SUCCESS, editedInternship));","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"     * Creates and returns a {@code Internship} with the details of {@code internshipToEdit}","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"     * edited with {@code editInternshipDescriptor}.","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"    private static Internship createEditedInternship(Internship internshipToEdit,","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"            EditInternshipDescriptor editInternshipDescriptor) {","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"eugenetangkj"},"content":"        assert internshipToEdit !\u003d null;","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"        CompanyName updatedCompanyName \u003d editInternshipDescriptor.getCompanyName()","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"                .orElse(internshipToEdit.getCompanyName());","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"eugenetangkj"},"content":"        Role updatedRole \u003d editInternshipDescriptor.getRole().orElse(internshipToEdit.getRole());","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"eugenetangkj"},"content":"        Status updatedStatus \u003d editInternshipDescriptor.getStatus().orElse(internshipToEdit.getStatus());","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"eugenetangkj"},"content":"        Date updatedDate \u003d editInternshipDescriptor.getDate().orElse(internshipToEdit.getDate());","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"        Set\u003cTag\u003e updatedTags \u003d editInternshipDescriptor.getTags().orElse(internshipToEdit.getTags());","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"eugenetangkj"},"content":"        return new Internship(updatedCompanyName, updatedRole, updatedStatus, updatedDate, updatedTags);","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"eugenetangkj"},"content":"                \u0026\u0026 editInternshipDescriptor.equals(e.editInternshipDescriptor);","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"eugenetangkj"},"content":"     * Stores the details to edit the internship with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"eugenetangkj"},"content":"     * corresponding field value of the internship.","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"eugenetangkj"},"content":"    public static class EditInternshipDescriptor {","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"eugenetangkj"},"content":"        private CompanyName companyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"eugenetangkj"},"content":"        private Role role;","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"eugenetangkj"},"content":"        private Status status;","lastModifiedDate":"2023-03-01"},{"lineNumber":133,"author":{"gitId":"eugenetangkj"},"content":"        private Date date;","lastModifiedDate":"2023-03-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"eugenetangkj"},"content":"        public EditInternshipDescriptor() {}","lastModifiedDate":"2023-03-01"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"eugenetangkj"},"content":"        public EditInternshipDescriptor(EditInternshipDescriptor toCopy) {","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"eugenetangkj"},"content":"            setCompanyName(toCopy.companyName);","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"eugenetangkj"},"content":"            setRole(toCopy.role);","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"eugenetangkj"},"content":"            setStatus(toCopy.status);","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"eugenetangkj"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2023-03-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"eugenetangkj"},"content":"            return CollectionUtil.isAnyNonNull(companyName, role, status, date, tags);","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"eugenetangkj"},"content":"        public void setCompanyName(CompanyName companyName) {","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"eugenetangkj"},"content":"            this.companyName \u003d companyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"eugenetangkj"},"content":"        public Optional\u003cCompanyName\u003e getCompanyName() {","lastModifiedDate":"2023-03-01"},{"lineNumber":162,"author":{"gitId":"eugenetangkj"},"content":"            return Optional.ofNullable(companyName);","lastModifiedDate":"2023-03-01"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"eugenetangkj"},"content":"        public void setRole(Role role) {","lastModifiedDate":"2023-03-01"},{"lineNumber":166,"author":{"gitId":"eugenetangkj"},"content":"            this.role \u003d role;","lastModifiedDate":"2023-03-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"eugenetangkj"},"content":"        public Optional\u003cRole\u003e getRole() {","lastModifiedDate":"2023-03-01"},{"lineNumber":170,"author":{"gitId":"eugenetangkj"},"content":"            return Optional.ofNullable(role);","lastModifiedDate":"2023-03-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":174,"author":{"gitId":"eugenetangkj"},"content":"        public void setStatus(Status status) {","lastModifiedDate":"2023-03-01"},{"lineNumber":175,"author":{"gitId":"eugenetangkj"},"content":"            this.status \u003d status;","lastModifiedDate":"2023-03-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"eugenetangkj"},"content":"        public Optional\u003cStatus\u003e getStatus() {","lastModifiedDate":"2023-03-01"},{"lineNumber":179,"author":{"gitId":"eugenetangkj"},"content":"            return Optional.ofNullable(status);","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"eugenetangkj"},"content":"        public void setDate(Date date) {","lastModifiedDate":"2023-03-01"},{"lineNumber":183,"author":{"gitId":"eugenetangkj"},"content":"            this.date \u003d date;","lastModifiedDate":"2023-03-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"eugenetangkj"},"content":"        public Optional\u003cDate\u003e getDate() {","lastModifiedDate":"2023-03-01"},{"lineNumber":187,"author":{"gitId":"eugenetangkj"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2023-03-01"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"eugenetangkj"},"content":"            if (!(other instanceof EditInternshipDescriptor)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"eugenetangkj"},"content":"            EditInternshipDescriptor e \u003d (EditInternshipDescriptor) other;","lastModifiedDate":"2023-03-01"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"eugenetangkj"},"content":"            return getCompanyName().equals(e.getCompanyName())","lastModifiedDate":"2023-03-01"},{"lineNumber":223,"author":{"gitId":"eugenetangkj"},"content":"                    \u0026\u0026 getRole().equals(e.getRole())","lastModifiedDate":"2023-03-01"},{"lineNumber":224,"author":{"gitId":"eugenetangkj"},"content":"                    \u0026\u0026 getStatus().equals(e.getStatus())","lastModifiedDate":"2023-03-01"},{"lineNumber":225,"author":{"gitId":"eugenetangkj"},"content":"                    \u0026\u0026 getDate().equals(e.getDate())","lastModifiedDate":"2023-03-01"},{"lineNumber":226,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"eugenetangkj":86,"-":143}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.CompanyNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all internships whose company names contain any\"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"            + \" of the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"            + \"Example: \" + COMMAND_WORD + \" apple google facebook\";","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    private final CompanyNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    public FindCommand(CompanyNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"        model.updateFilteredInternshipList(predicate);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"                String.format(Messages.MESSAGE_INTERNSHIP_LISTED_OVERVIEW, model.getFilteredInternshipList().size()));","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"eugenetangkj":9,"-":33}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_INTERNSHIPS;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all internships\";","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"        model.updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"eugenetangkj":3,"-":21}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Date;","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Role;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Status;","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_COMPANY_NAME, PREFIX_ROLE, PREFIX_STATUS, PREFIX_DATE,","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_COMPANY_NAME, PREFIX_ROLE, PREFIX_STATUS, PREFIX_DATE)","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"        CompanyName companyName \u003d ParserUtil.parseCompanyName(argMultimap.getValue(PREFIX_COMPANY_NAME).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"        Role role \u003d ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"        Status status \u003d ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"        Date date \u003d ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get());","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"        Internship internship \u003d new Internship(companyName, role, status, date, tagList);","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"        return new AddCommand(internship);","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"eugenetangkj":18,"-":43}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"    public static final Prefix PREFIX_COMPANY_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"    public static final Prefix PREFIX_ROLE \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"    public static final Prefix PREFIX_STATUS \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"eugenetangkj":4,"-":11}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_COMPANY_NAME, PREFIX_STATUS, PREFIX_ROLE, PREFIX_DATE,","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"                        PREFIX_TAG);","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"        EditInternshipDescriptor editInternshipDescriptor \u003d new EditCommand.EditInternshipDescriptor();","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"        if (argMultimap.getValue(PREFIX_COMPANY_NAME).isPresent()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"            editInternshipDescriptor.setCompanyName(ParserUtil.parseCompanyName(argMultimap.getValue(","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"                    PREFIX_COMPANY_NAME).get()));","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        if (argMultimap.getValue(PREFIX_ROLE).isPresent()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"            editInternshipDescriptor.setRole(ParserUtil.parseRole(argMultimap.getValue(PREFIX_ROLE).get()));","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"        if (argMultimap.getValue(PREFIX_STATUS).isPresent()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"            editInternshipDescriptor.setStatus(ParserUtil.parseStatus(argMultimap.getValue(PREFIX_STATUS).get()));","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"        if (argMultimap.getValue(PREFIX_DATE).isPresent()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"            editInternshipDescriptor.setDate(ParserUtil.parseDate(argMultimap.getValue(PREFIX_DATE).get()));","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editInternshipDescriptor::setTags);","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"        if (!editInternshipDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"        return new EditCommand(index, editInternshipDescriptor);","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"eugenetangkj":20,"-":64}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.CompanyNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"        return new FindCommand(new CompanyNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"eugenetangkj":2,"-":31}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Date;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Role;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Status;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"     * Parses a {@code String companyName} into a {@code CompanyName}.","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"     * @throws ParseException if the given {@code companyName} is invalid.","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"    public static CompanyName parseCompanyName(String companyName) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"        requireNonNull(companyName);","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"        String trimmedName \u003d companyName.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"        if (!CompanyName.isValidCompanyName(trimmedName)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"            throw new ParseException(CompanyName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"        return new CompanyName(trimmedName);","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"    public static Role parseRole(String role) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"        requireNonNull(role);","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"        String trimmedRole \u003d role.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"        if (!Role.isValidRole(trimmedRole)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"            throw new ParseException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"        return new Role(trimmedRole);","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"     * Parses a {@code String status} into a {@code Status}.","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"     * @throws ParseException if the given {@code status} is invalid.","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"    public static Status parseStatus(String status) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"        String trimmedStatus \u003d status.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"        if (!Status.isValidStatus(trimmedStatus)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"            throw new ParseException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"        return new Status(trimmedStatus);","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"eugenetangkj":32,"-":92}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.UniqueInternshipList;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":" * Duplicates are not allowed (by .isSameInternship comparison)","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    private final UniqueInternshipList internships;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"        internships \u003d new UniqueInternshipList();","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"     * Creates an AddressBook using the Internships in the {@code toBeCopied}","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"     * Replaces the contents of the Internship list with {@code internships}.","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"     * {@code internships} must not contain duplicate internships.","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"    public void setInternships(List\u003cInternship\u003e internships) {","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"        this.internships.setInternships(internships);","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"        setInternships(newData.getInternshipList());","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"    //// internship-level operations","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"     * Returns true if an internship with the same identity as {@code internship} exists in the address book.","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"    public boolean hasInternship(Internship internship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"        requireNonNull(internship);","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"        return internships.contains(internship);","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"     * Adds an internship to the address book.","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"     * The internship must not already exist in the address book.","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"    public void addInternship(Internship p) {","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"        internships.add(p);","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"     * Replaces the given internship {@code target} in the list with {@code editedInternship}.","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"     * The internship identity of {@code editedInternship} must not be the same as another existing internship","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"     * in the address book.","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"        requireNonNull(editedInternship);","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"        internships.setInternship(target, editedInternship);","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"    public void removeInternship(Internship key) {","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"        internships.remove(key);","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"eugenetangkj"},"content":"        return internships.asUnmodifiableObservableList().size() + \" internships\";","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"eugenetangkj"},"content":"    public ObservableList\u003cInternship\u003e getInternshipList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"eugenetangkj"},"content":"        return internships.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"eugenetangkj"},"content":"                \u0026\u0026 internships.equals(((AddressBook) other).internships));","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"eugenetangkj"},"content":"        return internships.hashCode();","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eugenetangkj":33,"-":88}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    Predicate\u003cInternship\u003e PREDICATE_SHOW_ALL_INTERNSHIPS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"     * Returns true if an internship with the same identity as {@code Internship} exists in InternBuddy.","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"    boolean hasInternship(Internship internship);","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"     * Deletes the given internship.","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"     * The internship must exist in the address book.","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"    void deleteInternship(Internship target);","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"     * Adds the given internship.","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"     * {@code internship} must not already exist in InternBuddy.","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"    void addInternship(Internship internship);","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"     * Replaces the given internship {@code target} with {@code editedInternship}.","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"     * {@code target} must exist in InternBuddy.","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"     * The internship identity of {@code editedInternship} must not be the same as another existing internship in","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"     * the address book.","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"     * @param target The given internship to be replaced.","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"     * @param editedInternship The internship to replace the original one.","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"    void setInternship(Internship target, Internship editedInternship);","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"    /** Returns an unmodifiable view of the filtered internship list */","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"    ObservableList\u003cInternship\u003e getFilteredInternshipList();","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"     * Updates the filter of the filtered internship list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"    void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate);","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"eugenetangkj":22,"-":69}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    private final FilteredList\u003cInternship\u003e filteredInternships;","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"        filteredInternships \u003d new FilteredList\u003c\u003e(this.addressBook.getInternshipList());","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"    public boolean hasInternship(Internship internship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"        requireNonNull(internship);","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"        return addressBook.hasInternship(internship);","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"    public void deleteInternship(Internship target) {","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"        addressBook.removeInternship(target);","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"    public void addInternship(Internship internship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"eugenetangkj"},"content":"        addressBook.addInternship(internship);","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"eugenetangkj"},"content":"        updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":108,"author":{"gitId":"eugenetangkj"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"eugenetangkj"},"content":"        requireAllNonNull(target, editedInternship);","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"eugenetangkj"},"content":"        addressBook.setInternship(target, editedInternship);","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":114,"author":{"gitId":"eugenetangkj"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Internship List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":117,"author":{"gitId":"eugenetangkj"},"content":"     * Returns an unmodifiable view of the list of {@code Internship} backed by the internal list of","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"eugenetangkj"},"content":"    public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"eugenetangkj"},"content":"        return filteredInternships;","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"eugenetangkj"},"content":"    public void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate) {","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"eugenetangkj"},"content":"        filteredInternships.setPredicate(predicate);","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"eugenetangkj"},"content":"                \u0026\u0026 filteredInternships.equals(other.filteredInternships);","lastModifiedDate":"2023-03-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eugenetangkj":21,"-":129}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"     * Returns an unmodifiable view of the internships list.","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"     * This list will not contain any duplicate internships","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    ObservableList\u003cInternship\u003e getInternshipList();","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eugenetangkj":4,"-":13}},{"path":"src/main/java/seedu/address/model/internship/CompanyName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":" * Represents an Internship\u0027s company name in InternBuddy","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidCompanyName(String)}","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"public class CompanyName {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"            \"Company names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"    /*","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    public final String fullCompanyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a {@code CompanyName}.","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"     * @param companyName A valid company name.","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"    public CompanyName(String companyName) {","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"        requireNonNull(companyName);","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"        checkArgument(isValidCompanyName(companyName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"        fullCompanyName \u003d companyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"     * @param test The regex to test for a valid name.","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if the given input String is a valid company name","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"    public static boolean isValidCompanyName(String test) {","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"     * Returns the String representation of the company name.","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"     * @return a string corresponding to the company name.","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"    public String toString() {","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"        return fullCompanyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"     * Determines if an object is equal to the current Internship object.","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"     * @param other The other object to be compared with.","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if the object is equal to the current Internship entry, and false otherwise.","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"                || (other instanceof CompanyName // instanceof handles nulls","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"                \u0026\u0026 fullCompanyName.equals(((CompanyName) other).fullCompanyName)); // state check","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"     * Generates the hashcode for the company\u0027s name.","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"     * @return the hash code representing the company name.","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"        return fullCompanyName.hashCode();","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"eugenetangkj":78}},{"path":"src/main/java/seedu/address/model/internship/CompanyNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":" * Tests that a {@code Internship}\u0027s {@code CompanyName} matches any of the keywords given.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"public class CompanyNameContainsKeywordsPredicate implements Predicate\u003cInternship\u003e {","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a {@code CompanyNameContainsKeywordsPredicate} instance.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"     * @param keywords The keywords to check for in the Internship\u0027s company name.","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"    public CompanyNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"     * Tests if an Internship\u0027s company name matches any of the keywords.","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"     * @param internship the input Internship whose name will be checked.","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if there is a match with any of the keyword, else false.","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"    public boolean test(Internship internship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"                        internship.getCompanyName().fullCompanyName, keyword));","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"     * Determines if an object is equal to the current {@code CompanyNameContainsKeywordsPredicate} instance.","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"     * @param other The other object to compare with","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if both are {@code CompanyNameContainsKeywordsPredicate} instances with the same set","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"     *         of keywords to check for.","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"                || (other instanceof CompanyNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"                \u0026\u0026 keywords.equals(((CompanyNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"eugenetangkj":50}},{"path":"src/main/java/seedu/address/model/internship/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"seadragon2000341"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"seadragon2000341"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":" * Represents an Internship\u0027s date in InternBuddy. The date is associated with the status of the Internship.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":" * For example, if the Internship\u0027s status is ASSESSMENT, then the date will be inferred as the date of assessment.","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"public class Date {","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{4}-\\\\d{2}-\\\\d{2}$\";","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"seadragon2000341"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Date should be of the format yyyy-MM-dd and be a valid date\";","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"    public final String fullDate;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs an {@code Date}.","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"     * @param date A valid date;","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"    public Date(String date) {","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"        checkArgument(isValidDate(date), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"        fullDate \u003d date;","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"     * Returns if a given string is a valid date.","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"     * @returns true if a given string is a valid date string, else returns false.","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"seadragon2000341"},"content":"        if (!test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"seadragon2000341"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"seadragon2000341"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"seadragon2000341"},"content":"        SimpleDateFormat df \u003d new SimpleDateFormat(\"yyyy-MM-dd\");","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"seadragon2000341"},"content":"        df.setLenient(false);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"seadragon2000341"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"seadragon2000341"},"content":"            df.parse(test);","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"seadragon2000341"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"seadragon2000341"},"content":"        } catch (Exception ex) {","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"seadragon2000341"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"seadragon2000341"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"     * Returns a String representation for the Date.","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"     * @returns a string representing the date.","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"    public String toString() {","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"        return fullDate;","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"     * Determines if another object is equal to the current {@code Date} object.","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if the other object is a {@code Date} object with the same date string.","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"                \u0026\u0026 fullDate.equals(((Date) other).fullDate)); // state check","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the hashcode for the date represented by this {@code Date} object.","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"     * @return the hashcode for this {@code Date} object.","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"        return fullDate.hashCode();","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"eugenetangkj":69,"seadragon2000341":14}},{"path":"src/main/java/seedu/address/model/internship/Internship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":" * Represents an Internship in InternBuddy.","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"public class Internship {","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"    // Identity fields","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"    private final CompanyName companyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    private final Role role;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    // Data fields","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    private final Status status;","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"    private final Date date;","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs an Internship instance where every field must be present and not null.","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"     * @param companyName The name of the company associated with the Internship.","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"     * @param role The role or job position associated with the Internship.","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"     * @param status The status of the Internship application.","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"     * @param tags The set of tags associated with the Internship.","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"    public Internship(CompanyName companyName, Role role, Status status, Date date, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        requireAllNonNull(companyName, role, status, date, tags);","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"        this.companyName \u003d companyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"        this.role \u003d role;","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the company name for the Internship entry.","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"     * @return the company name associated with the Internship entry.","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"    public CompanyName getCompanyName() {","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        return companyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the role for the Internship entry.","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"     * @return the role associated with the Internship entry.","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"    public Role getRole() {","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"        return role;","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the status for the Internship entry.","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"     * @return the status associated with the Internship entry.","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"    public Status getStatus() {","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"        return status;","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the date for the Internship entry.","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"     * @return the date associated with the Internship entry.","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"    public Date getDate() {","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"        return date;","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"     * @return the set of tags associated with this Internship.","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"     * Returns true if both Internships have the same company name.","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"     * This defines a weaker notion of equality between two Internships","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"     * @param otherInternship The Internship to compare with.","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if both Internships have the same company name.","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"    public boolean isSameInternship(Internship otherInternship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"eugenetangkj"},"content":"        if (otherInternship \u003d\u003d this) {","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"eugenetangkj"},"content":"            return true;","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"eugenetangkj"},"content":"        return otherInternship !\u003d null","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"eugenetangkj"},"content":"                \u0026\u0026 otherInternship.getCompanyName().equals(getCompanyName());","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"eugenetangkj"},"content":"     * Returns true if both internships have the same identity and data fields.","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"eugenetangkj"},"content":"     * This defines a stronger notion of equality between two Internships.","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"eugenetangkj"},"content":"     * @param other The other Internship to compare with.","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if both internships have the same identity and data fields.","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"eugenetangkj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"eugenetangkj"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"eugenetangkj"},"content":"            return true;","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"eugenetangkj"},"content":"        if (!(other instanceof Internship)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"eugenetangkj"},"content":"            return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"eugenetangkj"},"content":"        Internship otherPerson \u003d (Internship) other;","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"eugenetangkj"},"content":"        return otherPerson.getCompanyName().equals(getCompanyName())","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"eugenetangkj"},"content":"                \u0026\u0026 otherPerson.getRole().equals(getRole())","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"eugenetangkj"},"content":"                \u0026\u0026 otherPerson.getStatus().equals(getStatus())","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"eugenetangkj"},"content":"                \u0026\u0026 otherPerson.getDate().equals(getDate())","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"eugenetangkj"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":133,"author":{"gitId":"eugenetangkj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-01"},{"lineNumber":134,"author":{"gitId":"eugenetangkj"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-01"},{"lineNumber":135,"author":{"gitId":"eugenetangkj"},"content":"        return Objects.hash(companyName, role, status, date, tags);","lastModifiedDate":"2023-03-01"},{"lineNumber":136,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":137,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":138,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":139,"author":{"gitId":"eugenetangkj"},"content":"    public String toString() {","lastModifiedDate":"2023-03-01"},{"lineNumber":140,"author":{"gitId":"eugenetangkj"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-01"},{"lineNumber":141,"author":{"gitId":"eugenetangkj"},"content":"        builder.append(getCompanyName())","lastModifiedDate":"2023-03-01"},{"lineNumber":142,"author":{"gitId":"eugenetangkj"},"content":"                .append(\"; Role: \")","lastModifiedDate":"2023-03-01"},{"lineNumber":143,"author":{"gitId":"eugenetangkj"},"content":"                .append(getRole())","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"eugenetangkj"},"content":"                .append(\"; Status: \")","lastModifiedDate":"2023-03-01"},{"lineNumber":145,"author":{"gitId":"eugenetangkj"},"content":"                .append(getStatus())","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"eugenetangkj"},"content":"                .append(\"; Date: \")","lastModifiedDate":"2023-03-01"},{"lineNumber":147,"author":{"gitId":"eugenetangkj"},"content":"                .append(getDate());","lastModifiedDate":"2023-03-01"},{"lineNumber":148,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":149,"author":{"gitId":"eugenetangkj"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-01"},{"lineNumber":150,"author":{"gitId":"eugenetangkj"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":151,"author":{"gitId":"eugenetangkj"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-01"},{"lineNumber":152,"author":{"gitId":"eugenetangkj"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-01"},{"lineNumber":153,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":154,"author":{"gitId":"eugenetangkj"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":156,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"eugenetangkj":157}},{"path":"src/main/java/seedu/address/model/internship/Role.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":" * Represents an Internship\u0027s role in InternBuddy.","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRole(String)}","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"public class Role {","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"            \"Roles should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    /*","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"     * The first character of the role must not be a whitespace,","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    public final String fullRole;","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a {@code Role}.","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"     * @param role A valid role to be associated with an Internship.","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    public Role(String role) {","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"        requireNonNull(role);","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"        checkArgument(isValidRole(role), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"        this.fullRole \u003d role;","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"     * Returns true if a given string is a valid role.","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"     * @param test The string to test against the regex.","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if the given string corresponds to a valid string for a role, else returns false.","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"    public static boolean isValidRole(String test) {","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"     * Returns the String representation of the Role.","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"     * @return a String representing the role.","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"    public String toString() {","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"        return fullRole;","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"     * Determines if another object is equal to this Role object.","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if the other object is a Role object with the same role string.","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"                || (other instanceof Role // instanceof handles nulls","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"                \u0026\u0026 fullRole.equals(((Role) other).fullRole)); // state check","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the hash code of the Role object.","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"     * @return the hash code for the role represented by the Role object.","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"        return fullRole.hashCode();","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"eugenetangkj":78}},{"path":"src/main/java/seedu/address/model/internship/Status.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":" * Represents an Internship\u0027s status in InternBuddy","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidStatus(String)}","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"public class Status {","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"            \"Status should only be one of the following: new, applied, assessment, interview, offered or rejected. It\"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"                    + \" should not be blank too.\";","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    //A set of valid statuses","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    public static final List\u003cString\u003e LISTOFVALIDSTATUSES \u003d","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"            Arrays.asList(\"new\", \"applied\", \"assessment\", \"interview\", \"offered\", \"rejected\");","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    public static final HashSet\u003cString\u003e SETOFVALIDSTATUSES \u003d new HashSet\u003cString\u003e(LISTOFVALIDSTATUSES);","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"    public final String fullStatus;","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a {@code Status}.","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"     * @param status A valid status to be associated with an Internship.","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"    public Status(String status) {","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"        requireNonNull(status);","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"seadragon2000341"},"content":"        status \u003d status.toLowerCase();","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"        checkArgument(isValidStatus(status), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"        this.fullStatus \u003d status;","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"     * Returns true if a given string is a valid status","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"     * @param test The string to check for.","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if the given string corresponds to a valid string for a role, else returns false.","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"     * @throws NullPointerException if a null status is passed in","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"    public static boolean isValidStatus(String test) {","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"            throw new NullPointerException();","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"seadragon2000341"},"content":"        return SETOFVALIDSTATUSES.contains(test.toLowerCase());","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"     * Returns the String representation of the Role.","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"     * @return a String representing the role.","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"    public String toString() {","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"seadragon2000341"},"content":"        return fullStatus.substring(0, 1).toUpperCase() + fullStatus.substring(1);","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"     * Determines if another object is equal to this Status object.","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"     * @param other The other object to compare with.","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"     * @return true if the other object is a Status object with the same status string.","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"                || (other instanceof Status // instanceof handles nulls","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"                \u0026\u0026 fullStatus.equals(((Status) other).fullStatus)); // state check","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"     * Gets the hash code of the Status object.","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"     * @return the hash code for the status represented by the Status object.","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"        return fullStatus.hashCode();","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"eugenetangkj":85,"seadragon2000341":3}},{"path":"src/main/java/seedu/address/model/internship/UniqueInternshipList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.exceptions.DuplicateInternshipException;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.exceptions.InternshipNotFoundException;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":" * A list of Internships that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":" * An Internship is considered unique by comparing using {@code Internship#isSameInternship(Internship)}. As such,","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":" * adding and updating of internships uses Internship#isSameInternship(Internship) for equality to ensure that the","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":" * internship being added or updated is unique in terms of identity in the UniqueInternshipList. However, the removal","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":" * of an internship uses Internship#equals(Object) so to ensure that an Internship with exactly the same fields will be","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":" * removed.","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":" *","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":" *","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":" * @see Internship#isSameInternship(Internship)","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"public class UniqueInternshipList implements Iterable\u003cInternship\u003e {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"    private final ObservableList\u003cInternship\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    private final ObservableList\u003cInternship\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"     * Returns true if the list contains an equivalent internship as the given argument.","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"    public boolean contains(Internship toCheck) {","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        return internalList.stream().anyMatch(toCheck::isSameInternship);","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"     * Adds an internship to the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"     * The internship must not already exist in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"    public void add(Internship toAdd) {","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"     * Replaces the internship {@code target} in the list with {@code editedInternship}.","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"     * The internship identity of {@code editedInternship} must not be the same as another existing internship in","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"     * the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"    public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"        requireAllNonNull(target, editedInternship);","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"            throw new InternshipNotFoundException();","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"        if (!target.isSameInternship(editedInternship) \u0026\u0026 contains(editedInternship)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"        internalList.set(index, editedInternship);","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"     * Removes the equivalent internship from the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"     * The internship must exist in the list.","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"    public void remove(Internship toRemove) {","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"            throw new InternshipNotFoundException();","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"    public void setInternships(UniqueInternshipList replacement) {","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"     * Replaces the contents of this list with {@code internships}.","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"     * {@code internships} must not contain duplicate internships","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"    public void setInternships(List\u003cInternship\u003e internships) {","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"        requireAllNonNull(internships);","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"        if (!internshipsAreUnique(internships)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"eugenetangkj"},"content":"            throw new DuplicateInternshipException();","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"eugenetangkj"},"content":"        internalList.setAll(internships);","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"eugenetangkj"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"eugenetangkj"},"content":"    public ObservableList\u003cInternship\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"eugenetangkj"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":110,"author":{"gitId":"eugenetangkj"},"content":"    public Iterator\u003cInternship\u003e iterator() {","lastModifiedDate":"2023-03-01"},{"lineNumber":111,"author":{"gitId":"eugenetangkj"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"eugenetangkj"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-01"},{"lineNumber":116,"author":{"gitId":"eugenetangkj"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"eugenetangkj"},"content":"                || (other instanceof UniqueInternshipList // instanceof handles nulls","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"eugenetangkj"},"content":"                        \u0026\u0026 internalList.equals(((UniqueInternshipList) other).internalList));","lastModifiedDate":"2023-03-01"},{"lineNumber":119,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":120,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"eugenetangkj"},"content":"    @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":122,"author":{"gitId":"eugenetangkj"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"eugenetangkj"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":126,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"eugenetangkj"},"content":"     * Returns true if {@code internships} contains only unique internships.","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"eugenetangkj"},"content":"    private boolean internshipsAreUnique(List\u003cInternship\u003e internships) {","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"eugenetangkj"},"content":"        for (int i \u003d 0; i \u003c internships.size() - 1; i++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":131,"author":{"gitId":"eugenetangkj"},"content":"            for (int j \u003d i + 1; j \u003c internships.size(); j++) {","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"eugenetangkj"},"content":"                if (internships.get(i).isSameInternship(internships.get(j))) {","lastModifiedDate":"2023-03-01"},{"lineNumber":133,"author":{"gitId":"eugenetangkj"},"content":"                    return false;","lastModifiedDate":"2023-03-01"},{"lineNumber":134,"author":{"gitId":"eugenetangkj"},"content":"                }","lastModifiedDate":"2023-03-01"},{"lineNumber":135,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":136,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":137,"author":{"gitId":"eugenetangkj"},"content":"        return true;","lastModifiedDate":"2023-03-01"},{"lineNumber":138,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":139,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"eugenetangkj":139}},{"path":"src/main/java/seedu/address/model/internship/exceptions/DuplicateInternshipException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.model.internship.exceptions;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":" * Signals that the operation will result in duplicate Internships (Internships are considered duplicates if they have","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":" * the same identity).","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"public class DuplicateInternshipException extends RuntimeException {","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"    public DuplicateInternshipException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"        super(\"Operation would result in duplicate internships.\");","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"eugenetangkj":11}},{"path":"src/main/java/seedu/address/model/internship/exceptions/InternshipNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.model.internship.exceptions;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":" * Signals that the operation is unable to find the specified internship","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"public class InternshipNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"eugenetangkj":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Date;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Role;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Status;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    public static Internship[] getSampleInternships() {","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"        return new Internship[] {","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"            new Internship(new CompanyName(\"Apple\"), new Role(\"iOS Developer\"), new Status(\"applied\"),","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"                new Date(\"2023-02-01\"), getTagSet(\"front\")),","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"            new Internship(new CompanyName(\"Amazon\"), new Role(\"Cloud Architect\"), new Status(\"new\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"                new Date(\"2023-02-02\"), getTagSet(\"aws\", \"cloud services\")),","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"            new Internship(new CompanyName(\"Google\"), new Role(\"Software Engineer\"), new Status(\"assessment\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"                new Date(\"2023-02-03\"), getTagSet(\"golang\", \"backend\")),","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"            new Internship(new CompanyName(\"Samsung\"), new Role(\"Android Developer\"), new Status(\"interview\"),","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"                new Date(\"2023-02-02\"), getTagSet(\"android\", \"mobile\")),","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"            new Internship(new CompanyName(\"Grab\"), new Role(\"Frontend Designer\"), new Status(\"offered\"),","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"                new Date(\"2023-02-02\"), getTagSet(\"react\", \"css\")),","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"            new Internship(new CompanyName(\"Facebook\"), new Role(\"Backend Developer\"), new Status(\"rejected\"),","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"                new Date(\"2023-02-02\"), getTagSet(\"sql\"))","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"        for (Internship sampleInternship : getSampleInternships()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"            sampleAb.addInternship(sampleInternship);","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"eugenetangkj":21,"-":33}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedInternship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Date;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Role;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Status;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":" * Jackson-friendly version of {@link Internship}.","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"class JsonAdaptedInternship {","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Internship\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"    private final String companyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"    private final String role;","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    private final String status;","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"    private final String date;","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a {@code JsonAdaptedInternship} with the given person details.","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"    public JsonAdaptedInternship(@JsonProperty(\"companyName\") String companyName, @JsonProperty(\"role\") String role,","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"            @JsonProperty(\"status\") String status, @JsonProperty(\"date\") String date,","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"        this.companyName \u003d companyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        this.role \u003d role;","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"        this.status \u003d status;","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"     * Converts a given {@code Internship} into this class for Jackson use.","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"    public JsonAdaptedInternship(Internship source) {","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        companyName \u003d source.getCompanyName().fullCompanyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"        role \u003d source.getRole().fullRole;","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"        status \u003d source.getStatus().toString();","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"        date \u003d source.getDate().fullDate;","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Internship} object.","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"     *","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted internship","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"    public Internship toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"        final List\u003cTag\u003e internshipTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"            internshipTags.add(tag.toModelType());","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"        if (companyName \u003d\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"            throw new IllegalValueException(String.format(","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"                    MISSING_FIELD_MESSAGE_FORMAT, CompanyName.class.getSimpleName()));","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"        if (!CompanyName.isValidCompanyName(companyName)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"            throw new IllegalValueException(CompanyName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"        final CompanyName modelCompanyName \u003d new CompanyName(companyName);","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"        if (role \u003d\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Role.class.getSimpleName()));","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"        if (!Role.isValidRole(role)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"            throw new IllegalValueException(Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"        final Role modelRole \u003d new Role(role);","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"        if (status \u003d\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName()));","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"        if (!Status.isValidStatus(status)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"            throw new IllegalValueException(Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"eugenetangkj"},"content":"        final Status modelStatus \u003d new Status(status);","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"eugenetangkj"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName()));","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"eugenetangkj"},"content":"        if (!Date.isValidDate(date)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":104,"author":{"gitId":"eugenetangkj"},"content":"        final Date modelDate \u003d new Date(date);","lastModifiedDate":"2023-03-01"},{"lineNumber":105,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":106,"author":{"gitId":"eugenetangkj"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(internshipTags);","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"eugenetangkj"},"content":"        return new Internship(modelCompanyName, modelRole, modelStatus, modelDate, modelTags);","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":109,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"eugenetangkj":109}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    public static final String MESSAGE_DUPLICATE_INTERNSHIP \u003d \"Internships list contains duplicate internship(s).\";","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    private final List\u003cJsonAdaptedInternship\u003e internships \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given internships","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"internships\") List\u003cJsonAdaptedInternship\u003e internships) {","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"        this.internships.addAll(internships);","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"        internships.addAll(source.getInternshipList().stream().map(JsonAdaptedInternship::new)","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        for (JsonAdaptedInternship jsonAdaptedInternship : internships) {","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"            Internship internship \u003d jsonAdaptedInternship.toModelType();","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"            if (addressBook.hasInternship(internship)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"            addressBook.addInternship(internship);","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"eugenetangkj":13,"-":48}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-t14-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"eugenetangkj":1,"-":101}},{"path":"src/main/java/seedu/address/ui/InternshipCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":" * An UI component that displays information of a {@code Internship}.","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"public class InternshipCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    private static final String FXML \u003d \"InternshipListCard.fxml\";","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"    public final Internship internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"    private Label companyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"    private Label role;","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"    private Label status;","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"    private Label date;","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"    public InternshipCard(Internship internship, int displayedIndex) {","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"        this.internship \u003d internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        companyName.setText(internship.getCompanyName().fullCompanyName);","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"        role.setText(internship.getRole().fullRole);","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        status.setText(internship.getStatus().toString());","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"        date.setText(internship.getDate().fullDate);","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"        internship.getTags().stream()","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"        if (!(other instanceof InternshipCard)) {","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"        InternshipCard card \u003d (InternshipCard) other;","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"                \u0026\u0026 internship.equals(card.internship);","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"eugenetangkj":19,"-":58}},{"path":"src/main/java/seedu/address/ui/InternshipListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":" * Panel containing the list of internships","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"public class InternshipListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    private static final String FXML \u003d \"InternshipListPanel.fxml\";","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(InternshipListPanel.class);","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    @FXML","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    private ListView\u003cInternship\u003e internshipListView;","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"     * Creates a {@code InternshipListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"    public InternshipListPanel(ObservableList\u003cInternship\u003e internshipList) {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"        super(FXML);","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"        internshipListView.setItems(internshipList);","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"        internshipListView.setCellFactory(listView -\u003e new InternshipListViewCell());","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Internship} using a {@code InternshipCard}.","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"    class InternshipListViewCell extends ListCell\u003cInternship\u003e {","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"        @Override","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        protected void updateItem(Internship internship, boolean empty) {","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"            super.updateItem(internship, empty);","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"            if (empty || internship \u003d\u003d null) {","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"                setText(null);","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"            } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"                setGraphic(new InternshipCard(internship, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"eugenetangkj":49}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"    private InternshipListPanel internshipListPanel;","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"    private StackPane internshipListPanelPlaceholder;","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"eugenetangkj"},"content":"        internshipListPanel \u003d new InternshipListPanel(logic.getFilteredInternshipList());","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"eugenetangkj"},"content":"        internshipListPanelPlaceholder.getChildren().add(internshipListPanel.getRoot());","lastModifiedDate":"2023-03-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":166,"author":{"gitId":"eugenetangkj"},"content":"    public InternshipListPanel getInternshipListPanel() {","lastModifiedDate":"2023-03-01"},{"lineNumber":167,"author":{"gitId":"eugenetangkj"},"content":"        return internshipListPanel;","lastModifiedDate":"2023-03-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"eugenetangkj":6,"-":190}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/internbuddy_32.png\";","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"eugenetangkj":1,"-":87}},{"path":"src/main/resources/view/InternshipListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"        \u003cLabel fx:id\u003d\"companyName\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"      \u003cLabel fx:id\u003d\"role\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$role\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"      \u003cLabel fx:id\u003d\"status\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$status\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"      \u003cLabel fx:id\u003d\"date\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$date\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eugenetangkj":4,"-":32}},{"path":"src/main/resources/view/InternshipListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"  \u003cListView fx:id\u003d\"internshipListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eugenetangkj":1,"-":7}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"         title\u003d\"Address App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2018-12-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"        \u003cVBox fx:id\u003d\"internshipList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"          \u003cStackPane fx:id\u003d\"internshipListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"eugenetangkj":2,"-":58}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"        assertNotNull(AppUtil.getImage(\"/images/internbuddy_32.png\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"eugenetangkj":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_NAME_DESC_APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.testutil.InternshipBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + COMPANY_NAME_DESC_APPLE + ROLE_DESC_APPLE","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"                + STATUS_DESC_APPLE + DATE_DESC_APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"        Internship expectedInternship \u003d new InternshipBuilder(APPLE).withTags().build();","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"        expectedModel.addInternship(expectedInternship);","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"    public void getFilteredInternshipList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredInternshipList().remove(0));","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"eugenetangkj":15,"-":147}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.getTypicalAddressBook;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.testutil.InternshipBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    public void execute_newInternship_success() {","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"        Internship validInternship \u003d new InternshipBuilder().build();","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"        expectedModel.addInternship(validInternship);","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"        assertCommandSuccess(new AddCommand(validInternship), model,","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validInternship), expectedModel);","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"    public void execute_duplicateInternship_throwsCommandException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        Internship internshipInList \u003d model.getAddressBook().getInternshipList().get(0);","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"        assertCommandFailure(new AddCommand(internshipInList), model, AddCommand.MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"eugenetangkj":11,"-":34}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.testutil.InternshipBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    public void constructor_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"    public void execute_internshipAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"        ModelStubAcceptingInternshipAdded modelStub \u003d new ModelStubAcceptingInternshipAdded();","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"        Internship validInternship \u003d new InternshipBuilder().build();","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"        CommandResult commandResult \u003d new AddCommand(validInternship).execute(modelStub);","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validInternship), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(Arrays.asList(validInternship), modelStub.internshipsAdded);","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"    public void execute_duplicateInternship_throwsCommandException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"        Internship validInternship \u003d new InternshipBuilder().build();","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"        AddCommand addCommand \u003d new AddCommand(validInternship);","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"        ModelStub modelStub \u003d new ModelStubWithInternship(validInternship);","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_INTERNSHIP, () -\u003e addCommand","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"                .execute(modelStub));","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"        Internship apple \u003d new InternshipBuilder().withCompanyName(\"Apple\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"        Internship google \u003d new InternshipBuilder().withCompanyName(\"Google\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"        AddCommand addAppleCommand \u003d new AddCommand(apple);","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"        AddCommand addGoogleCommand \u003d new AddCommand(google);","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(addAppleCommand.equals(addAppleCommand));","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"        AddCommand addAppleCommandCopy \u003d new AddCommand(apple);","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(addAppleCommand.equals(addAppleCommandCopy));","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(addAppleCommand.equals(1));","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(addAppleCommand.equals(null));","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"        // different internship -\u003e returns false","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(addAppleCommand.equals(addGoogleCommand));","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":113,"author":{"gitId":"eugenetangkj"},"content":"        public void addInternship(Internship internship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"eugenetangkj"},"content":"        public boolean hasInternship(Internship internship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"eugenetangkj"},"content":"        public void deleteInternship(Internship target) {","lastModifiedDate":"2023-03-01"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"eugenetangkj"},"content":"        public void setInternship(Internship target, Internship editedInternship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"eugenetangkj"},"content":"        public ObservableList\u003cInternship\u003e getFilteredInternshipList() {","lastModifiedDate":"2023-03-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"eugenetangkj"},"content":"        public void updateFilteredInternshipList(Predicate\u003cInternship\u003e predicate) {","lastModifiedDate":"2023-03-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"eugenetangkj"},"content":"     * A Model stub that contains a single internship.","lastModifiedDate":"2023-03-01"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"eugenetangkj"},"content":"    private class ModelStubWithInternship extends ModelStub {","lastModifiedDate":"2023-03-01"},{"lineNumber":157,"author":{"gitId":"eugenetangkj"},"content":"        private final Internship internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":159,"author":{"gitId":"eugenetangkj"},"content":"        ModelStubWithInternship(Internship internship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":160,"author":{"gitId":"eugenetangkj"},"content":"            requireNonNull(internship);","lastModifiedDate":"2023-03-01"},{"lineNumber":161,"author":{"gitId":"eugenetangkj"},"content":"            this.internship \u003d internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"eugenetangkj"},"content":"        public boolean hasInternship(Internship internship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":166,"author":{"gitId":"eugenetangkj"},"content":"            requireNonNull(internship);","lastModifiedDate":"2023-03-01"},{"lineNumber":167,"author":{"gitId":"eugenetangkj"},"content":"            return this.internship.isSameInternship(internship);","lastModifiedDate":"2023-03-01"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"eugenetangkj"},"content":"     * A Model stub that always accept the internship being added.","lastModifiedDate":"2023-03-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"eugenetangkj"},"content":"    private class ModelStubAcceptingInternshipAdded extends ModelStub {","lastModifiedDate":"2023-03-01"},{"lineNumber":175,"author":{"gitId":"eugenetangkj"},"content":"        final ArrayList\u003cInternship\u003e internshipsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":178,"author":{"gitId":"eugenetangkj"},"content":"        public boolean hasInternship(Internship internship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":179,"author":{"gitId":"eugenetangkj"},"content":"            requireNonNull(internship);","lastModifiedDate":"2023-03-01"},{"lineNumber":180,"author":{"gitId":"eugenetangkj"},"content":"            return internshipsAdded.stream().anyMatch(internship::isSameInternship);","lastModifiedDate":"2023-03-01"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"eugenetangkj"},"content":"        public void addInternship(Internship internship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":185,"author":{"gitId":"eugenetangkj"},"content":"            requireNonNull(internship);","lastModifiedDate":"2023-03-01"},{"lineNumber":186,"author":{"gitId":"eugenetangkj"},"content":"            internshipsAdded.add(internship);","lastModifiedDate":"2023-03-01"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"eugenetangkj":50,"-":145}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.getTypicalAddressBook;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"eugenetangkj":1,"-":31}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.CompanyNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.testutil.EditInternshipDescriptorBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    public static final String VALID_COMPANY_NAME_APPLE \u003d \"Apple\";","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"    public static final String VALID_COMPANY_NAME_GOOGLE \u003d \"Google\";","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"    public static final String VALID_ROLE_APPLE \u003d \"Mobile Developer\";","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"    public static final String VALID_ROLE_GOOGLE \u003d \"Software Developer\";","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"    public static final String VALID_STATUS_APPLE \u003d \"interview\";","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"    public static final String VALID_STATUS_GOOGLE \u003d \"applied\";","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"    public static final String VALID_DATE_APPLE \u003d \"2023-02-01\";","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"    public static final String VALID_DATE_GOOGLE \u003d \"2023-02-03\";","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"    public static final String VALID_TAG_FRONT \u003d \"frontend\";","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"    public static final String VALID_TAG_BACK \u003d \"backend\";","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"    public static final String COMPANY_NAME_DESC_APPLE \u003d \" \" + PREFIX_COMPANY_NAME + VALID_COMPANY_NAME_APPLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"    public static final String COMPANY_NAME_DESC_GOOGLE \u003d \" \" + PREFIX_COMPANY_NAME + VALID_COMPANY_NAME_GOOGLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"    public static final String ROLE_DESC_APPLE \u003d \" \" + PREFIX_ROLE + VALID_ROLE_APPLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"    public static final String ROLE_DESC_GOOGLE \u003d \" \" + PREFIX_ROLE + VALID_ROLE_GOOGLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"    public static final String STATUS_DESC_APPLE \u003d \" \" + PREFIX_STATUS + VALID_STATUS_APPLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"    public static final String STATUS_DESC_GOOGLE \u003d \" \" + PREFIX_STATUS + VALID_STATUS_GOOGLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"    public static final String DATE_DESC_APPLE \u003d \" \" + PREFIX_DATE + VALID_DATE_APPLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"    public static final String DATE_DESC_GOOGLE \u003d \" \" + PREFIX_DATE + VALID_DATE_GOOGLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"    public static final String TAG_DESC_FRONT \u003d \" \" + PREFIX_TAG + VALID_TAG_FRONT;","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"    public static final String TAG_DESC_BACK \u003d \" \" + PREFIX_TAG + VALID_TAG_BACK;","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"    // \u0027\u0026\u0027 not allowed in company names","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"    public static final String INVALID_COMPANY_NAME_DESC \u003d \" \" + PREFIX_COMPANY_NAME + \"Grab\u0026\";","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"    // \u0027@\u0027 not allowed in roles","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"    public static final String INVALID_ROLE_DESC \u003d \" \" + PREFIX_ROLE + \"Front@Developer\";","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"    // pending is not a possible value for status","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"    public static final String INVALID_STATUS_DESC \u003d \" \" + PREFIX_STATUS + \"pending\";","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"    // invalid date format where dates have to be yyyy-MM-dd","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DATE + \"23-02-02\";","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"    // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"front*\";","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"    public static final EditCommand.EditInternshipDescriptor DESC_APPLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"    public static final EditCommand.EditInternshipDescriptor DESC_GOOGLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"        DESC_APPLE \u003d new EditInternshipDescriptorBuilder().withCompanyName(VALID_COMPANY_NAME_APPLE)","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"                .withRole(VALID_ROLE_APPLE).withStatus(VALID_STATUS_APPLE).withDate(VALID_DATE_APPLE)","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"                .withTags(VALID_TAG_FRONT).build();","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"        DESC_GOOGLE \u003d new EditInternshipDescriptorBuilder().withCompanyName(VALID_COMPANY_NAME_GOOGLE)","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"                .withRole(VALID_ROLE_GOOGLE).withStatus(VALID_STATUS_GOOGLE).withDate(VALID_DATE_GOOGLE)","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"                .withTags(VALID_TAG_BACK, VALID_TAG_FRONT).build();","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"eugenetangkj"},"content":"     * - the address book, filtered internship list and selected internship in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"eugenetangkj"},"content":"        List\u003cInternship\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredInternshipList());","lastModifiedDate":"2023-03-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredInternshipList());","lastModifiedDate":"2023-03-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":120,"author":{"gitId":"eugenetangkj"},"content":"     * Updates {@code model}\u0027s filtered list to show only the internship at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"eugenetangkj"},"content":"    public static void showInternshipAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredInternshipList().size());","lastModifiedDate":"2023-03-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"eugenetangkj"},"content":"        Internship internship \u003d model.getFilteredInternshipList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"eugenetangkj"},"content":"        final String[] splitCompanyName \u003d internship.getCompanyName().fullCompanyName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-01"},{"lineNumber":128,"author":{"gitId":"eugenetangkj"},"content":"        model.updateFilteredInternshipList(new CompanyNameContainsKeywordsPredicate(","lastModifiedDate":"2023-03-01"},{"lineNumber":129,"author":{"gitId":"eugenetangkj"},"content":"                Arrays.asList(splitCompanyName[0])));","lastModifiedDate":"2023-03-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(1, model.getFilteredInternshipList().size());","lastModifiedDate":"2023-03-01"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"eugenetangkj":58,"-":76}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showInternshipAtIndex;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.getTypicalAddressBook;","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"        Internship internshipToDelete \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_INTERNSHIP_SUCCESS, internshipToDelete);","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        expectedModel.deleteInternship(internshipToDelete);","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredInternshipList().size() + 1);","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"        Internship internshipToDelete \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_INTERNSHIP_SUCCESS, internshipToDelete);","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"        expectedModel.deleteInternship(internshipToDelete);","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"        showNoInternship(expectedModel);","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getInternshipList().size());","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_INTERNSHIP);","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"        // different internship -\u003e returns false","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"     * Updates {@code model}\u0027s filtered list to show no internship entry.","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"eugenetangkj"},"content":"    private void showNoInternship(Model model) {","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"eugenetangkj"},"content":"        model.updateFilteredInternshipList(p -\u003e false);","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(model.getFilteredInternshipList().isEmpty());","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"eugenetangkj":29,"-":80}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_NAME_GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRONT;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showInternshipAtIndex;","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.getTypicalAddressBook;","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.testutil.EditInternshipDescriptorBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.testutil.InternshipBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"        Internship editedInternship \u003d new InternshipBuilder().build();","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder(editedInternship).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_INTERNSHIP, descriptor);","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_INTERNSHIP_SUCCESS, editedInternship);","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"        expectedModel.setInternship(model.getFilteredInternshipList().get(0), editedInternship);","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        Index indexLastInternship \u003d Index.fromOneBased(model.getFilteredInternshipList().size());","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"        Internship lastInternship \u003d model.getFilteredInternshipList().get(indexLastInternship.getZeroBased());","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"        InternshipBuilder internshipInList \u003d new InternshipBuilder(lastInternship);","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"        Internship editedInternship \u003d internshipInList.withCompanyName(VALID_COMPANY_NAME_GOOGLE)","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"                .withRole(VALID_ROLE_GOOGLE)","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"                .withTags(VALID_TAG_FRONT).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder()","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"                .withCompanyName(VALID_COMPANY_NAME_GOOGLE).withRole(VALID_ROLE_GOOGLE)","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"                .withTags(VALID_TAG_FRONT).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastInternship, descriptor);","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_INTERNSHIP_SUCCESS, editedInternship);","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"        expectedModel.setInternship(lastInternship, editedInternship);","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_INTERNSHIP, new EditInternshipDescriptor());","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"        Internship editedInternship \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_INTERNSHIP_SUCCESS, editedInternship);","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"        Internship internshipInFilteredList \u003d model.getFilteredInternshipList()","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"                .get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"        Internship editedInternship \u003d new InternshipBuilder(internshipInFilteredList)","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"                .withCompanyName(VALID_COMPANY_NAME_GOOGLE).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_INTERNSHIP,","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"                new EditInternshipDescriptorBuilder().withCompanyName(VALID_COMPANY_NAME_GOOGLE).build());","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_INTERNSHIP_SUCCESS, editedInternship);","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"eugenetangkj"},"content":"        expectedModel.setInternship(model.getFilteredInternshipList().get(0), editedInternship);","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"eugenetangkj"},"content":"    public void execute_duplicateInternshipUnfilteredList_failure() {","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"eugenetangkj"},"content":"        Internship firstInternship \u003d model.getFilteredInternshipList().get(INDEX_FIRST_INTERNSHIP.getZeroBased());","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"eugenetangkj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder(firstInternship).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"eugenetangkj"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_INTERNSHIP, descriptor);","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"eugenetangkj"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"eugenetangkj"},"content":"    public void execute_duplicateInternshipFilteredList_failure() {","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"eugenetangkj"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"eugenetangkj"},"content":"        // edit internship in filtered list into a duplicate in address book","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"eugenetangkj"},"content":"        Internship internshipInList \u003d model.getAddressBook().getInternshipList()","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"eugenetangkj"},"content":"                .get(INDEX_SECOND_INTERNSHIP.getZeroBased());","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"eugenetangkj"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_INTERNSHIP,","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"eugenetangkj"},"content":"                new EditInternshipDescriptorBuilder(internshipInList).build());","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"eugenetangkj"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_INTERNSHIP);","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"eugenetangkj"},"content":"    public void execute_invalidInternshipIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-02"},{"lineNumber":129,"author":{"gitId":"eugenetangkj"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredInternshipList().size() + 1);","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"eugenetangkj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder()","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"eugenetangkj"},"content":"                .withCompanyName(VALID_COMPANY_NAME_GOOGLE).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"eugenetangkj"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"eugenetangkj"},"content":"    public void execute_invalidInternshipIndexFilteredList_failure() {","lastModifiedDate":"2023-03-02"},{"lineNumber":143,"author":{"gitId":"eugenetangkj"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-03-02"},{"lineNumber":144,"author":{"gitId":"eugenetangkj"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2023-03-02"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getInternshipList().size());","lastModifiedDate":"2023-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"eugenetangkj"},"content":"                new EditInternshipDescriptorBuilder().withCompanyName(VALID_COMPANY_NAME_GOOGLE).build());","lastModifiedDate":"2023-03-02"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"eugenetangkj"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_INTERNSHIP_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-02"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"eugenetangkj"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_INTERNSHIP, DESC_APPLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"eugenetangkj"},"content":"        EditInternshipDescriptor copyDescriptor \u003d new EditInternshipDescriptor(DESC_APPLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":160,"author":{"gitId":"eugenetangkj"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_INTERNSHIP, copyDescriptor);","lastModifiedDate":"2023-03-02"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_INTERNSHIP, DESC_APPLE)));","lastModifiedDate":"2023-03-02"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_INTERNSHIP, DESC_GOOGLE)));","lastModifiedDate":"2023-03-02"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"eugenetangkj":71,"-":108}},{"path":"src/test/java/seedu/address/logic/commands/EditInternshipDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_NAME_GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_GOOGLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_GOOGLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BACK;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.testutil.EditInternshipDescriptorBuilder;","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"public class EditInternshipDescriptorTest {","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    public void equals() {","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"        EditInternshipDescriptor descriptorWithSameValues \u003d new EditInternshipDescriptor(DESC_APPLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(DESC_APPLE.equals(descriptorWithSameValues));","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(DESC_APPLE.equals(DESC_APPLE));","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(DESC_APPLE.equals(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(DESC_APPLE.equals(5));","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(DESC_APPLE.equals(DESC_GOOGLE));","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"        // different company name -\u003e returns false","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"        EditInternshipDescriptor editedApple \u003d new EditInternshipDescriptorBuilder(DESC_APPLE)","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"                .withCompanyName(VALID_COMPANY_NAME_GOOGLE).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(DESC_APPLE.equals(editedApple));","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"        // different roles -\u003e returns false","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"        editedApple \u003d new EditInternshipDescriptorBuilder(DESC_APPLE).withRole(VALID_ROLE_GOOGLE).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(DESC_APPLE.equals(editedApple));","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"        editedApple \u003d new EditInternshipDescriptorBuilder(DESC_APPLE).withStatus(VALID_STATUS_GOOGLE).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(DESC_APPLE.equals(editedApple));","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"        editedApple \u003d new EditInternshipDescriptorBuilder(DESC_APPLE).withDate(VALID_DATE_GOOGLE).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(DESC_APPLE.equals(editedApple));","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"        editedApple \u003d new EditInternshipDescriptorBuilder(DESC_APPLE).withTags(VALID_TAG_BACK).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(DESC_APPLE.equals(editedApple));","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"eugenetangkj":59}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INTERNSHIP_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.GOLDMAN;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.RIOTGAMES;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.SAMSUNG;","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.getTypicalAddressBook;","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.CompanyNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"        CompanyNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"                new CompanyNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"        CompanyNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"                new CompanyNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        // different internship -\u003e returns false","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"    public void execute_zeroKeywords_noInternshipFound() {","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INTERNSHIP_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"        CompanyNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"        expectedModel.updateFilteredInternshipList(predicate);","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredInternshipList());","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"    public void execute_multipleKeywords_multipleInternshipsFound() {","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INTERNSHIP_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"        CompanyNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Goldman Riot Samsung\");","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"        expectedModel.updateFilteredInternshipList(predicate);","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(Arrays.asList(GOLDMAN, RIOTGAMES, SAMSUNG), model.getFilteredInternshipList());","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"    private CompanyNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"        return new CompanyNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"eugenetangkj":23,"-":60}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showInternshipAtIndex;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.getTypicalAddressBook;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"        showInternshipAtIndex(model, INDEX_FIRST_INTERNSHIP);","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"eugenetangkj":4,"-":35}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_NAME_DESC_APPLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_NAME_DESC_GOOGLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COMPANY_NAME_DESC;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ROLE_DESC;","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STATUS_DESC;","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_APPLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_GOOGLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_APPLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_GOOGLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_BACK;","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRONT;","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_NAME_GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_GOOGLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_GOOGLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BACK;","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRONT;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Date;","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Role;","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Status;","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.testutil.InternshipBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"        Internship expectedInternship \u003d new InternshipBuilder(GOOGLE).withTags(VALID_TAG_FRONT).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + COMPANY_NAME_DESC_GOOGLE + ROLE_DESC_GOOGLE","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"                + STATUS_DESC_GOOGLE + DATE_DESC_GOOGLE + TAG_DESC_FRONT, new AddCommand(expectedInternship));","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"        // multiple company names - last company name accepted","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"        assertParseSuccess(parser, COMPANY_NAME_DESC_APPLE + COMPANY_NAME_DESC_GOOGLE + ROLE_DESC_GOOGLE","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"                + STATUS_DESC_GOOGLE + DATE_DESC_GOOGLE + TAG_DESC_FRONT, new AddCommand(expectedInternship));","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"        // multiple roles - last role accepted","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"        assertParseSuccess(parser, COMPANY_NAME_DESC_GOOGLE + ROLE_DESC_APPLE + ROLE_DESC_GOOGLE","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"                + STATUS_DESC_GOOGLE + DATE_DESC_GOOGLE + TAG_DESC_FRONT, new AddCommand(expectedInternship));","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"        // multiple statuses - last status accepted","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"        assertParseSuccess(parser, COMPANY_NAME_DESC_GOOGLE + ROLE_DESC_GOOGLE + STATUS_DESC_APPLE","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"                + STATUS_DESC_GOOGLE + DATE_DESC_GOOGLE + TAG_DESC_FRONT, new AddCommand(expectedInternship));","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"        // multiple dates - last date accepted","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"        assertParseSuccess(parser, COMPANY_NAME_DESC_GOOGLE + ROLE_DESC_GOOGLE + STATUS_DESC_GOOGLE","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"                + DATE_DESC_APPLE + DATE_DESC_GOOGLE + TAG_DESC_FRONT, new AddCommand(expectedInternship));","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"        Internship expectedInternshipMultipleTags \u003d new InternshipBuilder(GOOGLE)","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"                .withTags(VALID_TAG_FRONT, VALID_TAG_BACK).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"        assertParseSuccess(parser, COMPANY_NAME_DESC_GOOGLE + ROLE_DESC_GOOGLE + STATUS_DESC_GOOGLE","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"                + DATE_DESC_GOOGLE + TAG_DESC_BACK + TAG_DESC_FRONT, new AddCommand(expectedInternshipMultipleTags));","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"        Internship expectedInternship \u003d new InternshipBuilder(APPLE).withTags().build();","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"        assertParseSuccess(parser, COMPANY_NAME_DESC_APPLE + ROLE_DESC_APPLE + STATUS_DESC_APPLE","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"                        + DATE_DESC_APPLE, new AddCommand(expectedInternship));","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"        // missing company name prefix","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, VALID_COMPANY_NAME_GOOGLE + ROLE_DESC_GOOGLE + STATUS_DESC_GOOGLE","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"                        + DATE_DESC_GOOGLE, expectedMessage);","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"        // missing role prefix","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, COMPANY_NAME_DESC_GOOGLE + VALID_ROLE_GOOGLE + STATUS_DESC_GOOGLE","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"                        + ROLE_DESC_GOOGLE, expectedMessage);","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"        // missing status prefix","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, COMPANY_NAME_DESC_GOOGLE + ROLE_DESC_GOOGLE + VALID_STATUS_GOOGLE","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"eugenetangkj"},"content":"                        + DATE_DESC_GOOGLE, expectedMessage);","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"eugenetangkj"},"content":"        // missing date prefix","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, COMPANY_NAME_DESC_GOOGLE + ROLE_DESC_GOOGLE + STATUS_DESC_GOOGLE","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"eugenetangkj"},"content":"                        + VALID_DATE_GOOGLE, expectedMessage);","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, VALID_COMPANY_NAME_GOOGLE + VALID_ROLE_GOOGLE + VALID_STATUS_GOOGLE","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"eugenetangkj"},"content":"                        + VALID_DATE_GOOGLE, expectedMessage);","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"eugenetangkj"},"content":"        // invalid company name","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, INVALID_COMPANY_NAME_DESC + ROLE_DESC_GOOGLE + STATUS_DESC_GOOGLE","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"eugenetangkj"},"content":"                + DATE_DESC_GOOGLE + TAG_DESC_BACK + TAG_DESC_FRONT, CompanyName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"eugenetangkj"},"content":"        // invalid role","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, COMPANY_NAME_DESC_GOOGLE + INVALID_ROLE_DESC + STATUS_DESC_GOOGLE","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"eugenetangkj"},"content":"                + DATE_DESC_GOOGLE + TAG_DESC_BACK + TAG_DESC_FRONT, Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"eugenetangkj"},"content":"        // invalid status","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, COMPANY_NAME_DESC_GOOGLE + ROLE_DESC_GOOGLE + INVALID_STATUS_DESC","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"eugenetangkj"},"content":"                + DATE_DESC_GOOGLE + TAG_DESC_BACK + TAG_DESC_FRONT, Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"eugenetangkj"},"content":"        // invalid date","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, COMPANY_NAME_DESC_GOOGLE + ROLE_DESC_GOOGLE + STATUS_DESC_GOOGLE","lastModifiedDate":"2023-03-02"},{"lineNumber":126,"author":{"gitId":"eugenetangkj"},"content":"                + INVALID_DATE_DESC + TAG_DESC_BACK + TAG_DESC_FRONT, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, COMPANY_NAME_DESC_GOOGLE + ROLE_DESC_GOOGLE + STATUS_DESC_GOOGLE","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"eugenetangkj"},"content":"                + DATE_DESC_GOOGLE + INVALID_TAG_DESC + VALID_TAG_FRONT, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, INVALID_COMPANY_NAME_DESC + ROLE_DESC_GOOGLE + STATUS_DESC_GOOGLE","lastModifiedDate":"2023-03-02"},{"lineNumber":134,"author":{"gitId":"eugenetangkj"},"content":"                        + INVALID_DATE_DESC, CompanyName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + COMPANY_NAME_DESC_GOOGLE + ROLE_DESC_GOOGLE","lastModifiedDate":"2023-03-02"},{"lineNumber":138,"author":{"gitId":"eugenetangkj"},"content":"                        + STATUS_DESC_GOOGLE + DATE_DESC_GOOGLE + TAG_DESC_BACK + TAG_DESC_FRONT,","lastModifiedDate":"2023-03-02"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                        String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"eugenetangkj":82,"-":59}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.CompanyNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.testutil.EditInternshipDescriptorBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.testutil.InternshipBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.testutil.InternshipUtil;","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"        Internship internship \u003d new InternshipBuilder().build();","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(InternshipUtil.getAddCommand(internship));","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(new AddCommand(internship), command);","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_INTERNSHIP.getOneBased());","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_INTERNSHIP), command);","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"        Internship internship \u003d new InternshipBuilder().build();","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder(internship).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"                + INDEX_FIRST_INTERNSHIP.getOneBased() + \" \"","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"                + InternshipUtil.getEditInternshipDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_INTERNSHIP, descriptor), command);","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(new FindCommand(new CompanyNameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"eugenetangkj":18,"-":84}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":" * outside from the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_INTERNSHIP));","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"eugenetangkj":3,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.COMPANY_NAME_DESC_APPLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_COMPANY_NAME_DESC;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ROLE_DESC;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_STATUS_DESC;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ROLE_DESC_GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_APPLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.STATUS_DESC_GOOGLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_BACK;","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRONT;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_NAME_APPLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_APPLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_GOOGLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BACK;","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRONT;","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_INTERNSHIP;","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Date;","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Role;","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Status;","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.testutil.EditInternshipDescriptorBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, VALID_COMPANY_NAME_APPLE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, \"-5\" + COMPANY_NAME_DESC_APPLE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, \"0\" + COMPANY_NAME_DESC_APPLE, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"        // invalid company name","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, \"1\" + INVALID_COMPANY_NAME_DESC, CompanyName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"        // invalid role","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ROLE_DESC, Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"        // invalid status","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, \"1\" + INVALID_STATUS_DESC, Status.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"        // invalid date","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, \"1\" + INVALID_DATE_DESC, Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"        // invalid tag","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"        // invalid role followed by valid status","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ROLE_DESC + STATUS_DESC_APPLE, Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"        // valid role followed by invalid role. The test case for invalid role followed by valid role","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, \"1\" + ROLE_DESC_GOOGLE + INVALID_ROLE_DESC, Role.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Internship} being edited,","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRONT + TAG_DESC_BACK + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRONT + TAG_EMPTY + TAG_DESC_BACK, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRONT + TAG_DESC_BACK, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, \"1\" + INVALID_COMPANY_NAME_DESC + INVALID_ROLE_DESC + VALID_STATUS_APPLE","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"eugenetangkj"},"content":"                        + VALID_ROLE_APPLE, CompanyName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"eugenetangkj"},"content":"        Index targetIndex \u003d INDEX_SECOND_INTERNSHIP;","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"eugenetangkj"},"content":"        String userInput \u003d targetIndex.getOneBased() + ROLE_DESC_GOOGLE + TAG_DESC_BACK","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"eugenetangkj"},"content":"                + STATUS_DESC_APPLE + DATE_DESC_APPLE + COMPANY_NAME_DESC_APPLE + TAG_DESC_FRONT;","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"eugenetangkj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder()","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"eugenetangkj"},"content":"                .withCompanyName(VALID_COMPANY_NAME_APPLE).withRole(VALID_ROLE_GOOGLE)","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"eugenetangkj"},"content":"                .withStatus(VALID_STATUS_APPLE).withDate(VALID_DATE_APPLE)","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"eugenetangkj"},"content":"                .withTags(VALID_TAG_FRONT, VALID_TAG_BACK).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"eugenetangkj"},"content":"        Index targetIndex \u003d INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"eugenetangkj"},"content":"        String userInput \u003d targetIndex.getOneBased() + ROLE_DESC_GOOGLE + STATUS_DESC_APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"eugenetangkj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder().withRole(VALID_ROLE_GOOGLE)","lastModifiedDate":"2023-03-02"},{"lineNumber":134,"author":{"gitId":"eugenetangkj"},"content":"                .withStatus(VALID_STATUS_APPLE).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"eugenetangkj"},"content":"        // company name","lastModifiedDate":"2023-03-02"},{"lineNumber":143,"author":{"gitId":"eugenetangkj"},"content":"        Index targetIndex \u003d INDEX_THIRD_INTERNSHIP;","lastModifiedDate":"2023-03-02"},{"lineNumber":144,"author":{"gitId":"eugenetangkj"},"content":"        String userInput \u003d targetIndex.getOneBased() + COMPANY_NAME_DESC_APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":145,"author":{"gitId":"eugenetangkj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder()","lastModifiedDate":"2023-03-02"},{"lineNumber":146,"author":{"gitId":"eugenetangkj"},"content":"                .withCompanyName(VALID_COMPANY_NAME_APPLE).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"eugenetangkj"},"content":"        // role","lastModifiedDate":"2023-03-02"},{"lineNumber":151,"author":{"gitId":"eugenetangkj"},"content":"        userInput \u003d targetIndex.getOneBased() + ROLE_DESC_APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":152,"author":{"gitId":"eugenetangkj"},"content":"        descriptor \u003d new EditInternshipDescriptorBuilder().withRole(VALID_ROLE_APPLE).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"eugenetangkj"},"content":"        // status","lastModifiedDate":"2023-03-02"},{"lineNumber":157,"author":{"gitId":"eugenetangkj"},"content":"        userInput \u003d targetIndex.getOneBased() + STATUS_DESC_APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":158,"author":{"gitId":"eugenetangkj"},"content":"        descriptor \u003d new EditInternshipDescriptorBuilder().withStatus(VALID_STATUS_APPLE).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"eugenetangkj"},"content":"        // date","lastModifiedDate":"2023-03-02"},{"lineNumber":163,"author":{"gitId":"eugenetangkj"},"content":"        userInput \u003d targetIndex.getOneBased() + DATE_DESC_APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":164,"author":{"gitId":"eugenetangkj"},"content":"        descriptor \u003d new EditInternshipDescriptorBuilder().withDate(VALID_DATE_APPLE).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":169,"author":{"gitId":"eugenetangkj"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRONT;","lastModifiedDate":"2023-03-02"},{"lineNumber":170,"author":{"gitId":"eugenetangkj"},"content":"        descriptor \u003d new EditInternshipDescriptorBuilder().withTags(VALID_TAG_FRONT).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":177,"author":{"gitId":"eugenetangkj"},"content":"        Index targetIndex \u003d INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2023-03-02"},{"lineNumber":178,"author":{"gitId":"eugenetangkj"},"content":"        String userInput \u003d targetIndex.getOneBased() + ROLE_DESC_APPLE + STATUS_DESC_APPLE + DATE_DESC_APPLE","lastModifiedDate":"2023-03-02"},{"lineNumber":179,"author":{"gitId":"eugenetangkj"},"content":"                + TAG_DESC_FRONT + ROLE_DESC_APPLE + DATE_DESC_APPLE + STATUS_DESC_APPLE + TAG_DESC_FRONT","lastModifiedDate":"2023-03-02"},{"lineNumber":180,"author":{"gitId":"eugenetangkj"},"content":"                + ROLE_DESC_GOOGLE + DATE_DESC_GOOGLE + STATUS_DESC_GOOGLE + TAG_DESC_BACK;","lastModifiedDate":"2023-03-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"eugenetangkj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder().withRole(VALID_ROLE_GOOGLE)","lastModifiedDate":"2023-03-02"},{"lineNumber":183,"author":{"gitId":"eugenetangkj"},"content":"                .withStatus(VALID_STATUS_GOOGLE).withDate(VALID_DATE_GOOGLE).withTags(VALID_TAG_FRONT, VALID_TAG_BACK)","lastModifiedDate":"2023-03-02"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"eugenetangkj"},"content":"        Index targetIndex \u003d INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2023-03-02"},{"lineNumber":194,"author":{"gitId":"eugenetangkj"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_ROLE_DESC + ROLE_DESC_GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":195,"author":{"gitId":"eugenetangkj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder()","lastModifiedDate":"2023-03-02"},{"lineNumber":196,"author":{"gitId":"eugenetangkj"},"content":"                .withRole(VALID_ROLE_GOOGLE).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"eugenetangkj"},"content":"        userInput \u003d targetIndex.getOneBased() + STATUS_DESC_GOOGLE + INVALID_ROLE_DESC + DATE_DESC_GOOGLE","lastModifiedDate":"2023-03-03"},{"lineNumber":202,"author":{"gitId":"eugenetangkj"},"content":"                + ROLE_DESC_GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":203,"author":{"gitId":"eugenetangkj"},"content":"        descriptor \u003d new EditInternshipDescriptorBuilder().withRole(VALID_ROLE_GOOGLE).withStatus(VALID_STATUS_GOOGLE)","lastModifiedDate":"2023-03-02"},{"lineNumber":204,"author":{"gitId":"eugenetangkj"},"content":"                .withDate(VALID_DATE_GOOGLE).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":211,"author":{"gitId":"eugenetangkj"},"content":"        Index targetIndex \u003d INDEX_THIRD_INTERNSHIP;","lastModifiedDate":"2023-03-02"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"eugenetangkj"},"content":"        EditInternshipDescriptor descriptor \u003d new EditInternshipDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-03-02"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"eugenetangkj":100,"-":119}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.CompanyNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"                FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"                new FindCommand(new CompanyNameContainsKeywordsPredicate(Arrays.asList(\"Apple\", \"Google\")));","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"        assertParseSuccess(parser, \"Apple Google\", expectedFindCommand);","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"        assertParseSuccess(parser, \" \\n Apple \\n \\t Google  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"eugenetangkj":6,"-":29}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_INTERNSHIP;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Date;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Role;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Status;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    private static final String INVALID_COMPANY_NAME \u003d \"A@pple\";","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"    private static final String INVALID_ROLE \u003d \"i@S Developer\";","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"    private static final String INVALID_STATUS \u003d \"pending\";","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"    private static final String INVALID_DATE \u003d \"23-02-01\";","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"    private static final String INVALID_TAG \u003d \"#front\";","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"    private static final String VALID_COMPANY_NAME \u003d \"Apple\";","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"    private static final String VALID_ROLE \u003d \"iOS Developer\";","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"    private static final String VALID_STATUS \u003d \"applied\";","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"    private static final String VALID_DATE \u003d \"2023-02-01\";","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"    private static final String VALID_TAG_1 \u003d \"front\";","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"    private static final String VALID_TAG_2 \u003d \"back\";","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(INDEX_FIRST_INTERNSHIP, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(INDEX_FIRST_INTERNSHIP, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"    public void parseCompanyName_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseCompanyName((String) null));","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"    public void parseCompanyName_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseCompanyName(INVALID_COMPANY_NAME));","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"    public void parseCompanyName_validValueWithoutWhitespace_returnsCompanyName() throws Exception {","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"        CompanyName expectedCompanyName \u003d new CompanyName(VALID_COMPANY_NAME);","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(expectedCompanyName, ParserUtil.parseCompanyName(VALID_COMPANY_NAME));","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"    public void parseCompanyName_validValueWithWhitespace_returnsTrimmedCompanyName() throws Exception {","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"        String companyNameWithWhitespace \u003d WHITESPACE + VALID_COMPANY_NAME + WHITESPACE;","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"        CompanyName expectedCompanyName \u003d new CompanyName(VALID_COMPANY_NAME);","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(expectedCompanyName, ParserUtil.parseCompanyName(companyNameWithWhitespace));","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"    public void parseRole_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseRole((String) null));","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"    public void parseRole_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseRole(INVALID_ROLE));","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"    public void parseRole_validValueWithoutWhitespace_returnsRole() throws Exception {","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"        Role expectedRole \u003d new Role(VALID_ROLE);","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(expectedRole, ParserUtil.parseRole(VALID_ROLE));","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"eugenetangkj"},"content":"    public void parseRole_validValueWithWhitespace_returnsTrimmedRole() throws Exception {","lastModifiedDate":"2023-03-01"},{"lineNumber":100,"author":{"gitId":"eugenetangkj"},"content":"        String roleWithWhitespace \u003d WHITESPACE + VALID_ROLE + WHITESPACE;","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"eugenetangkj"},"content":"        Role expectedRole \u003d new Role(VALID_ROLE);","lastModifiedDate":"2023-03-01"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(expectedRole, ParserUtil.parseRole(roleWithWhitespace));","lastModifiedDate":"2023-03-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"eugenetangkj"},"content":"    public void parseStatus_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":107,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseStatus((String) null));","lastModifiedDate":"2023-03-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"eugenetangkj"},"content":"    public void parseStatus_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-01"},{"lineNumber":112,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseStatus(INVALID_STATUS));","lastModifiedDate":"2023-03-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"eugenetangkj"},"content":"    public void parseStatus_validValueWithoutWhitespace_returnsStatus() throws Exception {","lastModifiedDate":"2023-03-01"},{"lineNumber":117,"author":{"gitId":"eugenetangkj"},"content":"        Status expectedStatus \u003d new Status(VALID_STATUS);","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(expectedStatus, ParserUtil.parseStatus(VALID_STATUS));","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"eugenetangkj"},"content":"    public void parseStatus_validValueWithWhitespace_returnsTrimmedStatus() throws Exception {","lastModifiedDate":"2023-03-01"},{"lineNumber":123,"author":{"gitId":"eugenetangkj"},"content":"        String statusWithWhitespace \u003d WHITESPACE + VALID_STATUS + WHITESPACE;","lastModifiedDate":"2023-03-01"},{"lineNumber":124,"author":{"gitId":"eugenetangkj"},"content":"        Status expectedStatus \u003d new Status(VALID_STATUS);","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(expectedStatus, ParserUtil.parseStatus(statusWithWhitespace));","lastModifiedDate":"2023-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"eugenetangkj"},"content":"    public void parseDate_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDate((String) null));","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"eugenetangkj"},"content":"    public void parseDate_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDate(INVALID_DATE));","lastModifiedDate":"2023-03-02"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"eugenetangkj"},"content":"    public void parseDate_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2023-03-02"},{"lineNumber":140,"author":{"gitId":"eugenetangkj"},"content":"        Date expectedDate \u003d new Date(VALID_DATE);","lastModifiedDate":"2023-03-02"},{"lineNumber":141,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(VALID_DATE));","lastModifiedDate":"2023-03-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"eugenetangkj"},"content":"    public void parseDate_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2023-03-02"},{"lineNumber":146,"author":{"gitId":"eugenetangkj"},"content":"        String dateWithWhitespace \u003d WHITESPACE + VALID_DATE + WHITESPACE;","lastModifiedDate":"2023-03-02"},{"lineNumber":147,"author":{"gitId":"eugenetangkj"},"content":"        Date expectedDate \u003d new Date(VALID_DATE);","lastModifiedDate":"2023-03-02"},{"lineNumber":148,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(expectedDate, ParserUtil.parseDate(dateWithWhitespace));","lastModifiedDate":"2023-03-02"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"eugenetangkj":63,"-":133}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_GOOGLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BACK;","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.APPLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.getTypicalAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.exceptions.DuplicateInternshipException;","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.testutil.InternshipBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(Collections.emptyList(), addressBook.getInternshipList());","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"    public void resetData_withDuplicateInternships_throwsDuplicateInternshipException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"        // Two internships with the same identity fields","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"        Internship editedApple \u003d new InternshipBuilder(APPLE).withDate(VALID_DATE_GOOGLE).withTags(VALID_TAG_BACK)","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        List\u003cInternship\u003e newInternships \u003d Arrays.asList(APPLE, editedApple);","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newInternships);","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(DuplicateInternshipException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"    public void hasInternship_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasInternship(null));","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"    public void hasInternship_internshipNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(addressBook.hasInternship(APPLE));","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"    public void hasInternship_internshipInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"        addressBook.addInternship(APPLE);","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(addressBook.hasInternship(APPLE));","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"    public void hasInternship_internshipWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"        addressBook.addInternship(APPLE);","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"        Internship editedApple \u003d new InternshipBuilder(APPLE).withDate(VALID_DATE_GOOGLE).withTags(VALID_TAG_BACK)","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(addressBook.hasInternship(editedApple));","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"    public void getInternshipList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getInternshipList().remove(0));","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"     * A stub ReadOnlyAddressBook whose internships list can violate interface constraints.","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"        private final ObservableList\u003cInternship\u003e internships \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"        AddressBookStub(Collection\u003cInternship\u003e internships) {","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"            this.internships.setAll(internships);","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"        public ObservableList\u003cInternship\u003e getInternshipList() {","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"            return internships;","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"eugenetangkj":33,"-":69}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_INTERNSHIPS;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.APPLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.GOOGLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.CompanyNameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"    public void hasInternship_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasInternship(null));","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"    public void hasInternship_internshipNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(modelManager.hasInternship(APPLE));","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"    public void hasInternship_internshipInAddressBook_returnsTrue() {","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"        modelManager.addInternship(APPLE);","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(modelManager.hasInternship(APPLE));","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"    public void getFilteredInternshipList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"                .getFilteredInternshipList().remove(0));","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"eugenetangkj"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withInternship(APPLE).withInternship(GOOGLE).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"eugenetangkj"},"content":"        String[] keywords \u003d APPLE.getCompanyName().fullCompanyName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"eugenetangkj"},"content":"        modelManager.updateFilteredInternshipList(new CompanyNameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"eugenetangkj"},"content":"        modelManager.updateFilteredInternshipList(PREDICATE_SHOW_ALL_INTERNSHIPS);","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"eugenetangkj":18,"-":115}},{"path":"src/test/java/seedu/address/model/internship/CompanyNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import java.util.List;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.testutil.InternshipBuilder;","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"public class CompanyNameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    public void equals() {","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"        CompanyNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"                new CompanyNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"        CompanyNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"                new CompanyNameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"        CompanyNameContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"                new CompanyNameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"        // One keyword","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"        CompanyNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"                new CompanyNameContainsKeywordsPredicate(Collections.singletonList(\"Apple\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withCompanyName(\"Apple Google\").build()));","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        // Multiple keywords","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"        predicate \u003d new CompanyNameContainsKeywordsPredicate(Arrays.asList(\"Apple\", \"Google\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withCompanyName(\"Apple Google\").build()));","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"        predicate \u003d new CompanyNameContainsKeywordsPredicate(Arrays.asList(\"Google\", \"Grab\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withCompanyName(\"Apple Grab\").build()));","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"        predicate \u003d new CompanyNameContainsKeywordsPredicate(Arrays.asList(\"aPPle\", \"gOOGLE\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(predicate.test(new InternshipBuilder().withCompanyName(\"Apple Google\").build()));","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"        CompanyNameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"                new CompanyNameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(predicate.test(new InternshipBuilder().withCompanyName(\"Apple\").build()));","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"        predicate \u003d new CompanyNameContainsKeywordsPredicate(Arrays.asList(\"Grab\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(predicate.test(new InternshipBuilder().withCompanyName(\"Apple Google\").build()));","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"        // Keywords match role, status and date, but does not match name","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"        predicate \u003d new CompanyNameContainsKeywordsPredicate(Arrays.asList(\"Developer\", \"applied\", \"2023-02-01\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(predicate.test(new InternshipBuilder().withCompanyName(\"Apple\").withRole(\"Developer\")","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"                .withStatus(\"applied\").withDate(\"2023-02-01\").build()));","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"eugenetangkj":80}},{"path":"src/test/java/seedu/address/model/internship/CompanyNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"public class CompanyNameTest {","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CompanyName(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new CompanyName(invalidName));","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    public void isValidCompanyName() {","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"        // null name","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e CompanyName.isValidCompanyName(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"        // invalid company name","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(CompanyName.isValidCompanyName(\"\")); // empty string","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(CompanyName.isValidCompanyName(\" \")); // spaces only","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(CompanyName.isValidCompanyName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(CompanyName.isValidCompanyName(\"gojek*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"        // valid company name","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(CompanyName.isValidCompanyName(\"big tech company\")); // alphabets only","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(CompanyName.isValidCompanyName(\"12345\")); // numbers only","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(CompanyName.isValidCompanyName(\"apple the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(CompanyName.isValidCompanyName(\"Capital Apple\")); // with capital letters","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(CompanyName.isValidCompanyName(\"Apple which is 1st in Popularity\")); // long names","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"eugenetangkj":40}},{"path":"src/test/java/seedu/address/model/internship/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"public class DateTest {","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Date(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    public void constructor_invalidDate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"        String invalidDate \u003d \"\";","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Date(invalidDate));","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    public void isValidDate() {","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"        // null date","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"        // invalid dates","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(Date.isValidDate(\"\")); // empty string","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(Date.isValidDate(\" \")); // spaces only","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(Date.isValidDate(\"1st March 2023\")); //invalid date format","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(Date.isValidDate(\"March 1st 2023\")); //invalid date format","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"seadragon2000341"},"content":"        assertFalse(Date.isValidDate(\"2023-0-02\")); //invalid date format","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"seadragon2000341"},"content":"        assertFalse(Date.isValidDate(\"202-01-02\")); //invalid date format","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"seadragon2000341"},"content":"        assertFalse(Date.isValidDate(\"2023-03-1\")); //invalid date format","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"seadragon2000341"},"content":"        assertFalse(Date.isValidDate(\"2023-00-00\")); //invalid date","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"seadragon2000341"},"content":"        assertFalse(Date.isValidDate(\"2023-04-31\")); //invalid date","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"        // valid dates","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(Date.isValidDate(\"2023-03-01\"));","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(Date.isValidDate(\"2023-02-05\"));","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"seadragon2000341"},"content":"        assertTrue(Date.isValidDate(\"2023-12-31\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"seadragon2000341"},"content":"        assertTrue(Date.isValidDate(\"2023-02-28\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"seadragon2000341"},"content":"        assertTrue(Date.isValidDate(\"2020-02-29\")); //leap year","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"eugenetangkj":37,"seadragon2000341":8}},{"path":"src/test/java/seedu/address/model/internship/InternshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_NAME_GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_GOOGLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_GOOGLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BACK;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.testutil.InternshipBuilder;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"public class InternshipTest {","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"        Internship person \u003d new InternshipBuilder().build();","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(APPLE.isSameInternship(APPLE));","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(APPLE.isSameInternship(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"        // same company name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"        Internship editedApple \u003d new InternshipBuilder(APPLE).withRole(VALID_ROLE_GOOGLE)","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"                .withStatus(VALID_STATUS_GOOGLE).withDate(VALID_DATE_GOOGLE).withTags(VALID_TAG_BACK).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(APPLE.isSameInternship(editedApple));","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"        // different company name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"        editedApple \u003d new InternshipBuilder(APPLE).withCompanyName(VALID_COMPANY_NAME_GOOGLE).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(APPLE.isSameInternship(editedApple));","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"        // company name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"        Internship editedGoogle \u003d new InternshipBuilder(GOOGLE)","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"                .withCompanyName(VALID_COMPANY_NAME_GOOGLE.toLowerCase()).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(GOOGLE.isSameInternship(editedGoogle));","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"        // company name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"        String nameWithTrailingSpaces \u003d VALID_COMPANY_NAME_GOOGLE + \" \";","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"        editedGoogle \u003d new InternshipBuilder(GOOGLE).withCompanyName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(GOOGLE.isSameInternship(editedGoogle));","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"        Internship appleCopy \u003d new InternshipBuilder(APPLE).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(APPLE.equals(appleCopy));","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(APPLE.equals(APPLE));","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(APPLE.equals(null));","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(APPLE.equals(5));","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(APPLE.equals(GOOGLE));","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"        Internship editedApple \u003d new InternshipBuilder(APPLE).withCompanyName(VALID_COMPANY_NAME_GOOGLE).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(APPLE.equals(editedApple));","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"        // different role -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"        editedApple \u003d new InternshipBuilder(APPLE).withRole(VALID_ROLE_GOOGLE).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(APPLE.equals(editedApple));","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"        // different status -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"        editedApple \u003d new InternshipBuilder(APPLE).withStatus(VALID_STATUS_GOOGLE).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(APPLE.equals(editedApple));","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"        // different date -\u003e returns false","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"        editedApple \u003d new InternshipBuilder(APPLE).withDate(VALID_DATE_GOOGLE).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(APPLE.equals(editedApple));","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"        editedApple \u003d new InternshipBuilder(APPLE).withTags(VALID_TAG_BACK).build();","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(APPLE.equals(editedApple));","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"eugenetangkj":47,"-":45}},{"path":"src/test/java/seedu/address/model/internship/RoleTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"public class RoleTest {","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Role(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    public void constructor_invalidRole_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"        String invalidRole \u003d \"\";","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Role(invalidRole));","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    public void isValidRole() {","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"        // null name","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e Role.isValidRole(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"        // invalid role","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(Role.isValidRole(\"\")); // empty string","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(Role.isValidRole(\" \")); // spaces only","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(Role.isValidRole(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(Role.isValidRole(\"developer*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"        // valid role","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(Role.isValidRole(\"front end developer\")); // alphabets only","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(Role.isValidRole(\"12345\")); // numbers only","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(Role.isValidRole(\"developer 1st\")); // alphanumeric characters","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(Role.isValidRole(\"Software Developer\")); // with capital letters","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(Role.isValidRole(\"Full Stack Developer Specialising in Front end\")); // long names","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"eugenetangkj":40}},{"path":"src/test/java/seedu/address/model/internship/StatusTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"public class StatusTest {","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Status(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"    public void constructor_invalidStatus_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"        String invalidStatus \u003d \"\";","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Status(invalidStatus));","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    public void isValidStatus() {","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"        // null status","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e Status.isValidStatus(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"        // blank status","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(Status.isValidStatus(\"\")); // empty string","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(Status.isValidStatus(\" \")); // spaces only","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"        // non-default status values","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(Status.isValidStatus(\"waiting\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(Status.isValidStatus(\"interviewing\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(Status.isValidStatus(\"accepted\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(Status.isValidStatus(\"technical interview\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(Status.isValidStatus(\"have not applied\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"seadragon2000341"},"content":"        // valid status for the default values only. Case-insensitive","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(Status.isValidStatus(\"new\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(Status.isValidStatus(\"applied\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(Status.isValidStatus(\"assessment\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(Status.isValidStatus(\"interview\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(Status.isValidStatus(\"offered\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(Status.isValidStatus(\"rejected\"));","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"seadragon2000341"},"content":"        assertTrue(Status.isValidStatus(\"Rejected\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"seadragon2000341"},"content":"        assertTrue(Status.isValidStatus(\"INTERVIEW\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"seadragon2000341"},"content":"        assertTrue(Status.isValidStatus(\"APPlied\"));","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"seadragon2000341"},"content":"        assertTrue(Status.isValidStatus(\"iNTerview\"));","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"eugenetangkj":46,"seadragon2000341":5}},{"path":"src/test/java/seedu/address/model/internship/UniqueInternshipListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.model.internship;","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BACK;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.APPLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.GOOGLE;","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"import java.util.List;","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.exceptions.DuplicateInternshipException;","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.exceptions.InternshipNotFoundException;","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.testutil.InternshipBuilder;","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"public class UniqueInternshipListTest {","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    private final UniqueInternshipList uniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"    public void contains_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInternshipList.contains(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"    public void contains_internshipNotInList_returnsFalse() {","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"        assertFalse(uniqueInternshipList.contains(APPLE));","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"    public void contains_internshipInList_returnsTrue() {","lastModifiedDate":"2023-03-02"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"        uniqueInternshipList.add(APPLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(uniqueInternshipList.contains(APPLE));","lastModifiedDate":"2023-03-02"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"    public void contains_internshipWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-02"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"        uniqueInternshipList.add(APPLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"        Internship editedAlice \u003d new InternshipBuilder(APPLE).withDate(VALID_DATE_GOOGLE).withTags(VALID_TAG_BACK)","lastModifiedDate":"2023-03-02"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"                .build();","lastModifiedDate":"2023-03-02"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"        assertTrue(uniqueInternshipList.contains(editedAlice));","lastModifiedDate":"2023-03-02"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"    public void add_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInternshipList.add(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"    public void add_duplicateInternship_throwsDuplicateInternshipException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"        uniqueInternshipList.add(APPLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(DuplicateInternshipException.class, () -\u003e uniqueInternshipList.add(APPLE));","lastModifiedDate":"2023-03-02"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"    public void setInternship_nullTargetInternship_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInternshipList.setInternship(null, APPLE));","lastModifiedDate":"2023-03-02"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"    public void setInternship_nullEditedInternship_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInternshipList.setInternship(APPLE, null));","lastModifiedDate":"2023-03-02"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"    public void setInternship_targetInternshipNotInList_throwsInternshipNotFoundException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(InternshipNotFoundException.class, () -\u003e uniqueInternshipList.setInternship(APPLE, APPLE));","lastModifiedDate":"2023-03-02"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"    public void setInternship_editedInternshipIsSameInternship_success() {","lastModifiedDate":"2023-03-02"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"        uniqueInternshipList.add(APPLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"        uniqueInternshipList.setInternship(APPLE, APPLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"        UniqueInternshipList expectedUniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2023-03-02"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"        expectedUniqueInternshipList.add(APPLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(expectedUniqueInternshipList, uniqueInternshipList);","lastModifiedDate":"2023-03-02"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"    public void setInternship_editedInternshipHasSameIdentity_success() {","lastModifiedDate":"2023-03-02"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"        uniqueInternshipList.add(APPLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"        Internship editedApple \u003d new InternshipBuilder(APPLE).withDate(VALID_DATE_GOOGLE).withTags(VALID_TAG_BACK)","lastModifiedDate":"2023-03-02"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"                .build();","lastModifiedDate":"2023-03-02"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"        uniqueInternshipList.setInternship(APPLE, editedApple);","lastModifiedDate":"2023-03-02"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"        UniqueInternshipList expectedUniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2023-03-02"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"        expectedUniqueInternshipList.add(editedApple);","lastModifiedDate":"2023-03-02"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(expectedUniqueInternshipList, uniqueInternshipList);","lastModifiedDate":"2023-03-02"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":96,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"    public void setInternship_editedInternshipHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-02"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"        uniqueInternshipList.add(APPLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":99,"author":{"gitId":"eugenetangkj"},"content":"        uniqueInternshipList.setInternship(APPLE, GOOGLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":100,"author":{"gitId":"eugenetangkj"},"content":"        UniqueInternshipList expectedUniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2023-03-02"},{"lineNumber":101,"author":{"gitId":"eugenetangkj"},"content":"        expectedUniqueInternshipList.add(GOOGLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(expectedUniqueInternshipList, uniqueInternshipList);","lastModifiedDate":"2023-03-02"},{"lineNumber":103,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":104,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":105,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":106,"author":{"gitId":"eugenetangkj"},"content":"    public void setInternship_editedInternshipHasNonUniqueIdentity_throwsDuplicateInternshipException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":107,"author":{"gitId":"eugenetangkj"},"content":"        uniqueInternshipList.add(APPLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":108,"author":{"gitId":"eugenetangkj"},"content":"        uniqueInternshipList.add(GOOGLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":109,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(DuplicateInternshipException.class, () -\u003e uniqueInternshipList.setInternship(APPLE, GOOGLE));","lastModifiedDate":"2023-03-02"},{"lineNumber":110,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":111,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":112,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":113,"author":{"gitId":"eugenetangkj"},"content":"    public void remove_nullInternship_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":114,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInternshipList.remove(null));","lastModifiedDate":"2023-03-02"},{"lineNumber":115,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":116,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":117,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":118,"author":{"gitId":"eugenetangkj"},"content":"    public void remove_internshipDoesNotExist_throwsInternshipNotFoundException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":119,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(InternshipNotFoundException.class, () -\u003e uniqueInternshipList.remove(APPLE));","lastModifiedDate":"2023-03-02"},{"lineNumber":120,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":121,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":122,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":123,"author":{"gitId":"eugenetangkj"},"content":"    public void remove_existingInternship_removesInternship() {","lastModifiedDate":"2023-03-02"},{"lineNumber":124,"author":{"gitId":"eugenetangkj"},"content":"        uniqueInternshipList.add(APPLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":125,"author":{"gitId":"eugenetangkj"},"content":"        uniqueInternshipList.remove(APPLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":126,"author":{"gitId":"eugenetangkj"},"content":"        UniqueInternshipList expectedUniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2023-03-02"},{"lineNumber":127,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(expectedUniqueInternshipList, uniqueInternshipList);","lastModifiedDate":"2023-03-02"},{"lineNumber":128,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":129,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":130,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":131,"author":{"gitId":"eugenetangkj"},"content":"    public void setInternships_nullUniqueInternshipList_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":132,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInternshipList","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"eugenetangkj"},"content":"                .setInternships((UniqueInternshipList) null));","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":135,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":136,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":137,"author":{"gitId":"eugenetangkj"},"content":"    public void setInternships_uniqueInternshipList_replacesOwnListWithProvidedUniqueInternshipList() {","lastModifiedDate":"2023-03-02"},{"lineNumber":138,"author":{"gitId":"eugenetangkj"},"content":"        uniqueInternshipList.add(APPLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":139,"author":{"gitId":"eugenetangkj"},"content":"        UniqueInternshipList expectedUniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2023-03-02"},{"lineNumber":140,"author":{"gitId":"eugenetangkj"},"content":"        expectedUniqueInternshipList.add(GOOGLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":141,"author":{"gitId":"eugenetangkj"},"content":"        uniqueInternshipList.setInternships(expectedUniqueInternshipList);","lastModifiedDate":"2023-03-02"},{"lineNumber":142,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(expectedUniqueInternshipList, uniqueInternshipList);","lastModifiedDate":"2023-03-02"},{"lineNumber":143,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":144,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":145,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":146,"author":{"gitId":"eugenetangkj"},"content":"    public void setInternships_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":147,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueInternshipList.setInternships((List\u003cInternship\u003e) null));","lastModifiedDate":"2023-03-02"},{"lineNumber":148,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":149,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":150,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":151,"author":{"gitId":"eugenetangkj"},"content":"    public void setInternships_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-02"},{"lineNumber":152,"author":{"gitId":"eugenetangkj"},"content":"        uniqueInternshipList.add(APPLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":153,"author":{"gitId":"eugenetangkj"},"content":"        List\u003cInternship\u003e internshipList \u003d Collections.singletonList(GOOGLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":154,"author":{"gitId":"eugenetangkj"},"content":"        uniqueInternshipList.setInternships(internshipList);","lastModifiedDate":"2023-03-02"},{"lineNumber":155,"author":{"gitId":"eugenetangkj"},"content":"        UniqueInternshipList expectedUniqueInternshipList \u003d new UniqueInternshipList();","lastModifiedDate":"2023-03-02"},{"lineNumber":156,"author":{"gitId":"eugenetangkj"},"content":"        expectedUniqueInternshipList.add(GOOGLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":157,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(expectedUniqueInternshipList, uniqueInternshipList);","lastModifiedDate":"2023-03-02"},{"lineNumber":158,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":159,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":160,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":161,"author":{"gitId":"eugenetangkj"},"content":"    public void setInternships_listWithDuplicateInternships_throwsDuplicateInternshipException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":162,"author":{"gitId":"eugenetangkj"},"content":"        List\u003cInternship\u003e listWithDuplicateInternships \u003d Arrays.asList(APPLE, APPLE);","lastModifiedDate":"2023-03-02"},{"lineNumber":163,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(DuplicateInternshipException.class, () -\u003e uniqueInternshipList","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"eugenetangkj"},"content":"                .setInternships(listWithDuplicateInternships));","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":166,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":167,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-02"},{"lineNumber":168,"author":{"gitId":"eugenetangkj"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-02"},{"lineNumber":169,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-02"},{"lineNumber":170,"author":{"gitId":"eugenetangkj"},"content":"            -\u003e uniqueInternshipList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-02"},{"lineNumber":171,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-02"},{"lineNumber":172,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"eugenetangkj":172}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedInternshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.storage.JsonAdaptedInternship.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.GOOGLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import java.util.List;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Date;","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Role;","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Status;","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"public class JsonAdaptedInternshipTest {","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    private static final String INVALID_COMPANY_NAME \u003d \"A@pple\";","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    private static final String INVALID_ROLE \u003d \"Software E!gineer\";","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"    private static final String INVALID_STATUS \u003d \" \";","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    private static final String INVALID_DATE \u003d \"1st March 2023\";","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"    private static final String INVALID_TAG \u003d \"#front\";","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"    private static final String VALID_COMPANY_NAME \u003d GOOGLE.getCompanyName().toString();","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"    private static final String VALID_ROLE \u003d GOOGLE.getRole().toString();","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"    private static final String VALID_STATUS \u003d GOOGLE.getStatus().toString();","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"    private static final String VALID_DATE \u003d GOOGLE.getDate().toString();","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d GOOGLE.getTags().stream()","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"    public void toModelType_validInternshipDetails_returnsInternship() throws Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        JsonAdaptedInternship internship \u003d new JsonAdaptedInternship(GOOGLE);","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(GOOGLE, internship.toModelType());","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"    public void toModelType_invalidCompanyName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"                new JsonAdaptedInternship(INVALID_COMPANY_NAME, VALID_ROLE, VALID_STATUS, VALID_DATE, VALID_TAGS);","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"        String expectedMessage \u003d CompanyName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"    public void toModelType_nullCompanyName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        JsonAdaptedInternship internship \u003d new","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"                JsonAdaptedInternship(null, VALID_ROLE, VALID_STATUS, VALID_DATE, VALID_TAGS);","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, CompanyName.class.getSimpleName());","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"    public void toModelType_invalidRole_throwsIllegalValueException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"                new JsonAdaptedInternship(VALID_COMPANY_NAME, INVALID_ROLE, VALID_STATUS, VALID_DATE, VALID_TAGS);","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"        String expectedMessage \u003d Role.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"    public void toModelType_nullRole_throwsIllegalValueException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"                new JsonAdaptedInternship(VALID_COMPANY_NAME, null, VALID_STATUS, VALID_DATE, VALID_TAGS);","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Role.class.getSimpleName());","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"    public void toModelType_invalidStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"                new JsonAdaptedInternship(VALID_COMPANY_NAME, VALID_ROLE, INVALID_STATUS, VALID_DATE, VALID_TAGS);","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"        String expectedMessage \u003d Status.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"    public void toModelType_nullStatus_throwsIllegalValueException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"                new JsonAdaptedInternship(VALID_COMPANY_NAME, VALID_ROLE, null, VALID_DATE, VALID_TAGS);","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Status.class.getSimpleName());","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"    public void toModelType_invalidDate_throwsIllegalValueException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"                new JsonAdaptedInternship(VALID_COMPANY_NAME, VALID_ROLE, VALID_STATUS, INVALID_DATE, VALID_TAGS);","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"        String expectedMessage \u003d Date.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"    public void toModelType_nullDate_throwsIllegalValueException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"eugenetangkj"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"eugenetangkj"},"content":"                new JsonAdaptedInternship(VALID_COMPANY_NAME, VALID_ROLE, VALID_STATUS, null, VALID_TAGS);","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"eugenetangkj"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Date.class.getSimpleName());","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, internship::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":104,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"eugenetangkj"},"content":"    @Test","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"eugenetangkj"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"eugenetangkj"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"eugenetangkj"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"eugenetangkj"},"content":"        JsonAdaptedInternship internship \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"eugenetangkj"},"content":"                new JsonAdaptedInternship(VALID_COMPANY_NAME, VALID_ROLE, VALID_STATUS, VALID_DATE, invalidTags);","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(IllegalValueException.class, internship::toModelType);","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"eugenetangkj":114}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.AMAZON;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.NITENDOGAMES;","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.TESLA;","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.getTypicalAddressBook;","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidInternshipAddressBook.json\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidInternshipAddressBook.json\"));","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"        original.addInternship(TESLA);","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"        original.removeInternship(AMAZON);","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"        original.addInternship(NITENDOGAMES);","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"eugenetangkj":9,"-":101}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.testutil.TypicalInternships;","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"    private static final Path TEST_DATA_FOLDER \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"            Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    private static final Path TYPICAL_INTERNSHIPS_FILE \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"            TEST_DATA_FOLDER.resolve(\"typicalInternshipAddressBook.json\");","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    private static final Path INVALID_INTERNSHIP_FILE \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"            TEST_DATA_FOLDER.resolve(\"invalidInternshipAddressBook.json\");","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    private static final Path DUPLICATE_INTERNSHIP_FILE \u003d","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"            TEST_DATA_FOLDER.resolve(\"duplicateInternshipAddressBook.json\");","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"    public void toModelType_typicalInternshipsFile_success() throws Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_INTERNSHIPS_FILE,","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"        AddressBook typicalInternshipsAddressBook \u003d TypicalInternships.getTypicalAddressBook();","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"        assertEquals(addressBookFromFile, typicalInternshipsAddressBook);","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"    public void toModelType_invalidInternshipFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_INTERNSHIP_FILE,","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"    public void toModelType_duplicateInternships_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_INTERNSHIP_FILE,","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_INTERNSHIP,","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"eugenetangkj":18,"-":33}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.testutil.TypicalInternships.getTypicalAddressBook;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eugenetangkj":1,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withInternship(\"Apple\", \"Google\").build();}","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"     * Adds a new {@code Internship} to the {@code AddressBook} that we are building.","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"    public AddressBookBuilder withInternship(Internship internship) {","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"        addressBook.addInternship(internship);","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eugenetangkj":5,"-":29}},{"path":"src/test/java/seedu/address/testutil/EditInternshipDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Date;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Role;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Status;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":" * A utility class to help with building EditInternshipDescriptor objects.","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"public class EditInternshipDescriptorBuilder {","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    private EditInternshipDescriptor descriptor;","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    public EditInternshipDescriptorBuilder() {","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"        descriptor \u003d new EditInternshipDescriptor();","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"    public EditInternshipDescriptorBuilder(EditInternshipDescriptor descriptor) {","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"        this.descriptor \u003d new EditInternshipDescriptor(descriptor);","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"     * Returns an {@code EditInternshipDescriptor} with fields containing {@code internship}\u0027s details","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"    public EditInternshipDescriptorBuilder(Internship internship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"        descriptor \u003d new EditInternshipDescriptor();","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"        descriptor.setCompanyName(internship.getCompanyName());","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"        descriptor.setRole(internship.getRole());","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        descriptor.setStatus(internship.getStatus());","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"        descriptor.setDate(internship.getDate());","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"        descriptor.setTags(internship.getTags());","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"     * Sets the {@code CompanyName} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"    public EditInternshipDescriptorBuilder withCompanyName(String companyName) {","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"        descriptor.setCompanyName(new CompanyName(companyName));","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"     * Sets the {@code Role} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"    public EditInternshipDescriptorBuilder withRole(String role) {","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"        descriptor.setRole(new Role(role));","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"     * Sets the {@code Status} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"    public EditInternshipDescriptorBuilder withStatus(String status) {","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"        descriptor.setStatus(new Status(status));","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"     * Sets the {@code Date} of the {@code EditInternshipDescriptor} that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"    public EditInternshipDescriptorBuilder withDate(String date) {","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"        descriptor.setDate(new Date(date));","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditInternshipDescriptor}","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"     * that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"    public EditInternshipDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"    public EditInternshipDescriptor build() {","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"        return descriptor;","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"eugenetangkj":87}},{"path":"src/test/java/seedu/address/testutil/InternshipBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.CompanyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Date;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Role;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Status;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":" * A utility class to help with building Internship objects.","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"public class InternshipBuilder {","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"    public static final String DEFAULT_COMPANY_NAME \u003d \"Apple\";","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"    public static final String DEFAULT_ROLE \u003d \"Mobile Developer\";","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    public static final String DEFAULT_STATUS \u003d \"interview\";","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"    public static final String DEFAULT_DATE \u003d \"2023-02-01\";","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    private CompanyName companyName;","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"    private Role role;","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"    private Status status;","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"    private Date date;","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"     * Creates a {@code InternshipBuilder} with the default details.","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"    public InternshipBuilder() {","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"        companyName \u003d new CompanyName(DEFAULT_COMPANY_NAME);","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"        role \u003d new Role(DEFAULT_ROLE);","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"        status \u003d new Status(DEFAULT_STATUS);","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        date \u003d new Date(DEFAULT_DATE);","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"     * Initializes the InternshipBuilder with the data of {@code internshipToCopy}.","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"    public InternshipBuilder(Internship internshipToCopy) {","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"        companyName \u003d internshipToCopy.getCompanyName();","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"        role \u003d internshipToCopy.getRole();","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"        status \u003d internshipToCopy.getStatus();","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"        date \u003d internshipToCopy.getDate();","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"        tags \u003d new HashSet\u003c\u003e(internshipToCopy.getTags());","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"     * Sets the {@code Name} of the {@code Internship} that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"    public InternshipBuilder withCompanyName(String companyName) {","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"        this.companyName \u003d new CompanyName(companyName);","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Internship} that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"    public InternshipBuilder withTags(String ... tags) {","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"     * Sets the {@code Date} of the {@code Internship} that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"    public InternshipBuilder withDate(String date) {","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"        this.date \u003d new Date(date);","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"     * Sets the {@code Role} of the {@code Internship} that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"    public InternshipBuilder withRole(String role) {","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"        this.role \u003d new Role(role);","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"     * Sets the {@code Status} of the {@code Status} that we are building.","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"    public InternshipBuilder withStatus(String status) {","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"        this.status \u003d new Status(status);","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"        return this;","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"    public Internship build() {","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"        return new Internship(companyName, role, status, date, tags);","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"eugenetangkj":96}},{"path":"src/test/java/seedu/address/testutil/InternshipUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMPANY_NAME;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ROLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STATUS;","lastModifiedDate":"2023-03-01"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.logic.commands.EditCommand.EditInternshipDescriptor;","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":" * A utility class for Internship","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"public class InternshipUtil {","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":"     * Returns an add command string for adding the {@code internship}.","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"    public static String getAddCommand(Internship internship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getInternshipDetails(internship);","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"     * Returns the part of command string for the given {@code internship}\u0027s details.","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"    public static String getInternshipDetails(Internship internship) {","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-01"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"        sb.append(PREFIX_COMPANY_NAME + internship.getCompanyName().fullCompanyName + \" \");","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"        sb.append(PREFIX_ROLE + internship.getRole().fullRole + \" \");","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"        sb.append(PREFIX_STATUS + internship.getStatus().toString() + \" \");","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"        sb.append(PREFIX_DATE + internship.getDate().fullDate + \" \");","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"        internship.getTags().stream().forEach(","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"        );","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"     * Returns the part of command string for the given {@code EditInternshipDescriptor}\u0027s details.","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"    public static String getEditInternshipDescriptorDetails(EditInternshipDescriptor descriptor) {","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"        descriptor.getCompanyName().ifPresent(companyName -\u003e sb.append(PREFIX_COMPANY_NAME).append(","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"                companyName.fullCompanyName).append(\" \"));","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"        descriptor.getRole().ifPresent(role -\u003e sb.append(PREFIX_ROLE).append(role.fullRole).append(\" \"));","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"        descriptor.getStatus().ifPresent(status -\u003e sb.append(PREFIX_STATUS).append(status.toString()).append(\" \"));","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"        descriptor.getDate().ifPresent(date -\u003e sb.append(PREFIX_DATE).append(date.fullDate).append(\" \"));","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"            } else {","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"            }","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"eugenetangkj":63}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"     * Returns the middle index of the internship in the {@code model}\u0027s internship list.","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"        return Index.fromOneBased(model.getFilteredInternshipList().size() / 2);","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"     * Returns the last index of the internship in the {@code model}\u0027s internship list.","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"        return Index.fromOneBased(model.getFilteredInternshipList().size());","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"     * Returns the internship in the {@code model}\u0027s internship list at {@code index}.","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"    public static Internship getInternship(Model model, Index index) {","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"        return model.getFilteredInternshipList().get(index.getZeroBased());","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eugenetangkj":8,"-":47}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"    public static final Index INDEX_FIRST_INTERNSHIP \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"    public static final Index INDEX_SECOND_INTERNSHIP \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"    public static final Index INDEX_THIRD_INTERNSHIP \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"eugenetangkj":3,"-":9}},{"path":"src/test/java/seedu/address/testutil/TypicalInternships.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eugenetangkj"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-01"},{"lineNumber":2,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":3,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_NAME_APPLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":4,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMPANY_NAME_GOOGLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":5,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_APPLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_GOOGLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_APPLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ROLE_GOOGLE;","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_APPLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_STATUS_GOOGLE;","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_BACK;","lastModifiedDate":"2023-03-01"},{"lineNumber":12,"author":{"gitId":"eugenetangkj"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRONT;","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":14,"author":{"gitId":"eugenetangkj"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"eugenetangkj"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-01"},{"lineNumber":16,"author":{"gitId":"eugenetangkj"},"content":"import java.util.List;","lastModifiedDate":"2023-03-01"},{"lineNumber":17,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-01"},{"lineNumber":19,"author":{"gitId":"eugenetangkj"},"content":"import seedu.address.model.internship.Internship;","lastModifiedDate":"2023-03-01"},{"lineNumber":20,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":21,"author":{"gitId":"eugenetangkj"},"content":"/**","lastModifiedDate":"2023-03-01"},{"lineNumber":22,"author":{"gitId":"eugenetangkj"},"content":" * A utility class containing a list of {@code Internship} objects to be used in tests.","lastModifiedDate":"2023-03-01"},{"lineNumber":23,"author":{"gitId":"eugenetangkj"},"content":" */","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"eugenetangkj"},"content":"public class TypicalInternships {","lastModifiedDate":"2023-03-01"},{"lineNumber":25,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"eugenetangkj"},"content":"    public static final Internship AMAZON \u003d new InternshipBuilder().withCompanyName(\"Amazon\")","lastModifiedDate":"2023-03-01"},{"lineNumber":27,"author":{"gitId":"eugenetangkj"},"content":"            .withRole(\"Cloud Architect\")","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"eugenetangkj"},"content":"            .withStatus(\"assessment\")","lastModifiedDate":"2023-03-01"},{"lineNumber":29,"author":{"gitId":"eugenetangkj"},"content":"            .withDate(\"2023-02-01\")","lastModifiedDate":"2023-03-01"},{"lineNumber":30,"author":{"gitId":"eugenetangkj"},"content":"            .withTags(\"aws\", \"back\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"eugenetangkj"},"content":"    public static final Internship FOODPANDA \u003d new InternshipBuilder().withCompanyName(\"Food Panda\")","lastModifiedDate":"2023-03-01"},{"lineNumber":32,"author":{"gitId":"eugenetangkj"},"content":"            .withRole(\"Back end Developer\")","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"eugenetangkj"},"content":"            .withStatus(\"assessment\")","lastModifiedDate":"2023-03-01"},{"lineNumber":34,"author":{"gitId":"eugenetangkj"},"content":"            .withDate(\"2023-02-02\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":35,"author":{"gitId":"eugenetangkj"},"content":"    public static final Internship GOLDMAN \u003d new InternshipBuilder().withCompanyName(\"Goldman\")","lastModifiedDate":"2023-03-01"},{"lineNumber":36,"author":{"gitId":"eugenetangkj"},"content":"            .withRole(\"Cyber Security Analyst\")","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"eugenetangkj"},"content":"            .withStatus(\"offered\")","lastModifiedDate":"2023-03-01"},{"lineNumber":38,"author":{"gitId":"eugenetangkj"},"content":"            .withDate(\"2023-02-03\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"eugenetangkj"},"content":"    public static final Internship GRAB \u003d new InternshipBuilder().withCompanyName(\"Grab\")","lastModifiedDate":"2023-03-01"},{"lineNumber":40,"author":{"gitId":"eugenetangkj"},"content":"            .withRole(\"Front end Engineer\")","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"eugenetangkj"},"content":"            .withStatus(\"rejected\")","lastModifiedDate":"2023-03-01"},{"lineNumber":42,"author":{"gitId":"eugenetangkj"},"content":"            .withDate(\"2023-02-04\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":43,"author":{"gitId":"eugenetangkj"},"content":"    public static final Internship RIOTGAMES \u003d new InternshipBuilder().withCompanyName(\"Riot Games\")","lastModifiedDate":"2023-03-01"},{"lineNumber":44,"author":{"gitId":"eugenetangkj"},"content":"            .withRole(\"Game Client Developer\")","lastModifiedDate":"2023-03-01"},{"lineNumber":45,"author":{"gitId":"eugenetangkj"},"content":"            .withStatus(\"interview\")","lastModifiedDate":"2023-03-01"},{"lineNumber":46,"author":{"gitId":"eugenetangkj"},"content":"            .withDate(\"2023-02-05\")","lastModifiedDate":"2023-03-01"},{"lineNumber":47,"author":{"gitId":"eugenetangkj"},"content":"            .withTags(\"game\", \"developer\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":48,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":49,"author":{"gitId":"eugenetangkj"},"content":"    public static final Internship SAMSUNG \u003d new InternshipBuilder().withCompanyName(\"Samsung\")","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"eugenetangkj"},"content":"            .withRole(\"Android Developer\")","lastModifiedDate":"2023-03-01"},{"lineNumber":51,"author":{"gitId":"eugenetangkj"},"content":"            .withStatus(\"applied\")","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"eugenetangkj"},"content":"            .withDate(\"2023-02-06\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":53,"author":{"gitId":"eugenetangkj"},"content":"    public static final Internship SUPERCELLGAMES \u003d new InternshipBuilder().withCompanyName(\"Supercell Games\")","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"eugenetangkj"},"content":"            .withRole(\"Game Designer\")","lastModifiedDate":"2023-03-01"},{"lineNumber":55,"author":{"gitId":"eugenetangkj"},"content":"            .withStatus(\"new\")","lastModifiedDate":"2023-03-01"},{"lineNumber":56,"author":{"gitId":"eugenetangkj"},"content":"            .withDate(\"2023-02-07\")","lastModifiedDate":"2023-03-01"},{"lineNumber":57,"author":{"gitId":"eugenetangkj"},"content":"            .withTags(\"design\", \"game\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":58,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":59,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":60,"author":{"gitId":"eugenetangkj"},"content":"    // Manually added","lastModifiedDate":"2023-03-01"},{"lineNumber":61,"author":{"gitId":"eugenetangkj"},"content":"    public static final Internship TESLA \u003d new InternshipBuilder().withCompanyName(\"Tesla\")","lastModifiedDate":"2023-03-01"},{"lineNumber":62,"author":{"gitId":"eugenetangkj"},"content":"            .withRole(\"App Developer\")","lastModifiedDate":"2023-03-01"},{"lineNumber":63,"author":{"gitId":"eugenetangkj"},"content":"            .withStatus(\"offered\")","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"eugenetangkj"},"content":"            .withDate(\"2023-02-08\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":65,"author":{"gitId":"eugenetangkj"},"content":"    public static final Internship NITENDOGAMES \u003d new InternshipBuilder().withCompanyName(\"Nitendo Games\")","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"eugenetangkj"},"content":"            .withRole(\"Game Developer\")","lastModifiedDate":"2023-03-01"},{"lineNumber":67,"author":{"gitId":"eugenetangkj"},"content":"            .withStatus(\"interview\")","lastModifiedDate":"2023-03-01"},{"lineNumber":68,"author":{"gitId":"eugenetangkj"},"content":"            .withDate(\"2023-02-09\").build();","lastModifiedDate":"2023-03-01"},{"lineNumber":69,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":70,"author":{"gitId":"eugenetangkj"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-01"},{"lineNumber":71,"author":{"gitId":"eugenetangkj"},"content":"    public static final Internship APPLE \u003d new InternshipBuilder().withCompanyName(VALID_COMPANY_NAME_APPLE)","lastModifiedDate":"2023-03-01"},{"lineNumber":72,"author":{"gitId":"eugenetangkj"},"content":"            .withRole(VALID_ROLE_APPLE)","lastModifiedDate":"2023-03-01"},{"lineNumber":73,"author":{"gitId":"eugenetangkj"},"content":"            .withStatus(VALID_STATUS_APPLE)","lastModifiedDate":"2023-03-01"},{"lineNumber":74,"author":{"gitId":"eugenetangkj"},"content":"            .withDate(VALID_DATE_APPLE)","lastModifiedDate":"2023-03-01"},{"lineNumber":75,"author":{"gitId":"eugenetangkj"},"content":"            .withTags(VALID_TAG_FRONT).build();","lastModifiedDate":"2023-03-01"},{"lineNumber":76,"author":{"gitId":"eugenetangkj"},"content":"    public static final Internship GOOGLE \u003d new InternshipBuilder().withCompanyName(VALID_COMPANY_NAME_GOOGLE)","lastModifiedDate":"2023-03-01"},{"lineNumber":77,"author":{"gitId":"eugenetangkj"},"content":"            .withRole(VALID_ROLE_GOOGLE)","lastModifiedDate":"2023-03-01"},{"lineNumber":78,"author":{"gitId":"eugenetangkj"},"content":"            .withStatus(VALID_STATUS_GOOGLE)","lastModifiedDate":"2023-03-01"},{"lineNumber":79,"author":{"gitId":"eugenetangkj"},"content":"            .withDate(VALID_DATE_GOOGLE)","lastModifiedDate":"2023-03-01"},{"lineNumber":80,"author":{"gitId":"eugenetangkj"},"content":"            .withTags(VALID_TAG_FRONT, VALID_TAG_BACK)","lastModifiedDate":"2023-03-01"},{"lineNumber":81,"author":{"gitId":"eugenetangkj"},"content":"            .build();","lastModifiedDate":"2023-03-01"},{"lineNumber":82,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":83,"author":{"gitId":"eugenetangkj"},"content":"    public static final String KEYWORD_MATCHING_GAMES \u003d \"Games\"; // A keyword that matches GAMES","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":85,"author":{"gitId":"eugenetangkj"},"content":"    private TypicalInternships() {} // prevents instantiation","lastModifiedDate":"2023-03-01"},{"lineNumber":86,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":87,"author":{"gitId":"eugenetangkj"},"content":"    /**","lastModifiedDate":"2023-03-01"},{"lineNumber":88,"author":{"gitId":"eugenetangkj"},"content":"     * Returns an {@code AddressBook} with all the typical internships.","lastModifiedDate":"2023-03-01"},{"lineNumber":89,"author":{"gitId":"eugenetangkj"},"content":"     */","lastModifiedDate":"2023-03-01"},{"lineNumber":90,"author":{"gitId":"eugenetangkj"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2023-03-01"},{"lineNumber":91,"author":{"gitId":"eugenetangkj"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2023-03-01"},{"lineNumber":92,"author":{"gitId":"eugenetangkj"},"content":"        for (Internship internship : getTypicalInternships()) {","lastModifiedDate":"2023-03-01"},{"lineNumber":93,"author":{"gitId":"eugenetangkj"},"content":"            ab.addInternship(internship);","lastModifiedDate":"2023-03-01"},{"lineNumber":94,"author":{"gitId":"eugenetangkj"},"content":"        }","lastModifiedDate":"2023-03-01"},{"lineNumber":95,"author":{"gitId":"eugenetangkj"},"content":"        return ab;","lastModifiedDate":"2023-03-01"},{"lineNumber":96,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":97,"author":{"gitId":"eugenetangkj"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":98,"author":{"gitId":"eugenetangkj"},"content":"    public static List\u003cInternship\u003e getTypicalInternships() {","lastModifiedDate":"2023-03-01"},{"lineNumber":99,"author":{"gitId":"eugenetangkj"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(AMAZON, FOODPANDA, GOLDMAN, GRAB, RIOTGAMES, SAMSUNG, SUPERCELLGAMES));","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"eugenetangkj"},"content":"    }","lastModifiedDate":"2023-03-01"},{"lineNumber":101,"author":{"gitId":"eugenetangkj"},"content":"}","lastModifiedDate":"2023-03-01"}],"authorContributionMap":{"eugenetangkj":101}}]
