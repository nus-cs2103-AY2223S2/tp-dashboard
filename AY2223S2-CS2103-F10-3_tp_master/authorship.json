[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103-F10-3/tp/actions/workflows/gradle.yml/badge.svg)](https://github.com/AY2223S2-CS2103-F10-3/tp/actions/workflows/gradle.yml)","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"# MODCheck","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"MODCheck is a contact management app that enables you to manage all your contacts easily that works on Windows, MacOS and Linux!","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"Our app is catered towards fast typist and many features are catered for students that need better management of their contacts.","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"## Main GUI","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"\u003cimg src\u003d\"https://raw.githubusercontent.com/AY2223S2-CS2103-F10-3/tp/master/docs/images/Ui.png\" align\u003d\"center\" height\u003dauto width\u003d\"600\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"\u003cem\u003eMain UI\u003c/em\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"## Key Features","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"### üîç Filter contacts by their tags quickly","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"MODCheck can quickly filter all your contacts based on the tag provided","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"### üíæ Instant saving when changes are made","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"MODCheck can save all your work immediately on the fly","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"### ‚úÖ List all contacts quickly without lag","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"MODCheck can display all your contacts in one go!","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"## Usage","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2023-03-03"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"* Items with `‚Ä¶`‚Äã after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"  e.g. `[t/TAG]‚Ä¶‚Äã` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2023-03-03"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2023-03-03"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2023-03-03"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"### Viewing help : `help`","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"\u003cimg src\u003d\"https://raw.githubusercontent.com/AY2223S2-CS2103-F10-3/tp/master/docs/images/helpMessage.png\" align\u003d\"center\" height\u003dauto width\u003d\"600\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"Format: `help`","lastModifiedDate":"2023-03-03"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"### Adding a person: `add`","lastModifiedDate":"2023-03-03"},{"lineNumber":70,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":71,"author":{"gitId":"Acerizm"},"content":"Adds a person to the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":72,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"Acerizm"},"content":"Format: `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]‚Ä¶‚Äã`","lastModifiedDate":"2023-03-03"},{"lineNumber":74,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"Acerizm"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-03-03"},{"lineNumber":76,"author":{"gitId":"Acerizm"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"Acerizm"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"Acerizm"},"content":"Examples:","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"Acerizm"},"content":"* `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01`","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"Acerizm"},"content":"* `add n/Betsy Crowe t/friend e/betsycrowe@example.com a/Newgate Prison p/1234567 t/criminal`","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"Acerizm"},"content":"### Listing all persons : `list`","lastModifiedDate":"2023-03-03"},{"lineNumber":84,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":85,"author":{"gitId":"Acerizm"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":86,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"Acerizm"},"content":"Format: `list`","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":89,"author":{"gitId":"Acerizm"},"content":"### Editing a person : `edit`","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"joellow88"},"content":"Edits an existing person in ModCheck.","lastModifiedDate":"2023-03-05"},{"lineNumber":92,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"Acerizm"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]‚Ä¶‚Äã`","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"Acerizm"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, ‚Ä¶‚Äã","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"Acerizm"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"Acerizm"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"Acerizm"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"Acerizm"},"content":"* You can remove all the person‚Äôs tags by typing `t/` without","lastModifiedDate":"2023-03-03"},{"lineNumber":100,"author":{"gitId":"Acerizm"},"content":"  specifying any tags after it.","lastModifiedDate":"2023-03-03"},{"lineNumber":101,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":102,"author":{"gitId":"Acerizm"},"content":"Examples:","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"joellow88"},"content":"*  `edit 1 p/91164512` Edits the phone number of the 1st person to be `91164512`.","lastModifiedDate":"2023-03-05"},{"lineNumber":104,"author":{"gitId":"joellow88"},"content":"*  `edit 3 p/90011009 e/bernice512@example.com` Edits the phone number and email address of the 3rd person to be","lastModifiedDate":"2023-03-05"},{"lineNumber":105,"author":{"gitId":"joellow88"},"content":"   90011009 and bernice512@example.com respectively","lastModifiedDate":"2023-03-05"},{"lineNumber":106,"author":{"gitId":"joellow88"},"content":"   ![editCommandExample](docs/images/editCommandExample.png)","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"Acerizm"},"content":"### Locating persons by name: `find`","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"Acerizm"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"Acerizm"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":114,"author":{"gitId":"Acerizm"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2023-03-03"},{"lineNumber":115,"author":{"gitId":"Acerizm"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2023-03-03"},{"lineNumber":116,"author":{"gitId":"Acerizm"},"content":"* Only the name is searched.","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"Acerizm"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"Acerizm"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2023-03-03"},{"lineNumber":119,"author":{"gitId":"Acerizm"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"Acerizm"},"content":"Examples:","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"Acerizm"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"Acerizm"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"Acerizm"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":125,"author":{"gitId":"Acerizm"},"content":"\u003cimg src\u003d\"https://raw.githubusercontent.com/AY2223S2-CS2103-F10-3/tp/master/docs/images/findAlexDavidResult.png\" align\u003d\"center\" height\u003dauto width\u003d\"600\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"Acerizm"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"Acerizm"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"Acerizm"},"content":"\u003cem\u003eresult for \u0027find alex david\u0027\u003c/em\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":129,"author":{"gitId":"Acerizm"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"Acerizm"},"content":"### Deleting a person : `delete`","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"Acerizm"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"Acerizm"},"content":"Format: `delete INDEX`","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"Acerizm"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"Acerizm"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2023-03-03"},{"lineNumber":139,"author":{"gitId":"Acerizm"},"content":"* The index **must be a positive integer** 1, 2, 3, ‚Ä¶‚Äã","lastModifiedDate":"2023-03-03"},{"lineNumber":140,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"Acerizm"},"content":"Examples:","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"Acerizm"},"content":"* `list` followed by `delete 2` deletes the 2nd person in the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":143,"author":{"gitId":"Acerizm"},"content":"* `find Betsy` followed by `delete 1` deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":145,"author":{"gitId":"Acerizm"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":147,"author":{"gitId":"Acerizm"},"content":"Clears all entries from the address book.","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"Acerizm"},"content":"Format: `clear`","lastModifiedDate":"2023-03-03"},{"lineNumber":150,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"Acerizm"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2023-03-03"},{"lineNumber":152,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"Acerizm"},"content":"Exits the program.","lastModifiedDate":"2023-03-03"},{"lineNumber":154,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":155,"author":{"gitId":"Acerizm"},"content":"Format: `exit`","lastModifiedDate":"2023-03-03"},{"lineNumber":156,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":157,"author":{"gitId":"Acerizm"},"content":"### Saving the data","lastModifiedDate":"2023-03-03"},{"lineNumber":158,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":159,"author":{"gitId":"Acerizm"},"content":"AddressBook data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-03-03"},{"lineNumber":160,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":161,"author":{"gitId":"Acerizm"},"content":"### Editing the data file","lastModifiedDate":"2023-03-03"},{"lineNumber":162,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":163,"author":{"gitId":"Acerizm"},"content":"AddressBook data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-03-03"},{"lineNumber":164,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":165,"author":{"gitId":"Acerizm"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-03-03"},{"lineNumber":166,"author":{"gitId":"Acerizm"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-03-03"},{"lineNumber":167,"author":{"gitId":"Acerizm"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":168,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"Acerizm"},"content":"### Filter contacts by tags","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"Acerizm"},"content":"Given the tag, find all contacts that has the specified tag","lastModifiedDate":"2023-03-03"},{"lineNumber":172,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":173,"author":{"gitId":"Acerizm"},"content":"Format: `filter [TAG]`","lastModifiedDate":"2023-03-03"},{"lineNumber":174,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"Acerizm"},"content":"Examples:","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"Acerizm"},"content":"- `filter Family`","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"Acerizm"},"content":"- `filter Friends`","lastModifiedDate":"2023-03-03"},{"lineNumber":178,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":179,"author":{"gitId":"joellow88"},"content":"### Undo past commands","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"joellow88"},"content":"Undoes previous commands that modified ModCheck.","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"joellow88"},"content":"Undo will only undo commands that have successfully modified the data in ModCheck. For example, a successful `add`, ","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"joellow88"},"content":"`edit`, or `delete` command can be undone by the undo command.","lastModifiedDate":"2023-03-14"},{"lineNumber":183,"author":{"gitId":"joellow88"},"content":"Any commands that does not modify the data in ModCheck will NOT be undone. This includes `view`, `find`, and other ","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"joellow88"},"content":"similar commands. Any command that would have modified the data in ModCheck, but was unsuccessful in doing so (eg: ","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"joellow88"},"content":"`add` duplicate person), will NOT be undone.","lastModifiedDate":"2023-03-14"},{"lineNumber":186,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"joellow88"},"content":"Chaining of a few undo commands is supported. Once the undo limit has been reached, the error message `No command to ","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"joellow88"},"content":"undo!` will be shown.","lastModifiedDate":"2023-03-14"},{"lineNumber":189,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":190,"author":{"gitId":"joellow88"},"content":"Format: `undo`","lastModifiedDate":"2023-03-14"},{"lineNumber":191,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":192,"author":{"gitId":"joellow88"},"content":"Use `redo` to reapply the changes undone by undo.","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":194,"author":{"gitId":"Acerizm"},"content":"## Command Summary","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":196,"author":{"gitId":"joellow88"},"content":"| Action     | Format, Examples                                                                                                                                                      |","lastModifiedDate":"2023-03-05"},{"lineNumber":197,"author":{"gitId":"joellow88"},"content":"|------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-05"},{"lineNumber":198,"author":{"gitId":"joellow88"},"content":"| **Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]‚Ä¶‚Äã` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague` |","lastModifiedDate":"2023-03-05"},{"lineNumber":199,"author":{"gitId":"joellow88"},"content":"| **Clear**  | `clear`                                                                                                                                                               |","lastModifiedDate":"2023-03-05"},{"lineNumber":200,"author":{"gitId":"joellow88"},"content":"| **Delete** | `delete INDEX`\u003cbr\u003e e.g., `delete 3`                                                                                                                                   |","lastModifiedDate":"2023-03-05"},{"lineNumber":201,"author":{"gitId":"joellow88"},"content":"| **Edit**   | `edit INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]‚Ä¶‚Äã`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com`                                           |","lastModifiedDate":"2023-03-05"},{"lineNumber":202,"author":{"gitId":"joellow88"},"content":"| **Find**   | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find James Jake`                                                                                                            |","lastModifiedDate":"2023-03-05"},{"lineNumber":203,"author":{"gitId":"joellow88"},"content":"| **List**   | `list`                                                                                                                                                                |","lastModifiedDate":"2023-03-05"},{"lineNumber":204,"author":{"gitId":"joellow88"},"content":"| **Help**   | `help`                                                                                                                                                                |","lastModifiedDate":"2023-03-05"},{"lineNumber":205,"author":{"gitId":"joellow88"},"content":"| **Filter** | `filter [TAG]` \u003cbr\u003e e.g., `filter Girlfriend`, `filter family`                                                                                                        |","lastModifiedDate":"2023-03-05"},{"lineNumber":206,"author":{"gitId":"joellow88"},"content":"| **Undo**   | `undo`                                                                                                                                                                |","lastModifiedDate":"2023-03-14"},{"lineNumber":207,"author":{"gitId":"joellow88"},"content":"| **Redo**   | `redo`                                                                                                                                                                |","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":209,"author":{"gitId":"Acerizm"},"content":"---","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"joellow88":33,"Acerizm":174,"-":2}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"joellow88"},"content":"run {","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"joellow88"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"joellow88":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"#About Us","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"# About us","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"### Joel Low","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"\u003cimg src\u003d\"images/joellow88.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"[[github](https://github.com/joellow88)]","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"[[portfolio](team/joellow88.md)]","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"* Role: Developer","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"### Haiqel","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"\u003cimg src\u003d\"images/acerizm.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"[[github](http://github.com/acerizm)]","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"[[portfolio](team/acerizm.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"* Role: Developer","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"### Gibson","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"\u003cimg src\u003d\"images/gibson0918.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"[[github](http://github.com/Gibson0918)] [[portfolio](team/gibson0918.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Statspadders"},"content":"### Toh Wei Hao","lastModifiedDate":"2023-03-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"Statspadders"},"content":"\u003cimg src\u003d\"images/statspadders.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"Statspadders"},"content":"[[github](http://github.com/Statspadders)]","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"Statspadders"},"content":"[[portfolio](team/statspadders.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"Statspadders"},"content":"* Responsibilities: Java","lastModifiedDate":"2023-03-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"elvern18"},"content":"### Elvern Tan","lastModifiedDate":"2023-03-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"elvern18"},"content":"\u003cimg src\u003d\"images/elvern18.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"elvern18"},"content":"[[github](http://github.com/elvern18)]","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"elvern18"},"content":"[[portfolio](team/elvern18.md)]","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"elvern18":5,"joellow88":7,"-":32,"Acerizm":5,"Statspadders":5,"Gibson0918":3}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"Acerizm"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc.","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"Acerizm"},"content":"The UI also consists of a `LoginWindow` that is made up of parts e.g. `WelcomeSection`,`LoadingSection`,`CreatePasswordSection` etc.","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"Acerizm"},"content":"All these, including the `MainWindow` and `LoginWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user‚Äôs preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"Acerizm"},"content":"* stores a `UserData` object that represents the user\u0027s personal data. This is exposed to the outside as a `ReadOnlyUserData` objects.","lastModifiedDate":"2023-04-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"Acerizm"},"content":"* can also save the user\u0027s personal data in json format, and read them back into corresponding objects","lastModifiedDate":"2023-04-06"},{"lineNumber":150,"author":{"gitId":"Acerizm"},"content":"* inherits from `AddressBookStorage`,`UserPrefStorage` and `UserDataStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-04-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"joellow88"},"content":"### Undo/redo feature","lastModifiedDate":"2023-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"joellow88"},"content":"#### Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"joellow88"},"content":"The undo/redo mechanism is facilitated by `UndoManager` and an `Undoable` interface. The `UndoManager` is ","lastModifiedDate":"2023-03-23"},{"lineNumber":168,"author":{"gitId":"joellow88"},"content":"responsible for saving the version history of a ModelManager. The `Undoable` interface is implemented by a ","lastModifiedDate":"2023-03-23"},{"lineNumber":169,"author":{"gitId":"joellow88"},"content":"`Model` to indicate that it has support for undo and redo functionality. ","lastModifiedDate":"2023-03-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"joellow88"},"content":"The `Undoable` interface requires the implementation of the following functions:","lastModifiedDate":"2023-03-23"},{"lineNumber":173,"author":{"gitId":"joellow88"},"content":"* `Undoable#hasUndoableCommand()`: To allow the user of the `Undoable` object to check if a command exists that can ","lastModifiedDate":"2023-03-23"},{"lineNumber":174,"author":{"gitId":"joellow88"},"content":"  be undone","lastModifiedDate":"2023-03-23"},{"lineNumber":175,"author":{"gitId":"joellow88"},"content":"* `Undoable#hasRedoableCommand()`: To allow the user of the `Undoable` object to check if a command exists that can","lastModifiedDate":"2023-03-23"},{"lineNumber":176,"author":{"gitId":"joellow88"},"content":"  be redone","lastModifiedDate":"2023-03-23"},{"lineNumber":177,"author":{"gitId":"joellow88"},"content":"* `Undoable#executeUndo()`: To allow the user of the `Undoable` object to undo to a previous saved state","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"joellow88"},"content":"* `Undoable#executeRedo()`: To allow the user of the `Undoable` object to redo to a later saved state","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":180,"author":{"gitId":"joellow88"},"content":"The `ModelManager` object implements the `Undoable` interface. It has an `UndoManager` object to manage the ","lastModifiedDate":"2023-03-23"},{"lineNumber":181,"author":{"gitId":"joellow88"},"content":"implementation in the various required undo and redo functionality. The `UndoManager` object is responsible for ","lastModifiedDate":"2023-03-23"},{"lineNumber":182,"author":{"gitId":"joellow88"},"content":"saving previous versions of `AddressBook`, keeping track of which version is currently shown to the user, and ","lastModifiedDate":"2023-03-23"},{"lineNumber":183,"author":{"gitId":"joellow88"},"content":"yielding saved versions of `AddressBook` objects whenever requested.","lastModifiedDate":"2023-03-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"joellow88"},"content":"Step 1. The user launches the application for the first time. The `UndoManager` will be initialized with ","lastModifiedDate":"2023-03-23"},{"lineNumber":188,"author":{"gitId":"joellow88"},"content":"`addressBookHistory` containing only the current addressBook state. The `versionTracker` variable is initialized to ","lastModifiedDate":"2023-03-23"},{"lineNumber":189,"author":{"gitId":"joellow88"},"content":"0, indicating 0 undos have been executed so far, and the version of ModCheck shown is the most recent version.","lastModifiedDate":"2023-03-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"joellow88"},"content":"![UndoRedoState0](images/UndoRedoState0new.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"joellow88"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. ","lastModifiedDate":"2023-03-23"},{"lineNumber":194,"author":{"gitId":"joellow88"},"content":"The `delete` command calls `UndoManager#addToHistory()`, causing the modified state of the address book after the ","lastModifiedDate":"2023-03-23"},{"lineNumber":195,"author":{"gitId":"joellow88"},"content":"`delete 5` command executes to be saved in `addressBookHistory`. The `versionTracker` variable stays at 0 as the ","lastModifiedDate":"2023-03-23"},{"lineNumber":196,"author":{"gitId":"joellow88"},"content":"addressBook state after deleting is still the most recent version.","lastModifiedDate":"2023-03-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"joellow88"},"content":"![UndoRedoState1](images/UndoRedoState1new.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"joellow88"},"content":"Step 3. The user executes `add n/David ‚Ä¶‚Äã` to add a new person. ","lastModifiedDate":"2023-03-23"},{"lineNumber":201,"author":{"gitId":"joellow88"},"content":"The `add` command also calls `UndoManager#addToHistory()`, causing another modified address book state to be saved into ","lastModifiedDate":"2023-03-23"},{"lineNumber":202,"author":{"gitId":"joellow88"},"content":"the `addressBookHistory`. Similarly, `versionTracker` remains at 0.","lastModifiedDate":"2023-03-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"joellow88"},"content":"![UndoRedoState2](images/UndoRedoState2new.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"joellow88"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it ","lastModifiedDate":"2023-03-23"},{"lineNumber":207,"author":{"gitId":"joellow88"},"content":"will not call `UndoManager#addToHistory()`, so the address book state will not be saved into the `addressBookHistory`.","lastModifiedDate":"2023-03-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"joellow88"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the ","lastModifiedDate":"2023-03-23"},{"lineNumber":212,"author":{"gitId":"joellow88"},"content":"`undo` command. The `undo` command will call `UndoManager#getPreviousHistory()`. This method increases the ","lastModifiedDate":"2023-03-23"},{"lineNumber":213,"author":{"gitId":"joellow88"},"content":"`versionTracker` variable by 1. Internally, the UndoManager will find the first most recent saved history, and ","lastModifiedDate":"2023-03-23"},{"lineNumber":214,"author":{"gitId":"joellow88"},"content":"returns a copy of the addressBook representing that. ","lastModifiedDate":"2023-03-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"joellow88"},"content":"![UndoRedoState3](images/UndoRedoState3new.png)","lastModifiedDate":"2023-03-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"joellow88"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If `versionHistory` is equal to the ","lastModifiedDate":"2023-03-23"},{"lineNumber":219,"author":{"gitId":"joellow88"},"content":"number of number of saved histories, there is no more saved history to undo. The `undo` command uses ","lastModifiedDate":"2023-03-23"},{"lineNumber":220,"author":{"gitId":"joellow88"},"content":"`Model#hasUndoableCommand()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2023-03-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"joellow88"},"content":"The `redo` command does the opposite‚Äâ‚Äî‚Äâit calls `Undoable#getNextHistory()`, which decreases the `versionTracker` by ","lastModifiedDate":"2023-03-23"},{"lineNumber":226,"author":{"gitId":"joellow88"},"content":"1, and returns a copy of the addressBook representing the state of the addressBook after redoing.","lastModifiedDate":"2023-03-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"joellow88"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `versionTracker` is 0, pointing ","lastModifiedDate":"2023-03-23"},{"lineNumber":229,"author":{"gitId":"joellow88"},"content":"to the latest address book state, then there are no undone AddressBook states to restore. The ","lastModifiedDate":"2023-03-23"},{"lineNumber":230,"author":{"gitId":"joellow88"},"content":"`redo` command uses `Undoable#hasRedoableCommand()` to check if this is the case. If so, it will return an error to the ","lastModifiedDate":"2023-03-23"},{"lineNumber":231,"author":{"gitId":"joellow88"},"content":"user rather than attempting to perform the redo.","lastModifiedDate":"2023-03-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"joellow88"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as ","lastModifiedDate":"2023-03-23"},{"lineNumber":236,"author":{"gitId":"joellow88"},"content":"`list`, will usually not call `UndoManager#addToHistory()`. Thus, the `addressBookHistory` remains unchanged.","lastModifiedDate":"2023-03-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"joellow88"},"content":"![UndoRedoState4](images/UndoRedoState4new.png) ","lastModifiedDate":"2023-03-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"joellow88"},"content":"Step 6. The user executes `clear`, which calls `UndoManager#addToHistory()`. Since the `versionTracker` is not ","lastModifiedDate":"2023-03-23"},{"lineNumber":241,"author":{"gitId":"joellow88"},"content":"0, all address book states from index 0 to one before the current version will be purged, and the versionTracker ","lastModifiedDate":"2023-03-23"},{"lineNumber":242,"author":{"gitId":"joellow88"},"content":"will be reset to 0. Reason: It no longer makes sense to redo the \"untracked heads\". This is the behavior that most ","lastModifiedDate":"2023-03-23"},{"lineNumber":243,"author":{"gitId":"joellow88"},"content":"modern desktop applications follow.","lastModifiedDate":"2023-03-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"joellow88"},"content":"![UndoRedoState5](images/UndoRedoState5new.png) ","lastModifiedDate":"2023-03-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"Acerizm"},"content":"### Filtering contacts","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"Acerizm"},"content":"**Purpose:** Allow users to filter contacts based on criteria given","lastModifiedDate":"2023-03-27"},{"lineNumber":249,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":250,"author":{"gitId":"Acerizm"},"content":"Formats: ","lastModifiedDate":"2023-03-27"},{"lineNumber":251,"author":{"gitId":"Acerizm"},"content":"1. `filter n/NAME `","lastModifiedDate":"2023-03-27"},{"lineNumber":252,"author":{"gitId":"Acerizm"},"content":"2. `filter p/PHONE_NUMBER`","lastModifiedDate":"2023-03-27"},{"lineNumber":253,"author":{"gitId":"Acerizm"},"content":"3. `filter e/EMAIL_ADDRESS`","lastModifiedDate":"2023-03-27"},{"lineNumber":254,"author":{"gitId":"Acerizm"},"content":"4. `filter d/DESCRIPTION`","lastModifiedDate":"2023-03-27"},{"lineNumber":255,"author":{"gitId":"Acerizm"},"content":"5. `filter t/TAG`","lastModifiedDate":"2023-03-27"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":257,"author":{"gitId":"Acerizm"},"content":"#### Implementation","lastModifiedDate":"2023-03-27"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":259,"author":{"gitId":"Gibson0918"},"content":"The implementation of this feature requires \u0027FilterCommand\u0027 and \u0027FilterCommandParser\u0027.                                                                                      ","lastModifiedDate":"2023-04-05"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":261,"author":{"gitId":"Acerizm"},"content":"Below is an activity diagram that shows what happens when a user executes the `filter` command","lastModifiedDate":"2023-03-27"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"Acerizm"},"content":"![FilterActivityDiagram](images/filter/filterActivityDiagram.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":265,"author":{"gitId":"Gibson0918"},"content":"### Viewing contacts","lastModifiedDate":"2023-04-05"},{"lineNumber":266,"author":{"gitId":"Gibson0918"},"content":"**Purpose:** Allow user to view contacts that are hidden by default based on index given","lastModifiedDate":"2023-04-05"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"Gibson0918"},"content":"Formats:","lastModifiedDate":"2023-04-05"},{"lineNumber":269,"author":{"gitId":"Gibson0918"},"content":"1. `view \u003cindex\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":270,"author":{"gitId":"Gibson0918"},"content":"2. `view \u003cindex\u003e \u003cindex\u003e ...`","lastModifiedDate":"2023-04-05"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":272,"author":{"gitId":"Gibson0918"},"content":"#### Implementation","lastModifiedDate":"2023-04-05"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":274,"author":{"gitId":"Gibson0918"},"content":"The implementation of this feature requires `ViewCommand`, `ViewCommandParser` and `MatchNamePredicate`.","lastModifiedDate":"2023-04-05"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"Gibson0918"},"content":"Below is an activity diagram that shows what happens when a user executes the `view` command.","lastModifiedDate":"2023-04-05"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":278,"author":{"gitId":"Gibson0918"},"content":"![ViewActivityDiagram](images/view/viewActivityDiagram.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":280,"author":{"gitId":"Gibson0918"},"content":"### Export contacts","lastModifiedDate":"2023-04-05"},{"lineNumber":281,"author":{"gitId":"Gibson0918"},"content":"**Purpose:** Allow user to export contacts that are hidden by default based on index given","lastModifiedDate":"2023-04-05"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":283,"author":{"gitId":"Gibson0918"},"content":"Formats:","lastModifiedDate":"2023-04-05"},{"lineNumber":284,"author":{"gitId":"Gibson0918"},"content":"1. `export \u003cindex\u003e`","lastModifiedDate":"2023-04-05"},{"lineNumber":285,"author":{"gitId":"Gibson0918"},"content":"2. `export \u003cindex\u003e \u003cindex\u003e ...`","lastModifiedDate":"2023-04-05"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":287,"author":{"gitId":"Gibson0918"},"content":"#### Implementation","lastModifiedDate":"2023-04-05"},{"lineNumber":288,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":289,"author":{"gitId":"Gibson0918"},"content":"The implementation of this feature requires `ExportCommand` and `ExportCommandParser`.","lastModifiedDate":"2023-04-05"},{"lineNumber":290,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":291,"author":{"gitId":"Gibson0918"},"content":"Below is an activity diagram that shows what happens when a user executes the `export` command.","lastModifiedDate":"2023-04-05"},{"lineNumber":292,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":293,"author":{"gitId":"Gibson0918"},"content":"![ExportActivityDiagram](images/export/exportActivityDiagram.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":301,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":302,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":304,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"Acerizm"},"content":"* students from NUS","lastModifiedDate":"2023-03-03"},{"lineNumber":315,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":319,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"**Value proposition**: manage contacts faster than a typical mouse/GUI driven app","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":324,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"| Priority | As a ‚Ä¶‚Äã                    | I want to ‚Ä¶‚Äã                                        | So that I can‚Ä¶‚Äã                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"joellow88"},"content":"|----------|----------------------------|-----------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-03-23"},{"lineNumber":330,"author":{"gitId":"Acerizm"},"content":"| `* * *`  | Student                    | see usage instructions                              | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2023-03-03"},{"lineNumber":331,"author":{"gitId":"joellow88"},"content":"| `* * *`  | Student                    | add a new contact                                   |                                                                        |","lastModifiedDate":"2023-03-05"},{"lineNumber":332,"author":{"gitId":"joellow88"},"content":"| `* * *`  | Student                    | delete a contact                                    | remove a contact that I no longer need                                 |","lastModifiedDate":"2023-03-05"},{"lineNumber":333,"author":{"gitId":"Gibson0918"},"content":"| `* * *`  | Student                    | view a person\u0027s contact details                     | contact the person(TA/Professor) to seek help for my tutorials         |","lastModifiedDate":"2023-03-04"},{"lineNumber":334,"author":{"gitId":"joellow88"},"content":"| `* * *`  | Student                    | find a contact by name                              | locate details of persons without having to go through the entire list |","lastModifiedDate":"2023-03-05"},{"lineNumber":335,"author":{"gitId":"elvern18"},"content":"| `* * *`  | Student                    | filter my contacts by tag                           | find my contacts that is related to the tag quickly                    |","lastModifiedDate":"2023-03-05"},{"lineNumber":336,"author":{"gitId":"joellow88"},"content":"| `* * *`  | Student                    | edit a contact                                      | update the contact details of my contacts when they change             |","lastModifiedDate":"2023-03-05"},{"lineNumber":337,"author":{"gitId":"joellow88"},"content":"| `* * *`  | Student                    | assign modules to my contacts                       | know which of my contacts are in charge of which modules               |","lastModifiedDate":"2023-03-05"},{"lineNumber":338,"author":{"gitId":"joellow88"},"content":"| `* * *`  | Student                    | filter my contacts by module                        | find all the relevant contacts of a module I am taking                 |","lastModifiedDate":"2023-03-05"},{"lineNumber":339,"author":{"gitId":"joellow88"},"content":"| `* *`    | Student                    | undo my last command                                | reverse my actions if i made a wrong change to ModCheck                |","lastModifiedDate":"2023-03-05"},{"lineNumber":340,"author":{"gitId":"joellow88"},"content":"| `* *`    | Student                    | be able to set certain fields as \u0027unknown\u0027          | add contacts that I may not know all the details of                    |","lastModifiedDate":"2023-03-05"},{"lineNumber":341,"author":{"gitId":"Acerizm"},"content":"| `* *`    | Student                    | hide private contact details                        | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2023-03-03"},{"lineNumber":342,"author":{"gitId":"elvern18"},"content":"| `* *`    | Student                    | delete all contacts                                 | remove all contacts for a fresh start                                  |","lastModifiedDate":"2023-03-04"},{"lineNumber":343,"author":{"gitId":"elvern18"},"content":"| `*`      | Student with many contacts | sort contacts by name                               | locate a contact easily                                                |","lastModifiedDate":"2023-03-05"},{"lineNumber":344,"author":{"gitId":"joellow88"},"content":"| `*`      | Student                    | use the arrow keys to re-enter my previous commands | enter recently used commands much faster                               |","lastModifiedDate":"2023-03-05"},{"lineNumber":345,"author":{"gitId":"Gibson0918"},"content":"| `*`      | Student                    | export selected contacts                            | transfer those contacts easily                                         |","lastModifiedDate":"2023-04-05"},{"lineNumber":346,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"Acerizm"},"content":"(For all use cases below, the **System** is the `ModCheck` and the **Actor** is the `Student`, unless specified otherwise)","lastModifiedDate":"2023-03-03"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"Statspadders"},"content":"**Use case: Add a person**","lastModifiedDate":"2023-03-05"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":354,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-03-05"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":356,"author":{"gitId":"Statspadders"},"content":"1. Student requests to add person. ","lastModifiedDate":"2023-03-05"},{"lineNumber":357,"author":{"gitId":"Statspadders"},"content":"2. Student enter the required details and submits.","lastModifiedDate":"2023-03-05"},{"lineNumber":358,"author":{"gitId":"Statspadders"},"content":"3. ModCheck creates a new person.","lastModifiedDate":"2023-03-05"},{"lineNumber":359,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":360,"author":{"gitId":"Statspadders"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":361,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":362,"author":{"gitId":"Statspadders"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":363,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":364,"author":{"gitId":"Statspadders"},"content":"* 2a. Person already exists in ModCheck","lastModifiedDate":"2023-03-23"},{"lineNumber":365,"author":{"gitId":"Statspadders"},"content":"    * 2a1. ModCheck shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":366,"author":{"gitId":"Statspadders"},"content":"    Use case continues at step 2.","lastModifiedDate":"2023-03-05"},{"lineNumber":367,"author":{"gitId":"Statspadders"},"content":"* 2b. Input does not follow the required format","lastModifiedDate":"2023-03-23"},{"lineNumber":368,"author":{"gitId":"Statspadders"},"content":"    * 2b1. ModCheck shows an error message.","lastModifiedDate":"2023-03-05"},{"lineNumber":369,"author":{"gitId":"Statspadders"},"content":"    Use case continues at step 2.","lastModifiedDate":"2023-03-05"},{"lineNumber":370,"author":{"gitId":"Statspadders"},"content":"* 2c. Input consists of missing details","lastModifiedDate":"2023-03-23"},{"lineNumber":371,"author":{"gitId":"Statspadders"},"content":"    * 2c1. ModCheck shows an error message.","lastModifiedDate":"2023-03-23"},{"lineNumber":372,"author":{"gitId":"Statspadders"},"content":"* 2d. Input contains incorrect details","lastModifiedDate":"2023-03-23"},{"lineNumber":373,"author":{"gitId":"Statspadders"},"content":"    * 2d1. ModCheck shows an error message.","lastModifiedDate":"2023-03-23"},{"lineNumber":374,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":375,"author":{"gitId":"elvern18"},"content":"#### Use case: Delete a single person","lastModifiedDate":"2023-03-30"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"Acerizm"},"content":"1.  Student requests to list persons","lastModifiedDate":"2023-03-03"},{"lineNumber":380,"author":{"gitId":"Acerizm"},"content":"2.  ModCheck shows a list of persons","lastModifiedDate":"2023-03-03"},{"lineNumber":381,"author":{"gitId":"Acerizm"},"content":"3.  Student requests to delete a specific person in the list","lastModifiedDate":"2023-03-03"},{"lineNumber":382,"author":{"gitId":"Acerizm"},"content":"4.  ModCheck deletes the person","lastModifiedDate":"2023-03-03"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":384,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"Acerizm"},"content":"    * 3a1. ModCheck shows an error message.","lastModifiedDate":"2023-03-03"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":399,"author":{"gitId":"elvern18"},"content":"#### Use case: Delete multiple persons ","lastModifiedDate":"2023-03-30"},{"lineNumber":400,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":401,"author":{"gitId":"elvern18"},"content":"**MSS**","lastModifiedDate":"2023-03-24"},{"lineNumber":402,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":403,"author":{"gitId":"elvern18"},"content":"1.  Student requests to list persons","lastModifiedDate":"2023-03-24"},{"lineNumber":404,"author":{"gitId":"elvern18"},"content":"2.  ModCheck shows a list of persons","lastModifiedDate":"2023-03-24"},{"lineNumber":405,"author":{"gitId":"elvern18"},"content":"3.  Student requests to delete multiple persons in the list","lastModifiedDate":"2023-03-30"},{"lineNumber":406,"author":{"gitId":"elvern18"},"content":"4.  ModCheck deletes the persons","lastModifiedDate":"2023-03-30"},{"lineNumber":407,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":408,"author":{"gitId":"elvern18"},"content":"    Use case ends.","lastModifiedDate":"2023-03-24"},{"lineNumber":409,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":410,"author":{"gitId":"elvern18"},"content":"**Extensions**","lastModifiedDate":"2023-03-24"},{"lineNumber":411,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":412,"author":{"gitId":"elvern18"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-24"},{"lineNumber":413,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":414,"author":{"gitId":"elvern18"},"content":"  Use case ends.","lastModifiedDate":"2023-03-24"},{"lineNumber":415,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":416,"author":{"gitId":"elvern18"},"content":"* 3a. A given index is invalid.","lastModifiedDate":"2023-03-24"},{"lineNumber":417,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":418,"author":{"gitId":"elvern18"},"content":"    * 3a1. ModCheck shows an error message.","lastModifiedDate":"2023-03-24"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":420,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-24"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":422,"author":{"gitId":"elvern18"},"content":"#### Use case: Delete single person by name","lastModifiedDate":"2023-03-30"},{"lineNumber":423,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":424,"author":{"gitId":"elvern18"},"content":"**MSS**","lastModifiedDate":"2023-03-30"},{"lineNumber":425,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":426,"author":{"gitId":"elvern18"},"content":"1.  Student requests to list persons","lastModifiedDate":"2023-03-30"},{"lineNumber":427,"author":{"gitId":"elvern18"},"content":"2.  ModCheck shows a list of persons","lastModifiedDate":"2023-03-30"},{"lineNumber":428,"author":{"gitId":"elvern18"},"content":"3.  Student requests to delete person in the list by their name.","lastModifiedDate":"2023-03-30"},{"lineNumber":429,"author":{"gitId":"elvern18"},"content":"4.  ModCheck deletes the person","lastModifiedDate":"2023-03-30"},{"lineNumber":430,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":431,"author":{"gitId":"elvern18"},"content":"    Use case ends.","lastModifiedDate":"2023-03-30"},{"lineNumber":432,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":433,"author":{"gitId":"elvern18"},"content":"**Extensions**","lastModifiedDate":"2023-03-30"},{"lineNumber":434,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":435,"author":{"gitId":"elvern18"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-30"},{"lineNumber":436,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":437,"author":{"gitId":"elvern18"},"content":"  Use case ends.","lastModifiedDate":"2023-03-30"},{"lineNumber":438,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":439,"author":{"gitId":"elvern18"},"content":"* 3a. There is no person with the specified name.","lastModifiedDate":"2023-03-30"},{"lineNumber":440,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":441,"author":{"gitId":"elvern18"},"content":"    * 3a1. ModCheck shows an error message and empty list.","lastModifiedDate":"2023-03-30"},{"lineNumber":442,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":443,"author":{"gitId":"elvern18"},"content":"      Use case ends.","lastModifiedDate":"2023-03-30"},{"lineNumber":444,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":445,"author":{"gitId":"elvern18"},"content":"* 3b. There are multiple persons with the same name.","lastModifiedDate":"2023-03-30"},{"lineNumber":446,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":447,"author":{"gitId":"elvern18"},"content":"    * 3b1. ModCheck shows an error message with a list of persons with the same name.","lastModifiedDate":"2023-03-30"},{"lineNumber":448,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":449,"author":{"gitId":"elvern18"},"content":"      Use case ends.","lastModifiedDate":"2023-03-30"},{"lineNumber":450,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":451,"author":{"gitId":"Acerizm"},"content":"#### Use case: Filter contacts ","lastModifiedDate":"2023-03-27"},{"lineNumber":452,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":453,"author":{"gitId":"Acerizm"},"content":"**MSS**","lastModifiedDate":"2023-03-03"},{"lineNumber":454,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":455,"author":{"gitId":"Acerizm"},"content":"1. Student requests to filter contacts with the required details","lastModifiedDate":"2023-03-27"},{"lineNumber":456,"author":{"gitId":"Acerizm"},"content":"2. ModCheck shows a list of persons based on details given","lastModifiedDate":"2023-03-27"},{"lineNumber":457,"author":{"gitId":"Acerizm"},"content":"    ","lastModifiedDate":"2023-03-03"},{"lineNumber":458,"author":{"gitId":"Acerizm"},"content":"    Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":459,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":460,"author":{"gitId":"Acerizm"},"content":"**Extensions**","lastModifiedDate":"2023-03-03"},{"lineNumber":461,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":462,"author":{"gitId":"Acerizm"},"content":"* 2a. There are no contacts that matches the details given","lastModifiedDate":"2023-03-27"},{"lineNumber":463,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":464,"author":{"gitId":"Acerizm"},"content":"    * 2a1. ModCheck shows an error message.","lastModifiedDate":"2023-03-03"},{"lineNumber":465,"author":{"gitId":"Acerizm"},"content":"        ","lastModifiedDate":"2023-03-03"},{"lineNumber":466,"author":{"gitId":"Acerizm"},"content":"        Use case ends.","lastModifiedDate":"2023-03-03"},{"lineNumber":467,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":468,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":469,"author":{"gitId":"Gibson0918"},"content":"#### Use case: Export contacts","lastModifiedDate":"2023-04-05"},{"lineNumber":470,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":471,"author":{"gitId":"Gibson0918"},"content":"**MSS**","lastModifiedDate":"2023-04-05"},{"lineNumber":472,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":473,"author":{"gitId":"Gibson0918"},"content":"1. Student requests to export selected contact","lastModifiedDate":"2023-04-05"},{"lineNumber":474,"author":{"gitId":"Gibson0918"},"content":"2. ModCheck shows a list of persons selected","lastModifiedDate":"2023-04-05"},{"lineNumber":475,"author":{"gitId":"Gibson0918"},"content":"3. ModChecks exports selected contacts","lastModifiedDate":"2023-04-05"},{"lineNumber":476,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":477,"author":{"gitId":"Gibson0918"},"content":"   Use case ends.","lastModifiedDate":"2023-04-05"},{"lineNumber":478,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":479,"author":{"gitId":"Gibson0918"},"content":"**Extensions**","lastModifiedDate":"2023-04-05"},{"lineNumber":480,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":481,"author":{"gitId":"Gibson0918"},"content":"* 1a. Student requests to export multiple contacts ","lastModifiedDate":"2023-04-05"},{"lineNumber":482,"author":{"gitId":"Gibson0918"},"content":"  * Use case resumes at step 2.","lastModifiedDate":"2023-04-05"},{"lineNumber":483,"author":{"gitId":"Gibson0918"},"content":"  ","lastModifiedDate":"2023-04-05"},{"lineNumber":484,"author":{"gitId":"Gibson0918"},"content":"* 1b. Student provide invalid request to export contacts","lastModifiedDate":"2023-04-05"},{"lineNumber":485,"author":{"gitId":"Gibson0918"},"content":"  * 1b1. ModCheck shows an error message.","lastModifiedDate":"2023-04-05"},{"lineNumber":486,"author":{"gitId":"Gibson0918"},"content":"  * Use case ends.","lastModifiedDate":"2023-04-05"},{"lineNumber":487,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":488,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":489,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":490,"author":{"gitId":"joellow88"},"content":"#### Use case: View a person\u0027s contact details","lastModifiedDate":"2023-03-05"},{"lineNumber":491,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":492,"author":{"gitId":"Gibson0918"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":493,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":494,"author":{"gitId":"Gibson0918"},"content":"1.  Student requests to list contacts.","lastModifiedDate":"2023-03-24"},{"lineNumber":495,"author":{"gitId":"Gibson0918"},"content":"2.  ModCheck shows a list of contacts.","lastModifiedDate":"2023-03-24"},{"lineNumber":496,"author":{"gitId":"Gibson0918"},"content":"3.  Student requests to view a specific contact in the list.","lastModifiedDate":"2023-03-24"},{"lineNumber":497,"author":{"gitId":"Gibson0918"},"content":"4.  ModCheck displays the person\u0027s contact details.","lastModifiedDate":"2023-03-24"},{"lineNumber":498,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":499,"author":{"gitId":"Gibson0918"},"content":"    Use case ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":500,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":501,"author":{"gitId":"Gibson0918"},"content":"**Extensions**","lastModifiedDate":"2023-03-04"},{"lineNumber":502,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":503,"author":{"gitId":"Gibson0918"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-04"},{"lineNumber":504,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":505,"author":{"gitId":"Gibson0918"},"content":"  Use case ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":506,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":507,"author":{"gitId":"Gibson0918"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2023-03-04"},{"lineNumber":508,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":509,"author":{"gitId":"Gibson0918"},"content":"    * 3a1. ModCheck shows an error message.","lastModifiedDate":"2023-03-04"},{"lineNumber":510,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":511,"author":{"gitId":"Gibson0918"},"content":"      Use case ends.","lastModifiedDate":"2023-04-05"},{"lineNumber":512,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"Gibson0918"},"content":"* 3b.  User requests to view multiple people in the list.","lastModifiedDate":"2023-03-24"},{"lineNumber":514,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":515,"author":{"gitId":"Gibson0918"},"content":"    * 3b1. ModCheck validates indexes given is correct. ","lastModifiedDate":"2023-03-07"},{"lineNumber":516,"author":{"gitId":"Gibson0918"},"content":"    * 3b2. ModCheck displays all person\u0027s contact details. ","lastModifiedDate":"2023-03-24"},{"lineNumber":517,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":518,"author":{"gitId":"Gibson0918"},"content":"      Use case ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":519,"author":{"gitId":"Gibson0918"},"content":"  ","lastModifiedDate":"2023-03-04"},{"lineNumber":520,"author":{"gitId":"Gibson0918"},"content":"      * 3b1a. ModCheck validates indexes given is incorrect.","lastModifiedDate":"2023-03-24"},{"lineNumber":521,"author":{"gitId":"Gibson0918"},"content":"      * 3b1b. ModChecks shows an error message. ","lastModifiedDate":"2023-03-07"},{"lineNumber":522,"author":{"gitId":"Gibson0918"},"content":"  ","lastModifiedDate":"2023-03-07"},{"lineNumber":523,"author":{"gitId":"Gibson0918"},"content":"        Use case ends.","lastModifiedDate":"2023-04-05"},{"lineNumber":524,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":525,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":526,"author":{"gitId":"elvern18"},"content":"#### Use case: Edit a contact by INDEX","lastModifiedDate":"2023-03-30"},{"lineNumber":527,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":528,"author":{"gitId":"joellow88"},"content":"**MSS**","lastModifiedDate":"2023-03-05"},{"lineNumber":529,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":530,"author":{"gitId":"joellow88"},"content":"1.  Student requests to edit a contact supplying new values for certain fields ","lastModifiedDate":"2023-03-05"},{"lineNumber":531,"author":{"gitId":"joellow88"},"content":"2.  ModCheck finds the relevant contact and edits it","lastModifiedDate":"2023-03-05"},{"lineNumber":532,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":533,"author":{"gitId":"joellow88"},"content":"    Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":534,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":535,"author":{"gitId":"joellow88"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":536,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":537,"author":{"gitId":"elvern18"},"content":"* 1a The new value for the specified field is invalid","lastModifiedDate":"2023-03-30"},{"lineNumber":538,"author":{"gitId":"elvern18"},"content":"    * 1a1. ModCheck informs student that the given value for the specified field is invalid","lastModifiedDate":"2023-03-30"},{"lineNumber":539,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":540,"author":{"gitId":"elvern18"},"content":"      Use case ends.","lastModifiedDate":"2023-03-30"},{"lineNumber":541,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":542,"author":{"gitId":"joellow88"},"content":"* 2a. The contact does not exist","lastModifiedDate":"2023-03-05"},{"lineNumber":543,"author":{"gitId":"joellow88"},"content":"    * 2a1. ModCheck informs student that contact does not exist","lastModifiedDate":"2023-03-05"},{"lineNumber":544,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":545,"author":{"gitId":"joellow88"},"content":"        Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":546,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":547,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":548,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":549,"author":{"gitId":"Statspadders"},"content":"#### Use case: Switch to light or dark mode","lastModifiedDate":"2023-03-23"},{"lineNumber":550,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":551,"author":{"gitId":"Statspadders"},"content":"**MSS**","lastModifiedDate":"2023-03-23"},{"lineNumber":552,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":553,"author":{"gitId":"Statspadders"},"content":"1. Student requests to change to light or dark mode based on their preferences","lastModifiedDate":"2023-03-23"},{"lineNumber":554,"author":{"gitId":"Statspadders"},"content":"2. ModCheck displays the selected outcome","lastModifiedDate":"2023-03-23"},{"lineNumber":555,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":556,"author":{"gitId":"Statspadders"},"content":"    Use case ends.","lastModifiedDate":"2023-03-23"},{"lineNumber":557,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2023-03-04"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":560,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"Acerizm"},"content":"3.  A student with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-03-03"},{"lineNumber":565,"author":{"gitId":"Acerizm"},"content":"4.  A student should be able to learn and use commands provided by MODCheck easily within an hour of usage.","lastModifiedDate":"2023-03-04"},{"lineNumber":566,"author":{"gitId":"elvern18"},"content":"5.  Should be able to handle exceptions, errors and invalid inputs without crashing.","lastModifiedDate":"2023-03-04"},{"lineNumber":567,"author":{"gitId":"elvern18"},"content":"6.  Should be able to still work even if there is no data file present.","lastModifiedDate":"2023-03-04"},{"lineNumber":568,"author":{"gitId":"joellow88"},"content":"7.  Should be able to function offline - data file and features should work without network connection","lastModifiedDate":"2023-03-05"},{"lineNumber":569,"author":{"gitId":"joellow88"},"content":"8.  Data file should be human-readable and editable with a simple text editor","lastModifiedDate":"2023-03-05"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":572,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":573,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":575,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"joellow88"},"content":"* **Contact**: An entry in ModCheck describing a person, consisting of a name and fields containing contact details of ","lastModifiedDate":"2023-03-05"},{"lineNumber":577,"author":{"gitId":"joellow88"},"content":"  that person","lastModifiedDate":"2023-03-05"},{"lineNumber":578,"author":{"gitId":"joellow88"},"content":"* **Contact details**: Information regarding a person\u0027s phone number, email, office location, telegram, LinkedIn, or ","lastModifiedDate":"2023-03-05"},{"lineNumber":579,"author":{"gitId":"joellow88"},"content":"  any other information relevant for students to communicate with that person","lastModifiedDate":"2023-03-05"},{"lineNumber":580,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"elvern18"},"content":"* **TA**: Teaching Assistant - people who assists Professors in conducting tutorial, labs and other classes","lastModifiedDate":"2023-03-04"},{"lineNumber":582,"author":{"gitId":"elvern18"},"content":"* **GUI**: Graphical User Interface - a system of interactive visual components for computer software","lastModifiedDate":"2023-03-04"},{"lineNumber":583,"author":{"gitId":"elvern18"},"content":"* **CLI**: Command Line Interface - a text-based user interface (UI) used to run programs, manage computer files and interact with the computer","lastModifiedDate":"2023-03-04"},{"lineNumber":584,"author":{"gitId":"elvern18"},"content":"* **Index**: A number indicating the order or position in a given list","lastModifiedDate":"2023-03-04"},{"lineNumber":585,"author":{"gitId":"Statspadders"},"content":"* **Person**: Referring to TA or Professor","lastModifiedDate":"2023-03-05"},{"lineNumber":586,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":587,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":588,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":589,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":590,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":593,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":595,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":598,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":599,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":600,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":601,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":602,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":603,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":604,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":605,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":607,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":608,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":609,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":610,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":611,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":612,"author":{"gitId":"-"},"content":"1. _{ more test cases ‚Ä¶‚Äã }_","lastModifiedDate":"2020-05-23"},{"lineNumber":613,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":617,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":618,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":620,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":621,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":622,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":623,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":624,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"Gibson0918"},"content":"### Viewing a person\u0027s contact details","lastModifiedDate":"2023-03-04"},{"lineNumber":630,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":631,"author":{"gitId":"Gibson0918"},"content":"1. Viewing a person while all persons are being shown","lastModifiedDate":"2023-03-04"},{"lineNumber":632,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":633,"author":{"gitId":"Gibson0918"},"content":"    1. Prerequisites: List all persons using the `view` command. Multiple persons in the list. Contact details not hidden","lastModifiedDate":"2023-03-07"},{"lineNumber":634,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":635,"author":{"gitId":"Gibson0918"},"content":"       1. Test case: `view 1`\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":636,"author":{"gitId":"Gibson0918"},"content":"          Expected: The contact details of the first person in the list is displayed in ModCheck.","lastModifiedDate":"2023-03-07"},{"lineNumber":637,"author":{"gitId":"Gibson0918"},"content":"       ","lastModifiedDate":"2023-03-04"},{"lineNumber":638,"author":{"gitId":"Gibson0918"},"content":"       2. Test case: `view 1 3 4 `\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":639,"author":{"gitId":"Gibson0918"},"content":"          Expected: The contact details of the first, third and fourth person in the list is displayed in ModCheck.","lastModifiedDate":"2023-03-07"},{"lineNumber":640,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":641,"author":{"gitId":"Gibson0918"},"content":"       3. Test case: `view 0`\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":642,"author":{"gitId":"Gibson0918"},"content":"          Expected: No person\u0027s contact details is displayed. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-03-04"},{"lineNumber":643,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":644,"author":{"gitId":"Gibson0918"},"content":"       4. Other incorrect delete commands to try: `view`, `view x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":645,"author":{"gitId":"Gibson0918"},"content":"          Expected: Similar to previous.","lastModifiedDate":"2023-03-04"},{"lineNumber":646,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":647,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":648,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":649,"author":{"gitId":"-"},"content":"1. _{ more test cases ‚Ä¶‚Äã }_","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"1. _{ more test cases ‚Ä¶‚Äã }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"elvern18":65,"joellow88":92,"-":325,"Acerizm":48,"Statspadders":30,"Gibson0918":97}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"Statspadders"},"content":"## Table of contents","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"Statspadders"},"content":"1. [ModCheck](#1-modcheck)","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"Statspadders"},"content":"2. [Quick Start](#2-quick-start)","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"Statspadders"},"content":"3. [Features](#3-features)","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"Statspadders"},"content":"    * [Notes about the command format](#31-information_source-notes-about-the-command-format)","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"Statspadders"},"content":"    * [Logging in](#32-logging-in)","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"Statspadders"},"content":"        * [Creating Password](#321-creating-password)","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"Statspadders"},"content":"    * [Viewing help](#33-viewing-help--help)","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"Statspadders"},"content":"    * [Adding a person](#34-adding-a-person-add)","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"Statspadders"},"content":"    * [Listing all persons](#341-listing-all-persons--list)","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"Statspadders"},"content":"    * [Viewing a person](#342-viewing-a-persons-contact-details--view)","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"Statspadders"},"content":"    * [Editing a person](#343-editing-a-person--edit)","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"Statspadders"},"content":"    * [Deleting a person](#344-deleting-a-person--delete)","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"Statspadders"},"content":"    * [Filtering persons](#345-filtering-contacts)","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"Statspadders"},"content":"    * [Undo commands](#346-undo-past-commands)","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"Statspadders"},"content":"    * [Exporting](#35-exporting-selected-persons-contact-details--export)","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"Statspadders"},"content":"        * [Importing](#351-load-another-data-file)","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"Statspadders"},"content":"    * [Dark/Light mode](#36-darklight-mode)","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"Statspadders"},"content":"    * [Clear](#37-clearing-all-entries--clear)","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"Statspadders"},"content":"        * [Saving the data](#371-saving-the-data)","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"Statspadders"},"content":"        * [Editing the data](#372-editing-the-data-file)","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"Statspadders"},"content":"    * [Exit](#38-exiting-the-program--exit)","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"Statspadders"},"content":"4. [FAQ](#4-faq)","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"Statspadders"},"content":"5. [Command Summary](#5-command-summary)","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Statspadders"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"Statspadders"},"content":"## 1. ModCheck","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"Statspadders"},"content":"MODCheck is a **desktop app for managing contacts, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, MODCheck can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"Statspadders"},"content":"## 2. Quick start","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"2. The first GUI you will encounter is the `ModCheck Login`.","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"3. If it is the first time that you are using MODCheck, you will be greeted with the GUI below.\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"   ![FirstTimeLogin](images/login/FirstTimeLoginUser.png)","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"   \u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"       \u003cem\u003eFirst Time User Welcome GUI\u003c/em\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"   \u003c/p\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"   \u003cbr/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"4. Enter `yes` if you want to create a password or `no` if you want to continue to MODCheck main application. Further explanation on the `Login` feature will be described further down under `Features`.","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"5. You will be greeted with one of GUI shown below that represents the `loading` screen before entering MODCheck\u0027s main application depending on the choice you have made earlier.","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"   ![DefaultLoadingSection](images/login/DefaultLoadingSection.png)","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"   \u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"   \u003cem\u003eDefault Loading GUI\u003c/em\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"   \u003c/p\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"   \u003cbr/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"   ![PasswordCreatedLoadingSection](images/login/PasswordCreatedLoadingSection.png)","lastModifiedDate":"2023-04-03"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"   \u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"   \u003cem\u003ePassword Created Successfully Loading GUI\u003c/em\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"   \u003c/p\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"   \u003cbr/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"6. A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"    \u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"    \u003cem\u003eMODCheck Main GUI\u003c/em\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"    \u003c/p\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"    \u003cbr/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"7. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"Statspadders"},"content":"    * `add n/John Doe p/98765432 e/johnd@example.com d/Friendly` : Adds a contact named `John Doe` to ModCheck.","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"Acerizm"},"content":"8. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-04-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"Statspadders"},"content":"## 3. Features","lastModifiedDate":"2023-04-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"Statspadders"},"content":"### 3.1 :information_source: Notes about the command format:\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"* Items with `‚Ä¶`‚Äã after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]‚Ä¶‚Äã` can be used as `¬†` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"Statspadders"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":113,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":114,"author":{"gitId":"Statspadders"},"content":"### 3.2 Logging in","lastModifiedDate":"2023-04-04"},{"lineNumber":115,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":116,"author":{"gitId":"Acerizm"},"content":"Login to MODCheck with given passsword that may be empty.","lastModifiedDate":"2023-04-03"},{"lineNumber":117,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":118,"author":{"gitId":"Acerizm"},"content":"Format: `[Password]`","lastModifiedDate":"2023-04-03"},{"lineNumber":119,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":120,"author":{"gitId":"Acerizm"},"content":"`[Password]`: Password of user.","lastModifiedDate":"2023-04-03"},{"lineNumber":121,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":122,"author":{"gitId":"Acerizm"},"content":"\u003e :bulb:  **Tip:** User can leave the textbox empty and press `Enter` to enter inside MODCheck\u0027s main application if user did not create a password to secure MODCheck.","lastModifiedDate":"2023-04-03"},{"lineNumber":123,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":124,"author":{"gitId":"Acerizm"},"content":"![DefaultLoginSection](images/login/DefaultLoginSection.png)","lastModifiedDate":"2023-04-03"},{"lineNumber":125,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":126,"author":{"gitId":"Acerizm"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":127,"author":{"gitId":"Acerizm"},"content":"\u003cem\u003eDefault Login GUI\u003c/em\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":128,"author":{"gitId":"Acerizm"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":129,"author":{"gitId":"Acerizm"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":130,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":131,"author":{"gitId":"Statspadders"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":132,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":133,"author":{"gitId":"Statspadders"},"content":"### 3.2.1 Creating Password","lastModifiedDate":"2023-04-04"},{"lineNumber":134,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":135,"author":{"gitId":"Acerizm"},"content":"Creates a password to secure MODCheck from other unwanted users","lastModifiedDate":"2023-04-03"},{"lineNumber":136,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":137,"author":{"gitId":"Acerizm"},"content":"![CreatePasswordSection](images/login/CreatePasswordSection.png)","lastModifiedDate":"2023-04-03"},{"lineNumber":138,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":139,"author":{"gitId":"Acerizm"},"content":"\u003cp align\u003d\"center\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":140,"author":{"gitId":"Acerizm"},"content":"\u003cem\u003eCreate Password GUI\u003c/em\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":141,"author":{"gitId":"Acerizm"},"content":"\u003c/p\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":142,"author":{"gitId":"Acerizm"},"content":"\u003cbr/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":143,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":144,"author":{"gitId":"Acerizm"},"content":"Format: `[Password]`","lastModifiedDate":"2023-04-03"},{"lineNumber":145,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":146,"author":{"gitId":"Acerizm"},"content":"`[Password]`: Password of user.","lastModifiedDate":"2023-04-03"},{"lineNumber":147,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":148,"author":{"gitId":"Statspadders"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":149,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":150,"author":{"gitId":"Statspadders"},"content":"### 3.3 Viewing help : `help`","lastModifiedDate":"2023-04-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"Statspadders"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"Statspadders"},"content":"### 3.4 Adding a person: `add`","lastModifiedDate":"2023-04-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"Statspadders"},"content":"Adds a person contact details to ModCheck.","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"Statspadders"},"content":"Compulsory Field:","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"Statspadders"},"content":"* `n/` : name of the person","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"Statspadders"},"content":"Additional Fields:","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"Statspadders"},"content":"* `d/` : description of the person","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"Statspadders"},"content":"* `e/` : email","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"Statspadders"},"content":"* `p/` : phone number","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"Statspadders"},"content":"* `t/` : tags","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"Statspadders"},"content":"* `m/` : module codes","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":174,"author":{"gitId":"Acerizm"},"content":"\u003e :bulb:  **Tip:** A person can have any number of tags or modules (including 0). The order of the fields is not important.","lastModifiedDate":"2023-04-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"Statspadders"},"content":"* `add n/John d/Important friend e/leomessi@psg.com p/98101010`","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"Statspadders"},"content":"* `add n/Gray d/Coolest Prof ever e/SIUUUUUU@gmail.com p/98070707 t/Prof m/CS2103 m/CS3230`","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"Statspadders"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":181,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":182,"author":{"gitId":"Statspadders"},"content":"### 3.4.1 Listing all persons : `list`","lastModifiedDate":"2023-04-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"Acerizm"},"content":"Shows a list of all persons in ModCheck.","lastModifiedDate":"2023-03-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Format: `list`","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"Statspadders"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":189,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":190,"author":{"gitId":"Statspadders"},"content":"### 3.4.2 Viewing a person\u0027s contact details : `view`","lastModifiedDate":"2023-04-04"},{"lineNumber":191,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":192,"author":{"gitId":"Gibson0918"},"content":"View a person\u0027s contact details.","lastModifiedDate":"2023-03-04"},{"lineNumber":193,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":194,"author":{"gitId":"Gibson0918"},"content":"Format: `view \u003cindex\u003e`","lastModifiedDate":"2023-03-07"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":196,"author":{"gitId":"Gibson0918"},"content":"Examples:","lastModifiedDate":"2023-03-04"},{"lineNumber":197,"author":{"gitId":"Gibson0918"},"content":"* `view 1` returns the contact details of the first person in the list","lastModifiedDate":"2023-03-07"},{"lineNumber":198,"author":{"gitId":"Gibson0918"},"content":"* `view 1 3` returns the contact details of the first and third person in the list","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":200,"author":{"gitId":"Gibson0918"},"content":"![viewContactDetails](images/view/viewContactDetails.png)","lastModifiedDate":"2023-03-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":202,"author":{"gitId":"Statspadders"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":204,"author":{"gitId":"Statspadders"},"content":"### 3.4.3 Editing a person : `edit`","lastModifiedDate":"2023-04-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"Acerizm"},"content":"Edits an existing person in ModCheck.","lastModifiedDate":"2023-03-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"elvern18"},"content":"Format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]‚Ä¶‚Äã` or `edit NAME [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]‚Ä¶‚Äã`","lastModifiedDate":"2023-03-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"elvern18"},"content":"* Edits the person at the specified `INDEX` or `NAME`. The index refers to the index number shown in the displayed person list. The index **must be a positive integer** 1, 2, 3, ‚Ä¶‚Äã","lastModifiedDate":"2023-03-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"* You can remove all the person‚Äôs tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"  specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"joellow88"},"content":"*  `edit 1 p/91164512` Edits the phone number of the 1st person to be `91164512`.","lastModifiedDate":"2023-03-05"},{"lineNumber":219,"author":{"gitId":"joellow88"},"content":"*  `edit 3 p/90011009 e/bernice512@example.com` Edits the phone number and email address of the 3rd person to be","lastModifiedDate":"2023-03-05"},{"lineNumber":220,"author":{"gitId":"joellow88"},"content":"   90011009 and bernice512@example.com respectively","lastModifiedDate":"2023-03-05"},{"lineNumber":221,"author":{"gitId":"joellow88"},"content":"   ![editCommandExample](images/editCommandExample.png)","lastModifiedDate":"2023-03-05"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":223,"author":{"gitId":"Statspadders"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":225,"author":{"gitId":"Statspadders"},"content":"### 3.4.4 Deleting a person : `delete`","lastModifiedDate":"2023-04-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"Acerizm"},"content":"Deletes the specified person from ModCheck.","lastModifiedDate":"2023-03-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"elvern18"},"content":"Format: `delete INDEX` or `delete INDEXES` or `delete NAME`","lastModifiedDate":"2023-03-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"elvern18"},"content":"* The index or indexes **must be a positive integer** ‚Ä¶‚Äã","lastModifiedDate":"2023-03-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"elvern18"},"content":"* `list` followed by `delete 3` deletes the 3rd person in the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":237,"author":{"gitId":"elvern18"},"content":"* `list` followed by `delete 1,2,3` deletes the 1st, 2nd and 3rd person in the list.","lastModifiedDate":"2023-03-30"},{"lineNumber":238,"author":{"gitId":"elvern18"},"content":"* `list` followed by `delete Betsy` deletes Betsy if there is only one Betsy in the list.","lastModifiedDate":"2023-03-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":240,"author":{"gitId":"elvern18"},"content":"![viewContactDetails](images/delete/deleteContact.png)","lastModifiedDate":"2023-03-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"Statspadders"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":244,"author":{"gitId":"Statspadders"},"content":"### 3.4.5 Filtering contacts","lastModifiedDate":"2023-04-04"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"Acerizm"},"content":"Filters the contacts based on the arguments provided.","lastModifiedDate":"2023-03-15"},{"lineNumber":247,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":248,"author":{"gitId":"Acerizm"},"content":"Formats:","lastModifiedDate":"2023-03-15"},{"lineNumber":249,"author":{"gitId":"Acerizm"},"content":"1. `filter n/NAME`","lastModifiedDate":"2023-03-15"},{"lineNumber":250,"author":{"gitId":"Acerizm"},"content":"2. `filter p/PHONE_NUMBER`","lastModifiedDate":"2023-03-15"},{"lineNumber":251,"author":{"gitId":"Acerizm"},"content":"3. `filter e/EMAIL_ADDRESS`","lastModifiedDate":"2023-03-15"},{"lineNumber":252,"author":{"gitId":"Acerizm"},"content":"4. `filter d/DESCRIPTION`","lastModifiedDate":"2023-03-15"},{"lineNumber":253,"author":{"gitId":"Acerizm"},"content":"5. `filter t/TAG`","lastModifiedDate":"2023-03-15"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":255,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-03"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":257,"author":{"gitId":"Acerizm"},"content":"* `filter n/Alex` returns `1 contacts listed!`","lastModifiedDate":"2023-03-15"},{"lineNumber":258,"author":{"gitId":"Acerizm"},"content":"* `filter n/Alex Bernice` returns `2 contacts listed!`","lastModifiedDate":"2023-03-15"},{"lineNumber":259,"author":{"gitId":"Acerizm"},"content":"* The search is case-insensitive. e.g hans will match Hans","lastModifiedDate":"2023-03-15"},{"lineNumber":260,"author":{"gitId":"Acerizm"},"content":"* The order of the keywords does not matter. e.g. Hans Bo will match Bo Hans","lastModifiedDate":"2023-03-15"},{"lineNumber":261,"author":{"gitId":"Acerizm"},"content":"* Only the name is searched.","lastModifiedDate":"2023-03-15"},{"lineNumber":262,"author":{"gitId":"Acerizm"},"content":"* Only full words will be matched e.g. Han will not match Hans","lastModifiedDate":"2023-03-15"},{"lineNumber":263,"author":{"gitId":"Acerizm"},"content":"* Persons matching at least one keyword will be returned (i.e. OR search). e.g. Hans Bo will return Hans Gruber, Bo Yang","lastModifiedDate":"2023-03-15"},{"lineNumber":264,"author":{"gitId":"Acerizm"},"content":"  ![filterByName](images/filter/filterByNameResult.png)","lastModifiedDate":"2023-03-15"},{"lineNumber":265,"author":{"gitId":"Acerizm"},"content":"  \u003cbr/\u003e\u003cbr/\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":266,"author":{"gitId":"Acerizm"},"content":"* `filter p/91031282` returns `1 contacts listed!`","lastModifiedDate":"2023-03-15"},{"lineNumber":267,"author":{"gitId":"Acerizm"},"content":"  ![filterByPhoneNumber](images/filter/filterByPhoneNumberResult.png)","lastModifiedDate":"2023-03-15"},{"lineNumber":268,"author":{"gitId":"Acerizm"},"content":"  \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":269,"author":{"gitId":"Acerizm"},"content":"* `filter e/royb@example.com` returns `1 contacts listed!`","lastModifiedDate":"2023-03-15"},{"lineNumber":270,"author":{"gitId":"Acerizm"},"content":"  ![filterByEmail](images/filter/filterByEmailResult.png)","lastModifiedDate":"2023-03-15"},{"lineNumber":271,"author":{"gitId":"Acerizm"},"content":"  \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":272,"author":{"gitId":"Acerizm"},"content":"* `filter d/helpful` returns `1 contacts listed!`","lastModifiedDate":"2023-03-15"},{"lineNumber":273,"author":{"gitId":"Acerizm"},"content":"* `filter d/helpful Newgate` returns `2 contacts listed!`","lastModifiedDate":"2023-03-15"},{"lineNumber":274,"author":{"gitId":"Acerizm"},"content":"* The search is case-sensitive. e.g Helpful will match Helpful and not helpful","lastModifiedDate":"2023-03-15"},{"lineNumber":275,"author":{"gitId":"Acerizm"},"content":"* The order of the keywords does not matter. e.g. Helpful Newgate will match Newgate Helpful","lastModifiedDate":"2023-03-15"},{"lineNumber":276,"author":{"gitId":"Acerizm"},"content":"* Only the description is searched.","lastModifiedDate":"2023-03-15"},{"lineNumber":277,"author":{"gitId":"Acerizm"},"content":"* Only full words will be matched.","lastModifiedDate":"2023-03-15"},{"lineNumber":278,"author":{"gitId":"Acerizm"},"content":"* Contacts matching at least one keyword will be returned (i.e. OR search). e.g. Helpful roommate will return Helpful, Helpful friend, lazy roomate","lastModifiedDate":"2023-03-15"},{"lineNumber":279,"author":{"gitId":"Acerizm"},"content":"  ![filterByDescription](images/filter/filterByDescriptionResult.png)","lastModifiedDate":"2023-03-15"},{"lineNumber":280,"author":{"gitId":"Acerizm"},"content":"  \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":281,"author":{"gitId":"Acerizm"},"content":"* `filter t/family` returns `1 contacts listed`","lastModifiedDate":"2023-03-15"},{"lineNumber":282,"author":{"gitId":"Acerizm"},"content":"* `filter t/family t/friends t/classmates` returns `3 contacts listed!`","lastModifiedDate":"2023-03-15"},{"lineNumber":283,"author":{"gitId":"Acerizm"},"content":"* ![filterByTags](images/filter/filterByTagsResult.png)","lastModifiedDate":"2023-03-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"Statspadders"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":286,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":287,"author":{"gitId":"Statspadders"},"content":"### 3.4.6 Undo past commands","lastModifiedDate":"2023-04-04"},{"lineNumber":288,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":289,"author":{"gitId":"joellow88"},"content":"Undoes previous commands that modified ModCheck.","lastModifiedDate":"2023-03-16"},{"lineNumber":290,"author":{"gitId":"joellow88"},"content":"Undo will only undo commands that have successfully modified the data in ModCheck. For example, a successful `add`,","lastModifiedDate":"2023-03-16"},{"lineNumber":291,"author":{"gitId":"joellow88"},"content":"`edit`, or `delete` command can be undone by the undo command.","lastModifiedDate":"2023-03-16"},{"lineNumber":292,"author":{"gitId":"joellow88"},"content":"Any commands that does not modify the data in ModCheck will NOT be undone. This includes `view`, `find`, and other","lastModifiedDate":"2023-03-16"},{"lineNumber":293,"author":{"gitId":"joellow88"},"content":"similar commands. Any command that would have modified the data in ModCheck, but was unsuccessful in doing so (eg:","lastModifiedDate":"2023-03-16"},{"lineNumber":294,"author":{"gitId":"joellow88"},"content":"`add` duplicate person), will NOT be undone.","lastModifiedDate":"2023-03-16"},{"lineNumber":295,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":296,"author":{"gitId":"joellow88"},"content":"Chaining of a few undo commands is supported. Once the undo limit has been reached, the error message `No command to","lastModifiedDate":"2023-03-16"},{"lineNumber":297,"author":{"gitId":"joellow88"},"content":"undo!` will be shown.","lastModifiedDate":"2023-03-16"},{"lineNumber":298,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":299,"author":{"gitId":"joellow88"},"content":"Format: `undo`","lastModifiedDate":"2023-03-16"},{"lineNumber":300,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":301,"author":{"gitId":"joellow88"},"content":"Use `redo` to reapply the changes undone by undo.","lastModifiedDate":"2023-03-16"},{"lineNumber":302,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":303,"author":{"gitId":"Statspadders"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":304,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":305,"author":{"gitId":"Statspadders"},"content":"### 3.5 Exporting selected person\u0027s contact details : `export`","lastModifiedDate":"2023-04-04"},{"lineNumber":306,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":307,"author":{"gitId":"Statspadders"},"content":"Export a person\u0027s contact details.","lastModifiedDate":"2023-04-04"},{"lineNumber":308,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":309,"author":{"gitId":"Statspadders"},"content":"Format: `export \u003cindex\u003e`","lastModifiedDate":"2023-04-04"},{"lineNumber":310,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":311,"author":{"gitId":"Statspadders"},"content":"Examples:","lastModifiedDate":"2023-04-04"},{"lineNumber":312,"author":{"gitId":"Statspadders"},"content":"* `export 1` exports the contact details of the first person in the list","lastModifiedDate":"2023-04-04"},{"lineNumber":313,"author":{"gitId":"Statspadders"},"content":"* `export 1 4` exports the contact details of the first and fourth person in the list","lastModifiedDate":"2023-04-04"},{"lineNumber":314,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":315,"author":{"gitId":"Statspadders"},"content":"Exported contacts will be stored inside a Json file under the `exports` folder found in the same directory as ModCheck","lastModifiedDate":"2023-04-08"},{"lineNumber":316,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":317,"author":{"gitId":"Statspadders"},"content":"![viewContactDetails](images/export/exportContacts.png)","lastModifiedDate":"2023-04-04"},{"lineNumber":318,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":319,"author":{"gitId":"Statspadders"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":320,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":321,"author":{"gitId":"Statspadders"},"content":"### 3.5.1 Load another data file","lastModifiedDate":"2023-04-04"},{"lineNumber":322,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":323,"author":{"gitId":"joellow88"},"content":"`Load` the contacts in another ModCheck data file into the user\u0027s ModCheck.","lastModifiedDate":"2023-03-31"},{"lineNumber":324,"author":{"gitId":"joellow88"},"content":"`Load` will open up a file chooser window, where the user can select the desired json file to be loaded.","lastModifiedDate":"2023-03-31"},{"lineNumber":325,"author":{"gitId":"joellow88"},"content":"Only json files that are generated by ModCheck can be successfully loaded. If a file that ModCheck is unable to read","lastModifiedDate":"2023-03-31"},{"lineNumber":326,"author":{"gitId":"joellow88"},"content":"is loaded, an error will be shown.","lastModifiedDate":"2023-03-31"},{"lineNumber":327,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":328,"author":{"gitId":"joellow88"},"content":"The user also has the option to directly specify the file path to be loaded in the text box. The use of the command","lastModifiedDate":"2023-03-31"},{"lineNumber":329,"author":{"gitId":"joellow88"},"content":"in this way is not recommended.","lastModifiedDate":"2023-03-31"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":331,"author":{"gitId":"joellow88"},"content":"The data files that are ModCheck-readable can be obtained through:","lastModifiedDate":"2023-03-31"},{"lineNumber":332,"author":{"gitId":"joellow88"},"content":"1. use of `export` command","lastModifiedDate":"2023-03-31"},{"lineNumber":333,"author":{"gitId":"joellow88"},"content":"2. copying the data file in data/addressbook.json","lastModifiedDate":"2023-03-31"},{"lineNumber":334,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":335,"author":{"gitId":"joellow88"},"content":"Note: If there are duplicate persons (ie: persons with the same name but possibly different fields) in ModCheck and the","lastModifiedDate":"2023-03-31"},{"lineNumber":336,"author":{"gitId":"joellow88"},"content":"data file to be loaded, the person will be \u003cb\u003eignored\u003c/b\u003e instead of \u003cb\u003eoverwritten\u003c/b\u003e.","lastModifiedDate":"2023-03-31"},{"lineNumber":337,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":338,"author":{"gitId":"joellow88"},"content":"Format: `load` OR `load \u003cpath\u003e`","lastModifiedDate":"2023-03-31"},{"lineNumber":339,"author":{"gitId":"joellow88"},"content":"![img_1.png](images/loadCommandExample.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":340,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":341,"author":{"gitId":"Statspadders"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":342,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":343,"author":{"gitId":"Statspadders"},"content":"### 3.6 Dark/Light Mode","lastModifiedDate":"2023-04-04"},{"lineNumber":344,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":345,"author":{"gitId":"Statspadders"},"content":"Choose your favourite theme !","lastModifiedDate":"2023-03-30"},{"lineNumber":346,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":347,"author":{"gitId":"Statspadders"},"content":"`light` To change to light mode.","lastModifiedDate":"2023-03-30"},{"lineNumber":348,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":349,"author":{"gitId":"Statspadders"},"content":"`dark`  To change to dark mode. (default)","lastModifiedDate":"2023-03-30"},{"lineNumber":350,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":351,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"Statspadders"},"content":"### 3.7 Clearing all entries : `clear`","lastModifiedDate":"2023-04-04"},{"lineNumber":354,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":355,"author":{"gitId":"Statspadders"},"content":"Clears all entries from ModCheck.","lastModifiedDate":"2023-04-04"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":357,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2023-04-04"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":359,"author":{"gitId":"Statspadders"},"content":"Examples:","lastModifiedDate":"2023-04-04"},{"lineNumber":360,"author":{"gitId":"Statspadders"},"content":"* `list` followed by `clear` deletes all the contacts in the list.","lastModifiedDate":"2023-04-04"},{"lineNumber":361,"author":{"gitId":"Statspadders"},"content":"  ![viewContactDetails](images/clear/clearAllContacts.png)","lastModifiedDate":"2023-04-04"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":363,"author":{"gitId":"Statspadders"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":365,"author":{"gitId":"Statspadders"},"content":"### 3.7.1 Saving the data","lastModifiedDate":"2023-04-04"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":367,"author":{"gitId":"Statspadders"},"content":"MODCheck data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-04-04"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":369,"author":{"gitId":"Statspadders"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":371,"author":{"gitId":"Statspadders"},"content":"### 3.7.2 Editing the data file","lastModifiedDate":"2023-04-04"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":373,"author":{"gitId":"Statspadders"},"content":"MODCheck data are saved as a JSON file. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-04-04"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":375,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-04-04"},{"lineNumber":376,"author":{"gitId":"Statspadders"},"content":"If your changes to the data file makes its format invalid, MODCheck will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-04-04"},{"lineNumber":377,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":379,"author":{"gitId":"Statspadders"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":381,"author":{"gitId":"Statspadders"},"content":"### 3.8 Exiting the program : `exit`","lastModifiedDate":"2023-04-04"},{"lineNumber":382,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":383,"author":{"gitId":"Statspadders"},"content":"Exits the program.","lastModifiedDate":"2023-04-04"},{"lineNumber":384,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":385,"author":{"gitId":"Statspadders"},"content":"Format: `exit`","lastModifiedDate":"2023-04-04"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":387,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-04"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":389,"author":{"gitId":"Statspadders"},"content":"## 4. FAQ","lastModifiedDate":"2023-04-04"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"joellow88"},"content":"**A**: Install the app in the other computer. `load` the contents of the previous data file into your new ModCheck.","lastModifiedDate":"2023-03-31"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"Statspadders"},"content":"## 5. Command summary","lastModifiedDate":"2023-04-04"},{"lineNumber":397,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"joellow88"},"content":"| Action     | Format, Examples                                                                                                                                                                                                                                                                      |","lastModifiedDate":"2023-03-16"},{"lineNumber":399,"author":{"gitId":"joellow88"},"content":"|------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-16"},{"lineNumber":400,"author":{"gitId":"joellow88"},"content":"| **Add**    | `add n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]‚Ä¶‚Äã` \u003cbr\u003e e.g., `add n/James Ho p/22224444 e/jamesho@example.com a/123, Clementi Rd, 1234665 t/friend t/colleague`                                                                                                                 |","lastModifiedDate":"2023-03-16"},{"lineNumber":401,"author":{"gitId":"joellow88"},"content":"| **View**   | `view INDEX`\u003cbr\u003e e.g., `view 2`                                                                                                                                                                                                                                                       |","lastModifiedDate":"2023-03-16"},{"lineNumber":402,"author":{"gitId":"joellow88"},"content":"| **Clear**  | `clear`                                                                                                                                                                                                                                                                               |","lastModifiedDate":"2023-03-16"},{"lineNumber":403,"author":{"gitId":"elvern18"},"content":"| **Delete** | `delete INDEX` or `delete INDEXES` or `delete NAME` \u003cbr\u003e e.g., `delete 3` or `delete 1,2,3` or `delete James`                                                                                                                                                                         |","lastModifiedDate":"2023-03-30"},{"lineNumber":404,"author":{"gitId":"Acerizm"},"content":"| **Edit**   | `edit {INDEX or NAME} [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]‚Ä¶‚Äã`\u003cbr\u003e e.g.,`edit 2 n/James Lee e/jameslee@example.com` or `edit James e/jameslee@example.com`                                                                                                          |                                                                                                                                                                                                                       |","lastModifiedDate":"2023-04-04"},{"lineNumber":405,"author":{"gitId":"joellow88"},"content":"| **List**   | `list`                                                                                                                                                                                                                                                                                |","lastModifiedDate":"2023-03-16"},{"lineNumber":406,"author":{"gitId":"joellow88"},"content":"| **Help**   | `help`                                                                                                                                                                                                                                                                                |","lastModifiedDate":"2023-03-16"},{"lineNumber":407,"author":{"gitId":"joellow88"},"content":"| **Filter** | `filter n/NAME` \u003cbr\u003e `filter p/PHONE_NUMBER`\u003cbr\u003e `filter e/EMAIL_ADDRESS` \u003cbr\u003e `filter d/DESCRIPTION` \u003cbr\u003e `filter t/TAG` \u003cbr\u003e e.g. `filter n/Alex` \u003cbr\u003e e.g. `filter p/91031282` \u003cbr\u003e e.g. `filter e/royb@example.com` \u003cbr\u003e e.g. `filter d/helpful` \u003cbr\u003e e.g. `filter t/family` \u003cbr\u003e |","lastModifiedDate":"2023-03-16"},{"lineNumber":408,"author":{"gitId":"joellow88"},"content":"| **Undo**   | `undo`                                                                                                                                                                                                                                                                                |","lastModifiedDate":"2023-03-16"},{"lineNumber":409,"author":{"gitId":"joellow88"},"content":"| **Redo**   | `redo`                                                                                                                                                                                                                                                                                |","lastModifiedDate":"2023-03-16"},{"lineNumber":410,"author":{"gitId":"joellow88"},"content":"| **Load**   | `load` OR `load \u003cpath\u003e`                                                                                                                                                                                                                                                               |","lastModifiedDate":"2023-03-31"},{"lineNumber":411,"author":{"gitId":"Gibson0918"},"content":"| **Export** | `export INDEX`\u003cbr\u003e e.g., `export 2`\u003cbr/\u003e                                                                                                                                                                                                                                              |","lastModifiedDate":"2023-03-30"},{"lineNumber":412,"author":{"gitId":"Statspadders"},"content":"| **Light**  | `light`                                                                                                                                                                                                                                                                               |","lastModifiedDate":"2023-04-04"},{"lineNumber":413,"author":{"gitId":"Statspadders"},"content":"| **Dark**   | `dark`                                                                                                                                                                                                                                                                                |","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"elvern18":9,"joellow88":50,"-":125,"Statspadders":119,"Acerizm":100,"Gibson0918":10}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"Package Model\\nClasses \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"together {","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserData\" as ReadOnlyUserData","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"together {","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    Class AddressBook","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    Class UserData","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"UserData .up.|\u003e ReadOnlyUserData","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"Model .down.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"Model .down.\u003e ReadOnlyAddressBook","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"Model .down.\u003e ReadOnlyUserData","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"ModelManager -down-\u003e \"1\" AddressBook","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"ModelManager -down-\u003e \"1\" UserPrefs","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"ModelManager -down-\u003e \"1\" UserData","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"Acerizm":16}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"package Storage\\nClasses {","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"together {","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Class \"\u003c\u003cinterface\u003e\u003e\\nAddressBookStorage\" as AddressBookStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"    package \"UserData Storage\" #F4F6F6 {","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"        Class \"\u003c\u003cinterface\u003e\u003e\\nUserDataStorage\" as UserDataStorage","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"        Class JsonUserDataStorage","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"StorageManager .up...|\u003e Storage","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"StorageManager -down-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"StorageManager -down-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"StorageManager -down-\u003e \"1\" UserDataStorage","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"Storage -down-|\u003e UserPrefsStorage","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"Storage -down-|\u003e AddressBookStorage","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"Storage -down-|\u003e UserDataStorage","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"JsonUserDataStorage .up.|\u003e UserDataStorage","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"JsonAdaptedPerson --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":39,"Acerizm":14}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"together {","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"    Class LoginWindow","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"together {","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Class PersonListPanel","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Class PersonCard","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"Class WelcomeSection","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"Class LoadingSection","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"Class CreatePasswordSection","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"Class DefaultLoginSection","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"UiManager .up.|\u003e Ui","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"UiManager -right-\u003e \"1\" MainWindow","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"UiManager -down-\u003e \"1\" LoginWindow","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"LoginWindow *-down-\u003e \"1\" WelcomeSection","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"LoginWindow *-down-\u003e \"1\" LoadingSection","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"LoginWindow *-down-\u003e \"1\" CreatePasswordSection","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"LoginWindow *-down-\u003e \"1\" DefaultLoginSection","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"WelcomeSection --|\u003e UiPart","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"LoadingSection --|\u003e UiPart","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"CreatePasswordSection --|\u003e UiPart","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"DefaultLoginSection --|\u003e UiPart","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"LoginWindow -down-|\u003e UiPart","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"PersonCard ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"Acerizm"},"content":"MainWindow -right-\u003e Logic","lastModifiedDate":"2023-04-06"},{"lineNumber":75,"author":{"gitId":"Acerizm"},"content":"LoginWindow -right-\u003e Logic","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"PersonListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":58,"Acerizm":25}},{"path":"docs/diagrams/commands/FilterCommand/FilterActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"@startuml","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"start","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":":User wants to filter contacts by detail given;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":":User enters \"filter\" command;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"if () then ([contacts matches detail])","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"    :MODCheck displays contacts;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"else ([else])","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"    :MODCheck displays error;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"endif","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"stop","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"@enduml","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Acerizm":12}},{"path":"docs/team/acerizm.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"title: Haiqel\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"### Project: MODcheck","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"MODcheck is a desktop app to allow students to easily check the module coordinators, professors and teaching ","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"assistants in the modules they are taking. ","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"* **Code contributed**: ","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"    * User Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"        * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"        * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"* **Project management**:","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"* **Community**:","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"* **Tools**:","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Acerizm":33}},{"path":"docs/team/elvern18.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"title: Elvern Tan\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":"### Project: MODcheck","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"MODcheck is a desktop app to allow students to easily check the module coordinators, professors and teaching ","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":"assistants in the modules they are taking. ","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"* **Code contributed**: ","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"elvern18"},"content":"    * User Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"elvern18"},"content":"        * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"elvern18"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"elvern18"},"content":"        * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"elvern18"},"content":"* **Project management**:","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"elvern18"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"* **Community**:","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"elvern18"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"elvern18"},"content":"* **Tools**:","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"elvern18"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"elvern18":33}},{"path":"docs/team/gibson0918.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"title: Gibson\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"### Project: MODCheck","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"MODcheck is a desktop app to allow students to easily check the module coordinators, professors and teaching","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"assistants in the modules they are taking[johndoe.md](johndoe.md)","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"* **New Feature**: Added a view command.","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"    * What it does: Allows the user to view the full contact details of all users stored within ModCheck.","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"    * Justification: This feature ensures the privacy of MODCheck\u0027s users as their contact details are not displayed openly.","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in the future. ","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"                  It required an in-depth analysis of the existing code base and design alternatives to incorporate this feature. ","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"                  The implementation was challenging as it require changes to existing commands and code analysis of the existing implementation to support existing and future commands.  ","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"* **New Feature**: Added an export command.","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"    * What it does: Allows the user to export selected contacts from ModCheck","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"    * Justification: This feature enhances the experience of using ModCheck as it allows for the easy exporting of selected contact details.","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"    * Highlights: This feature was somewhat challenging as I had to learn how other existing features were implemented and follow the developer guide extensively.","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"      It was also the first time for me experiencing writing quite a few test cases to ensure that my feature works as expected.","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"* **Code contributed**:","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"    * https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dGibson0918\u0026tabRepo\u003dAY2223S2-CS2103-F10-3%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfals","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"    * User Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"        * Added documentation for the features `view` and `export`  [#32](https://github.com/AY2223S2-CS2103-F10-3/tp/pull/32) [#151](https://github.com/AY2223S2-CS2103-F10-3/tp/pull/151)","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"        * Added implementation for the features `view` and `export` [#50](https://github.com/AY2223S2-CS2103-F10-3/tp/pull/50) [#151](https://github.com/AY2223S2-CS2103-F10-3/tp/pull/151)","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Gibson0918":36}},{"path":"docs/team/joellow88.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"title: Joel Low\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"### Project: MODcheck","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"MODcheck is a desktop app to allow students to easily check the module coordinators, professors and teaching ","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"assistants in the modules they are taking. ","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"* **Code contributed**: ","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"    * To be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"    * To be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"    * User Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"        * To be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"        * To be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"* **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"    * To be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"* **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"    * To be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"* **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"    * To be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"joellow88":33}},{"path":"docs/team/statspadders.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Statspadders"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"Statspadders"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"Statspadders"},"content":"title: Statspadders\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"Statspadders"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"Statspadders"},"content":"### Project: MODcheck","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"Statspadders"},"content":"MODcheck is a desktop app to allow students to easily check the module coordinators, professors and teaching","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"Statspadders"},"content":"assistants in the modules they are taking.","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"Statspadders"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"Statspadders"},"content":"* **Code contributed**:","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"Statspadders"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"Statspadders"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"Statspadders"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"Statspadders"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"Statspadders"},"content":"    * User Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"Statspadders"},"content":"        * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"Statspadders"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"Statspadders"},"content":"        * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"Statspadders"},"content":"* **Project management**:","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"Statspadders"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"Statspadders"},"content":"* **Community**:","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"Statspadders"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"Statspadders"},"content":"* **Tools**:","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"Statspadders"},"content":"    * To be added soon","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"Statspadders":33}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.ReadOnlyUserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.UserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"import seedu.address.storage.JsonUserDataStorage;","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"import seedu.address.storage.UserDataStorage;","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"        UserDataStorage userDataStorage \u003d new JsonUserDataStorage(Paths.get(\"userData.json\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, userDataStorage);","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"        UserData userData \u003d initUserData(userDataStorage);","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"Acerizm"},"content":"        model \u003d initModelManager(storage, userPrefs, userData);","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"Acerizm"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs, ReadOnlyUserData userData) {","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"Acerizm"},"content":"        return new ModelManager(initialData, userPrefs, userData);","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"Acerizm"},"content":"    protected UserData initUserData(UserDataStorage userDataStorage) {","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"Acerizm"},"content":"        Path userDataFilePath \u003d storage.getUserDataFilePath();","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"Acerizm"},"content":"        logger.info(\"Using prefs file : \" + userDataFilePath);","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"Acerizm"},"content":"        UserData initializedUserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"Acerizm"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"Acerizm"},"content":"            Optional\u003cUserData\u003e userDataOptional \u003d storage.readUserData();","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"Acerizm"},"content":"            initializedUserData \u003d userDataOptional.orElse(new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"Acerizm"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"Acerizm"},"content":"            logger.warning(\"UserData file at \" + userDataFilePath + \" is not in the correct format. \"","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"Acerizm"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"Acerizm"},"content":"            initializedUserData \u003d new UserData();","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"Acerizm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"Acerizm"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty user data\");","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"Acerizm"},"content":"            initializedUserData \u003d new UserData();","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"Acerizm"},"content":"        // Update userData file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"Acerizm"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"Acerizm"},"content":"            storage.saveUserData(initializedUserData);","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"Acerizm"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"Acerizm"},"content":"            logger.warning(\"Failed to save userData file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"Acerizm"},"content":"        return initializedUserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":201,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":212,"author":{"gitId":"Acerizm"},"content":"            logic.setNumberOfTimesUsed(logic.getNumberOfTimesUsed() + 1);","lastModifiedDate":"2023-03-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":214,"author":{"gitId":"Acerizm"},"content":"            storage.saveUserData(model.getUserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":179,"Acerizm":40}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"    private static final double DEFAULT_WIDTH \u003d 1000;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":78,"Acerizm":1}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"    public static final String MESSAGE_VIEW_PERSON_CONTACT_DETAILS \u003d \"%s\u0027s contact details displayed\";","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"            \"The person index provided is invalid. Please enter \\\"list\\\" again to retrieve the list and try again.\";","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"    public static final String MESSAGE_CONTACTS_LISTED_OVERVIEW \u003d \"%1$d contacts listed!\";","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":"    public static final String MESSAGE_PERSON_NOT_FOUND \u003d \"There is no such person in your contact list.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":"    public static final String MESSAGE_MULTIPLE_PERSONS_FOUND \u003d \"There are multiple people who have the same name. \"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":"        + \"You have to be more specific\";","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"    public static final String MESSAGE_IOEXCEPTION \u003d \"Unable to create \\\"ModCheck\\\" file to write\";","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"    public static final String MESSAGE_EXPORT_PERSON_CONTACT_DETAILS \u003d \"%s\u0027s contact details exported\";","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"elvern18":3,"-":12,"Acerizm":2,"Gibson0918":5}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"public class Index implements Comparable\u003cIndex\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"Gibson0918"},"content":"    public int compareTo(Index o) {","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"Gibson0918"},"content":"        return this.getZeroBased() - o.getZeroBased();","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"-":53,"Gibson0918":6}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Statspadders"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"Statspadders"},"content":"     * Returns the user prefs\u0027 theme","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"Statspadders"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"Statspadders"},"content":"    String getCssFilePath();","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"Statspadders"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"Statspadders"},"content":"     * Sets the user prefs\u0027 theme","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"Statspadders"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"Statspadders"},"content":"    void setCssFilePath(String cssFilePath);","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"     * Set the user\u0027s password","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"    void setUserHashedPassword(String hashedPassword);","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"     * Retrieve the user\u0027s password","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"    String getUserHashedPassword();","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"Acerizm"},"content":"     * Retrieves the number of times the user has used MODCheck","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"Acerizm"},"content":"     * @return number of times used","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"Acerizm"},"content":"    int getNumberOfTimesUsed();","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"Acerizm"},"content":"     * Set the number of times the user has used MODCheck","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":80,"author":{"gitId":"Acerizm"},"content":"    void setNumberOfTimesUsed(int numberOfTimesUsed);","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":50,"Acerizm":22,"Statspadders":9}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"Statspadders"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"Statspadders"},"content":"    public String getCssFilePath() {","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"Statspadders"},"content":"        return model.getCssFilePath();","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"Statspadders"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"Statspadders"},"content":"    public void setCssFilePath(String cssFilePath) {","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"Statspadders"},"content":"        model.setCssFilePath(cssFilePath);","lastModifiedDate":"2023-03-26"},{"lineNumber":90,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":91,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"Acerizm"},"content":"    public void setUserHashedPassword(String hashedPassword) {","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"Acerizm"},"content":"        model.setHashedPassword(hashedPassword);","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":98,"author":{"gitId":"Acerizm"},"content":"    public String getUserHashedPassword() {","lastModifiedDate":"2023-03-31"},{"lineNumber":99,"author":{"gitId":"Acerizm"},"content":"        return model.getHashedPassword();","lastModifiedDate":"2023-03-31"},{"lineNumber":100,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":102,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"Acerizm"},"content":"    public int getNumberOfTimesUsed() {","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"Acerizm"},"content":"        return model.getNumberOfTimesUsed();","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":107,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"Acerizm"},"content":"    public void setNumberOfTimesUsed(int numberOfTimesUsed) {","lastModifiedDate":"2023-03-31"},{"lineNumber":109,"author":{"gitId":"Acerizm"},"content":"        model.setNumberOfTimesUsed(numberOfTimesUsed);","lastModifiedDate":"2023-03-31"},{"lineNumber":110,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":81,"Acerizm":21,"Statspadders":9}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"Statspadders"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_TAG;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"Statspadders"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person contact details to ModCheck. \"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":27,"author":{"gitId":"Statspadders"},"content":"            + PREFIX_ADDRESS + \"DESCRIPTION \"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Statspadders"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Statspadders"},"content":"            + \"[\" + PREFIX_MODULE_TAG + \"MODULE TAG]...\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"Statspadders"},"content":"            + PREFIX_ADDRESS + \"Friendly \"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"Statspadders"},"content":"            + PREFIX_TAG + \"TA \"","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"Statspadders"},"content":"            + PREFIX_MODULE_TAG + \"CS2103\";","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"Gibson0918"},"content":"        model.resetPersonHiddenStatus();","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"Gibson0918"},"content":"        model.resetPersonHiddenStatus();","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":60,"Statspadders":8,"Gibson0918":2}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"Statspadders"},"content":"    /** The application is in dark theme mode*/","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"Statspadders"},"content":"    private Boolean darkTheme;","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"Statspadders"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"Statspadders"},"content":"     * For Commands : Light and Dark only","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"Statspadders"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"Statspadders"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"Statspadders"},"content":"    public CommandResult(String feedbackToUser, Boolean darkTheme) {","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"Statspadders"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"Statspadders"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"Statspadders"},"content":"        this.exit \u003d false;","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"Statspadders"},"content":"        this.darkTheme \u003d darkTheme;","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"Statspadders"},"content":"    public Boolean isDarkTheme() {","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"Statspadders"},"content":"        return darkTheme;","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"joellow88"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"joellow88"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"joellow88"},"content":"        return \"CommandResult{\"","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"joellow88"},"content":"                + \"feedbackToUser\u003d\u0027\" + feedbackToUser + \u0027\\\u0027\u0027","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"joellow88"},"content":"                + \u0027}\u0027;","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joellow88":6,"-":72,"Statspadders":17}},{"path":"src/main/java/seedu/address/logic/commands/DarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Statspadders"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"Statspadders"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"Statspadders"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"Statspadders"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"Statspadders"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"Statspadders"},"content":" *","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"Statspadders"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"Statspadders"},"content":"public class DarkCommand extends Command {","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"Statspadders"},"content":"    public static final String COMMAND_WORD \u003d \"dark\";","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"Statspadders"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully changed to the Dark theme !\";","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"Statspadders"},"content":"    public static final String MESSAGE_ERROR \u003d \"Already in the dark theme\";","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"Statspadders"},"content":"    private static final String cssFilePath \u003d \"view/DarkTheme.css\";","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"Statspadders"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"Statspadders"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"Statspadders"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"Statspadders"},"content":"        if (cssFilePath.equals(model.getCssFilePath())) {","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"Statspadders"},"content":"            return new CommandResult(MESSAGE_ERROR);","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"Statspadders"},"content":"        } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"Statspadders"},"content":"            return new CommandResult(MESSAGE_SUCCESS, true);","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"Statspadders"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"Statspadders":27}},{"path":"src/main/java/seedu/address/logic/commands/DeleteByNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.person.NameContainsAllKeywordsPredicate;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"elvern18"},"content":" * Finds and deletes person in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":"public class DeleteByNameCommand extends DeleteCommand {","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"    private final NameContainsAllKeywordsPredicate predicate;","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"    public DeleteByNameCommand(NameContainsAllKeywordsPredicate predicate) {","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"elvern18"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"elvern18"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"elvern18"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"elvern18"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"elvern18"},"content":"        List\u003cPerson\u003e updatedList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"elvern18"},"content":"        if (updatedList.isEmpty()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"elvern18"},"content":"            return new CommandResult(String.format(Messages.MESSAGE_PERSON_NOT_FOUND));","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"elvern18"},"content":"        if (updatedList.size() \u003d\u003d 1) {","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"elvern18"},"content":"            Person personToDelete \u003d updatedList.get(0);","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"elvern18"},"content":"            model.deletePerson(personToDelete);","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"elvern18"},"content":"            model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"elvern18"},"content":"            return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"elvern18"},"content":"        } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"elvern18"},"content":"            return new CommandResult(","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"elvern18"},"content":"                    String.format(Messages.MESSAGE_MULTIPLE_PERSONS_FOUND));","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"elvern18"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"elvern18"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"elvern18"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"elvern18"},"content":"                || (other instanceof DeleteByNameCommand // instanceof handles nulls","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"elvern18"},"content":"                \u0026\u0026 predicate.equals(((DeleteByNameCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"elvern18"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"elvern18":48,"joellow88":3}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"public abstract class DeleteCommand extends Command {","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"    public static final String MESSAGE_USAGE_SINGLE_DELETE \u003d \"1. Delete Single Index\"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":"    public static final String MESSAGE_USAGE_MULTIPLE_DELETE \u003d \"2. Delete Multiple Indexes\"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":"            + \": Deletes multiple people identified by the index numbers used in the displayed person list.\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":"            + \"Parameters: INDEXES (must be a positive integer), with each index being separated by a comma \\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1,2,3\";","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"elvern18"},"content":"    public static final String MESSAGE_USAGE_DELETE_BY_NAME \u003d \"3. Delete Single Person By Name\"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"elvern18"},"content":"            + \": Deletes the person identified by the specified keyword (case-insensitive) used.\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"elvern18"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"elvern18"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"elvern18"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"elvern18"},"content":"            + \"\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"            + MESSAGE_USAGE_SINGLE_DELETE","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"elvern18"},"content":"            + \"\\nOR\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"elvern18"},"content":"            + MESSAGE_USAGE_MULTIPLE_DELETE","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"elvern18"},"content":"            + \"\\nOR\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"elvern18"},"content":"            + MESSAGE_USAGE_DELETE_BY_NAME;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"elvern18":17,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/DeleteMultipleIndexCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"elvern18"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":"public class DeleteMultipleIndexCommand extends DeleteCommand {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted People Successfully \";","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"    private final List\u003cIndex\u003e indexes;","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"    public DeleteMultipleIndexCommand(List\u003cIndex\u003e indexes) {","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"elvern18"},"content":"        this.indexes \u003d indexes;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"elvern18"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"elvern18"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"        model.resetPersonHiddenStatus();","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"elvern18"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"elvern18"},"content":"        isIndexesValid(lastShownList);","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"        List\u003cPerson\u003e listOfPeople \u003d new ArrayList\u003cPerson\u003e();","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"elvern18"},"content":"        for (Index targetIndex : this.indexes) {","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"elvern18"},"content":"            Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"elvern18"},"content":"            listOfPeople.add(personToDelete);","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"Gibson0918"},"content":"        model.resetPersonHiddenStatus();","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"elvern18"},"content":"        model.deleteMultiplePersons(listOfPeople);","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"Gibson0918"},"content":"        model.resetPersonHiddenStatus();","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"Gibson0918"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS));","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"elvern18"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"elvern18"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"elvern18"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"elvern18"},"content":"                || (other instanceof DeleteMultipleIndexCommand // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"elvern18"},"content":"                \u0026\u0026 indexes.equals(((DeleteMultipleIndexCommand) other).indexes)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"elvern18"},"content":"     * Checks if all the indexes in the list of indexes are valid.","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"elvern18"},"content":"     * @param lastShownList","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"elvern18"},"content":"     * @return validity of the list of indexes.","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"elvern18"},"content":"     * @throws CommandException","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"elvern18"},"content":"    public boolean isIndexesValid(List\u003cPerson\u003e lastShownList) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"elvern18"},"content":"        for (Index targetIndex : indexes) {","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"elvern18"},"content":"            if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"elvern18"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"elvern18"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"elvern18"},"content":"        return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"elvern18"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"elvern18":60,"joellow88":3,"Gibson0918":4}},{"path":"src/main/java/seedu/address/logic/commands/DeleteSingleIndexCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"elvern18"},"content":" * Deletes a single person in the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":"public class DeleteSingleIndexCommand extends DeleteCommand {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"elvern18"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"elvern18"},"content":"    public DeleteSingleIndexCommand(Index targetIndex) {","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"elvern18"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"elvern18"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"elvern18"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"elvern18"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"elvern18"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"elvern18"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"elvern18"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"elvern18"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"elvern18"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"elvern18"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"elvern18"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"elvern18"},"content":"                || (other instanceof DeleteSingleIndexCommand // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"elvern18"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteSingleIndexCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"elvern18"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"elvern18":47,"Gibson0918":2}},{"path":"src/main/java/seedu/address/logic/commands/EditByIndexCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"elvern18"},"content":" * Abstract parent class of EditCommand and EditByNameCommand","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":"public class EditByIndexCommand extends EditCommand {","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":"    private final Index index;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"elvern18"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"elvern18"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"elvern18"},"content":"    public EditByIndexCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"elvern18"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"elvern18"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"elvern18"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"elvern18"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"elvern18"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"elvern18"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"elvern18"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"elvern18"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"elvern18"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"elvern18"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"elvern18"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"elvern18"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"elvern18"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"elvern18"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"elvern18"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"elvern18"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"elvern18"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"elvern18"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"elvern18"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"elvern18"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"elvern18"},"content":"            return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"elvern18"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"elvern18"},"content":"        if (!(other instanceof EditByIndexCommand)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"elvern18"},"content":"            return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"elvern18"},"content":"        // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"elvern18"},"content":"        EditByIndexCommand e \u003d (EditByIndexCommand) other;","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"elvern18"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"elvern18"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"elvern18"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"elvern18":71}},{"path":"src/main/java/seedu/address/logic/commands/EditByNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.person.NameContainsAllKeywordsPredicate;","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"public class EditByNameCommand extends EditCommand {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"elvern18"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"elvern18"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"    private final NameContainsAllKeywordsPredicate predicate;","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"elvern18"},"content":"     * @param predicate            predicate of name containing keywords","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"joellow88"},"content":"    public EditByNameCommand(NameContainsAllKeywordsPredicate predicate, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"elvern18"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"elvern18"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"elvern18"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"elvern18"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"elvern18"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"elvern18"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"elvern18"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"elvern18"},"content":"        List\u003cPerson\u003e updatedList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"elvern18"},"content":"        if (updatedList.isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"joellow88"},"content":"            throw new CommandException(Messages.MESSAGE_PERSON_NOT_FOUND);","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"elvern18"},"content":"        if (updatedList.size() \u003d\u003d 1) {","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"elvern18"},"content":"            Person personToEdit \u003d updatedList.get(0);","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"elvern18"},"content":"            Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"elvern18"},"content":"            if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"elvern18"},"content":"                throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"elvern18"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"elvern18"},"content":"            model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"elvern18"},"content":"            model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"elvern18"},"content":"            return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"elvern18"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"joellow88"},"content":"            throw new CommandException(","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"elvern18"},"content":"                    String.format(Messages.MESSAGE_MULTIPLE_PERSONS_FOUND));","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"elvern18"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"elvern18"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"elvern18"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"elvern18"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"elvern18"},"content":"            return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"elvern18"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"elvern18"},"content":"        if (!(other instanceof EditByNameCommand)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"elvern18"},"content":"            // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"elvern18"},"content":"            return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"elvern18"},"content":"        // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"elvern18"},"content":"        EditByNameCommand e \u003d (EditByNameCommand) other;","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"elvern18"},"content":"        return predicate.equals(e.predicate)","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"elvern18"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"elvern18"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"elvern18":73,"joellow88":5}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"Statspadders"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_TAG;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"Statspadders"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"public abstract class EditCommand extends Command {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"Statspadders"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\"","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"Statspadders"},"content":"            + \"[\" + PREFIX_MODULE_TAG + \"MODULE TAG]...\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"elvern18"},"content":"    static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":62,"author":{"gitId":"Statspadders"},"content":"        Set\u003cModuleTag\u003e updatedModuleTags \u003d editPersonDescriptor.getModuleTags().orElse(personToEdit.getModuleTags());","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"Statspadders"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedModuleTags);","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"Statspadders"},"content":"        private Set\u003cModuleTag\u003e moduleTags;","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":92,"author":{"gitId":"Statspadders"},"content":"            setModuleTags(toCopy.moduleTags);","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"Statspadders"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags, moduleTags);","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":145,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":151,"author":{"gitId":"Statspadders"},"content":"        public void setModuleTags(Set\u003cModuleTag\u003e moduleTags) {","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"Statspadders"},"content":"            this.moduleTags \u003d (moduleTags !\u003d null) ? new HashSet\u003c\u003e(moduleTags) : null;","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"Statspadders"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"Statspadders"},"content":"        public Optional\u003cSet\u003cModuleTag\u003e\u003e getModuleTags() {","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"Statspadders"},"content":"            return (moduleTags !\u003d null) ? Optional.of(Collections.unmodifiableSet(moduleTags)) : Optional.empty();","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"Statspadders"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"Statspadders"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"Statspadders"},"content":"                    \u0026\u0026 getModuleTags().equals(e.getModuleTags());","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"elvern18":2,"-":160,"Statspadders":20}},{"path":"src/main/java/seedu/address/logic/commands/ExportCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"import java.io.File;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.person.MatchNamePredicate;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.storage.JsonSerializableAddressBook;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":" * Views a person\u0027s contact details","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"public class ExportCommand extends Command {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"    public static final String COMMAND_WORD \u003d \"export\";","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d\";","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"    public static final String FILEPATH \u003d \"export/ModCheck_contact_list.json\";","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"            + \": exports the contact details of the person identified \"","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"Gibson0918"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"Gibson0918"},"content":"    private final List\u003cIndex\u003e index;","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"Gibson0918"},"content":"     * Constructor for ExportCommand","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"Gibson0918"},"content":"     * @param index index of the person in the list to display their contacts","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Gibson0918"},"content":"    public ExportCommand(List\u003cIndex\u003e index) {","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Gibson0918"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"Gibson0918"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Gibson0918"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"Gibson0918"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"Gibson0918"},"content":"        model.resetPersonHiddenStatus();","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"Gibson0918"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"Gibson0918"},"content":"        Optional\u003cIndex\u003e maxIndex \u003d this.index.stream().max(Comparator.naturalOrder());","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"Gibson0918"},"content":"        int max \u003d maxIndex.get().getOneBased();","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"Gibson0918"},"content":"        if (max \u003e lastShownList.size()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"Gibson0918"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"Gibson0918"},"content":"        List\u003cName\u003e nameList \u003d index.stream().filter(x -\u003e validateIndex(x, lastShownList))","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"Gibson0918"},"content":"                .map(x -\u003e lastShownList.get(x.getZeroBased()).getName()).collect(Collectors.toList());","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Gibson0918"},"content":"        model.resetPersonHiddenStatus();","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Gibson0918"},"content":"        MatchNamePredicate predicate \u003d new MatchNamePredicate(nameList);","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"Gibson0918"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"Gibson0918"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"Gibson0918"},"content":"        nameList.stream().forEach(x -\u003e sb.append(","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"Gibson0918"},"content":"                String.format(Messages.MESSAGE_EXPORT_PERSON_CONTACT_DETAILS, x) + \"\\n\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":72,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":73,"author":{"gitId":"Gibson0918"},"content":"        List\u003cPerson\u003e updatedPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"Gibson0918"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":75,"author":{"gitId":"Gibson0918"},"content":"            writeToJsonFile(updatedPersonList);","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"Gibson0918"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"Gibson0918"},"content":"            throw new CommandException(Messages.MESSAGE_IOEXCEPTION);","lastModifiedDate":"2023-03-30"},{"lineNumber":78,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"Gibson0918"},"content":"        return new CommandResult(sb.toString());","lastModifiedDate":"2023-03-30"},{"lineNumber":80,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":81,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"Gibson0918"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"Gibson0918"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"Gibson0918"},"content":"            return true;","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"Gibson0918"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"Gibson0918"},"content":"        if (!(other instanceof ExportCommand)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"Gibson0918"},"content":"            return false;","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"Gibson0918"},"content":"        // state check","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"Gibson0918"},"content":"        ExportCommand v \u003d (ExportCommand) other;","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"Gibson0918"},"content":"        return index.equals(v.index);","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"Gibson0918"},"content":"     * Method to write person contact details to text file","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"Gibson0918"},"content":"     * @param personList list of person\u0027s contact details","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"Gibson0918"},"content":"     * @throws IOException read/write exception","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"Gibson0918"},"content":"    @SuppressWarnings(\"checkstyle:CommentsIndentation\")","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"Gibson0918"},"content":"    public void writeToJsonFile(List\u003cPerson\u003e personList) throws IOException {","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"Gibson0918"},"content":"        File file \u003d new File(FILEPATH);","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"Gibson0918"},"content":"        Path path \u003d Path.of(FILEPATH);","lastModifiedDate":"2023-03-30"},{"lineNumber":107,"author":{"gitId":"Gibson0918"},"content":"        FileUtil.createParentDirsOfFile(path);","lastModifiedDate":"2023-03-30"},{"lineNumber":108,"author":{"gitId":"Gibson0918"},"content":"        FileUtil.createIfMissing(path);","lastModifiedDate":"2023-03-30"},{"lineNumber":109,"author":{"gitId":"Gibson0918"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"Gibson0918"},"content":"        for (Person p : personList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":111,"author":{"gitId":"Gibson0918"},"content":"            addressBook.addPerson(p);","lastModifiedDate":"2023-03-30"},{"lineNumber":112,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":113,"author":{"gitId":"Gibson0918"},"content":"        if (file.exists() \u0026\u0026 !file.isDirectory()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"Gibson0918"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file));","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"Gibson0918"},"content":"            writer.write(JsonUtil.toJsonString(new JsonSerializableAddressBook(addressBook)));","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"Gibson0918"},"content":"            writer.newLine();","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"Gibson0918"},"content":"            writer.close();","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"Gibson0918"},"content":"    private boolean validateIndex(Index index, List\u003cPerson\u003e lastShownList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"Gibson0918"},"content":"        return index.getZeroBased() \u003e\u003d lastShownList.size() ? false : true;","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Gibson0918":124}},{"path":"src/main/java/seedu/address/logic/commands/FilterCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_TAG;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":" * Command class that filters the models based on keywords given","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"public class FilterCommand extends Command {","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    public static final String COMMAND_WORD \u003d \"filter\";","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters a contact.\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"            + PREFIX_ADDRESS + \"DESCRIPTION \"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"            + PREFIX_TAG + \"TAG \"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"            + PREFIX_MODULE_TAG + \"MODULE TAG\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"            + \"Examples:\\n\" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"            + PREFIX_NAME + \"John Doe\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"            + PREFIX_PHONE + \"98765432\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"            + PREFIX_EMAIL + \"johnd@example.com\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"            + PREFIX_ADDRESS + \"My favourite TA\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"            + PREFIX_TAG + \"Friends \"","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"joellow88"},"content":"            + PREFIX_TAG + \"Family\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"joellow88"},"content":"            + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"joellow88"},"content":"            + PREFIX_MODULE_TAG + \"CS2103\";","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"    public FilterCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"Gibson0918"},"content":"        model.resetPersonHiddenStatus();","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"        model.updateFilteredPersonList(this.predicate);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"                String.format(Messages.MESSAGE_CONTACTS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"                || (other instanceof FilterCommand // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"                \u0026\u0026 predicate.equals(((FilterCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"joellow88":6,"Acerizm":63,"Gibson0918":1}},{"path":"src/main/java/seedu/address/logic/commands/LightCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Statspadders"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"Statspadders"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"Statspadders"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"Statspadders"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"Statspadders"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"Statspadders"},"content":" * Command to change to light theme","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"Statspadders"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"Statspadders"},"content":"public class LightCommand extends Command {","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"Statspadders"},"content":"    public static final String COMMAND_WORD \u003d \"light\";","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"Statspadders"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully changed to the light theme !\";","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"Statspadders"},"content":"    public static final String MESSAGE_ERROR \u003d \"Already in the light theme\";","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"Statspadders"},"content":"    private static final String cssFilePath \u003d \"view/LightTheme.css\";","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"Statspadders"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"Statspadders"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"Statspadders"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"Statspadders"},"content":"        if (cssFilePath.equals(model.getCssFilePath())) {","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"Statspadders"},"content":"            return new CommandResult(MESSAGE_ERROR);","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"Statspadders"},"content":"        } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"Statspadders"},"content":"            return new CommandResult(MESSAGE_SUCCESS, false);","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"Statspadders"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"Statspadders":27}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"        model.resetPersonHiddenStatus();","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":24,"Gibson0918":1}},{"path":"src/main/java/seedu/address/logic/commands/LoadCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"import java.io.File;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":" * Chooses and loads the contents of another data file into ModCheck.","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"public class LoadCommand extends Command {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"    public static final String COMMAND_WORD \u003d \"load\";","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Contents of %1$s loaded successfully!\";","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"    public static final String MESSAGE_NO_FILE_SELECTED \u003d \"No data file has been selected!\";","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"    public static final String MESSAGE_NOT_MODCHECK_READABLE_FILE \u003d \"Data file cannot be read by ModCheck!\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"            + \"Please only load data files generated by ModCheck.\";","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"    public static final String MESSAGE_ADDRESS_BOOK_EMPTY \u003d \"Address book chosen is empty!\";","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"    public static final String MESSAGE_NOT_VALID_PATH \u003d \"Path entered is not valid!\";","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"    private final String path;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"    public LoadCommand(String path) {","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"joellow88"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"joellow88"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"joellow88"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"joellow88"},"content":"        if (path \u003d\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"joellow88"},"content":"            throw new CommandException(MESSAGE_NO_FILE_SELECTED);","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"joellow88"},"content":"        Optional\u003cReadOnlyAddressBook\u003e newAddressBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"joellow88"},"content":"        try {","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"joellow88"},"content":"            newAddressBook \u003d readFile(path);","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"joellow88"},"content":"        } catch (InvalidPathException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"joellow88"},"content":"            throw new CommandException(MESSAGE_NOT_VALID_PATH);","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"joellow88"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"joellow88"},"content":"            throw new CommandException(MESSAGE_NOT_MODCHECK_READABLE_FILE);","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"joellow88"},"content":"        model.combine(newAddressBook.orElseThrow(() -\u003e new CommandException(MESSAGE_ADDRESS_BOOK_EMPTY)),","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"joellow88"},"content":"                path);","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"joellow88"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, path));","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"joellow88"},"content":"    private Optional\u003cReadOnlyAddressBook\u003e readFile(String path) throws DataConversionException, InvalidPathException {","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"joellow88"},"content":"        if (!new File(path).canRead()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"joellow88"},"content":"            throw new InvalidPathException(path, \"File not readable\");","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"joellow88"},"content":"        Optional\u003cReadOnlyAddressBook\u003e newAddressBook \u003d new JsonAddressBookStorage(Path.of(path)).readAddressBook();","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"joellow88"},"content":"        return newAddressBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"joellow88"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"joellow88"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"joellow88"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"joellow88"},"content":"            return true;","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"joellow88"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"joellow88"},"content":"            return false;","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"joellow88"},"content":"        LoadCommand that \u003d (LoadCommand) o;","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"joellow88"},"content":"        return Objects.equals(path, that.path);","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"joellow88"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"joellow88"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"joellow88"},"content":"        return path !\u003d null ? path.hashCode() : 0;","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"joellow88":84}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.Undoable;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":" * Redoes the undo command from ModCheck","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully redone command:\\n%1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"    public static final String MESSAGE_NO_REDOABLE_COMMAND \u003d \"No command to redo!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"        model.resetPersonHiddenStatus();","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"        if (model instanceof Undoable) {","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"            Undoable undoableModel \u003d (Undoable) model;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"            if (!undoableModel.hasRedoableCommand()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"                throw new CommandException(MESSAGE_NO_REDOABLE_COMMAND);","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"            String returnMessage \u003d undoableModel.executeRedo();","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"            model.resetPersonHiddenStatus();","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, returnMessage));","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"        } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"            throw new IllegalArgumentException(\"Model passed does not support undo!\");","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joellow88":33,"Gibson0918":3}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.Undoable;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":" * Undoes the last modification command from ModCheck","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":" * A modification command is any command that successfully changed data in ModCheck.","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":" * For example: Add, Edit, Clear, etc.","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":" * A command that would have changed data in ModCheck, but encountered an error, (eg: Adding duplicate persons), will","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":" * NOT be undone","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Successfully undone command:\\n%1$s\";","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"    public static final String MESSAGE_NO_UNDOABLE_COMMAND \u003d \"No command to undo!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"        model.resetPersonHiddenStatus();","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"        if (model instanceof Undoable) {","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"            Undoable undoableModel \u003d (Undoable) model;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"            if (!undoableModel.hasUndoableCommand()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"joellow88"},"content":"                throw new CommandException(MESSAGE_NO_UNDOABLE_COMMAND);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"            String returnMessage \u003d undoableModel.executeUndo();","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"            model.resetPersonHiddenStatus();","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"            return new CommandResult(String.format(MESSAGE_SUCCESS, returnMessage));","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"joellow88"},"content":"        } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"joellow88"},"content":"            throw new IllegalArgumentException(\"Model passed does not support undo!\");","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joellow88":37,"Gibson0918":3}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.person.MatchNamePredicate;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":" * Views a person\u0027s contact details","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d\";","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-05"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"            + \": views the contact details of the person identified \"","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2023-03-05"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \";","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"    private final List\u003cIndex\u003e index;","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"     * Constructor for viewCommand","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"     * @param index index of the person in the list to display their contacts","lastModifiedDate":"2023-03-05"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"    public ViewCommand(List\u003cIndex\u003e index) {","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Gibson0918"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-05"},{"lineNumber":40,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":42,"author":{"gitId":"Gibson0918"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-05"},{"lineNumber":43,"author":{"gitId":"Gibson0918"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"Gibson0918"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"Gibson0918"},"content":"        Optional\u003cIndex\u003e maxIndex \u003d this.index.stream().max(Comparator.naturalOrder());","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"Gibson0918"},"content":"        int max \u003d maxIndex.get().getOneBased();","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"Gibson0918"},"content":"        if (max \u003e lastShownList.size()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"Gibson0918"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"Gibson0918"},"content":"        List\u003cName\u003e nameList \u003d index.stream().filter(x -\u003e validateIndex(x, lastShownList))","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"Gibson0918"},"content":"                .map(x -\u003e lastShownList.get(x.getZeroBased()).getName()).collect(Collectors.toList());","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"Gibson0918"},"content":"        List\u003cPerson\u003e updatedPersonList \u003d lastShownList.stream()","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"Gibson0918"},"content":"                .filter(x -\u003e nameList.contains(x.getName())).collect(Collectors.toList());","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"Gibson0918"},"content":"        model.showPersonContact(updatedPersonList);","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"Gibson0918"},"content":"        MatchNamePredicate predicate \u003d new MatchNamePredicate(nameList);","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"Gibson0918"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"Gibson0918"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-07"},{"lineNumber":61,"author":{"gitId":"Gibson0918"},"content":"        nameList.stream().forEach(x -\u003e sb.append(","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"Gibson0918"},"content":"                String.format(Messages.MESSAGE_VIEW_PERSON_CONTACT_DETAILS, x) + \"\\n\"));","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"Gibson0918"},"content":"        return new CommandResult(sb.toString());","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":65,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":66,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-03-05"},{"lineNumber":67,"author":{"gitId":"Gibson0918"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-05"},{"lineNumber":68,"author":{"gitId":"Gibson0918"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-05"},{"lineNumber":69,"author":{"gitId":"Gibson0918"},"content":"            return true;","lastModifiedDate":"2023-03-05"},{"lineNumber":70,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":71,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":72,"author":{"gitId":"Gibson0918"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":73,"author":{"gitId":"Gibson0918"},"content":"        if (!(other instanceof ViewCommand)) {","lastModifiedDate":"2023-03-05"},{"lineNumber":74,"author":{"gitId":"Gibson0918"},"content":"            return false;","lastModifiedDate":"2023-03-05"},{"lineNumber":75,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-03-05"},{"lineNumber":76,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"Gibson0918"},"content":"        // state check","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"Gibson0918"},"content":"        ViewCommand v \u003d (ViewCommand) other;","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"Gibson0918"},"content":"        return index.equals(v.index);","lastModifiedDate":"2023-03-05"},{"lineNumber":80,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":81,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":82,"author":{"gitId":"Gibson0918"},"content":"    private boolean validateIndex(Index index, List\u003cPerson\u003e lastShownList) {","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"Gibson0918"},"content":"        return index.getZeroBased() \u003e\u003d lastShownList.size() ? false : true;","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Gibson0918":85}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"Statspadders"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_TAG;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"Statspadders"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"Statspadders"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Statspadders"},"content":"                        PREFIX_MODULE_TAG);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"Statspadders"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"Statspadders"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).orElse(\"\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Statspadders"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).orElse(\"\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Statspadders"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).orElse(\"\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"Statspadders"},"content":"        Set\u003cModuleTag\u003e moduleTagList \u003d ParserUtil.parseModuleTags(argMultimap.getAllValues(PREFIX_MODULE_TAG));","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"Statspadders"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, moduleTagList);","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"-":54,"Statspadders":10}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"Statspadders"},"content":"import seedu.address.logic.commands.DarkCommand;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"Statspadders"},"content":"import seedu.address.logic.commands.LightCommand;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.commands.LoadCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"Gibson0918"},"content":"    public Command parseCommand(String userInput) throws ParseException, CommandException {","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":76,"author":{"gitId":"Gibson0918"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-05"},{"lineNumber":77,"author":{"gitId":"Gibson0918"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2023-03-05"},{"lineNumber":78,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":79,"author":{"gitId":"Acerizm"},"content":"        case FilterCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"Acerizm"},"content":"            return new FilterCommandParser().parse(arguments);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"joellow88"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"joellow88"},"content":"            return new UndoCommand();","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"joellow88"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"joellow88"},"content":"            return new RedoCommand();","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"joellow88"},"content":"        case LoadCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"joellow88"},"content":"            return new LoadCommandParser().parse(arguments);","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"Statspadders"},"content":"        case LightCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-26"},{"lineNumber":92,"author":{"gitId":"Statspadders"},"content":"            return new LightCommand();","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"Statspadders"},"content":"        case DarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"Statspadders"},"content":"            return new DarkCommand();","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"Gibson0918"},"content":"        case ExportCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"Gibson0918"},"content":"            return new ExportCommandParser().parse(arguments);","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joellow88":11,"-":70,"Statspadders":8,"Acerizm":4,"Gibson0918":11}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"Statspadders"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"Statspadders"},"content":"    public static final Prefix PREFIX_MODULE_TAG \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":14,"Statspadders":2}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"import java.util.List;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"import seedu.address.logic.commands.DeleteByNameCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"import seedu.address.logic.commands.DeleteMultipleIndexCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"import seedu.address.logic.commands.DeleteSingleIndexCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.person.NameContainsAllKeywordsPredicate;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":" * Parses input arguments and creates a new DeleteCommand type object","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"        if (args.isBlank()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"elvern18"},"content":"                  String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"        if (StringUtil.isNonZeroUnsignedInteger(args.trim())) {","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"elvern18"},"content":"            // Delete Single","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"elvern18"},"content":"            return new DeleteSingleIndexCommand(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"joellow88"},"content":"        } else if (args.matches(\"^[0-9,]+$\")) {","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"elvern18"},"content":"            // Delete Multiple","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"joellow88"},"content":"            List\u003cIndex\u003e listOfIndexes \u003d ParserUtil.parseIndexes(args);","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"elvern18"},"content":"            return new DeleteMultipleIndexCommand(listOfIndexes);","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"joellow88"},"content":"        } else {","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"elvern18"},"content":"            // delete by name","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"elvern18"},"content":"            String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"elvern18"},"content":"            String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"joellow88"},"content":"            return new DeleteByNameCommand(new NameContainsAllKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"elvern18":15,"joellow88":9,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"Statspadders"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_TAG;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"import seedu.address.logic.commands.EditByIndexCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"elvern18"},"content":"import seedu.address.logic.commands.EditByNameCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.person.NameContainsAllKeywordsPredicate;","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"Statspadders"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"Statspadders"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG,","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Statspadders"},"content":"                        PREFIX_MODULE_TAG);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"elvern18"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"elvern18"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"joellow88"},"content":"        if (argMultimap.getPreamble().isBlank()) {","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"joellow88"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":64,"author":{"gitId":"Statspadders"},"content":"        parseModuleTagsForEdit(argMultimap.getAllValues(PREFIX_MODULE_TAG))","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Statspadders"},"content":"                .ifPresent(editPersonDescriptor::setModuleTags);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"joellow88"},"content":"        assert !argMultimap.getPreamble().isBlank();","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"elvern18"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"elvern18"},"content":"            if (ParserUtil.isValidIndex(argMultimap.getPreamble())) {","lastModifiedDate":"2023-03-30"},{"lineNumber":74,"author":{"gitId":"elvern18"},"content":"                Index index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"elvern18"},"content":"                return new EditByIndexCommand(index, editPersonDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"elvern18"},"content":"            } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":77,"author":{"gitId":"joellow88"},"content":"                String nameArg \u003d argMultimap.getPreamble();","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"joellow88"},"content":"                String[] splitArgs \u003d nameArg.trim().split(\"\\\\s\");","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"joellow88"},"content":"                System.out.println(Arrays.toString(splitArgs));","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"joellow88"},"content":"                return new EditByNameCommand(new NameContainsAllKeywordsPredicate(Arrays.asList(splitArgs)),","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"elvern18"},"content":"                        editPersonDescriptor);","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"elvern18"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"elvern18"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"elvern18"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"Statspadders"},"content":"    private Optional\u003cSet\u003cModuleTag\u003e\u003e parseModuleTagsForEdit(Collection\u003cString\u003e moduleTags) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"Statspadders"},"content":"        assert moduleTags !\u003d null;","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"Statspadders"},"content":"        if (moduleTags.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"Statspadders"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"Statspadders"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"Statspadders"},"content":"        Collection\u003cString\u003e moduleTagSet \u003d moduleTags.size() \u003d\u003d 1","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"Statspadders"},"content":"                \u0026\u0026 moduleTags.contains(\"\") ? Collections.emptySet() : moduleTags;","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"Statspadders"},"content":"        return Optional.of(ParserUtil.parseModuleTags(moduleTagSet));","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"elvern18":15,"joellow88":9,"-":73,"Statspadders":17}},{"path":"src/main/java/seedu/address/logic/parser/ExportCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.logic.commands.ExportCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":" * Parse input arguments and creates a new {@code ViewCommand} object","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"public class ExportCommandParser {","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"    public ExportCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"        List\u003cIndex\u003e indexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"        String[] parsedIndexList \u003d args.trim().split(\"\\\\s+\");","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"        for (String i: parsedIndexList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"            System.out.println(i);","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"            try {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"                indexList.add(ParserUtil.parseIndex(i));","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"            } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"                throw new ParseException(String.format(","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"                        MESSAGE_INVALID_COMMAND_FORMAT, ExportCommand.MESSAGE_ARGUMENTS), ive);","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"        return new ExportCommand(indexList);","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Gibson0918":40}},{"path":"src/main/java/seedu/address/logic/parser/FilterCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MODULE_TAG;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.person.ContactContainsDescriptionPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.person.ContactContainsEmailPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.person.ContactContainsModuleTagPredicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.person.ContactContainsPhoneNumberPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.person.ContactContainsTagPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":" * Parses input arguments and creates a new FilterCommand object","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"public class FilterCommandParser implements Parser\u003cFilterCommand\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"     * Parses the given {@code String} of arguments in the context of the FilterCommand","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"     * and returns a FilterCommand object for execution.","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"    public FilterCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"            ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"                    ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"joellow88"},"content":"                            PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG, PREFIX_MODULE_TAG);","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"            int numOfPrefixesPresent \u003d getNumOfPrefixesPresent(argMultimap,","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"                    PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE,","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"joellow88"},"content":"                    PREFIX_EMAIL, PREFIX_TAG, PREFIX_MODULE_TAG);","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"            if (numOfPrefixesPresent \u003e 1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"                        FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"            if (arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE,","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"joellow88"},"content":"                    PREFIX_EMAIL, PREFIX_TAG, PREFIX_MODULE_TAG)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"                        FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"            if (!isAnyPrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE,","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"joellow88"},"content":"                    PREFIX_EMAIL, PREFIX_TAG, PREFIX_MODULE_TAG)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"                        FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"Acerizm"},"content":"            Prefix prefix \u003d getPrefix(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE,","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"joellow88"},"content":"                    PREFIX_EMAIL, PREFIX_TAG, PREFIX_MODULE_TAG);","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Acerizm"},"content":"            if (prefix.getPrefix().equals(\"n/\") \u0026\u0026 argMultimap.getAllValues(PREFIX_NAME).size() \u003d\u003d 1) {","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"Acerizm"},"content":"                Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"Acerizm"},"content":"                String fullName \u003d name.toString();","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Acerizm"},"content":"                String trimmedFullName \u003d fullName.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"Acerizm"},"content":"                String[] nameKeywords \u003d trimmedFullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"Acerizm"},"content":"                return new FilterCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Acerizm"},"content":"            } else if (prefix.getPrefix().equals(\"p/\") \u0026\u0026 argMultimap.getAllValues(PREFIX_PHONE).size() \u003d\u003d 1) {","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"Acerizm"},"content":"                Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"Acerizm"},"content":"                String phoneNumber \u003d phone.toString();","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"Acerizm"},"content":"                return new FilterCommand(new ContactContainsPhoneNumberPredicate(phoneNumber));","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"Acerizm"},"content":"            } else if (prefix.getPrefix().equals(\"e/\") \u0026\u0026 argMultimap.getAllValues(PREFIX_EMAIL).size() \u003d\u003d 1) {","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"Acerizm"},"content":"                Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"Acerizm"},"content":"                String emailAddr \u003d email.toString();","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"Acerizm"},"content":"                return new FilterCommand(new ContactContainsEmailPredicate(emailAddr));","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"Acerizm"},"content":"            } else if (prefix.getPrefix().equals(\"d/\") \u0026\u0026 argMultimap.getAllValues(PREFIX_ADDRESS).size() \u003d\u003d 1) {","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"Acerizm"},"content":"                Address description \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"Acerizm"},"content":"                String fullDescription \u003d description.toString();","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"Acerizm"},"content":"                return new FilterCommand(new ContactContainsDescriptionPredicate(fullDescription));","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"Acerizm"},"content":"            } else if (prefix.getPrefix().equals(\"t/\")) {","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"Acerizm"},"content":"                Set\u003cTag\u003e tagSet \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"Acerizm"},"content":"                return new FilterCommand(new ContactContainsTagPredicate(tagSet));","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"joellow88"},"content":"            } else if (prefix.getPrefix().equals(\"m/\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"joellow88"},"content":"                Set\u003cModuleTag\u003e moduleTagSet \u003d ParserUtil.parseModuleTags(argMultimap.getAllValues(PREFIX_MODULE_TAG));","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"joellow88"},"content":"                return new FilterCommand(new ContactContainsModuleTagPredicate(moduleTagSet));","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"Acerizm"},"content":"            } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"Acerizm"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"Acerizm"},"content":"                        FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"Acerizm"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"Acerizm"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"Acerizm"},"content":"                    FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"Acerizm"},"content":"     * Returns true if any of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"Acerizm"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"Acerizm"},"content":"    private static boolean isAnyPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"Acerizm"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"Acerizm"},"content":"     * Returns the type of prefix","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"Acerizm"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"Acerizm"},"content":"    private static Prefix getPrefix(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"Acerizm"},"content":"        Optional\u003cPrefix\u003e optionalPrefix \u003d Stream.of(prefixes)","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"Acerizm"},"content":"                .filter(prefix -\u003e argumentMultimap.getValue(prefix).isPresent())","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"Acerizm"},"content":"                .findFirst();","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"Acerizm"},"content":"        return optionalPrefix.orElse(null);","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"Acerizm"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"Acerizm"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"Acerizm"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"Acerizm"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"Acerizm"},"content":"     * Returns the number of prefixes that user inputs","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"Acerizm"},"content":"    private static int getNumOfPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"Acerizm"},"content":"        return (int) Stream.of(prefixes)","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"Acerizm"},"content":"                .filter(prefix -\u003e argumentMultimap.getValue(prefix).isPresent()).count();","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"joellow88":11,"Acerizm":131}},{"path":"src/main/java/seedu/address/logic/parser/LoadCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.commands.LoadCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.parser.exceptions.UiInputRequiredException;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":" * Parses input arguments and creates a new LoadCommand object","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"public class LoadCommandParser {","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"     * Parses the given {@code String} of arguments in the context of the LoadCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"     * and returns a LoadCommand object for execution.","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"     * @throws UiInputRequiredException if Ui input is required","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"    public LoadCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"            throw new UiInputRequiredException(\"Ui input required!\");","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"        if (trimmedArgs.equals(\"!\")) {","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"            return new LoadCommand(null);","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"        return new LoadCommand(trimmedArgs);","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"joellow88":29}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"Statspadders"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"elvern18"},"content":"     * Parses {@code oneBasedIndex} checks if validity of the index.","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"elvern18"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"elvern18"},"content":"    public static boolean isValidIndex(String oneBasedIndex) {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"elvern18"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"elvern18"},"content":"        return StringUtil.isNonZeroUnsignedInteger(trimmedIndex);","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"elvern18"},"content":"     * Parses {@code indexes} into an {@code listOfIndexes} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"elvern18"},"content":"     * trimmed. String of indexes will be split by \",\".","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"elvern18"},"content":"     * @param indexes String of indexes.","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"elvern18"},"content":"     * @return ArrayList of indexes.","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"elvern18"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"elvern18"},"content":"    public static ArrayList\u003cIndex\u003e parseIndexes(String indexes) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"elvern18"},"content":"        String trimmedIndexes \u003d indexes.trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"elvern18"},"content":"        String[] splitIndexes \u003d trimmedIndexes.split(\",\");","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"elvern18"},"content":"        ArrayList\u003cIndex\u003e listOfIndexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"elvern18"},"content":"        for (String index: splitIndexes) {","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"elvern18"},"content":"            if (!StringUtil.isNonZeroUnsignedInteger(index)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"elvern18"},"content":"                throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"elvern18"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"elvern18"},"content":"            Index newIndex \u003d Index.fromOneBased(Integer.parseInt(index));","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"elvern18"},"content":"            listOfIndexes.add(newIndex);","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"elvern18"},"content":"        return listOfIndexes;","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"elvern18"},"content":"     * Parses {@code name} and checks the validity of the name.","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"elvern18"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"elvern18"},"content":"    public static boolean isValidName(String name) {","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"elvern18"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"elvern18"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"elvern18"},"content":"        return Name.isValidName(trimmedName);","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"Statspadders"},"content":"     * Allow empty \"\" as phone field is not compulsory.","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"Statspadders"},"content":"     * Allow empty \"\" as description field is not compulsory.","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"Statspadders"},"content":"     * Allow empty \"\" as email field is not compulsory.","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"Statspadders"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"Statspadders"},"content":"     * Parses a {@code String tag} into a {@code ModuleTag}.","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"Statspadders"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"Statspadders"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"Statspadders"},"content":"     * @throws ParseException if the given {@code Moduletag} is invalid.","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"Statspadders"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"Statspadders"},"content":"    public static ModuleTag parseModuleTag(String tag) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"Statspadders"},"content":"        requireNonNull(tag);","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"Statspadders"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"Statspadders"},"content":"        if (!ModuleTag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"Statspadders"},"content":"            throw new ParseException(ModuleTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"Statspadders"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"Statspadders"},"content":"        return new ModuleTag(trimmedTag);","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":180,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"Statspadders"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"Statspadders"},"content":"     * Parses {@code Collection\u003cString\u003e moduleTags} into a {@code Set\u003cModuleTag\u003e}.","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"Statspadders"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"Statspadders"},"content":"    public static Set\u003cModuleTag\u003e parseModuleTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"Statspadders"},"content":"        requireNonNull(tags);","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"Statspadders"},"content":"        final Set\u003cModuleTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"Statspadders"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"Statspadders"},"content":"            tagSet.add(parseModuleTag(tagName));","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"Statspadders"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"Statspadders"},"content":"        return tagSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"elvern18":40,"-":121,"Statspadders":31}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-05"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-05"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-05"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"/**","lastModifiedDate":"2023-03-05"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":" * Parse input arguments and creates a new {@code ViewCommand} object","lastModifiedDate":"2023-03-05"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":" */","lastModifiedDate":"2023-03-05"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"public class ViewCommandParser {","lastModifiedDate":"2023-03-05"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-03-05"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2023-03-05"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2023-03-05"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-05"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-03-05"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"    public ViewCommand parse(String args) throws ParseException, CommandException {","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-05"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"        List\u003cIndex\u003e indexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"        String[] parsedIndexList \u003d args.trim().split(\"\\\\s+\");","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"        for (String i: parsedIndexList) {","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"            System.out.println(i);","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"            try {","lastModifiedDate":"2023-03-05"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"                indexList.add(ParserUtil.parseIndex(i));","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"            } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-05"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"                if (Integer.valueOf(i) \u003c\u003d 0) {","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"                    throw new CommandException(Messages.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"                } else {","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"                    throw new ParseException(String.format(","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Gibson0918"},"content":"                            MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_ARGUMENTS), ive);","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Gibson0918"},"content":"                }","lastModifiedDate":"2023-03-05"},{"lineNumber":41,"author":{"gitId":"Gibson0918"},"content":"            }","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":44,"author":{"gitId":"Gibson0918"},"content":"        return new ViewCommand(indexList);","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-03-05"},{"lineNumber":46,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-03-05"}],"authorContributionMap":{"Gibson0918":46}},{"path":"src/main/java/seedu/address/logic/parser/exceptions/UiInputRequiredException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package seedu.address.logic.parser.exceptions;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":" * Represents an error encountered by the parser where additional input from Ui is required.","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"public class UiInputRequiredException extends RuntimeException {","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"    public UiInputRequiredException(String commandText) {","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"        super(commandText);","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"    public UiInputRequiredException(String message, Throwable cause) {","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"        super(message, cause);","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"joellow88":13}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"Statspadders"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"Statspadders"},"content":"     * Returns the user prefs\u0027 theme","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"Statspadders"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"Statspadders"},"content":"    String getCssFilePath();","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"Statspadders"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"Statspadders"},"content":"     * Sets the user prefs\u0027 theme","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"Statspadders"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"Statspadders"},"content":"    void setCssFilePath(String cssFilePath);","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Gibson0918"},"content":"     * Returns the AddressBook","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"elvern18"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"elvern18"},"content":"     * Deletes all the people in the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"elvern18"},"content":"     * All the people in the list must exist in the address book.","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"Gibson0918"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"elvern18"},"content":"     * @param listOfPeople ArrayList of Person.","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"elvern18"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"joellow88"},"content":"    void deleteMultiplePersons(List\u003cPerson\u003e listOfPeople);","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":102,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"Gibson0918"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":109,"author":{"gitId":"Gibson0918"},"content":"     *","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"Gibson0918"},"content":"     * resets each person contact status to be hidden.","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"Gibson0918"},"content":"    void resetPersonHiddenStatus();","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"Gibson0918"},"content":"     * Sets each person\u0027s contact in the person list to be visible.","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"Gibson0918"},"content":"     * @param personList list of person.","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"Gibson0918"},"content":"    void showPersonContact(List\u003cPerson\u003e personList);","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"joellow88"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"joellow88"},"content":"     * Adds all contacts not already in the address book into the address book.","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"joellow88"},"content":"     * If there is name collision (but with different fields), the person already in the address book will be retained.","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"joellow88"},"content":"     * @param toBeCombined The other address book to combine with.","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"joellow88"},"content":"     * @param path The string representation of the path of the file to be combined with.","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"joellow88"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"joellow88"},"content":"    void combine(ReadOnlyAddressBook toBeCombined, String path);","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":133,"author":{"gitId":"Acerizm"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserData \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":135,"author":{"gitId":"Acerizm"},"content":"    void setHashedPassword(String hashedPassword);","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"Acerizm"},"content":"    String getHashedPassword();","lastModifiedDate":"2023-03-30"},{"lineNumber":138,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":139,"author":{"gitId":"Acerizm"},"content":"    void setNumberOfTimesUsed(int numberOfTimesUsed);","lastModifiedDate":"2023-03-30"},{"lineNumber":140,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":141,"author":{"gitId":"Acerizm"},"content":"    int getNumberOfTimesUsed();","lastModifiedDate":"2023-03-30"},{"lineNumber":142,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"Acerizm"},"content":"    ReadOnlyUserData getUserData();","lastModifiedDate":"2023-03-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"elvern18":6,"joellow88":10,"-":84,"Statspadders":10,"Acerizm":12,"Gibson0918":22}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"public class ModelManager implements Model, Undoable {","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"    private final UndoManager undoManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"    private final UserData userData;","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, ReadOnlyUserData userData) {","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"        requireAllNonNull(addressBook, userPrefs, userData);","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"joellow88"},"content":"        this.undoManager \u003d new UndoManager(this.addressBook, 5);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"        this.userData \u003d new UserData(userData);","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"        this(new AddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserData \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"    public void setHashedPassword(String hashedPassword) {","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"        this.userData.setHashedPassword(hashedPassword);","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"    public String getHashedPassword() {","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"        return this.userData.getHashedPassword();","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"    public void setNumberOfTimesUsed(int numberOfTimesUsed) {","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"        this.userData.setNumberOfTimesUsed(numberOfTimesUsed);","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"    public int getNumberOfTimesUsed() {","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"        return this.userData.getNumberOfTimesUsed();","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"    public ReadOnlyUserData getUserData() {","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"        return this.userData;","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"Statspadders"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"Statspadders"},"content":"    public String getCssFilePath() {","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"Statspadders"},"content":"        return userPrefs.getCssFilePath();","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"Statspadders"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":111,"author":{"gitId":"Statspadders"},"content":"    public void setCssFilePath(String cssFilePath) {","lastModifiedDate":"2023-03-26"},{"lineNumber":112,"author":{"gitId":"Statspadders"},"content":"        requireNonNull(cssFilePath);","lastModifiedDate":"2023-03-26"},{"lineNumber":113,"author":{"gitId":"Statspadders"},"content":"        userPrefs.setCssFilePath(cssFilePath);","lastModifiedDate":"2023-03-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"joellow88"},"content":"        //setAddressBook is currently only used to clear the addressBook, so this method is temporarily set to","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"joellow88"},"content":"        // show clear. Note that in future implementations if setAddressBook is used for other purposes, this method","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"joellow88"},"content":"        // will need to be edited.","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(this.addressBook, \"Clear\");","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(this.addressBook, String.format(\"Delete %1$s\", target));","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"elvern18"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"joellow88"},"content":"    public void deleteMultiplePersons(List\u003cPerson\u003e list) {","lastModifiedDate":"2023-04-07"},{"lineNumber":146,"author":{"gitId":"elvern18"},"content":"        for (Person target: list) {","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"elvern18"},"content":"            addressBook.removePerson(target);","lastModifiedDate":"2023-03-16"},{"lineNumber":148,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(this.addressBook, \"Deleted list of people\");","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":156,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(this.addressBook, String.format(\"Add %1$s\", person));","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":164,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(this.addressBook, String.format(\"Edit %1$s\", editedPerson));","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":167,"author":{"gitId":"joellow88"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"joellow88"},"content":"    public void combine(ReadOnlyAddressBook toBeCombined, String path) {","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"joellow88"},"content":"        AddressBook newAddressBook \u003d new AddressBook(toBeCombined);","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"joellow88"},"content":"        for (Person p : newAddressBook.getPersonList()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"joellow88"},"content":"            if (addressBook.hasPerson(p)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"joellow88"},"content":"                //Future improvements can be made to specify whether to overwrite or keep persons with the same name","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"joellow88"},"content":"                continue;","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"joellow88"},"content":"            } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"joellow88"},"content":"                addressBook.addPerson(p);","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"joellow88"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(this.addressBook, String.format(\"Load contents of %s\", path));","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":198,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"Gibson0918"},"content":"     * resets each person contact status to be hidden.","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":201,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"Gibson0918"},"content":"    public void resetPersonHiddenStatus() {","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"Gibson0918"},"content":"        List\u003cPerson\u003e personlist \u003d getFilteredPersonList();","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"Gibson0918"},"content":"        personlist.stream().forEach(x -\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"Gibson0918"},"content":"            if (!x.getHidden()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"Gibson0918"},"content":"                x.toggleHidden();","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"Gibson0918"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":208,"author":{"gitId":"Gibson0918"},"content":"        });","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":210,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":211,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":212,"author":{"gitId":"Gibson0918"},"content":"     * Sets each person\u0027s contact in the person list to be visible.","lastModifiedDate":"2023-03-30"},{"lineNumber":213,"author":{"gitId":"Gibson0918"},"content":"     * @param personList list of person.","lastModifiedDate":"2023-03-30"},{"lineNumber":214,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":215,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"Gibson0918"},"content":"    public void showPersonContact(List\u003cPerson\u003e personList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":217,"author":{"gitId":"Gibson0918"},"content":"        personList.stream().forEach(x -\u003e x.toggleHidden());","lastModifiedDate":"2023-03-30"},{"lineNumber":218,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"joellow88"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Undo management \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"joellow88"},"content":"    public boolean hasUndoableCommand() {","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"joellow88"},"content":"        return undoManager.hasUndoableCommand();","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":224,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":225,"author":{"gitId":"joellow88"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":226,"author":{"gitId":"joellow88"},"content":"     * Undoes the changes made by the last modification command used.","lastModifiedDate":"2023-03-14"},{"lineNumber":227,"author":{"gitId":"joellow88"},"content":"     * @return The string representation of the last modification command used.","lastModifiedDate":"2023-03-14"},{"lineNumber":228,"author":{"gitId":"joellow88"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":229,"author":{"gitId":"joellow88"},"content":"    public String executeUndo() {","lastModifiedDate":"2023-03-14"},{"lineNumber":230,"author":{"gitId":"joellow88"},"content":"        Pair\u003cAddressBook, String\u003e previousHistory \u003d undoManager.getPreviousHistory();","lastModifiedDate":"2023-03-14"},{"lineNumber":231,"author":{"gitId":"joellow88"},"content":"        this.addressBook.resetData(previousHistory.getKey());","lastModifiedDate":"2023-03-14"},{"lineNumber":232,"author":{"gitId":"joellow88"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-14"},{"lineNumber":233,"author":{"gitId":"joellow88"},"content":"        return previousHistory.getValue();","lastModifiedDate":"2023-03-14"},{"lineNumber":234,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":235,"author":{"gitId":"joellow88"},"content":"    public boolean hasRedoableCommand() {","lastModifiedDate":"2023-03-14"},{"lineNumber":236,"author":{"gitId":"joellow88"},"content":"        return undoManager.hasRedoableCommand();","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":238,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":239,"author":{"gitId":"joellow88"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":240,"author":{"gitId":"joellow88"},"content":"     * Redoes the changes unmade by the last undo command","lastModifiedDate":"2023-03-14"},{"lineNumber":241,"author":{"gitId":"joellow88"},"content":"     * @return The string representation of the command redone","lastModifiedDate":"2023-03-14"},{"lineNumber":242,"author":{"gitId":"joellow88"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":243,"author":{"gitId":"joellow88"},"content":"    public String executeRedo() {","lastModifiedDate":"2023-03-14"},{"lineNumber":244,"author":{"gitId":"joellow88"},"content":"        Pair\u003cAddressBook, String\u003e nextHistory \u003d undoManager.getNextHistory();","lastModifiedDate":"2023-03-14"},{"lineNumber":245,"author":{"gitId":"joellow88"},"content":"        this.addressBook.resetData(nextHistory.getKey());","lastModifiedDate":"2023-03-14"},{"lineNumber":246,"author":{"gitId":"joellow88"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-14"},{"lineNumber":247,"author":{"gitId":"joellow88"},"content":"        return nextHistory.getValue();","lastModifiedDate":"2023-03-14"},{"lineNumber":248,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":249,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":265,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":266,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"elvern18":4,"joellow88":56,"-":153,"Acerizm":24,"Statspadders":9,"Gibson0918":23}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":" * Unmodifiable view of user data.","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"public interface ReadOnlyUserData {","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"    public String getHashedPassword();","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"    public int getNumberOfTimesUsed();","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Acerizm":10}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"Statspadders"},"content":"    String getCssFilePath();","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":16,"Statspadders":2}},{"path":"src/main/java/seedu/address/model/UndoManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import java.util.LinkedList;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":" * Saves snapshots of past ModCheck states, used to implement the Undo Command.","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"public class UndoManager {","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"    private final int maxSavedHistory;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"    private LinkedList\u003cAddressBook\u003e addressBookHistory;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"    private LinkedList\u003cString\u003e commandHistory;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"    //VersionTracker at 0 if ModCheck at most recent history (no undo commands), increments by 1 for each undo command","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"    private int versionTracker;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"     * Initialises an undo manager with given saved states and start state.","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"     * @param startState The starting state of ModCheck; no undos will be possible at this state.","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"     * @param maxSavedHistory The number of saved histories of ModCheck, determines the number of consecutive undos","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"     *                        supported.","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"    public UndoManager(AddressBook startState, int maxSavedHistory) {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"        this.maxSavedHistory \u003d maxSavedHistory;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"        addressBookHistory \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"        addressBookHistory.add(new AddressBook(startState));","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"        commandHistory \u003d new LinkedList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"joellow88"},"content":"        commandHistory.add(\"\");","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"        versionTracker \u003d 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"joellow88"},"content":"     * Adds a copy of an address book to ModCheck saved history.","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"joellow88"},"content":"     * @param ab The address book to be added to ModCheck\u0027s history.","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"joellow88"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"joellow88"},"content":"    public void addToHistory(AddressBook ab, String command) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"joellow88"},"content":"        // For the case where changes are made after undoing, UndoManager will no longer track the overwritten changes","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"joellow88"},"content":"        if (versionTracker !\u003d 0) {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"joellow88"},"content":"            deleteUntrackedHead();","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"joellow88"},"content":"        if (addressBookHistory.size() \u003d\u003d maxSavedHistory) {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"joellow88"},"content":"            addressBookHistory.removeLast();","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"joellow88"},"content":"            commandHistory.removeLast();","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"joellow88"},"content":"        //a copy of addressBook argument has to be created as ModelManager edits the AddressBook in place","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"joellow88"},"content":"        addressBookHistory.offerFirst(new AddressBook(ab));","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"joellow88"},"content":"        commandHistory.offerFirst(command);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"joellow88"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"joellow88"},"content":"     * Deletes an untracked head from the model manager.","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"joellow88"},"content":"     * This is for changes made after undoing to be tracked unambiguously.","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"joellow88"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"joellow88"},"content":"    public void deleteUntrackedHead() {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"joellow88"},"content":"        for (int i \u003d 0; i \u003c versionTracker; i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"joellow88"},"content":"            addressBookHistory.pollFirst();","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"joellow88"},"content":"            commandHistory.pollFirst();","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"joellow88"},"content":"        versionTracker \u003d 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"joellow88"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"joellow88"},"content":"     * Returns true if model has a command that can be undone, false otherwise","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"joellow88"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"joellow88"},"content":"    public boolean hasUndoableCommand() {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"joellow88"},"content":"        return versionTracker !\u003d addressBookHistory.size() - 1;","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"joellow88"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"joellow88"},"content":"     * Returns true if model has a command that can be redone, false otherwise","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"joellow88"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"joellow88"},"content":"    public boolean hasRedoableCommand() {","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"joellow88"},"content":"        return versionTracker \u003e 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"joellow88"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"joellow88"},"content":"     * Returns an AddressBook containing a saved state of ModCheck.","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"joellow88"},"content":"     * Calling this method multiple times will return earlier saved states of ModCheck, to facilitate chained undoes.","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"joellow88"},"content":"     * @return An AddressBook containing an earlier saved state of ModCheck","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"joellow88"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"joellow88"},"content":"    public Pair\u003cAddressBook, String\u003e getPreviousHistory() {","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"joellow88"},"content":"        assert hasUndoableCommand();","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"joellow88"},"content":"        versionTracker++;","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"joellow88"},"content":"        //Note that commandHistory and addressBookHistory is off by one","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"joellow88"},"content":"        //ie: The most recent change command will lead to the second most recent address book state","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"joellow88"},"content":"        return new Pair\u003c\u003e(addressBookHistory.get(versionTracker), commandHistory.get(versionTracker - 1));","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"joellow88"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"joellow88"},"content":"     * Returns an AddressBook containing a later saved state of ModCheck.","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"joellow88"},"content":"     * @return An AddressBook containing a later saved state of ModCheck.","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"joellow88"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"joellow88"},"content":"    public Pair\u003cAddressBook, String\u003e getNextHistory() {","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"joellow88"},"content":"        assert hasRedoableCommand();","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"joellow88"},"content":"        versionTracker--;","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"joellow88"},"content":"        return new Pair\u003c\u003e(addressBookHistory.get(versionTracker), commandHistory.get(versionTracker));","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"joellow88"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"joellow88"},"content":"     * Returns an AddressBook with the current state of ModCheck.","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"joellow88"},"content":"     * @return An AddressBook with the current state of ModCheck.","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"joellow88"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"joellow88"},"content":"    public AddressBook getCurrentState() {","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"joellow88"},"content":"        return addressBookHistory.get(versionTracker);","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"joellow88"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"joellow88"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"joellow88"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"joellow88"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"joellow88"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"joellow88"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"joellow88"},"content":"        UndoManager that \u003d (UndoManager) o;","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"joellow88"},"content":"        if (maxSavedHistory !\u003d that.maxSavedHistory) {","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"joellow88"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"joellow88"},"content":"        if (versionTracker !\u003d that.versionTracker) {","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"joellow88"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"joellow88"},"content":"        if (!Objects.equals(addressBookHistory, that.addressBookHistory)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"joellow88"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"joellow88"},"content":"        return Objects.equals(commandHistory, that.commandHistory);","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joellow88":131}},{"path":"src/main/java/seedu/address/model/Undoable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":" * The interface for supporting undo and redo functionality.","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"public interface Undoable {","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"     * Returns if there is an undoable command in model.","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"     * @return True if there is an undoable command in model, false otherwise.","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"    boolean hasUndoableCommand();","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"     * Undoes the changes made by the last modification command used","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"     * @return The string representation of the last modification command used","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"    String executeUndo();","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"     * Returns if there is a redoable command in model.","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"     * @return True if there is a redoable command in model, false otherwise.","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"    boolean hasRedoableCommand();","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"     * Redoes the changes unmade by the last undo command","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"     * @return The string representation of the command redone","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"    String executeRedo();","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"joellow88":29}},{"path":"src/main/java/seedu/address/model/UserData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":" * Represents user\u0027s data","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"public class UserData implements ReadOnlyUserData {","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"    private String hashedPassword \u003d \"\";","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"    private int numberOfTimesUsed \u003d 0;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"    public UserData() {","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     * Creates a user data with the previous read only user data","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     * @param userData","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    public UserData(ReadOnlyUserData userData) {","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"        this();","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"        resetData(userData);","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"     * Creates a UserData with given hashedPassword and numberOfTimesUsed","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"     * @param hashedPassword Hashed password","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"     * @param numberOfTimesUsed number of times the user has used the application","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"    public UserData(String hashedPassword, int numberOfTimesUsed) {","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"        this.hashedPassword \u003d hashedPassword;","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"        this.numberOfTimesUsed \u003d numberOfTimesUsed;","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"     * Resets the existing data","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"    public void resetData(ReadOnlyUserData userData) {","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"        requireNonNull(userData);","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"        this.setHashedPassword(userData.getHashedPassword());","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"        this.setNumberOfTimesUsed(userData.getNumberOfTimesUsed());","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"    public void setHashedPassword(String hashedPassword) {","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"        this.hashedPassword \u003d hashedPassword;","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"    public String getHashedPassword() {","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"        return this.hashedPassword;","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"    public void setNumberOfTimesUsed(int numberOfTimesUsed) {","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"        this.numberOfTimesUsed \u003d numberOfTimesUsed;","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"    public int getNumberOfTimesUsed() {","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"        return this.numberOfTimesUsed;","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Acerizm":61}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"Statspadders"},"content":"    private String cssFilePath \u003d \"view/DarkTheme.css\";","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"Statspadders"},"content":"        setCssFilePath(newUserPrefs.getCssFilePath());","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"Statspadders"},"content":"    public String getCssFilePath() {","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"Statspadders"},"content":"        return cssFilePath;","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"Statspadders"},"content":"    public void setCssFilePath(String cssFilePath) {","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"Statspadders"},"content":"        this.cssFilePath \u003d cssFilePath;","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"Statspadders"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"Statspadders"},"content":"                \u0026\u0026 cssFilePath.equals(o.cssFilePath);","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"Statspadders"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, cssFilePath);","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"Statspadders"},"content":"        sb.append(\"\\nCSS file location: \" + cssFilePath);","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":85,"Statspadders":14}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"Statspadders"},"content":"     * Also, empty strings \"\" are allowed.","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"Statspadders"},"content":"    public static final String VALIDATION_REGEX \u003d \"^$|[^\\\\s].*\";","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":56,"Statspadders":2}},{"path":"src/main/java/seedu/address/model/person/ContactContainsDescriptionPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" * ContactContainsEmailPredicate is a predicate that filters the model based on address","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"public class ContactContainsDescriptionPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"    private final String description;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"    public ContactContainsDescriptionPredicate(String description) {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"        // perform filtering based on description","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"        String contactDescription \u003d person.getAddress().toString();","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"        String[] matchDescription \u003d this.description.split(\" \");","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"        String regex \u003d String.join(\"|\", matchDescription);","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"        Pattern pattern \u003d Pattern.compile(regex);","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"        Matcher matcher \u003d pattern.matcher(contactDescription);","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"        boolean isMatch \u003d matcher.find();","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"        if (isMatch) {","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"                || (other instanceof ContactContainsDescriptionPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"                \u0026\u0026 description.equals(((ContactContainsDescriptionPredicate) other).description)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Acerizm":41}},{"path":"src/main/java/seedu/address/model/person/ContactContainsEmailPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":" * ContactContainsEmailPredicate is a predicate that filters the model based on email","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"public class ContactContainsEmailPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"    private final String emailAddr;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"    public ContactContainsEmailPredicate(String emailAddr) {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"        this.emailAddr \u003d emailAddr;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"        // perform filtering based on email","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"        String currentEmailAddr \u003d person.getEmail().toString();","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"        return (currentEmailAddr.equals(this.emailAddr) ? true : false);","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"                || (other instanceof ContactContainsEmailPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"                \u0026\u0026 emailAddr.equals(((ContactContainsEmailPredicate) other).emailAddr)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Acerizm":30}},{"path":"src/main/java/seedu/address/model/person/ContactContainsModuleTagPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":" * ContactContainsModuleTagPredicate is a predicate that filters the model based on the module tags","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"public class ContactContainsModuleTagPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"    private final Set\u003cModuleTag\u003e tagSet;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"    public ContactContainsModuleTagPredicate(Set\u003cModuleTag\u003e tagSet) {","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"        this.tagSet \u003d tagSet;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"        // perform filtering based on the tag attribute","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"        Set\u003cModuleTag\u003e personTags \u003d person.getModuleTags();","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"        Set\u003cModuleTag\u003e tempTagsSet \u003d new HashSet\u003c\u003e(this.tagSet);","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"        tempTagsSet.retainAll(personTags);","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"        return !tempTagsSet.isEmpty();","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"joellow88"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"                || (other instanceof ContactContainsModuleTagPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"                \u0026\u0026 tagSet.equals(((ContactContainsModuleTagPredicate) other).tagSet)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"joellow88":34}},{"path":"src/main/java/seedu/address/model/person/ContactContainsPhoneNumberPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":" * ContactContainsPhoneNumberPredicate is a predicate that filters the model based on phone number","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"public class ContactContainsPhoneNumberPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"    private final String phoneNumber;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"    public ContactContainsPhoneNumberPredicate(String phoneNumber) {","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"        this.phoneNumber \u003d phoneNumber;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"        // perform filtering based on phoneNumber","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"        String currentNumber \u003d person.getPhone().toString();","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"        return (currentNumber.equals(this.phoneNumber) ? true : false);","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"                || (other instanceof ContactContainsPhoneNumberPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"                \u0026\u0026 phoneNumber.equals(((ContactContainsPhoneNumberPredicate) other).phoneNumber)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Acerizm":30}},{"path":"src/main/java/seedu/address/model/person/ContactContainsTagPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" * ContactContainsTagPredicate is a predicate that filters the model based on the tags","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"public class ContactContainsTagPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    // keywords are the different kind of tags","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"    private final Set\u003cTag\u003e tagSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"    public ContactContainsTagPredicate(Set\u003cTag\u003e tagSet) {","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"        this.tagSet \u003d tagSet;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"        // perform filtering based on the tag attribute","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"        Set\u003cTag\u003e personTags \u003d person.getTags();","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"        Set\u003cTag\u003e tempTagsSet \u003d new HashSet\u003c\u003e(this.tagSet);","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"        tempTagsSet.retainAll(personTags);","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"        boolean isTagsExists \u003d tempTagsSet.isEmpty();","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"        if (isTagsExists) {","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"        } else {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"                || (other instanceof ContactContainsTagPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"                \u0026\u0026 tagSet.equals(((ContactContainsTagPredicate) other).tagSet)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Acerizm":43}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"Statspadders"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\"","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Statspadders"},"content":"            + \"Last but not least, allow empty Strings\";","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"Statspadders"},"content":"    public static final String VALIDATION_REGEX \u003d \"^$|\" + LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":69,"Statspadders":3}},{"path":"src/main/java/seedu/address/model/person/MatchNamePredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"/**","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":" */","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"public class MatchNamePredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"    private final List\u003cName\u003e names;","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"    public MatchNamePredicate(List\u003cName\u003e names) {","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"        this.names \u003d names;","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"        return names.stream().anyMatch(name -\u003e person.getName().equals(name));","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"                || (other instanceof MatchNamePredicate // instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"                \u0026\u0026 names.equals(((MatchNamePredicate) other).names)); // state check","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"Gibson0918":28}},{"path":"src/main/java/seedu/address/model/person/NameContainsAllKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-04-06"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import java.util.List;","lastModifiedDate":"2023-04-06"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"import java.util.Objects;","lastModifiedDate":"2023-04-06"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-06"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-04-06"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"/**","lastModifiedDate":"2023-04-06"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches all the keywords given.","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":" */","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"public class NameContainsAllKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"    public NameContainsAllKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"    @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"        return keywords.stream()","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"                .allMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"    @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"            return true;","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"joellow88"},"content":"            return false;","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"        NameContainsAllKeywordsPredicate that \u003d (NameContainsAllKeywordsPredicate) o;","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"joellow88"},"content":"        return Objects.equals(keywords, that.keywords);","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"joellow88"},"content":"    @Override","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"joellow88"},"content":"    public int hashCode() {","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"joellow88"},"content":"        return keywords !\u003d null ? keywords.hashCode() : 0;","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"joellow88":42}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"Statspadders"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"Statspadders"},"content":"    private final Set\u003cModuleTag\u003e moduleTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"    private boolean hidden;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"Statspadders"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Set\u003cModuleTag\u003e moduleTags) {","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Statspadders"},"content":"        requireAllNonNull(name, phone, email, address, tags, moduleTags);","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"Statspadders"},"content":"        this.moduleTags.addAll(moduleTags);","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Gibson0918"},"content":"        this.hidden \u003d true;","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"Gibson0918"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"Gibson0918"},"content":"     * toggle hidden.","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"Gibson0918"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"Gibson0918"},"content":"    public void toggleHidden() {","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"Gibson0918"},"content":"        if (hidden) {","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"Gibson0918"},"content":"            hidden \u003d false;","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"Gibson0918"},"content":"        } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Gibson0918"},"content":"            hidden \u003d true;","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"Gibson0918"},"content":"    public boolean getHidden() {","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"Gibson0918"},"content":"        return hidden;","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"Statspadders"},"content":"    public Set\u003cModuleTag\u003e getModuleTags() {","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"Statspadders"},"content":"        return Collections.unmodifiableSet(moduleTags);","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":137,"author":{"gitId":"joellow88"},"content":"                .append(\"; Description: \")","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":145,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"Statspadders"},"content":"        Set\u003cModuleTag\u003e moduleTags \u003d getModuleTags();","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"Statspadders"},"content":"        if (!moduleTags.isEmpty()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"Statspadders"},"content":"            builder.append(\"; ModuleTags: \");","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"Statspadders"},"content":"            moduleTags.forEach(builder::append);","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"Statspadders"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"joellow88":1,"-":121,"Statspadders":15,"Gibson0918":17}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"Statspadders"},"content":"            \"Phone numbers should only be empty or \"","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Statspadders"},"content":"                    + \"contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Statspadders"},"content":"    public static final String VALIDATION_REGEX \u003d \"^\\\\d{3,}$|^$\";","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"Statspadders"},"content":"     * Skips the check if Phone field is empty","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":50,"Statspadders":4}},{"path":"src/main/java/seedu/address/model/tag/ModuleTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Statspadders"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Statspadders"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Statspadders"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Statspadders"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Statspadders"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Statspadders"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Statspadders"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Statspadders"},"content":"public class ModuleTag {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Statspadders"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Module Tags names should be alphanumeric\";","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"Statspadders"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Statspadders"},"content":"    public final String moduleTagName;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Statspadders"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Statspadders"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Statspadders"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Statspadders"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Statspadders"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Statspadders"},"content":"    public ModuleTag(String tagName) {","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Statspadders"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Statspadders"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Statspadders"},"content":"        this.moduleTagName \u003d tagName;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Statspadders"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Statspadders"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Statspadders"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Statspadders"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Statspadders"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Statspadders"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Statspadders"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Statspadders"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Statspadders"},"content":"                || (other instanceof ModuleTag // instanceof handles nulls","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Statspadders"},"content":"                \u0026\u0026 moduleTagName.equals(((ModuleTag) other).moduleTagName)); // state check","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Statspadders"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Statspadders"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Statspadders"},"content":"        return moduleTagName.hashCode();","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Statspadders"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Statspadders"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Statspadders"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"Statspadders"},"content":"    public String toString() {","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"Statspadders"},"content":"        return \u0027[\u0027 + moduleTagName + \u0027]\u0027;","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Statspadders":55}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":14,"author":{"gitId":"Statspadders"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"Statspadders"},"content":"                getTagSet(\"friends\"), getModuleTagSet(\"CS2103\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"Statspadders"},"content":"                getTagSet(\"colleagues\", \"friends\"), getModuleTagSet(\"CS2103\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"Statspadders"},"content":"                getTagSet(\"neighbours\"), getModuleTagSet(\"CS2103\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"Statspadders"},"content":"                getTagSet(\"family\"), getModuleTagSet(\"CS2103\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"Statspadders"},"content":"                getTagSet(\"classmates\"), getModuleTagSet(\"CS2103\")),","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"Statspadders"},"content":"                getTagSet(\"colleagues\"), getModuleTagSet(\"CS2103\"))","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":61,"author":{"gitId":"Statspadders"},"content":"    public static Set\u003cModuleTag\u003e getModuleTagSet(String... strings) {","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"Statspadders"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"Statspadders"},"content":"                .map(ModuleTag::new)","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"Statspadders"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"-":54,"Statspadders":13}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedModuleTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Statspadders"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"Statspadders"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"Statspadders"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"Statspadders"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"Statspadders"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"Statspadders"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Statspadders"},"content":" * Jackson-friendly version of {@link ModuleTag}.","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"Statspadders"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"Statspadders"},"content":"class JsonAdaptedModuleTag {","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"Statspadders"},"content":"    private final String moduleTagName;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"Statspadders"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"Statspadders"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"Statspadders"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"Statspadders"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"Statspadders"},"content":"    public JsonAdaptedModuleTag(String moduleTagName) {","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"Statspadders"},"content":"        this.moduleTagName \u003d moduleTagName;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"Statspadders"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"Statspadders"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"Statspadders"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"Statspadders"},"content":"    public JsonAdaptedModuleTag(ModuleTag source) {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"Statspadders"},"content":"        moduleTagName \u003d source.moduleTagName;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Statspadders"},"content":"    @JsonValue","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"Statspadders"},"content":"    public String getTagName() {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"Statspadders"},"content":"        return moduleTagName;","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Statspadders"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Statspadders"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"Statspadders"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"Statspadders"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Statspadders"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Statspadders"},"content":"    public ModuleTag toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"Statspadders"},"content":"        if (!ModuleTag.isValidTagName(moduleTagName)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Statspadders"},"content":"            throw new IllegalValueException(ModuleTag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Statspadders"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"Statspadders"},"content":"        return new ModuleTag(moduleTagName);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"Statspadders":49}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"Statspadders"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"Statspadders"},"content":"    private final List\u003cJsonAdaptedModuleTag\u003e moduleTagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"Statspadders"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Statspadders"},"content":"            @JsonProperty(\"moduleTagged\") List\u003cJsonAdaptedModuleTag\u003e moduleTagged) {","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"Statspadders"},"content":"        if (moduleTagged !\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"Statspadders"},"content":"            this.moduleTagged.addAll(moduleTagged);","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"Statspadders"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"Statspadders"},"content":"        moduleTagged.addAll(source.getModuleTags().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"Statspadders"},"content":"                .map(JsonAdaptedModuleTag::new)","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"Statspadders"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"Statspadders"},"content":"        final List\u003cModuleTag\u003e moduleTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"Statspadders"},"content":"        for (JsonAdaptedModuleTag tag : moduleTagged) {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"Statspadders"},"content":"            moduleTags.add(tag.toModelType());","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"Statspadders"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"Statspadders"},"content":"        final Set\u003cModuleTag\u003e modelModuleTags \u003d new HashSet\u003c\u003e(moduleTags);","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"Statspadders"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelModuleTags);","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":108,"Statspadders":16}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"public class JsonSerializableAddressBook {","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":59,"Gibson0918":1}},{"path":"src/main/java/seedu/address/storage/JsonUserDataStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.ReadOnlyUserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.UserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":" * A class to access UserData stored in the hard disk as a json file","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"public class JsonUserDataStorage implements UserDataStorage {","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"    private Path filepath;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"    public JsonUserDataStorage(Path filePath) {","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"        this.filepath \u003d filePath;","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"    public Path getUserDataFilePath() {","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"        return this.filepath;","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"    public Optional\u003cUserData\u003e readUserData() throws DataConversionException {","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"        return JsonUtil.readJsonFile(this.filepath, UserData.class);","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"    public void saveUserData(ReadOnlyUserData userData) throws IOException {","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"        JsonUtil.saveJsonFile(userData, this.filepath);","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Acerizm":40}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, UserDataStorage {","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"-":31,"Acerizm":1}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.ReadOnlyUserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.UserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"    private UserDataStorage userDataStorage;","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"                          UserDataStorage userDataStorage) {","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"        this.userDataStorage \u003d userDataStorage;","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"Acerizm"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Login methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":85,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":86,"author":{"gitId":"Acerizm"},"content":"    public Path getUserDataFilePath() {","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"Acerizm"},"content":"        return userDataStorage.getUserDataFilePath();","lastModifiedDate":"2023-03-30"},{"lineNumber":88,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"Acerizm"},"content":"    public Optional\u003cUserData\u003e readUserData() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"Acerizm"},"content":"        return userDataStorage.readUserData();","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":94,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"Acerizm"},"content":"    @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"Acerizm"},"content":"    public void saveUserData(ReadOnlyUserData userData) throws IOException {","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"Acerizm"},"content":"        userDataStorage.saveUserData(userData);","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":77,"Acerizm":23}},{"path":"src/main/java/seedu/address/storage/UserDataStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.ReadOnlyUserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.UserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":" * Represents a storage for user password","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"public interface UserDataStorage {","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"     * Returns the file path of the user password file","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     * @return path of user password file","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"    Path getUserDataFilePath();","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"     * Returns the user data from storage","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"     * @return user data","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"    Optional\u003cUserData\u003e readUserData() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"     * Saves the user data to the storage","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"     * @param userData cannot be null.","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"    void saveUserData(ReadOnlyUserData userData) throws IOException;","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Acerizm":37}},{"path":"src/main/java/seedu/address/ui/CreatePasswordSection.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import javafx.event.Event;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.control.PasswordField;","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"import seedu.address.ui.events.CreatePasswordSuccessfulEvent;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":" * Controller for when the user creates a new password","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"public class CreatePasswordSection extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"    private static final String FXML \u003d \"CreatePasswordSection.fxml\";","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"    private PasswordField firstInputField;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"    private PasswordField secondInputField;","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"    private Label errorMessageLabel;","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"    private VBox tempContainer;","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"    public CreatePasswordSection() {","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"        super(FXML);","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"    private void handleSubmit(KeyEvent event) {","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"        if (event.getCode() \u003d\u003d KeyCode.ENTER) {","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"            // Check if both passwords match","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"            String newPassword \u003d firstInputField.getText();","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"            String reEnterPassword \u003d secondInputField.getText();","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"            if (newPassword.equals(reEnterPassword)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"                // send event to go to loading screen","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"                CreatePasswordSuccessfulEvent createPasswordSuccessfulEvent \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"                        new CreatePasswordSuccessfulEvent(newPassword);","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"                Event.fireEvent(tempContainer, createPasswordSuccessfulEvent);","lastModifiedDate":"2023-03-30"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"            } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"                this.errorMessageLabel.setText(\"Passwords do not match. Please try again.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"    private void handleButtonSubmit(ActionEvent event) {","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"        // Check if both passwords match","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"        String newPassword \u003d firstInputField.getText();","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"        String reEnterPassword \u003d secondInputField.getText();","lastModifiedDate":"2023-03-30"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"        if (newPassword.equals(reEnterPassword)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"            // send event to go to loading screen","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"            CreatePasswordSuccessfulEvent createPasswordSuccessfulEvent \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"                    new CreatePasswordSuccessfulEvent(newPassword);","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"            Event.fireEvent(tempContainer, createPasswordSuccessfulEvent);","lastModifiedDate":"2023-03-30"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"            this.errorMessageLabel.setText(\"Passwords do not match. Please try again.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":71,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Acerizm":71}},{"path":"src/main/java/seedu/address/ui/DefaultLoginSection.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import javafx.event.Event;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.control.PasswordField;","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"import seedu.address.ui.events.AttemptLoginEvent;","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"import seedu.address.ui.events.LoginFailEvent;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"import seedu.address.ui.events.ProceedCreatePasswordEvent;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":" * A section of the UI that will display the default login page","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"public class DefaultLoginSection extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"    private static final String FXML \u003d \"DefaultLoginSection.fxml\";","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    private Label errorMessageLabel;","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    private PasswordField inputField;","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"    private VBox tempContainer;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"    private Stage primaryStage;","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"     * Creates a default login page","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"    public DefaultLoginSection(Stage primaryStage) {","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"        super(FXML);","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"        this.addEventHandlers();","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"     * Handles the event when the user submits his/her response","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"    private void handleSubmit(KeyEvent event) {","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"        if (event.getCode() \u003d\u003d KeyCode.ENTER) {","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"            String password \u003d inputField.getText().toLowerCase();","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"            AttemptLoginEvent attemptLoginEvent \u003d new AttemptLoginEvent(password);","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"            Event.fireEvent(tempContainer, attemptLoginEvent);","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"     * Adds event handlers to listen for events","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"    private void addEventHandlers() {","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"        this.primaryStage.addEventHandler(LoginFailEvent.LOGIN_FAIL_EVENT,","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"                this::handleLoginError);","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"     * Handles the event when the user decides to create a new password","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"    private void handleCreateNewPassword() {","lastModifiedDate":"2023-03-31"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"        ProceedCreatePasswordEvent proceedCreatePasswordEvent \u003d new ProceedCreatePasswordEvent();","lastModifiedDate":"2023-03-31"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"        Event.fireEvent(tempContainer, proceedCreatePasswordEvent);","lastModifiedDate":"2023-03-31"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":70,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":72,"author":{"gitId":"Acerizm"},"content":"     * Handles the event when the user fails to login with the given password","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"Acerizm"},"content":"     * @param event","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":75,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-03-31"},{"lineNumber":76,"author":{"gitId":"Acerizm"},"content":"    private void handleLoginError(LoginFailEvent event) {","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"Acerizm"},"content":"        this.errorMessageLabel.setText(\"Password entered is incorrect. Please try again!\");","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"Acerizm":79}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103-f10-3.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"Acerizm":1}},{"path":"src/main/java/seedu/address/ui/LoadingSection.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" * The loading section that shows a loading screen before showing the MainWindow","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"public class LoadingSection extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"    private static final String FXML \u003d \"LoadingSection.fxml\";","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    private Label loadingLabel;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    public LoadingSection() {","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"        super(FXML);","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    public void setPasswordSuccessText() {","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"        loadingLabel.setText(\"Password Created Successfully! You are currently entering into MODCheck...\");","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Acerizm":25}},{"path":"src/main/java/seedu/address/ui/LoginWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":" * Welcome page","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"public class LoginWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"    private static final String FXML \u003d \"LoginWindow.fxml\";","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"    private Stage primaryStage;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"    private Logic logic;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"    // Independent Ui parts","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"    private WelcomeSection welcomeSection;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"    private LoadingSection loadingSection;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"    private CreatePasswordSection createPasswordSection;","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"    private DefaultLoginSection defaultLoginSection;","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    private VBox container;","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"     * Default constructor for Welcome page","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"     * @param primaryStage Primary Stage of the whole application","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"    public LoginWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"        // Set dependencies","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"     * Show the stage","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"    void show() {","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"        primaryStage.show();","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"     * Closes the stage","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"    void close() {","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Acerizm"},"content":"        primaryStage.close();","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Acerizm"},"content":"     * Fill the Vbox with WelcomeNewUserSection","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Acerizm"},"content":"    public void fillWelcomeSection() {","lastModifiedDate":"2023-03-31"},{"lineNumber":77,"author":{"gitId":"Acerizm"},"content":"        int numOfTimesUsed \u003d logic.getNumberOfTimesUsed();","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"Acerizm"},"content":"        if (numOfTimesUsed \u003d\u003d 0) {","lastModifiedDate":"2023-03-31"},{"lineNumber":79,"author":{"gitId":"Acerizm"},"content":"            welcomeSection \u003d new WelcomeSection();","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Acerizm"},"content":"            container.getChildren().add(welcomeSection.getRoot());","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"Acerizm"},"content":"        } else {","lastModifiedDate":"2023-03-31"},{"lineNumber":82,"author":{"gitId":"Acerizm"},"content":"            defaultLoginSection \u003d new DefaultLoginSection(this.primaryStage);","lastModifiedDate":"2023-03-31"},{"lineNumber":83,"author":{"gitId":"Acerizm"},"content":"            container.getChildren().add(defaultLoginSection.getRoot());","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"Acerizm"},"content":"            boolean isNoPassword \u003d logic.getUserHashedPassword().equals(\"\");","lastModifiedDate":"2023-03-31"},{"lineNumber":85,"author":{"gitId":"Acerizm"},"content":"            if (!isNoPassword) {","lastModifiedDate":"2023-03-31"},{"lineNumber":86,"author":{"gitId":"Acerizm"},"content":"                // force user to only reset in the json file if the user forgets the password","lastModifiedDate":"2023-03-31"},{"lineNumber":87,"author":{"gitId":"Acerizm"},"content":"                Label tempOrLabel \u003d (Label) container.lookup(\"#orLabel\");","lastModifiedDate":"2023-03-31"},{"lineNumber":88,"author":{"gitId":"Acerizm"},"content":"                Label tempcreateNewPasswordLabel \u003d (Label) container.lookup(\"#createNewPasswordLabel\");","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"Acerizm"},"content":"                tempOrLabel.setVisible(false);","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"Acerizm"},"content":"                tempcreateNewPasswordLabel.setVisible(false);","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":92,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"Acerizm"},"content":"     * Fill the VBox with creating new password page","lastModifiedDate":"2023-03-30"},{"lineNumber":97,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":98,"author":{"gitId":"Acerizm"},"content":"    public void fillCreateNewPasswordSection() {","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"Acerizm"},"content":"        createPasswordSection \u003d new CreatePasswordSection();","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"Acerizm"},"content":"        container.getChildren().clear();","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"Acerizm"},"content":"        container.getChildren().add(createPasswordSection.getRoot());","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"Acerizm"},"content":"     * Fill the Vbox with the loading page","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"Acerizm"},"content":"    public void fillLoadingSection() {","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"Acerizm"},"content":"        loadingSection \u003d new LoadingSection();","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"Acerizm"},"content":"        container.getChildren().clear();","lastModifiedDate":"2023-03-30"},{"lineNumber":110,"author":{"gitId":"Acerizm"},"content":"        container.getChildren().add(loadingSection.getRoot());","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"Acerizm"},"content":"     * Replaces the current loading text with password success text","lastModifiedDate":"2023-03-30"},{"lineNumber":115,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":116,"author":{"gitId":"Acerizm"},"content":"    public void fillPasswordSuccessLoadingSection() {","lastModifiedDate":"2023-03-30"},{"lineNumber":117,"author":{"gitId":"Acerizm"},"content":"        loadingSection.setPasswordSuccessText();","lastModifiedDate":"2023-03-30"},{"lineNumber":118,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Acerizm":121}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import java.io.File;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"import javafx.stage.FileChooser;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.parser.exceptions.UiInputRequiredException;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"Statspadders"},"content":"    private static final String darkTheme \u003d \"view/DarkTheme.css\";","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"Statspadders"},"content":"    private static final String lightTheme \u003d \"view/LightTheme.css\";","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"Statspadders"},"content":"        //Set up CSS","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"Statspadders"},"content":"        this.primaryStage.getScene().getStylesheets().add(logic.getCssFilePath());","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"Statspadders"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":159,"author":{"gitId":"Statspadders"},"content":"     * Changes the theme based on the user command","lastModifiedDate":"2023-03-26"},{"lineNumber":160,"author":{"gitId":"Statspadders"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":161,"author":{"gitId":"Statspadders"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":162,"author":{"gitId":"Statspadders"},"content":"    public void handleTheme(boolean isDarkTheme) {","lastModifiedDate":"2023-03-26"},{"lineNumber":163,"author":{"gitId":"Statspadders"},"content":"        if (isDarkTheme \u003d\u003d true) {","lastModifiedDate":"2023-03-26"},{"lineNumber":164,"author":{"gitId":"Statspadders"},"content":"            this.primaryStage.getScene().getStylesheets().remove(lightTheme);","lastModifiedDate":"2023-03-26"},{"lineNumber":165,"author":{"gitId":"Statspadders"},"content":"            this.primaryStage.getScene().getStylesheets().add(darkTheme);","lastModifiedDate":"2023-03-26"},{"lineNumber":166,"author":{"gitId":"Statspadders"},"content":"            logic.setCssFilePath(darkTheme);","lastModifiedDate":"2023-03-26"},{"lineNumber":167,"author":{"gitId":"Statspadders"},"content":"        } else {","lastModifiedDate":"2023-03-26"},{"lineNumber":168,"author":{"gitId":"Statspadders"},"content":"            this.primaryStage.getScene().getStylesheets().remove(darkTheme);","lastModifiedDate":"2023-03-26"},{"lineNumber":169,"author":{"gitId":"Statspadders"},"content":"            this.primaryStage.getScene().getStylesheets().add(lightTheme);","lastModifiedDate":"2023-03-26"},{"lineNumber":170,"author":{"gitId":"Statspadders"},"content":"            logic.setCssFilePath(lightTheme);","lastModifiedDate":"2023-03-26"},{"lineNumber":171,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":172,"author":{"gitId":"Statspadders"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":173,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":174,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":191,"author":{"gitId":"joellow88"},"content":"    private String handleChooseFile(String commandText) {","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"joellow88"},"content":"        FileChooser fileChooser \u003d new FileChooser();","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"joellow88"},"content":"        fileChooser.getExtensionFilters().setAll(","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"joellow88"},"content":"                new FileChooser.ExtensionFilter(\"JSON file\", \"*.json\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"joellow88"},"content":"        fileChooser.setTitle(\"Select ModCheck data file to load!\");","lastModifiedDate":"2023-03-27"},{"lineNumber":196,"author":{"gitId":"joellow88"},"content":"        File f \u003d fileChooser.showOpenDialog(getPrimaryStage());","lastModifiedDate":"2023-03-27"},{"lineNumber":197,"author":{"gitId":"joellow88"},"content":"        if (f \u003d\u003d null) {","lastModifiedDate":"2023-03-27"},{"lineNumber":198,"author":{"gitId":"joellow88"},"content":"            commandText +\u003d \" !\";","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"joellow88"},"content":"        } else {","lastModifiedDate":"2023-03-27"},{"lineNumber":200,"author":{"gitId":"joellow88"},"content":"            commandText +\u003d (\" \" + f.getAbsolutePath());","lastModifiedDate":"2023-03-27"},{"lineNumber":201,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":202,"author":{"gitId":"joellow88"},"content":"        return commandText;","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"joellow88"},"content":"            CommandResult commandResult;","lastModifiedDate":"2023-03-27"},{"lineNumber":217,"author":{"gitId":"joellow88"},"content":"            try {","lastModifiedDate":"2023-03-27"},{"lineNumber":218,"author":{"gitId":"joellow88"},"content":"                commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"joellow88"},"content":"            } catch (UiInputRequiredException e) {","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"joellow88"},"content":"                commandText \u003d handleChooseFile(commandText);","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"joellow88"},"content":"                commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"joellow88"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"Statspadders"},"content":"            if (commandResult.isDarkTheme() !\u003d null) {","lastModifiedDate":"2023-03-26"},{"lineNumber":231,"author":{"gitId":"Statspadders"},"content":"                handleTheme(commandResult.isDarkTheme());","lastModifiedDate":"2023-03-26"},{"lineNumber":232,"author":{"gitId":"Statspadders"},"content":"            }","lastModifiedDate":"2023-03-26"},{"lineNumber":233,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":235,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"joellow88":24,"-":195,"Statspadders":26}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"Statspadders"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"Statspadders"},"content":"    private FlowPane moduleTags;","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"Gibson0918"},"content":"    public PersonCard(Person person, int displayedIndex, boolean hidden) {","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"Gibson0918"},"content":"        String curr \u003d name.getText();","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"Gibson0918"},"content":"        phone.setVisible(!hidden);","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"Gibson0918"},"content":"        address.setVisible(!hidden);","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"Gibson0918"},"content":"        email.setVisible(!hidden);","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":65,"author":{"gitId":"Statspadders"},"content":"        person.getModuleTags().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"Statspadders"},"content":"                .sorted(Comparator.comparing(moduleTag -\u003e moduleTag.moduleTagName))","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"Statspadders"},"content":"                .forEach(moduleTag -\u003e moduleTags.getChildren().add(new Label(moduleTag.moduleTagName)));","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":76,"Statspadders":5,"Gibson0918":6}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"    private boolean hidden;","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"        hidden \u003d true;","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"Gibson0918"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1, person.getHidden()).getRoot());","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":47,"Gibson0918":4}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import javafx.animation.PauseTransition;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import javafx.event.Event;","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"import javafx.util.Duration;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"import seedu.address.ui.events.AttemptLoginEvent;","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"import seedu.address.ui.events.CreatePasswordSuccessfulEvent;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"import seedu.address.ui.events.LoginFailEvent;","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"import seedu.address.ui.events.ProceedCreatePasswordEvent;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"import seedu.address.ui.events.SkipCreatePasswordEvent;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/address_book_32.png\";","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"    private LoginWindow loginWindow;","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"    private Stage primaryStage;","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"        this.primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"            this.showLoginWindow();","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"     * Shows the main window which is the main application","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"    public void showMainWindow() {","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"        mainWindow \u003d new MainWindow(this.primaryStage, logic);","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"        mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"        mainWindow.fillInnerParts();","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Acerizm"},"content":"     * Shows the welcome page","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Acerizm"},"content":"     * @throws IOException Input Output Exception","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Acerizm"},"content":"    public void showLoginWindow() {","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"Acerizm"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Acerizm"},"content":"            loginWindow \u003d new LoginWindow(this.primaryStage, logic);","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Acerizm"},"content":"            loginWindow.show();","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"Acerizm"},"content":"            loginWindow.fillWelcomeSection();","lastModifiedDate":"2023-03-31"},{"lineNumber":81,"author":{"gitId":"Acerizm"},"content":"            this.attachEventHandlers();","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"Acerizm"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"Acerizm"},"content":"            String error \u003d e.getCause().getMessage();","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"Acerizm"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"Acerizm"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error when switching scenes\", e);","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"Acerizm"},"content":"     * Switches the next scene to enter password page","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"Acerizm"},"content":"     * @param event ProceedCreatePasswordEvent","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"Acerizm"},"content":"    private void onProceedCreatePassword(ProceedCreatePasswordEvent event) {","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"Acerizm"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"Acerizm"},"content":"            loginWindow.fillCreateNewPasswordSection();","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"Acerizm"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"Acerizm"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"Acerizm"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error when switching scenes\", e);","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":103,"author":{"gitId":"Acerizm"},"content":"     * Switches the current stage to another stage that holds the MainWindow","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"Acerizm"},"content":"     * @param event SkipCreatePasswordEvent","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"Acerizm"},"content":"    private void onSkipCreatePassword(SkipCreatePasswordEvent event) {","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"Acerizm"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"Acerizm"},"content":"            // show the loading section first","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"Acerizm"},"content":"            loginWindow.fillLoadingSection();","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"Acerizm"},"content":"            // then show the real app after X seconds","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"Acerizm"},"content":"            PauseTransition delay \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"Acerizm"},"content":"            delay.setOnFinished(currentEvent -\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"Acerizm"},"content":"                loginWindow.close();","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"Acerizm"},"content":"                this.showMainWindow();","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"Acerizm"},"content":"            });","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"Acerizm"},"content":"            delay.play();","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"Acerizm"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"Acerizm"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"Acerizm"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error when switching stage\", e);","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"Acerizm"},"content":"     * Switches the current scene to show password created successfully scene","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"Acerizm"},"content":"     * @param event CreatePasswordSuccessfulEvent","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"Acerizm"},"content":"    private void onCreatePasswordSuccess(CreatePasswordSuccessfulEvent event) {","lastModifiedDate":"2023-03-30"},{"lineNumber":128,"author":{"gitId":"Acerizm"},"content":"        try {","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"Acerizm"},"content":"            // save the password","lastModifiedDate":"2023-03-30"},{"lineNumber":130,"author":{"gitId":"Acerizm"},"content":"            logic.setUserHashedPassword(event.getHashedPassword());","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"Acerizm"},"content":"            this.launchModcheckWindow();","lastModifiedDate":"2023-03-31"},{"lineNumber":132,"author":{"gitId":"Acerizm"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-03-31"},{"lineNumber":133,"author":{"gitId":"Acerizm"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2023-03-31"},{"lineNumber":134,"author":{"gitId":"Acerizm"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error when switching scenes\", e);","lastModifiedDate":"2023-03-31"},{"lineNumber":135,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":136,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":137,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":138,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":139,"author":{"gitId":"Acerizm"},"content":"     * Switches the current scene to its respective scene based on the user\u0027s","lastModifiedDate":"2023-03-31"},{"lineNumber":140,"author":{"gitId":"Acerizm"},"content":"     * login attempt","lastModifiedDate":"2023-03-31"},{"lineNumber":141,"author":{"gitId":"Acerizm"},"content":"     * @param event AttemptLoginEvent","lastModifiedDate":"2023-03-31"},{"lineNumber":142,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":143,"author":{"gitId":"Acerizm"},"content":"    private void onAttemptLogin(AttemptLoginEvent event) {","lastModifiedDate":"2023-03-31"},{"lineNumber":144,"author":{"gitId":"Acerizm"},"content":"        try {","lastModifiedDate":"2023-03-31"},{"lineNumber":145,"author":{"gitId":"Acerizm"},"content":"            String storedPassword \u003d logic.getUserHashedPassword();","lastModifiedDate":"2023-03-31"},{"lineNumber":146,"author":{"gitId":"Acerizm"},"content":"            String userSubmittedPassword \u003d event.getHashedPassword();","lastModifiedDate":"2023-03-31"},{"lineNumber":147,"author":{"gitId":"Acerizm"},"content":"            if (storedPassword.equals(userSubmittedPassword)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":148,"author":{"gitId":"Acerizm"},"content":"                // show the loading section first","lastModifiedDate":"2023-03-31"},{"lineNumber":149,"author":{"gitId":"Acerizm"},"content":"                loginWindow.fillLoadingSection();","lastModifiedDate":"2023-03-30"},{"lineNumber":150,"author":{"gitId":"Acerizm"},"content":"                // then show the real app after X seconds","lastModifiedDate":"2023-03-31"},{"lineNumber":151,"author":{"gitId":"Acerizm"},"content":"                PauseTransition delay \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"Acerizm"},"content":"                delay.setOnFinished(currentEvent -\u003e {","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"Acerizm"},"content":"                    loginWindow.close();","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"Acerizm"},"content":"                    this.showMainWindow();","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"Acerizm"},"content":"                });","lastModifiedDate":"2023-03-30"},{"lineNumber":156,"author":{"gitId":"Acerizm"},"content":"                delay.play();","lastModifiedDate":"2023-03-30"},{"lineNumber":157,"author":{"gitId":"Acerizm"},"content":"            } else {","lastModifiedDate":"2023-03-31"},{"lineNumber":158,"author":{"gitId":"Acerizm"},"content":"                LoginFailEvent loginFailEvent \u003d new LoginFailEvent();","lastModifiedDate":"2023-03-31"},{"lineNumber":159,"author":{"gitId":"Acerizm"},"content":"                Event.fireEvent(this.primaryStage, loginFailEvent);","lastModifiedDate":"2023-03-31"},{"lineNumber":160,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":161,"author":{"gitId":"Acerizm"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2023-03-30"},{"lineNumber":162,"author":{"gitId":"Acerizm"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2023-03-30"},{"lineNumber":163,"author":{"gitId":"Acerizm"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error when switching scenes\", e);","lastModifiedDate":"2023-03-30"},{"lineNumber":164,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"Acerizm"},"content":"    private void attachEventHandlers() {","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"Acerizm"},"content":"        // Observer design pattern is used here to register events","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"Acerizm"},"content":"        this.primaryStage.addEventHandler(ProceedCreatePasswordEvent.PROCEED_CREATE_PASSWORD,","lastModifiedDate":"2023-03-30"},{"lineNumber":170,"author":{"gitId":"Acerizm"},"content":"                this::onProceedCreatePassword);","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"Acerizm"},"content":"        this.primaryStage.addEventHandler(SkipCreatePasswordEvent.SKIP_CREATE_PASSWORD_EVENT,","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"Acerizm"},"content":"                this::onSkipCreatePassword);","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"Acerizm"},"content":"        this.primaryStage.addEventHandler(CreatePasswordSuccessfulEvent.CREATE_PASSWORD_SUCCESSFUL_EVENT,","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"Acerizm"},"content":"                this::onCreatePasswordSuccess);","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"Acerizm"},"content":"        this.primaryStage.addEventHandler(AttemptLoginEvent.ATTEMPT_LOGIN_EVENT,","lastModifiedDate":"2023-03-31"},{"lineNumber":176,"author":{"gitId":"Acerizm"},"content":"                this::onAttemptLogin);","lastModifiedDate":"2023-03-31"},{"lineNumber":177,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":178,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":179,"author":{"gitId":"Acerizm"},"content":"    private void launchModcheckWindow() {","lastModifiedDate":"2023-03-31"},{"lineNumber":180,"author":{"gitId":"Acerizm"},"content":"        loginWindow.fillLoadingSection();","lastModifiedDate":"2023-03-31"},{"lineNumber":181,"author":{"gitId":"Acerizm"},"content":"        loginWindow.fillPasswordSuccessLoadingSection();","lastModifiedDate":"2023-03-31"},{"lineNumber":182,"author":{"gitId":"Acerizm"},"content":"        PauseTransition delay \u003d new PauseTransition(Duration.seconds(3));","lastModifiedDate":"2023-03-31"},{"lineNumber":183,"author":{"gitId":"Acerizm"},"content":"        delay.setOnFinished(currentEvent -\u003e {","lastModifiedDate":"2023-03-31"},{"lineNumber":184,"author":{"gitId":"Acerizm"},"content":"            loginWindow.close();","lastModifiedDate":"2023-03-31"},{"lineNumber":185,"author":{"gitId":"Acerizm"},"content":"            this.showMainWindow();","lastModifiedDate":"2023-03-31"},{"lineNumber":186,"author":{"gitId":"Acerizm"},"content":"        });","lastModifiedDate":"2023-03-31"},{"lineNumber":187,"author":{"gitId":"Acerizm"},"content":"        delay.play();","lastModifiedDate":"2023-03-31"},{"lineNumber":188,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":215,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":216,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":84,"Acerizm":141}},{"path":"src/main/java/seedu/address/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"Acerizm"},"content":"    public void hashPassword(String password) {","lastModifiedDate":"2023-03-30"},{"lineNumber":89,"author":{"gitId":"Acerizm"},"content":"        // hashing to be done in v1.4","lastModifiedDate":"2023-03-30"},{"lineNumber":90,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":91,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":88,"Acerizm":4}},{"path":"src/main/java/seedu/address/ui/WelcomeSection.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import javafx.event.Event;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"import seedu.address.ui.events.ProceedCreatePasswordEvent;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"import seedu.address.ui.events.SkipCreatePasswordEvent;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":" * Ui to display the Welcome Section if it is the first time","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":" * the user is using the app","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"public class WelcomeSection extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    private static final String FXML \u003d \"WelcomeSection.fxml\";","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"    private Label errorMessageLabel;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"    private TextField inputField;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"    private VBox tempContainer;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"    public WelcomeSection() {","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"        super(FXML);","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"     * Handles the event when the user submits his/her response","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"    private void handleSubmit(KeyEvent event) {","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"        if (event.getCode() \u003d\u003d KeyCode.ENTER) {","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"            String input \u003d inputField.getText().toLowerCase();","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"            if (input.equals(\"yes\") || input.equals(\"y\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"                ProceedCreatePasswordEvent proceedCreatePasswordEvent \u003d new ProceedCreatePasswordEvent();","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"                Event.fireEvent(tempContainer, proceedCreatePasswordEvent);","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"            } else if (input.equals(\"no\") || input.equals(\"n\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"                SkipCreatePasswordEvent skipCreatePasswordEvent \u003d new SkipCreatePasswordEvent();","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"                Event.fireEvent(tempContainer, skipCreatePasswordEvent);","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"            } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"                // show error message","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"                this.errorMessageLabel.setText(\"Please enter only `yes`,`y`, `no`,`n` only!\");","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"            }","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Acerizm":55}},{"path":"src/main/java/seedu/address/ui/events/AttemptLoginEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.ui.events;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import javafx.event.Event;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import javafx.event.EventType;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" * An event that will trigger when user attempts to login","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" * with given password","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"public class AttemptLoginEvent extends Event {","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"    public static final EventType\u003cAttemptLoginEvent\u003e ATTEMPT_LOGIN_EVENT \u003d","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"            new EventType\u003c\u003e(\"ATTEMPT_LOGIN\");","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    private String hashedPassword;","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"     * Creates an attempt login event with the user\u0027s password","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"     * @param hashedPassword of user","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    public AttemptLoginEvent(String hashedPassword) {","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"        super(ATTEMPT_LOGIN_EVENT);","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"        this.hashedPassword \u003d hashedPassword;","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"     * Get the password of the user","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"     * @return password of the user","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"    public String getHashedPassword() {","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"        return this.hashedPassword;","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"Acerizm":34}},{"path":"src/main/java/seedu/address/ui/events/CreatePasswordSuccessfulEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.ui.events;","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import javafx.event.Event;","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import javafx.event.EventType;","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" * Event that happens when user creates a new password successfully","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"public class CreatePasswordSuccessfulEvent extends Event {","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"    public static final EventType\u003cCreatePasswordSuccessfulEvent\u003e CREATE_PASSWORD_SUCCESSFUL_EVENT \u003d","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"            new EventType\u003c\u003e(\"CREATE_PASSWORD_SUCCESSFUL\");","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"    private String hashedPassword;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"     * Contructor for CreatePasswordSuccessfulEvent that requires the user\u0027s password","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"     * @param hashedPassword","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"    public CreatePasswordSuccessfulEvent(String hashedPassword) {","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"        super(CREATE_PASSWORD_SUCCESSFUL_EVENT);","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"        this.hashedPassword \u003d hashedPassword;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"    public String getHashedPassword() {","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"        return this.hashedPassword;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Acerizm":27}},{"path":"src/main/java/seedu/address/ui/events/LoginFailEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.ui.events;","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import javafx.event.Event;","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import javafx.event.EventType;","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" * An event that will be triggered when user fails to login","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"public class LoginFailEvent extends Event {","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"    public static final EventType\u003cLoginFailEvent\u003e LOGIN_FAIL_EVENT \u003d","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"            new EventType\u003c\u003e(\"LOGIN_FAIL\");","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"    public LoginFailEvent() {","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"        super(LOGIN_FAIL_EVENT);","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"Acerizm":19}},{"path":"src/main/java/seedu/address/ui/events/ProceedCreatePasswordEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.ui.events;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import javafx.event.Event;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import javafx.event.EventType;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" * An event class that is created when user decides to create a password in the welcom page","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"public class ProceedCreatePasswordEvent extends Event {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"    public static final EventType\u003cProceedCreatePasswordEvent\u003e PROCEED_CREATE_PASSWORD \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"            new EventType\u003c\u003e(\"PROCEED_CREATE_PASSWORD\");","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"    public ProceedCreatePasswordEvent() {","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"        super(PROCEED_CREATE_PASSWORD);","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Acerizm":18}},{"path":"src/main/java/seedu/address/ui/events/SkipCreatePasswordEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.ui.events;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import javafx.event.Event;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import javafx.event.EventType;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":" * Event that occurs when user skips creating password for the application","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":" *","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":" * @author Haiqel Bin Hanaffi","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"public class SkipCreatePasswordEvent extends Event {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"    public static final EventType\u003cSkipCreatePasswordEvent\u003e SKIP_CREATE_PASSWORD_EVENT \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"            new EventType\u003c\u003e(\"SKIP_CREATE_PASSWORD_EVENT\");","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"    public SkipCreatePasswordEvent() {","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"        super(SKIP_CREATE_PASSWORD_EVENT);","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Acerizm":18}},{"path":"src/main/resources/view/CreatePasswordSection.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.control.PasswordField?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"\u003cVBox fx:id\u003d\"tempContainer\" alignment\u003d\"CENTER\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"    \u003cLabel fx:id\u003d\"firstLabel\" text\u003d\"Type in your new password below:\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"         \u003cFont name\u003d\"Arial\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"      \u003c/font\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"         \u003cInsets bottom\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"      \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    \u003cPasswordField fx:id\u003d\"firstInputField\" alignment\u003d\"CENTER\" maxHeight\u003d\"50.0\" maxWidth\u003d\"650.0\" prefHeight\u003d\"40.0\" onKeyPressed\u003d\"#handleSubmit\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"         \u003cInsets bottom\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"      \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"         \u003cFont name\u003d\"Arial\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"      \u003c/font\u003e\u003c/PasswordField\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    \u003cLabel fx:id\u003d\"secondLabel\" alignment\u003d\"center\" text\u003d\"Re-enter your password below:\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"         \u003cInsets bottom\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"      \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"         \u003cFont name\u003d\"Arial\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"      \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"    \u003cPasswordField fx:id\u003d\"secondInputField\" alignment\u003d\"CENTER\" maxHeight\u003d\"50.0\" maxWidth\u003d\"650.0\" onKeyPressed\u003d\"#handleSubmit\" prefHeight\u003d\"40.0\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"         \u003cFont name\u003d\"Arial\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"      \u003c/font\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"         \u003cInsets bottom\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"      \u003c/VBox.margin\u003e\u003c/PasswordField\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"   \u003cButton alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" mnemonicParsing\u003d\"false\" text\u003d\"Submit\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\" onAction\u003d\"#handleButtonSubmit\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"         \u003cFont name\u003d\"Arial\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"      \u003c/font\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"   \u003c/Button\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"    \u003cLabel fx:id\u003d\"errorMessageLabel\" alignment\u003d\"CENTER\" maxHeight\u003d\"50.0\" maxWidth\u003d\"650.0\" prefHeight\u003d\"40.0\" textAlignment\u003d\"CENTER\" textFill\u003d\"RED\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"         \u003cFont name\u003d\"Arial\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"      \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"Acerizm":48}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":354,"author":{"gitId":"Statspadders"},"content":"#moduleTags {","lastModifiedDate":"2023-03-13"},{"lineNumber":355,"author":{"gitId":"Statspadders"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-13"},{"lineNumber":356,"author":{"gitId":"Statspadders"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-13"},{"lineNumber":357,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":358,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":359,"author":{"gitId":"Statspadders"},"content":"#moduleTags .label {","lastModifiedDate":"2023-03-13"},{"lineNumber":360,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-13"},{"lineNumber":361,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: orange;","lastModifiedDate":"2023-03-13"},{"lineNumber":362,"author":{"gitId":"Statspadders"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-13"},{"lineNumber":363,"author":{"gitId":"Statspadders"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-13"},{"lineNumber":364,"author":{"gitId":"Statspadders"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-13"},{"lineNumber":365,"author":{"gitId":"Statspadders"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-13"},{"lineNumber":366,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-13"},{"lineNumber":367,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":368,"author":{"gitId":"Statspadders"},"content":".list-cell:empty {","lastModifiedDate":"2023-03-27"},{"lineNumber":369,"author":{"gitId":"Statspadders"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2023-03-27"},{"lineNumber":370,"author":{"gitId":"Statspadders"},"content":"    -fx-background: #383838;","lastModifiedDate":"2023-03-27"},{"lineNumber":371,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"-":352,"Statspadders":19}},{"path":"src/main/resources/view/DefaultLoginSection.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.control.PasswordField?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"\u003cVBox fx:id\u003d\"tempContainer\" alignment\u003d\"CENTER\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"    \u003cLabel fx:id\u003d\"welcomeMessage\" text\u003d\"Welcome To MODCheck!\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"            \u003cInsets bottom\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"         \u003cFont name\u003d\"Arial\" size\u003d\"40.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"      \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    \u003cLabel fx:id\u003d\"instructionLabel\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" stylesheets\u003d\"@WelcomePage.css\" text\u003d\"Type in your password below:\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"            \u003cInsets bottom\u003d\"20.0\" left\u003d\"20.0\" right\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"            \u003cInsets bottom\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"         \u003cFont name\u003d\"Arial\" size\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"      \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"    \u003cPasswordField fx:id\u003d\"inputField\" alignment\u003d\"CENTER\" maxHeight\u003d\"50.0\" maxWidth\u003d\"650.0\" onKeyPressed\u003d\"#handleSubmit\" prefHeight\u003d\"40.0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"            \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"        \u003cfont\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"        \u003c/font\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"    \u003c/PasswordField\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"   \u003cLabel fx:id\u003d\"errorMessageLabel\" textFill\u003d\"RED\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"         \u003cInsets /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"      \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"         \u003cFont name\u003d\"Arial\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"      \u003c/font\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"   \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"   \u003cLabel fx:id\u003d\"orLabel\" text\u003d\"OR\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"         \u003cInsets bottom\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"      \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"         \u003cFont name\u003d\"Arial\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"      \u003c/font\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"   \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"   \u003cLabel fx:id\u003d\"createNewPasswordLabel\" onMouseClicked\u003d\"#handleCreateNewPassword\" text\u003d\"Create New Password\" textAlignment\u003d\"CENTER\" underline\u003d\"true\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"      \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"         \u003cInsets bottom\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"      \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"         \u003cFont name\u003d\"Arial\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"      \u003c/font\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"   \u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"   \u003cLabel fx:id\u003d\"hintLabel\" text\u003d\"Hint: if you have no password set up before, you can always enter the app!\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"    \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"        \u003cInsets top\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"    \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-31"}],"authorContributionMap":{"Acerizm":64}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Statspadders"},"content":".background {","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"Statspadders"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"Statspadders"},"content":".label {","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"Statspadders"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"Statspadders"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"Statspadders"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"Statspadders"},"content":".label-bright {","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"Statspadders"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"Statspadders"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"Statspadders"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"Statspadders"},"content":".label-header {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"Statspadders"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"Statspadders"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Statspadders"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"Statspadders"},"content":".text-field {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Statspadders"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"Statspadders"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"Statspadders"},"content":".tab-pane {","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Statspadders"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"Statspadders"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Statspadders"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"Statspadders"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"Statspadders"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"Statspadders"},"content":".table-view {","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"Statspadders"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"Statspadders"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"Statspadders"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"Statspadders"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"Statspadders"},"content":"    -fx-padding: 5;","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"Statspadders"},"content":".table-view .column-header-background {","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"Statspadders"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"Statspadders"},"content":"    -fx-size: 35;","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"Statspadders"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"Statspadders"},"content":"    -fx-border-color:","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"Statspadders"},"content":"            transparent","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"Statspadders"},"content":"            transparent","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"Statspadders"},"content":"            derive(-fx-base, 80%)","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"Statspadders"},"content":"            transparent;","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"Statspadders"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"Statspadders"},"content":".table-view .column-header .label {","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"Statspadders"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"Statspadders"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"Statspadders"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"Statspadders"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"Statspadders"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"Statspadders"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"Statspadders"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"Statspadders"},"content":".split-pane {","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"Statspadders"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"Statspadders"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"Statspadders"},"content":".list-view {","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"Statspadders"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"Statspadders"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: derive(#C3B091, 20%);","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"Statspadders"},"content":".list-cell {","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"Statspadders"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"Statspadders"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"Statspadders"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"Statspadders"},"content":".list-cell:filled:even {","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: #9F8E72;","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"Statspadders"},"content":".list-cell:filled:odd {","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: #D8CCB9;","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"Statspadders"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"Statspadders"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"Statspadders"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"Statspadders"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"Statspadders"},"content":".list-cell .label {","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"Statspadders"},"content":".cell_big_label {","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"Statspadders"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"Statspadders"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":129,"author":{"gitId":"Statspadders"},"content":".cell_small_label {","lastModifiedDate":"2023-03-27"},{"lineNumber":130,"author":{"gitId":"Statspadders"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-03-27"},{"lineNumber":131,"author":{"gitId":"Statspadders"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"Statspadders"},"content":".stack-pane {","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-27"},{"lineNumber":137,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":138,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"Statspadders"},"content":".pane-with-border {","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: derive(#C3B091, 20%);","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"Statspadders"},"content":"    -fx-border-color: derive(#9F9066, 10%);","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"Statspadders"},"content":"    -fx-border-top-width: 1px;","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":144,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"Statspadders"},"content":".status-bar {","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"Statspadders"},"content":".result-display {","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"Statspadders"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"Statspadders"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-27"},{"lineNumber":153,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":156,"author":{"gitId":"Statspadders"},"content":".result-display .label {","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":159,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"Statspadders"},"content":".status-bar .label {","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"Statspadders"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-27"},{"lineNumber":162,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-27"},{"lineNumber":163,"author":{"gitId":"Statspadders"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"Statspadders"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"Statspadders"},"content":".status-bar-with-border {","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"Statspadders"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"Statspadders"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"Statspadders"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"Statspadders"},"content":".grid-pane {","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"Statspadders"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"Statspadders"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"Statspadders"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2023-03-27"},{"lineNumber":184,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"Statspadders"},"content":".context-menu {","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: derive(#C3B091, 50%);","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"Statspadders"},"content":".context-menu .label {","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"Statspadders"},"content":".menu-bar {","lastModifiedDate":"2023-03-27"},{"lineNumber":196,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: derive(#C3B091, 20%);","lastModifiedDate":"2023-03-27"},{"lineNumber":197,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":198,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"Statspadders"},"content":".menu-bar .label {","lastModifiedDate":"2023-03-27"},{"lineNumber":200,"author":{"gitId":"Statspadders"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-03-27"},{"lineNumber":201,"author":{"gitId":"Statspadders"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-27"},{"lineNumber":202,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"Statspadders"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":206,"author":{"gitId":"Statspadders"},"content":".menu .left-container {","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":209,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"Statspadders"},"content":"/*","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"Statspadders"},"content":" * Metro style Push Button","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"Statspadders"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"Statspadders"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2023-03-27"},{"lineNumber":214,"author":{"gitId":"Statspadders"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":215,"author":{"gitId":"Statspadders"},"content":".button {","lastModifiedDate":"2023-03-27"},{"lineNumber":216,"author":{"gitId":"Statspadders"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2023-03-27"},{"lineNumber":217,"author":{"gitId":"Statspadders"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2023-03-27"},{"lineNumber":218,"author":{"gitId":"Statspadders"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"Statspadders"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"Statspadders"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"Statspadders"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2023-03-27"},{"lineNumber":224,"author":{"gitId":"Statspadders"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-03-27"},{"lineNumber":225,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":226,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":227,"author":{"gitId":"Statspadders"},"content":".button:hover {","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2023-03-27"},{"lineNumber":229,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":230,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"Statspadders"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-03-27"},{"lineNumber":232,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":235,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":236,"author":{"gitId":"Statspadders"},"content":".button:focused {","lastModifiedDate":"2023-03-27"},{"lineNumber":237,"author":{"gitId":"Statspadders"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"Statspadders"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":239,"author":{"gitId":"Statspadders"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2023-03-27"},{"lineNumber":240,"author":{"gitId":"Statspadders"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":241,"author":{"gitId":"Statspadders"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":243,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":244,"author":{"gitId":"Statspadders"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-03-27"},{"lineNumber":245,"author":{"gitId":"Statspadders"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2023-03-27"},{"lineNumber":246,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-27"},{"lineNumber":247,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":249,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":250,"author":{"gitId":"Statspadders"},"content":".button:default {","lastModifiedDate":"2023-03-27"},{"lineNumber":251,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-03-27"},{"lineNumber":252,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-03-27"},{"lineNumber":253,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":254,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":255,"author":{"gitId":"Statspadders"},"content":".button:default:hover {","lastModifiedDate":"2023-03-27"},{"lineNumber":256,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2023-03-27"},{"lineNumber":257,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":258,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":259,"author":{"gitId":"Statspadders"},"content":".dialog-pane {","lastModifiedDate":"2023-03-27"},{"lineNumber":260,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-27"},{"lineNumber":261,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":262,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":263,"author":{"gitId":"Statspadders"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-03-27"},{"lineNumber":264,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-27"},{"lineNumber":265,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":266,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":267,"author":{"gitId":"Statspadders"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-03-27"},{"lineNumber":268,"author":{"gitId":"Statspadders"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-27"},{"lineNumber":269,"author":{"gitId":"Statspadders"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-27"},{"lineNumber":270,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-27"},{"lineNumber":271,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":272,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":273,"author":{"gitId":"Statspadders"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-03-27"},{"lineNumber":274,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-03-27"},{"lineNumber":275,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":276,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":277,"author":{"gitId":"Statspadders"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-03-27"},{"lineNumber":278,"author":{"gitId":"Statspadders"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-03-27"},{"lineNumber":279,"author":{"gitId":"Statspadders"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-03-27"},{"lineNumber":280,"author":{"gitId":"Statspadders"},"content":"    -fx-fill: white;","lastModifiedDate":"2023-03-27"},{"lineNumber":281,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-27"},{"lineNumber":282,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":283,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":284,"author":{"gitId":"Statspadders"},"content":".scroll-bar {","lastModifiedDate":"2023-03-27"},{"lineNumber":285,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: derive(#C3B091, 20%);","lastModifiedDate":"2023-03-27"},{"lineNumber":286,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":287,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":288,"author":{"gitId":"Statspadders"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-03-27"},{"lineNumber":289,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: derive(#1d1d1d, 70%);","lastModifiedDate":"2023-03-27"},{"lineNumber":290,"author":{"gitId":"Statspadders"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-03-27"},{"lineNumber":291,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":292,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":293,"author":{"gitId":"Statspadders"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-03-27"},{"lineNumber":294,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-27"},{"lineNumber":295,"author":{"gitId":"Statspadders"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":296,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":297,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":298,"author":{"gitId":"Statspadders"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-03-27"},{"lineNumber":299,"author":{"gitId":"Statspadders"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-03-27"},{"lineNumber":300,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":301,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":302,"author":{"gitId":"Statspadders"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-03-27"},{"lineNumber":303,"author":{"gitId":"Statspadders"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-03-27"},{"lineNumber":304,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":305,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":306,"author":{"gitId":"Statspadders"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-03-27"},{"lineNumber":307,"author":{"gitId":"Statspadders"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":308,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":309,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":310,"author":{"gitId":"Statspadders"},"content":"#cardPane {","lastModifiedDate":"2023-03-27"},{"lineNumber":311,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-27"},{"lineNumber":312,"author":{"gitId":"Statspadders"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":313,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":314,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":315,"author":{"gitId":"Statspadders"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-03-27"},{"lineNumber":316,"author":{"gitId":"Statspadders"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-03-27"},{"lineNumber":317,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2023-03-27"},{"lineNumber":318,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":319,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":320,"author":{"gitId":"Statspadders"},"content":"#commandTextField {","lastModifiedDate":"2023-03-27"},{"lineNumber":321,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: derive(#C3B091, 20%);","lastModifiedDate":"2023-03-27"},{"lineNumber":322,"author":{"gitId":"Statspadders"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":323,"author":{"gitId":"Statspadders"},"content":"    -fx-border-color: #d0bca4 #d0bca4 black #d0bca4;","lastModifiedDate":"2023-03-27"},{"lineNumber":324,"author":{"gitId":"Statspadders"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":325,"author":{"gitId":"Statspadders"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":326,"author":{"gitId":"Statspadders"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-27"},{"lineNumber":327,"author":{"gitId":"Statspadders"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2023-03-27"},{"lineNumber":328,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-27"},{"lineNumber":329,"author":{"gitId":"Statspadders"},"content":"    -fx-prompt-text-fill: black;","lastModifiedDate":"2023-03-27"},{"lineNumber":330,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":331,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":332,"author":{"gitId":"Statspadders"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2023-03-27"},{"lineNumber":333,"author":{"gitId":"Statspadders"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-03-27"},{"lineNumber":334,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":335,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":336,"author":{"gitId":"Statspadders"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-03-27"},{"lineNumber":337,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: derive(#C3B091, 20%);","lastModifiedDate":"2023-03-27"},{"lineNumber":338,"author":{"gitId":"Statspadders"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":339,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":340,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":341,"author":{"gitId":"Statspadders"},"content":"#tags {","lastModifiedDate":"2023-03-27"},{"lineNumber":342,"author":{"gitId":"Statspadders"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-27"},{"lineNumber":343,"author":{"gitId":"Statspadders"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-27"},{"lineNumber":344,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":345,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":346,"author":{"gitId":"Statspadders"},"content":"#tags .label {","lastModifiedDate":"2023-03-27"},{"lineNumber":347,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-27"},{"lineNumber":348,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-03-27"},{"lineNumber":349,"author":{"gitId":"Statspadders"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-27"},{"lineNumber":350,"author":{"gitId":"Statspadders"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-27"},{"lineNumber":351,"author":{"gitId":"Statspadders"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-27"},{"lineNumber":352,"author":{"gitId":"Statspadders"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-27"},{"lineNumber":353,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":354,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":355,"author":{"gitId":"Statspadders"},"content":"#moduleTags {","lastModifiedDate":"2023-03-27"},{"lineNumber":356,"author":{"gitId":"Statspadders"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-27"},{"lineNumber":357,"author":{"gitId":"Statspadders"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-27"},{"lineNumber":358,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":359,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":360,"author":{"gitId":"Statspadders"},"content":"#moduleTags .label {","lastModifiedDate":"2023-03-27"},{"lineNumber":361,"author":{"gitId":"Statspadders"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-27"},{"lineNumber":362,"author":{"gitId":"Statspadders"},"content":"    -fx-background-color: orange;","lastModifiedDate":"2023-03-27"},{"lineNumber":363,"author":{"gitId":"Statspadders"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-27"},{"lineNumber":364,"author":{"gitId":"Statspadders"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-27"},{"lineNumber":365,"author":{"gitId":"Statspadders"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-27"},{"lineNumber":366,"author":{"gitId":"Statspadders"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-27"},{"lineNumber":367,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":368,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":369,"author":{"gitId":"Statspadders"},"content":".list-cell:empty {","lastModifiedDate":"2023-03-27"},{"lineNumber":370,"author":{"gitId":"Statspadders"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2023-03-27"},{"lineNumber":371,"author":{"gitId":"Statspadders"},"content":"    -fx-background: derive(#C3B091, 20%);","lastModifiedDate":"2023-03-27"},{"lineNumber":372,"author":{"gitId":"Statspadders"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"Statspadders":372}},{"path":"src/main/resources/view/LoadingSection.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"\u003cVBox fx:id\u003d\"tempContainer\" alignment\u003d\"CENTER\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"    \u003cLabel fx:id\u003d\"loadingLabel\" alignment\u003d\"CENTER\" text\u003d\"Hang Tight! You are currently entering into MODCheck...\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"         \u003cFont name\u003d\"Arial\" size\u003d\"30.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"      \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Acerizm":12}},{"path":"src/main/resources/view/LoginWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"         title\u003d\"ModCheck login\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"    \u003cscene\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"        \u003cScene\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"            \u003c!-- Vbox will be the main container for login window --\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"            \u003cVBox fx:id\u003d\"container\" alignment\u003d\"CENTER\" stylesheets\u003d\"/view/WelcomePage.css\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Acerizm":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"Statspadders"},"content":"         title\u003d\"ModCheck\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"-":58,"Statspadders":1}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"Statspadders"},"content":"      \u003cFlowPane fx:id\u003d\"moduleTags\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":36,"Statspadders":1}},{"path":"src/main/resources/view/WelcomePage.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"#welcomeMessage {","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"    -fx-font-size: 30px;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"#secondMessage {","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"    -fx-font-family: Arial;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"    -fx-font-size: 20px;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Acerizm":11}},{"path":"src/main/resources/view/WelcomeSection.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"\u003cVBox fx:id\u003d\"tempContainer\" alignment\u003d\"CENTER\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"    \u003cLabel fx:id\u003d\"welcomeMessage\" text\u003d\"Welcome To MODCheck!\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"            \u003cInsets bottom\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"        \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"    \u003cLabel fx:id\u003d\"secondMessage\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" stylesheets\u003d\"@WelcomePage.css\" text\u003d\"We noticed that you are new here. Would you like to set up a password?\" textAlignment\u003d\"CENTER\" wrapText\u003d\"true\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"            \u003cInsets bottom\u003d\"20.0\" left\u003d\"20.0\" right\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"            \u003cInsets bottom\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"        \u003c/VBox.margin\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"    \u003cTextField fx:id\u003d\"inputField\" alignment\u003d\"CENTER\" maxHeight\u003d\"50.0\" maxWidth\u003d\"650.0\" onKeyPressed\u003d\"#handleSubmit\" prefHeight\u003d\"40.0\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"        \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"            \u003cInsets bottom\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"        \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"        \u003cfont\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"            \u003cFont name\u003d\"Arial\" size\u003d\"18.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"        \u003c/font\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"    \u003c/TextField\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"    \u003cLabel fx:id\u003d\"errorMessageLabel\" alignment\u003d\"center\" maxWidth\u003d\"650\" textFill\u003d\"RED\"\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"         \u003cFont name\u003d\"Arial\" size\u003d\"15.0\" /\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"      \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"        \u003cInsets top\u003d\"20.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"    \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Acerizm":36}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.UserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"import seedu.address.storage.JsonUserDataStorage;","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"        JsonUserDataStorage userDataStorage \u003d new JsonUserDataStorage(temporaryFolder.resolve(\"userData.json\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, userDataStorage);","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"Acerizm"},"content":"        JsonUserDataStorage userDataStorage \u003d new JsonUserDataStorage(temporaryFolder.resolve(\"userData.json\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":82,"author":{"gitId":"Acerizm"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage, userDataStorage);","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"Acerizm"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"-":159,"Acerizm":7}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.UserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), model.getUserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":43,"Acerizm":3}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"import java.util.List;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.ReadOnlyUserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.Undoable;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"joellow88"},"content":"    private class ModelStub implements Model, Undoable {","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"Statspadders"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":115,"author":{"gitId":"Statspadders"},"content":"        public String getCssFilePath() {","lastModifiedDate":"2023-03-26"},{"lineNumber":116,"author":{"gitId":"Statspadders"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"Statspadders"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":118,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"Statspadders"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":120,"author":{"gitId":"Statspadders"},"content":"        public void setCssFilePath(String cssFilePath) {","lastModifiedDate":"2023-03-26"},{"lineNumber":121,"author":{"gitId":"Statspadders"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":122,"author":{"gitId":"Statspadders"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":123,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":126,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"elvern18"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"joellow88"},"content":"        public void deleteMultiplePersons(List\u003cPerson\u003e listOfPeople) {","lastModifiedDate":"2023-04-07"},{"lineNumber":152,"author":{"gitId":"elvern18"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":153,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"joellow88"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"joellow88"},"content":"        public void combine(ReadOnlyAddressBook ab, String s) {","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"joellow88"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"Gibson0918"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"Gibson0918"},"content":"        public void resetPersonHiddenStatus() {","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"Gibson0918"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"Gibson0918"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":178,"author":{"gitId":"Gibson0918"},"content":"        public void showPersonContact(List\u003cPerson\u003e personList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"Gibson0918"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":181,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"Acerizm"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"Acerizm"},"content":"        public void setHashedPassword(String hashedPassword) {","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"Acerizm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"Acerizm"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"Acerizm"},"content":"        public String getHashedPassword() {","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"Acerizm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":192,"author":{"gitId":"Acerizm"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"Acerizm"},"content":"        public void setNumberOfTimesUsed(int numberOfTimesUsed) {","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"Acerizm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":196,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":197,"author":{"gitId":"Acerizm"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"Acerizm"},"content":"        public int getNumberOfTimesUsed() {","lastModifiedDate":"2023-03-30"},{"lineNumber":199,"author":{"gitId":"Acerizm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":201,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"Acerizm"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"Acerizm"},"content":"        public ReadOnlyUserData getUserData() {","lastModifiedDate":"2023-03-30"},{"lineNumber":204,"author":{"gitId":"Acerizm"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-30"},{"lineNumber":205,"author":{"gitId":"Acerizm"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":207,"author":{"gitId":"joellow88"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"joellow88"},"content":"        public boolean hasUndoableCommand() {","lastModifiedDate":"2023-03-14"},{"lineNumber":209,"author":{"gitId":"joellow88"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"joellow88"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":212,"author":{"gitId":"joellow88"},"content":"        public String executeUndo() {","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"joellow88"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":215,"author":{"gitId":"joellow88"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":216,"author":{"gitId":"joellow88"},"content":"        public boolean hasRedoableCommand() {","lastModifiedDate":"2023-03-14"},{"lineNumber":217,"author":{"gitId":"joellow88"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"joellow88"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"joellow88"},"content":"        public String executeRedo() {","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"joellow88"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":234,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"Gibson0918"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":263,"author":{"gitId":"Gibson0918"},"content":"        public void resetPersonHiddenStatus() {","lastModifiedDate":"2023-03-28"},{"lineNumber":264,"author":{"gitId":"Gibson0918"},"content":"            personsAdded.stream().forEach(x -\u003e {","lastModifiedDate":"2023-03-28"},{"lineNumber":265,"author":{"gitId":"Gibson0918"},"content":"                if (!x.getHidden()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":266,"author":{"gitId":"Gibson0918"},"content":"                    x.toggleHidden();","lastModifiedDate":"2023-03-28"},{"lineNumber":267,"author":{"gitId":"Gibson0918"},"content":"                }","lastModifiedDate":"2023-03-28"},{"lineNumber":268,"author":{"gitId":"Gibson0918"},"content":"            });","lastModifiedDate":"2023-03-28"},{"lineNumber":269,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":270,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":271,"author":{"gitId":"Gibson0918"},"content":"        @Override","lastModifiedDate":"2023-03-30"},{"lineNumber":272,"author":{"gitId":"Gibson0918"},"content":"        public void showPersonContact(List\u003cPerson\u003e personList) {","lastModifiedDate":"2023-03-30"},{"lineNumber":273,"author":{"gitId":"Gibson0918"},"content":"            personList.stream().forEach(x -\u003e x.toggleHidden());","lastModifiedDate":"2023-03-30"},{"lineNumber":274,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":275,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":276,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":281,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"elvern18":3,"joellow88":24,"-":192,"Acerizm":26,"Statspadders":10,"Gibson0918":26}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.UserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"-":30,"Acerizm":3}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"Statspadders"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS + \" \"; // blank string not allowed","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"-":127,"Statspadders":1}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.UserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"elvern18"},"content":"        DeleteCommand deleteCommand \u003d new DeleteSingleIndexCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"elvern18"},"content":"        DeleteCommand deleteCommand \u003d new DeleteSingleIndexCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"elvern18"},"content":"        DeleteCommand deleteCommand \u003d new DeleteSingleIndexCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"elvern18"},"content":"        DeleteCommand deleteCommand \u003d new DeleteSingleIndexCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"elvern18"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteSingleIndexCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"elvern18"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteSingleIndexCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"elvern18"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteSingleIndexCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"elvern18":7,"-":99,"Acerizm":4}},{"path":"src/test/java/seedu/address/logic/commands/DeleteMultipleIndexCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"elvern18"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-23"},{"lineNumber":2,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":3,"author":{"gitId":"elvern18"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-23"},{"lineNumber":4,"author":{"gitId":"elvern18"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":5,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":6,"author":{"gitId":"elvern18"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-23"},{"lineNumber":7,"author":{"gitId":"elvern18"},"content":"import java.util.List;","lastModifiedDate":"2023-03-23"},{"lineNumber":8,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":9,"author":{"gitId":"elvern18"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-23"},{"lineNumber":10,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":11,"author":{"gitId":"elvern18"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-23"},{"lineNumber":12,"author":{"gitId":"elvern18"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-23"},{"lineNumber":13,"author":{"gitId":"elvern18"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-23"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-23"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.UserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-23"},{"lineNumber":17,"author":{"gitId":"elvern18"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-23"},{"lineNumber":18,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":19,"author":{"gitId":"elvern18"},"content":"class DeleteMultipleIndexCommandTest {","lastModifiedDate":"2023-03-23"},{"lineNumber":20,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"elvern18"},"content":"    @Test","lastModifiedDate":"2023-03-23"},{"lineNumber":23,"author":{"gitId":"elvern18"},"content":"    void execute_deleteMultipleValidIndex_success() {","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"elvern18"},"content":"        List\u003cPerson\u003e list \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-23"},{"lineNumber":25,"author":{"gitId":"elvern18"},"content":"        int size \u003d list.size();","lastModifiedDate":"2023-03-23"},{"lineNumber":26,"author":{"gitId":"elvern18"},"content":"        System.out.println(size);","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"elvern18"},"content":"        ArrayList\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-23"},{"lineNumber":28,"author":{"gitId":"elvern18"},"content":"        for (int i \u003d 0; i \u003c size; i++) {","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"elvern18"},"content":"            indexes.add(Index.fromZeroBased(i));","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"elvern18"},"content":"        }","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"elvern18"},"content":"        DeleteMultipleIndexCommand deleteCommand \u003d new DeleteMultipleIndexCommand(indexes);","lastModifiedDate":"2023-03-23"},{"lineNumber":32,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":33,"author":{"gitId":"elvern18"},"content":"        String expectedMessage \u003d String.format(DeleteMultipleIndexCommand.MESSAGE_DELETE_PERSON_SUCCESS);","lastModifiedDate":"2023-03-23"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2023-03-30"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"                new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"elvern18"},"content":"        expectedModel.deleteMultiplePersons(new ArrayList\u003c\u003e(list));","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"elvern18"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"elvern18"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"elvern18"},"content":"    }","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"elvern18"},"content":"}","lastModifiedDate":"2023-03-23"}],"authorContributionMap":{"elvern18":36,"Acerizm":4}},{"path":"src/test/java/seedu/address/logic/commands/EditByIndexCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.UserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"elvern18"},"content":"public class EditByIndexCommandTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"elvern18"},"content":"        EditByIndexCommand editByIndexCommand \u003d new EditByIndexCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2023-03-30"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"                new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"elvern18"},"content":"        assertCommandSuccess(editByIndexCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"elvern18"},"content":"        EditByIndexCommand editByIndexCommand \u003d new EditByIndexCommand(indexLastPerson, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2023-03-30"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"                new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"elvern18"},"content":"        assertCommandSuccess(editByIndexCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"elvern18"},"content":"        EditByIndexCommand editByIndexCommand \u003d new EditByIndexCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"Acerizm"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2023-03-30"},{"lineNumber":83,"author":{"gitId":"Acerizm"},"content":"                new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"elvern18"},"content":"        assertCommandSuccess(editByIndexCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"elvern18"},"content":"        EditByIndexCommand editByIndexCommand \u003d new EditByIndexCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"Acerizm"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs(),","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"Acerizm"},"content":"                new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"elvern18"},"content":"        assertCommandSuccess(editByIndexCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"elvern18"},"content":"        EditByIndexCommand editByIndexCommand \u003d new EditByIndexCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"elvern18"},"content":"        assertCommandFailure(editByIndexCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"elvern18"},"content":"        EditByIndexCommand editByIndexCommand \u003d new EditByIndexCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"elvern18"},"content":"        assertCommandFailure(editByIndexCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"elvern18"},"content":"        EditByIndexCommand editByIndexCommand \u003d new EditByIndexCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"elvern18"},"content":"        assertCommandFailure(editByIndexCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"elvern18"},"content":"        EditByIndexCommand editByIndexCommand \u003d new EditByIndexCommand(outOfBoundIndex,","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"elvern18"},"content":"        assertCommandFailure(editByIndexCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"elvern18"},"content":"        final EditByIndexCommand standardCommand \u003d new EditByIndexCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"elvern18"},"content":"        EditByIndexCommand commandWithSameValues \u003d new EditByIndexCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"elvern18"},"content":"        assertFalse(standardCommand.equals(new EditByIndexCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2023-03-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"elvern18"},"content":"        assertFalse(standardCommand.equals(new EditByIndexCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"elvern18":21,"-":147,"Acerizm":10}},{"path":"src/test/java/seedu/address/logic/commands/ExportCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"import java.util.List;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.UserData;","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"public class ExportCommandTest {","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"    void execute_exportCommandFailure() {","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"        List\u003cIndex\u003e indexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"        Index i \u003d Index.fromOneBased(Integer.MAX_VALUE);","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"        indexList.add(i);","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"        assertCommandFailure(new ExportCommand(indexList), model, Messages.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"    void execute_exportCommandSuccess() {","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"        List\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"        model.showPersonContact(personList);","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"        List\u003cIndex\u003e indexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"Gibson0918"},"content":"        for (int i \u003d 1; i \u003c\u003d personList.size(); i++) {","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"Gibson0918"},"content":"            indexList.add(Index.fromOneBased(i));","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"Gibson0918"},"content":"        List\u003cName\u003e nameList \u003d indexList.stream()","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"Gibson0918"},"content":"                .map(x -\u003e personList.get(x.getZeroBased()).getName())","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"Gibson0918"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"Gibson0918"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"Gibson0918"},"content":"        nameList.stream().forEach(x -\u003e sb.append(","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"Gibson0918"},"content":"                String.format(Messages.MESSAGE_EXPORT_PERSON_CONTACT_DETAILS, x) + \"\\n\"));","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"Gibson0918"},"content":"        assertCommandSuccess(new ExportCommand(indexList), model, sb.toString(), model);","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"Gibson0918":52}},{"path":"src/test/java/seedu/address/logic/commands/FilterCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_CONTACTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.UserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.person.ContactContainsTagPredicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":" * Contains integration tests (interaction with the Model) for {@code FilterCommand}.","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"public class FilterCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"    private Set\u003cTag\u003e emptyTagSetStub \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    private ContactContainsTagPredicate emptyTagsPredicate \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"            new ContactContainsTagPredicate(emptyTagSetStub);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"    private ContactContainsTagPredicate multipleTagsPredicate \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"            new ContactContainsTagPredicate(prepareMultilpleTags());","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"     * Test for no contact found if tag keyword given is empty","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"    void executeFilter_noContactFound_emptyTags() {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CONTACTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"        FilterCommand command \u003d new FilterCommand(emptyTagsPredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"        expectedModel.updateFilteredPersonList(this.emptyTagsPredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"     * Test if there are multiple contacts found when given multiple tags","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"    void executeFilter_multipleContactsFound_multipleTags() {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"        String expectedMessage \u003d String.format(MESSAGE_CONTACTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"        FilterCommand command \u003d new FilterCommand(multipleTagsPredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"        expectedModel.updateFilteredPersonList(this.multipleTagsPredicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"     * Sets up a stub tag hashSet","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"     * @return a set of tags","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"    private Set\u003cTag\u003e prepareMultilpleTags() {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"        Set\u003cTag\u003e multipleTagsSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"        Tag fakeTag1 \u003d new Tag(\"family\");","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"        Tag fakeTag2 \u003d new Tag(\"friends\");","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"Acerizm"},"content":"        multipleTagsSet.add(fakeTag1);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"Acerizm"},"content":"        multipleTagsSet.add(fakeTag2);","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Acerizm"},"content":"        return multipleTagsSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Acerizm":74}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.UserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":37,"Acerizm":3}},{"path":"src/test/java/seedu/address/logic/commands/LoadCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.UserData;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"class LoadCommandTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"    private Model model;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"    void execute_pathNotSpecified() {","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"        LoadCommand c \u003d new LoadCommand(null);","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"        assertThrows(CommandException.class, () -\u003e c.execute(model));","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"    void execute_pathInvalid() {","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"joellow88"},"content":"        LoadCommand c \u003d new LoadCommand(\"INVALID PATH\");","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"        assertThrows(CommandException.class, () -\u003e c.execute(model));","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"    void execute_notModcheckReadableFile() {","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"joellow88"},"content":"        LoadCommand c \u003d new LoadCommand(\"data/JsonAddressBookStorageTest/notJsonFormatAddressBook.json\");","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"joellow88"},"content":"        assertThrows(CommandException.class, () -\u003e c.execute(model));","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"joellow88"},"content":"    void execute_readableFile_testSuccess() {","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"joellow88"},"content":"        //Success scenario designed to require Ui input","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"joellow88"},"content":"        //Testing done manually","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"joellow88"},"content":"        assertTrue(true);","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"joellow88":42,"Acerizm":2}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.UserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"class RedoCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"    void execute_noRedoableCommand_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"        assertCommandFailure(new RedoCommand(), model, RedoCommand.MESSAGE_NO_REDOABLE_COMMAND);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"    void execute_undoableCommandPresent_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"        model.addPerson(TypicalPersons.IDA);","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"        try {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"            new UndoCommand().execute(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"            fail(\"Unable to execute undo command!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"        assertCommandSuccess(new RedoCommand(), model,","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"                String.format(\"Successfully redone command:\\nAdd %1$s\", TypicalPersons.IDA), model);","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joellow88":34,"Acerizm":2}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.UserData;","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"class UndoCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"    void execute_noUndoableCommand_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"        assertCommandFailure(new UndoCommand(), model, UndoCommand.MESSAGE_NO_UNDOABLE_COMMAND);","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"    void execute_undoableCommandPresent_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"        model.addPerson(TypicalPersons.IDA);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"        assertCommandSuccess(new UndoCommand(), model,","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"                String.format(\"Successfully undone command:\\nAdd %1$s\", TypicalPersons.IDA), model);","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joellow88":27,"Acerizm":2}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Gibson0918"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"Gibson0918"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"Gibson0918"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"Gibson0918"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"Gibson0918"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"Gibson0918"},"content":"import java.util.List;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"Gibson0918"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"Gibson0918"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.UserData;","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"Gibson0918"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"Gibson0918"},"content":"public class ViewCommandTest {","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"Gibson0918"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs(), new UserData());","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"Gibson0918"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"Gibson0918"},"content":"    void execute_viewCommandFailure() {","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"Gibson0918"},"content":"        List\u003cIndex\u003e indexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"Gibson0918"},"content":"        Index i \u003d Index.fromOneBased(Integer.MAX_VALUE);","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"Gibson0918"},"content":"        indexList.add(i);","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"Gibson0918"},"content":"        assertCommandFailure(new ViewCommand(indexList), model, Messages.MESSAGE_INVALID_INDEX);","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"Gibson0918"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"Gibson0918"},"content":"    void execute_viewCommandSuccess() {","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"Gibson0918"},"content":"        List\u003cPerson\u003e personList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"Gibson0918"},"content":"        model.showPersonContact(personList);","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"Gibson0918"},"content":"        List\u003cIndex\u003e indexList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"Gibson0918"},"content":"        for (int i \u003d 1; i \u003c\u003d personList.size(); i++) {","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"Gibson0918"},"content":"            indexList.add(Index.fromOneBased(i));","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"Gibson0918"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"Gibson0918"},"content":"        List\u003cName\u003e nameList \u003d indexList.stream()","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"Gibson0918"},"content":"                .map(x -\u003e personList.get(x.getZeroBased()).getName())","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"Gibson0918"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"Gibson0918"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"Gibson0918"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"Gibson0918"},"content":"        nameList.stream().forEach(x -\u003e sb.append(","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"Gibson0918"},"content":"                String.format(Messages.MESSAGE_VIEW_PERSON_CONTACT_DETAILS, x) + \"\\n\"));","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"Gibson0918"},"content":"        assertCommandSuccess(new ViewCommand(indexList), model, sb.toString(), model);","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"Gibson0918"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"Gibson0918"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"Gibson0918":52}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.commands.DeleteSingleIndexCommand;","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"elvern18"},"content":"import seedu.address.logic.commands.EditByIndexCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.commands.LoadCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.parser.exceptions.UiInputRequiredException;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"joellow88"},"content":"        DeleteSingleIndexCommand command \u003d (DeleteSingleIndexCommand) parser.parseCommand(","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"joellow88"},"content":"        assertEquals(new DeleteSingleIndexCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"elvern18"},"content":"        assertEquals(new EditByIndexCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_undo() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"joellow88"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD) instanceof UndoCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"joellow88"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD + \" 3\") instanceof UndoCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_redo() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"joellow88"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD) instanceof RedoCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"joellow88"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD + \" 3\") instanceof RedoCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"joellow88"},"content":"    public void parseCommand_load() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"joellow88"},"content":"        assertTrue(parser.parseCommand(LoadCommand.COMMAND_WORD + \" PATH\") instanceof LoadCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"joellow88"},"content":"        assertTrue(parser.parseCommand(LoadCommand.COMMAND_WORD + \" !\") instanceof LoadCommand);","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"joellow88"},"content":"        assertThrows(UiInputRequiredException.class, () -\u003e parser.parseCommand(LoadCommand.COMMAND_WORD));","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"elvern18":2,"joellow88":26,"-":84}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"import java.util.List;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.commands.DeleteByNameCommand;","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.commands.DeleteMultipleIndexCommand;","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"elvern18"},"content":"import seedu.address.logic.commands.DeleteSingleIndexCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.person.NameContainsAllKeywordsPredicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"    public void parse_validArgs_returnsDeleteSingleIndexCommand() {","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"elvern18"},"content":"        assertParseSuccess(parser, \"1\", new DeleteSingleIndexCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"    public void parse_validArgs_returnsDeleteMultipleIndexCommand() {","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"        assertParseSuccess(parser, \"1,2,3\", new DeleteMultipleIndexCommand(","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"joellow88"},"content":"                List.of(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON, INDEX_THIRD_PERSON)));","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"joellow88"},"content":"    public void parse_validArgs_returnsDeleteByNameCommand() {","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"joellow88"},"content":"        assertParseSuccess(parser, \"John Doe\",","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"joellow88"},"content":"                new DeleteByNameCommand(new NameContainsAllKeywordsPredicate(List.of(\"John\", \"Doe\"))));","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"elvern18":2,"joellow88":15,"-":25}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":35,"author":{"gitId":"joellow88"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"elvern18"},"content":"import seedu.address.logic.commands.EditByIndexCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.commands.EditByNameCommand;","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.person.NameContainsAllKeywordsPredicate;","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"elvern18"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"elvern18"},"content":"        assertParseFailure(parser, \"1 some random string\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"elvern18"},"content":"        assertParseFailure(parser, \"1 i/ string\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2023-03-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":80,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"joellow88"},"content":"    public void parse_namePreamble_success() {","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"joellow88"},"content":"        assertParseSuccess(parser, VALID_NAME_AMY + NAME_DESC_BOB,","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"joellow88"},"content":"                new EditByNameCommand(","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"joellow88"},"content":"                        new NameContainsAllKeywordsPredicate(Arrays.asList(VALID_NAME_AMY.split(\"\\\\s\"))),","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"joellow88"},"content":"                        new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build()));","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"elvern18"},"content":"        EditCommand expectedCommand \u003d new EditByIndexCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"elvern18"},"content":"        EditCommand expectedCommand \u003d new EditByIndexCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"elvern18"},"content":"        EditCommand expectedCommand \u003d new EditByIndexCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"elvern18"},"content":"        expectedCommand \u003d new EditByIndexCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"elvern18"},"content":"        expectedCommand \u003d new EditByIndexCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"elvern18"},"content":"        expectedCommand \u003d new EditByIndexCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"elvern18"},"content":"        expectedCommand \u003d new EditByIndexCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"elvern18"},"content":"        EditCommand expectedCommand \u003d new EditByIndexCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"elvern18"},"content":"        EditCommand expectedCommand \u003d new EditByIndexCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"elvern18"},"content":"        expectedCommand \u003d new EditByIndexCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"elvern18"},"content":"        EditCommand expectedCommand \u003d new EditByIndexCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"elvern18":15,"joellow88":13,"-":189}},{"path":"src/test/java/seedu/address/logic/parser/FilterCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Acerizm"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"Acerizm"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"Acerizm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Acerizm"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"Acerizm"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Acerizm"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Acerizm"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Acerizm"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Acerizm"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"Acerizm"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"Acerizm"},"content":"import seedu.address.logic.commands.FilterCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.person.ContactContainsDescriptionPredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.person.ContactContainsEmailPredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.person.ContactContainsPhoneNumberPredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.person.ContactContainsTagPredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"Acerizm"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"Acerizm"},"content":"public class FilterCommandParserTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"Acerizm"},"content":"    private FilterCommandParser parser \u003d new FilterCommandParser();","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"Acerizm"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"Acerizm"},"content":"    public void parse_multipleArgs_returnsError() {","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"        assertParseFailure(parser, \"filter n/Alex t/family\",","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"Acerizm"},"content":"     * Test if the parser does not work when multiple name arguments are given","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"Acerizm"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"Acerizm"},"content":"    public void parse_multipleNameArgs_returnsError() {","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"Acerizm"},"content":"        assertParseFailure(parser, \"filter n/Alex n/Megan\",","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"Acerizm"},"content":"               String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"Acerizm"},"content":"     * Test if the parser does not work when multiple phone arguments are given","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"Acerizm"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"Acerizm"},"content":"    public void parse_multiplePhoneArgs_returnsError() {","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"Acerizm"},"content":"        assertParseFailure(parser, \"filter p/90069637 p/91899654\",","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"Acerizm"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"Acerizm"},"content":"     * Test if the parser does not work when multiple email arguments are given","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"Acerizm"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"Acerizm"},"content":"    public void parse_multipleEmailArgs_returnsError() {","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"Acerizm"},"content":"        assertParseFailure(parser, \"filter e/gg@gmail.com e/what@hotmail.com\",","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"Acerizm"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"Acerizm"},"content":"     * Test if the parser does not work when multiple description arguments are given","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"Acerizm"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"Acerizm"},"content":"    public void parse_multipleDescArgs_returnsError() {","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"Acerizm"},"content":"        assertParseFailure(parser, \"filter d/what is this d/no idea\",","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"Acerizm"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"Acerizm"},"content":"     * Test if the parser works with a single name argument that can","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"Acerizm"},"content":"     * either have 1 name or multiple different names","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"Acerizm"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"Acerizm"},"content":"    public void parse_singleNameArg_returnsFilterCommand() {","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"Acerizm"},"content":"        List\u003cString\u003e firstKeywordList \u003d new ArrayList\u003cString\u003e(Arrays.asList(\"Alex\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"Acerizm"},"content":"        List\u003cString\u003e secondKeywordList \u003d new ArrayList\u003cString\u003e(Arrays.asList(\"Alex\", \"Bernice\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"Acerizm"},"content":"        FilterCommand expectedFilterCommand \u003d new FilterCommand(new NameContainsKeywordsPredicate(firstKeywordList));","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"Acerizm"},"content":"        FilterCommand expectedSecondFilterCommand \u003d new FilterCommand(","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"Acerizm"},"content":"                new NameContainsKeywordsPredicate(secondKeywordList));","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"Acerizm"},"content":"        assertParseSuccess(parser, \"filter n/Alex\", expectedFilterCommand);","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"Acerizm"},"content":"        assertParseSuccess(parser, \"filter n/Alex Bernice\", expectedSecondFilterCommand);","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"Acerizm"},"content":"     * Test if the parser works with a single phone argument","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"Acerizm"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"Acerizm"},"content":"    public void parse_singlePhoneArg_returnsFilterCommand() {","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"Acerizm"},"content":"        FilterCommand expectedFilterCommand \u003d new FilterCommand(","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"Acerizm"},"content":"                new ContactContainsPhoneNumberPredicate(\"90069637\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"Acerizm"},"content":"        assertParseSuccess(parser, \"filter p/90069637\", expectedFilterCommand);","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"Acerizm"},"content":"     * Test if the parser fails with a single phone argument if","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"Acerizm"},"content":"     * multiple phone numbers are given","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"Acerizm"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"Acerizm"},"content":"    public void parse_singlePhoneArgMultipleNum_returnsError() {","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"Acerizm"},"content":"        assertParseFailure(parser, \"filter p/90069637 p/99999999\",","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"Acerizm"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"Acerizm"},"content":"     * Test if the parser works with a single email address","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"Acerizm"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"Acerizm"},"content":"    public void parse_singleEmailArg_returnsFilterCommand() {","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"Acerizm"},"content":"        FilterCommand expectedFilterCommand \u003d new FilterCommand(","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"Acerizm"},"content":"                new ContactContainsEmailPredicate(\"gg@gmail.com\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"Acerizm"},"content":"        assertParseSuccess(parser, \"filter e/gg@gmail.com\", expectedFilterCommand);","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"Acerizm"},"content":"     * Test if the parser fails with a single email address","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"Acerizm"},"content":"     * if multiple emails are given","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"Acerizm"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"Acerizm"},"content":"    public void parse_singleEmailArgMultipleEmails_returnsError() {","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"Acerizm"},"content":"        assertParseFailure(parser, \"filter e/gg@gmail.com what@gmail.com\",","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"Acerizm"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"Acerizm"},"content":"     * Test if the parser works with a single description argument","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"Acerizm"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"Acerizm"},"content":"    public void parse_singleDescriptionArg_returnsFilterCommand() {","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"Acerizm"},"content":"        FilterCommand expectedFilterCommand \u003d new FilterCommand(","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"Acerizm"},"content":"                new ContactContainsDescriptionPredicate(\"Testing 123 hehe\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"Acerizm"},"content":"        assertParseSuccess(parser, \"filter d/Testing 123 hehe\", expectedFilterCommand);","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"Acerizm"},"content":"     * Test if the parser works with multiple tags passed as arguments","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":137,"author":{"gitId":"Acerizm"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":138,"author":{"gitId":"Acerizm"},"content":"    public void parse_multipleTagArgs_returnsFilterCommand() {","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"Acerizm"},"content":"        Set\u003cTag\u003e multipleTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"Acerizm"},"content":"        multipleTags.add(new Tag(\"family\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":141,"author":{"gitId":"Acerizm"},"content":"        multipleTags.add(new Tag(\"friends\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"Acerizm"},"content":"        FilterCommand expectedFilterCommand \u003d new FilterCommand(new ContactContainsTagPredicate(multipleTags));","lastModifiedDate":"2023-03-15"},{"lineNumber":143,"author":{"gitId":"Acerizm"},"content":"        assertParseSuccess(parser, \"filter t/family t/friends\", expectedFilterCommand);","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":145,"author":{"gitId":"Acerizm"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"Acerizm"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"Acerizm"},"content":"     * Test if the parser fails to run when no arguments are given","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"Acerizm"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"Acerizm"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"Acerizm"},"content":"    public void parse_emptyArgs_returnsError() {","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"Acerizm"},"content":"        assertParseFailure(parser, \"filter \",","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"Acerizm"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FilterCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":153,"author":{"gitId":"Acerizm"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"Acerizm"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"Acerizm":154}},{"path":"src/test/java/seedu/address/logic/parser/LoadCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.commands.LoadCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"import seedu.address.logic.parser.exceptions.UiInputRequiredException;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"class LoadCommandParserTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"    private static final String TEST_PATH \u003d \"C:\\\\Users\\\\joellow88\\\\Desktop\\\\Modules\\\\CS2103\\\\tp\\\\src\\\\test\\\\data\"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"            + \"\\\\JsonAddressBookStorageTest\\\\ValidAddressBook1.json\";","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"    void parse_noInput() {","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"        assertThrows(UiInputRequiredException.class, () -\u003e new LoadCommandParser().parse(\"\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"    void parse_noPath() {","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"            assertEquals(new LoadCommand(null), new LoadCommandParser().parse(\"!\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"            fail();","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"    void parse_invalidPath() {","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"            assertEquals(new LoadCommand(\"INVALID PATH\"), new LoadCommandParser().parse(\"INVALID PATH\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"joellow88"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"joellow88"},"content":"            fail();","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"joellow88"},"content":"    void parse_validPath() {","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"joellow88"},"content":"        try {","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"joellow88"},"content":"            assertEquals(","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"joellow88"},"content":"                    new LoadCommand(TEST_PATH),","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"joellow88"},"content":"                    new LoadCommandParser().parse(TEST_PATH));","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"joellow88"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"joellow88"},"content":"            fail();","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"joellow88"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"joellow88":49}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"joellow88"},"content":"    public void combine_differentAddressBook() {","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"joellow88"},"content":"        modelManager.combine(TypicalPersons.getTypicalAddressBook(), \"DUMMY PATH\");","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"joellow88"},"content":"        assertEquals(modelManager.getAddressBook(), TypicalPersons.getTypicalAddressBook());","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"joellow88"},"content":"    public void combine_sameAddressBook() {","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"joellow88"},"content":"        modelManager.setAddressBook(TypicalPersons.getTypicalAddressBook());","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"joellow88"},"content":"        modelManager.combine(TypicalPersons.getTypicalAddressBook(), \"DUMMY PATH\");","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"joellow88"},"content":"        assertEquals(modelManager.getAddressBook(), TypicalPersons.getTypicalAddressBook());","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"joellow88"},"content":"    public void combine_partiallySimilarAddressBook() {","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"joellow88"},"content":"        AddressBook ab1 \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"joellow88"},"content":"                new AddressBookBuilder()","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"joellow88"},"content":"                        .withPerson(TypicalPersons.ALICE)","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"joellow88"},"content":"                        .withPerson(TypicalPersons.BOB)","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"joellow88"},"content":"                        .withPerson(TypicalPersons.CARL)","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"joellow88"},"content":"                        .build();","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"joellow88"},"content":"        AddressBook ab2 \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"joellow88"},"content":"                new AddressBookBuilder()","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"joellow88"},"content":"                        .withPerson(TypicalPersons.CARL)","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"joellow88"},"content":"                        .withPerson(TypicalPersons.DANIEL)","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"joellow88"},"content":"                        .withPerson(TypicalPersons.ELLE)","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"joellow88"},"content":"                        .build();","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"joellow88"},"content":"        AddressBook abExpected \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"joellow88"},"content":"                new AddressBookBuilder()","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"joellow88"},"content":"                        .withPerson(TypicalPersons.ALICE)","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"joellow88"},"content":"                        .withPerson(TypicalPersons.BOB)","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"joellow88"},"content":"                        .withPerson(TypicalPersons.CARL)","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"joellow88"},"content":"                        .withPerson(TypicalPersons.DANIEL)","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"joellow88"},"content":"                        .withPerson(TypicalPersons.ELLE)","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"joellow88"},"content":"                        .build();","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"joellow88"},"content":"        modelManager.setAddressBook(ab1);","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"joellow88"},"content":"        modelManager.combine(ab2, \"DUMMY PATH\");","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"joellow88"},"content":"        assertEquals(modelManager.getAddressBook(), abExpected);","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"joellow88"},"content":"    public void combine_sameNameButDifferentDetailsAddressBook() {","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"joellow88"},"content":"        Person p1 \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"joellow88"},"content":"                new PersonBuilder()","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"joellow88"},"content":"                        .withName(\"Xiao Ming\")","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"joellow88"},"content":"                        .withPhone(\"99999999\")","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"joellow88"},"content":"                        .withEmail(\"XiaoMing@email.com\")","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"joellow88"},"content":"                        .withAddress(\"Dummy address\")","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"joellow88"},"content":"                        .withTags(\"friend\")","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"joellow88"},"content":"                        .build();","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"joellow88"},"content":"        Person p2 \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"joellow88"},"content":"                new PersonBuilder()","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"joellow88"},"content":"                        .withName(\"Xiao Ming\")","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"joellow88"},"content":"                        .withPhone(\"90000000\")","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"joellow88"},"content":"                        .withEmail(\"XiaoMing@yahoo.com\")","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"joellow88"},"content":"                        .withAddress(\"Dummy address\")","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"joellow88"},"content":"                        .withTags(\"enemy\")","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"joellow88"},"content":"                        .build();","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"joellow88"},"content":"        AddressBook ab1 \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"joellow88"},"content":"                new AddressBookBuilder()","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"joellow88"},"content":"                        .withPerson(p1)","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"joellow88"},"content":"                        .build();","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"joellow88"},"content":"        AddressBook ab2 \u003d","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"joellow88"},"content":"                new AddressBookBuilder()","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"joellow88"},"content":"                        .withPerson(p2)","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"joellow88"},"content":"                        .build();","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"joellow88"},"content":"        modelManager.setAddressBook(ab1);","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"joellow88"},"content":"        modelManager.combine(ab2, \"DUMMY PATH\");","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"joellow88"},"content":"        assertEquals(modelManager.getAddressBook(), ab1);","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"Acerizm"},"content":"        UserData userData \u003d new UserData();","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"Acerizm"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, userData);","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"Acerizm"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, userData);","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"Acerizm"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs, userData)));","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":197,"author":{"gitId":"Acerizm"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, userData)));","lastModifiedDate":"2023-03-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":205,"author":{"gitId":"Acerizm"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs, userData)));","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"joellow88":74,"-":127,"Acerizm":6}},{"path":"src/test/java/seedu/address/model/UndoManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"import static org.junit.jupiter.api.Assertions.assertNotSame;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"import javafx.util.Pair;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"class UndoManagerTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"    private static final String TEST_COMMAND_ONE \u003d \"TEST COMMAND ONE\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"    private static final String TEST_COMMAND_TWO \u003d \"TEST COMMAND TWO\";","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"    private static final String TEST_COMMAND_THREE \u003d \"TEST COMMAND THREE\";","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"    private UndoManager undoManager \u003d new UndoManager(new AddressBook(), 5);","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"    void addToHistory() {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"        AddressBook ab \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(ab, TEST_COMMAND_ONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"        assertEquals(undoManager.getCurrentState(), ab);","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"        assertNotSame(undoManager.getCurrentState(), ab);","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"        ab.addPerson(TypicalPersons.IDA);","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(ab, TEST_COMMAND_TWO);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"        assertEquals(undoManager.getCurrentState(), ab);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"joellow88"},"content":"        assertNotSame(undoManager.getCurrentState(), ab);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"    void deleteUntrackedHead() {","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"joellow88"},"content":"    void hasUndoableCommand_undoableCommandPresent_returnTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(TypicalPersons.getTypicalAddressBook(), TEST_COMMAND_ONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"joellow88"},"content":"        assertTrue(undoManager.hasUndoableCommand());","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(new AddressBookBuilder().withPerson(TypicalPersons.CARL).build(), TEST_COMMAND_ONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(new AddressBookBuilder().withPerson(TypicalPersons.ALICE).build(), TEST_COMMAND_TWO);","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(new AddressBookBuilder().withPerson(TypicalPersons.BOB).build(), TEST_COMMAND_THREE);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"joellow88"},"content":"        assertTrue(undoManager.hasUndoableCommand());","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"joellow88"},"content":"    void hasUndoableCommand_previousHistoryGotten_returnTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(new AddressBookBuilder().withPerson(TypicalPersons.CARL).build(), TEST_COMMAND_ONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(new AddressBookBuilder().withPerson(TypicalPersons.ALICE).build(), TEST_COMMAND_TWO);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(new AddressBookBuilder().withPerson(TypicalPersons.BOB).build(), TEST_COMMAND_THREE);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"joellow88"},"content":"        undoManager.getPreviousHistory();","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"joellow88"},"content":"        assertTrue(undoManager.hasUndoableCommand());","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"joellow88"},"content":"    void hasUndoableCommand_undoableCommandNotPresent_returnFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"joellow88"},"content":"        assertFalse(undoManager.hasUndoableCommand());","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(TypicalPersons.getTypicalAddressBook(), TEST_COMMAND_ONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"joellow88"},"content":"        undoManager.getPreviousHistory();","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"joellow88"},"content":"        assertFalse(undoManager.hasUndoableCommand());","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"joellow88"},"content":"    void hasUndoableCommand_previousHistoryGotten_returnFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(TypicalPersons.getTypicalAddressBook(), TEST_COMMAND_ONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"joellow88"},"content":"        undoManager.getPreviousHistory();","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"joellow88"},"content":"        assertFalse(undoManager.hasUndoableCommand());","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"joellow88"},"content":"    void hasRedoableCommand_redoableCommandNotPresent_returnFalse() {","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"joellow88"},"content":"        assertFalse(undoManager.hasRedoableCommand());","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(new AddressBookBuilder().withPerson(TypicalPersons.CARL).build(), TEST_COMMAND_ONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(new AddressBookBuilder().withPerson(TypicalPersons.ALICE).build(), TEST_COMMAND_TWO);","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(new AddressBookBuilder().withPerson(TypicalPersons.BOB).build(), TEST_COMMAND_THREE);","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"joellow88"},"content":"        assertFalse(undoManager.hasRedoableCommand());","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"joellow88"},"content":"    void hasRedoableCommand_redoableCommandPresent_returnTrue() {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(new AddressBookBuilder().withPerson(TypicalPersons.CARL).build(), TEST_COMMAND_ONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(new AddressBookBuilder().withPerson(TypicalPersons.ALICE).build(), TEST_COMMAND_TWO);","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(new AddressBookBuilder().withPerson(TypicalPersons.BOB).build(), TEST_COMMAND_THREE);","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"joellow88"},"content":"        undoManager.getPreviousHistory();","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"joellow88"},"content":"        assertTrue(undoManager.hasRedoableCommand());","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"joellow88"},"content":"    void getPreviousHistory() {","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(new AddressBookBuilder().withPerson(TypicalPersons.CARL).build(), TEST_COMMAND_ONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(new AddressBookBuilder().withPerson(TypicalPersons.ALICE).build(), TEST_COMMAND_TWO);","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(new AddressBookBuilder().withPerson(TypicalPersons.BOB).build(), TEST_COMMAND_THREE);","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"joellow88"},"content":"        Pair\u003cAddressBook, String\u003e previousHistory \u003d undoManager.getPreviousHistory();","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"joellow88"},"content":"        assertEquals(previousHistory.getKey(), new AddressBookBuilder().withPerson(TypicalPersons.ALICE).build());","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"joellow88"},"content":"        assertEquals(previousHistory.getValue(), TEST_COMMAND_THREE);","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"joellow88"},"content":"    void getNextHistory() {","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(new AddressBookBuilder().withPerson(TypicalPersons.CARL).build(), TEST_COMMAND_ONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(new AddressBookBuilder().withPerson(TypicalPersons.ALICE).build(), TEST_COMMAND_TWO);","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"joellow88"},"content":"        undoManager.addToHistory(new AddressBookBuilder().withPerson(TypicalPersons.BOB).build(), TEST_COMMAND_THREE);","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"joellow88"},"content":"        undoManager.getPreviousHistory();","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"joellow88"},"content":"        Pair\u003cAddressBook, String\u003e previousHistory \u003d undoManager.getNextHistory();","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"joellow88"},"content":"        assertEquals(previousHistory.getKey(), new AddressBookBuilder().withPerson(TypicalPersons.BOB).build());","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"joellow88"},"content":"        assertEquals(previousHistory.getValue(), TEST_COMMAND_THREE);","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"joellow88":106}},{"path":"src/test/java/seedu/address/model/person/NameContainsAllKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"joellow88"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"joellow88"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"joellow88"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"joellow88"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"joellow88"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"joellow88"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"joellow88"},"content":"class NameContainsAllKeywordsPredicateTest {","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"joellow88"},"content":"    public void test_nameContainsAllKeywords_returnsTrue() {","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"joellow88"},"content":"        // All keywords match exactly","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"joellow88"},"content":"        NameContainsAllKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"joellow88"},"content":"                new NameContainsAllKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"joellow88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"joellow88"},"content":"        // One keyword only","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"joellow88"},"content":"        predicate \u003d new NameContainsAllKeywordsPredicate(Arrays.asList(\"Alice\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"joellow88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"joellow88"},"content":"        // All keywords match, with longer name","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"joellow88"},"content":"        predicate \u003d new NameContainsAllKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"joellow88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Bob Alice Carol\").build()));","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"joellow88"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"joellow88"},"content":"        predicate \u003d new NameContainsAllKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"joellow88"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"joellow88"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"joellow88"},"content":"    public void test_nameDoesNotContainAllKeywords_returnsFalse() {","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"joellow88"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"joellow88"},"content":"        NameContainsAllKeywordsPredicate predicate \u003d new NameContainsAllKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"joellow88"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"joellow88"},"content":"        // Partially matching keyword, multiple keywords","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"joellow88"},"content":"        predicate \u003d new NameContainsAllKeywordsPredicate(Arrays.asList(\"Carol\", \"Lewis\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"joellow88"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Carol\").build()));","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"joellow88"},"content":"        // Partially matching keyword, multi-word name","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"joellow88"},"content":"        predicate \u003d new NameContainsAllKeywordsPredicate(Arrays.asList(\"Carol\", \"Lewis\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"joellow88"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"joellow88"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"joellow88"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"joellow88"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"joellow88":49}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"Statspadders"},"content":"    private static final List\u003cJsonAdaptedModuleTag\u003e VALID_MODULE_TAGS \u003d BENSON.getModuleTags().stream()","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Statspadders"},"content":"            .map(JsonAdaptedModuleTag::new)","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"Statspadders"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"Statspadders"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"Statspadders"},"content":"                        VALID_MODULE_TAGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"Statspadders"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Statspadders"},"content":"                VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"Statspadders"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"Statspadders"},"content":"                        VALID_MODULE_TAGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"Statspadders"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"Statspadders"},"content":"                VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"Statspadders"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"Statspadders"},"content":"                        VALID_MODULE_TAGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"Statspadders"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"Statspadders"},"content":"                VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"Statspadders"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS,","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"Statspadders"},"content":"                        VALID_MODULE_TAGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"Statspadders"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"Statspadders"},"content":"                VALID_TAGS, VALID_MODULE_TAGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"Statspadders"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags,","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"Statspadders"},"content":"                        VALID_MODULE_TAGS);","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":101,"Statspadders":21}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"Acerizm"},"content":"        JsonUserDataStorage userDataStorage \u003d new JsonUserDataStorage(getTempFilePath(\"userdata\"));","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"Acerizm"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage, userDataStorage);","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":67,"Acerizm":2}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"Statspadders"},"content":"import seedu.address.model.tag.ModuleTag;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"Statspadders"},"content":"    private Set\u003cModuleTag\u003e moduleTags;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"Gibson0918"},"content":"    private boolean hidden;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"Statspadders"},"content":"        moduleTags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"Gibson0918"},"content":"        hidden \u003d true;","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"Statspadders"},"content":"        moduleTags \u003d new HashSet\u003c\u003e(personToCopy.getModuleTags());","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"Gibson0918"},"content":"        hidden \u003d personToCopy.getHidden();","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"Statspadders"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"Statspadders"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"Statspadders"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"Statspadders"},"content":"    public PersonBuilder withModuleTags(String ... tags) {","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"Statspadders"},"content":"        this.moduleTags \u003d SampleDataUtil.getModuleTagSet(tags);","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"Statspadders"},"content":"        return this;","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"Statspadders"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"Statspadders"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":108,"author":{"gitId":"Statspadders"},"content":"        return new Person(name, phone, email, address, tags, moduleTags);","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"-":95,"Statspadders":13,"Gibson0918":3}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"Statspadders"},"content":"            .withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"Statspadders"},"content":"            .withModuleTags(\"CS2103\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"-":75,"Statspadders":2}}]
