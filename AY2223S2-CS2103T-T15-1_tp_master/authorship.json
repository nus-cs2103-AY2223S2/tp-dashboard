[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"roultitude"},"content":"* Reroll is an **entity management app targeted at tabletop RPG players**.\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"roultitude"},"content":"* Reroll aims to provide ease of creation, organisation and management of character, item and monster stat sheets in a quick and intuitive manner.","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"roultitude"},"content":" ","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"roultitude"},"content":"* Example usages:","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"roultitude"},"content":"  * to store the character sheet for a player\u0027s next game","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"roultitude"},"content":"  * for a Dungeon Master to store and organize the monsters and items for their ongoing campaign","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"roultitude"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"roultitude":10,"-":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"You can reach us at the email `seer[at]comp.nus.edu.sg`","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"### Damith","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/johndoe.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2020-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[[homepage](http://www.comp.nus.edu.sg/~damithch)]","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"[[github](https://github.com/johndoe)]","lastModifiedDate":"2020-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"[[portfolio](team/johndoe.md)]","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"- Role: Project Advisor","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"Zeli0"},"content":"### Zi-Yi Elijah Ku","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"Zeli0"},"content":"\u003cimg src\u003d\"images/zeli0.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"Zeli0"},"content":"[[github](http://github.com/Zeli0)]","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Zeli0"},"content":"[[portfolio](team/zeli0.md)]","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"Zeli0"},"content":"- Role: Developer","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Zeli0"},"content":"- Responsibilities: ","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"LeonardYam"},"content":"### Leonard Yam","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"LeonardYam"},"content":"\u003cimg src\u003d\"images/leonardyam.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"LeonardYam"},"content":"[[github](http://github.com/leonardyam)] ","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"LeonardYam"},"content":"[[portfolio](team/leonardyam.md)]","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"AngJunYang"},"content":"- Role: Developer","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"LeonardYam"},"content":"- Responsibilities: ","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"jiexuanc"},"content":"### Chai Jiexuan","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"jiexuanc"},"content":"\u003cimg src\u003d\"images/jiexuanc.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"jiexuanc"},"content":"[[github](http://github.com/jiexuanc)]","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"jiexuanc"},"content":"[[portfolio](team/jiexuanc.md)]","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"AngJunYang"},"content":"- Role: Developer","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"jiexuanc"},"content":"- Responsibilities:","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"AngJunYang"},"content":"### Ang Jun Yang","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"Zeli0"},"content":"\u003cimg src\u003d\"images/Ang_Jun_Yang.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"AngJunYang"},"content":"[[github](https://github.com/AngJunYang)]","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"AngJunYang"},"content":"[[portfolio](team/junyang.md)]","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"AngJunYang"},"content":"- Role: Developer","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"AngJunYang"},"content":"- Responsibilities:","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"roultitude"},"content":"### Troy Tim","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"Zeli0"},"content":"\u003cimg src\u003d\"images/Troy_Tim.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"roultitude"},"content":"[[github](https://github.com/roultitude)]","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"roultitude"},"content":"[[portfolio](team/roultitude.md)]","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"roultitude"},"content":"- Role: Developer","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"roultitude"},"content":"- Responsibilities:","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"roultitude":9,"jiexuanc":5,"AngJunYang":8,"-":35,"LeonardYam":6,"Zeli0":8}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"roultitude"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a entity).","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"roultitude"},"content":"Step 2. The user executes `delete 5` command to delete the 5th entity in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2023-03-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"roultitude"},"content":"Step 3. The user executes `add n/David …​` to add a new entity. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2023-03-16"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"roultitude"},"content":"Step 4. The user now decides that adding the entity was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-03-16"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"roultitude"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the entity being deleted).","lastModifiedDate":"2023-03-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"Zeli0"},"content":"Our key target user group is Table-Top Role Playing Game(TTRPG) players looking for a powerful entity management system for their gameplay.","lastModifiedDate":"2023-03-06"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"Zeli0"},"content":"The people in our user group who would benefit most from this product generally would have the following qualities:","lastModifiedDate":"2023-03-06"},{"lineNumber":263,"author":{"gitId":"Zeli0"},"content":"* Need or struggle to store large repository of past ideas, including story, characters, monsters and items","lastModifiedDate":"2023-03-06"},{"lineNumber":264,"author":{"gitId":"Zeli0"},"content":"* Type fast and prefer CLI","lastModifiedDate":"2023-03-06"},{"lineNumber":265,"author":{"gitId":"Zeli0"},"content":"* Need inspiration for character, item and monster creation that a randomizer would help address","lastModifiedDate":"2023-03-06"},{"lineNumber":266,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":267,"author":{"gitId":"Zeli0"},"content":"**Value proposition**: ","lastModifiedDate":"2023-03-06"},{"lineNumber":268,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":269,"author":{"gitId":"Zeli0"},"content":"Our product is a more expansive and well-organized system capable of managing TTRPG entities better than a traditional pen and paper format.","lastModifiedDate":"2023-03-06"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"| Priority | As a …​                 | I want to …​                                                                | So that I can…​                                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"Zeli0"},"content":"|----------|-------------------------|-----------------------------------------------------------------------------|------------------------------------------------------------------------|","lastModifiedDate":"2023-03-06"},{"lineNumber":278,"author":{"gitId":"Zeli0"},"content":"| `* * *`  | TTRPG facilitator       | add entity                                                                  | have entities                                                          |","lastModifiedDate":"2023-03-06"},{"lineNumber":279,"author":{"gitId":"Zeli0"},"content":"| `* * *`  | TTRPG facilitator       | edit entity stats                                                           | update stats over time                                                 |","lastModifiedDate":"2023-03-06"},{"lineNumber":280,"author":{"gitId":"Zeli0"},"content":"| `* * *`  | TTRPG facilitator       | delete entity                                                               | remove unwanted entities                                               |","lastModifiedDate":"2023-03-06"},{"lineNumber":281,"author":{"gitId":"roultitude"},"content":"| `* * *`  | TTRPG player            | save my character sheets                                                    | locate details of entities without having to go through the entire list |","lastModifiedDate":"2023-03-16"},{"lineNumber":282,"author":{"gitId":"Zeli0"},"content":"| `* * *`  | TTRPG player            | hide private contact details                                                | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2023-03-06"},{"lineNumber":283,"author":{"gitId":"Zeli0"},"content":"| `* * `   | new user                | get more help on commands                                                   | learn how to use the app                                               |","lastModifiedDate":"2023-03-06"},{"lineNumber":284,"author":{"gitId":"Zeli0"},"content":"| `* *`    | TTRPG facilitator       | search for specific entities                                                | get details of a desired entity                                        |","lastModifiedDate":"2023-03-06"},{"lineNumber":285,"author":{"gitId":"Zeli0"},"content":"| `* *`    | TTRPG facilitator       | sort and filter entity sheets by various tags and categories                | have easy access to similar entities                                   |","lastModifiedDate":"2023-03-06"},{"lineNumber":286,"author":{"gitId":"Zeli0"},"content":"| `* *`    | TTRPG facilitator       | tag Creature and Character sheets                                           | organize entities into groups for easier locating                      |","lastModifiedDate":"2023-03-06"},{"lineNumber":287,"author":{"gitId":"Zeli0"},"content":"| `* *`    | TTRPG facilitator       | track the effects of rests(restoration actions) on my players               | automate the process                                                   |","lastModifiedDate":"2023-03-06"},{"lineNumber":288,"author":{"gitId":"Zeli0"},"content":"| `* *`    | TTRPG facilitator       | quickly refer to the instructions                                           | easily settle disputes in my players                                   |","lastModifiedDate":"2023-03-06"},{"lineNumber":289,"author":{"gitId":"Zeli0"},"content":"| `* *`    | TTRPG facilitator       | design custom Scenario on the fly                                           | have easy reference to relevant entities                               |","lastModifiedDate":"2023-03-06"},{"lineNumber":290,"author":{"gitId":"Zeli0"},"content":"| `* *`    | TTRPG player            | access the character templates                                              | have an idea of what is needed during character creation               |","lastModifiedDate":"2023-03-06"},{"lineNumber":291,"author":{"gitId":"Zeli0"},"content":"| `* *`    | TTRPG player            | quickly create a character sheet myself and send it to the RPG facilitator  | allow the facilitator easy access to my character                      |","lastModifiedDate":"2023-03-06"},{"lineNumber":292,"author":{"gitId":"Zeli0"},"content":"| `* *`    | TTRPG Scenario Designer | save ideas for various entities when they occur to me                       | have a store of ideas and WIP concepts                                 |","lastModifiedDate":"2023-03-06"},{"lineNumber":293,"author":{"gitId":"Zeli0"},"content":"| `*`      | new user                | play around with sample data                                                | experience the features of the app                                     |","lastModifiedDate":"2023-03-06"},{"lineNumber":294,"author":{"gitId":"Zeli0"},"content":"| `*`      | TTRPG facilitator       | import files created by others                                              | make use of entities others have created                               |","lastModifiedDate":"2023-03-06"},{"lineNumber":295,"author":{"gitId":"Zeli0"},"content":"| `*`      | TTRPG facilitator       | input my dice rolls                                                         | automatically calculate roll effects                                   |","lastModifiedDate":"2023-03-06"},{"lineNumber":296,"author":{"gitId":"Zeli0"},"content":"| `*`      | TTRPG facilitator       | use digital dice                                                            | do not rely on physical dice                                           |","lastModifiedDate":"2023-03-06"},{"lineNumber":297,"author":{"gitId":"Zeli0"},"content":"| `*`      | TTRPG facilitator       | randomize stats of entities                                                 | generate different entities automatically                              |","lastModifiedDate":"2023-03-06"},{"lineNumber":298,"author":{"gitId":"Zeli0"},"content":"| `*`      | TTRPG facilitator       | change the instructions sheet                                               | easily implement house rules                                           |","lastModifiedDate":"2023-03-06"},{"lineNumber":299,"author":{"gitId":"Zeli0"},"content":"| `*`      | TTRPG facilitator       | organise DnD games digitally                                                | conduct a session without a physical venue                             |","lastModifiedDate":"2023-03-06"},{"lineNumber":300,"author":{"gitId":"Zeli0"},"content":"| `*`      | TTRPG player            | import my character sheet from the TTRPG facilitator                        | have easy access to a usable character                                 |","lastModifiedDate":"2023-03-06"},{"lineNumber":301,"author":{"gitId":"Zeli0"},"content":"| `*`      | TTRPG player            | read up on the character sheets my RPG facilitator has made in my own timev | refresh my memory easily                                               |","lastModifiedDate":"2023-03-06"},{"lineNumber":302,"author":{"gitId":"Zeli0"},"content":"| `*`      | TTRPG player            | refresh my knowledge of game rules by reading the instructions              | play without an external copy of the rules                             |","lastModifiedDate":"2023-03-06"},{"lineNumber":303,"author":{"gitId":"Zeli0"},"content":"| `*`      | TTRPG player            | view logs of the entities                                                   | keep up with history                                                   |","lastModifiedDate":"2023-03-06"},{"lineNumber":304,"author":{"gitId":"Zeli0"},"content":"| `*`      | TTRPG player            | catch up on the story so far by referring to the stored storyline recaps    | keep up to date with the story                                         |","lastModifiedDate":"2023-03-06"},{"lineNumber":305,"author":{"gitId":"Zeli0"},"content":"| `*`      | expert user             | enter short-form CLI commands                                               | so that I am more efficient                                            |","lastModifiedDate":"2023-03-06"},{"lineNumber":306,"author":{"gitId":"Zeli0"},"content":"| `*`      | experienced designer    | export to .txt files                                                        | so that others can use my creations                                    |","lastModifiedDate":"2023-03-06"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"Zeli0"},"content":"The user stories are not limited to those in this list. More can be added in the future as new features are developed.","lastModifiedDate":"2023-03-06"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"jiexuanc"},"content":"(For all use cases below, the **System** is the `Reroll` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-06"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"jiexuanc"},"content":"**Use case: Edit an entity**","lastModifiedDate":"2023-03-06"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"jiexuanc"},"content":"1. User requests to list entities based on classification","lastModifiedDate":"2023-03-06"},{"lineNumber":319,"author":{"gitId":"jiexuanc"},"content":"2. Reroll shows a list of entities","lastModifiedDate":"2023-03-06"},{"lineNumber":320,"author":{"gitId":"jiexuanc"},"content":"3. User enters edit mode for specified entity","lastModifiedDate":"2023-03-06"},{"lineNumber":321,"author":{"gitId":"jiexuanc"},"content":"4. User requests to replace specified field with new value","lastModifiedDate":"2023-03-06"},{"lineNumber":322,"author":{"gitId":"jiexuanc"},"content":"5. Reroll edits the specified entity and display it","lastModifiedDate":"2023-03-06"},{"lineNumber":323,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":324,"author":{"gitId":"jiexuanc"},"content":"   Steps 4-5 are repeated for as many fields as required.","lastModifiedDate":"2023-03-06"},{"lineNumber":325,"author":{"gitId":"jiexuanc"},"content":"6. User exits edit mode","lastModifiedDate":"2023-03-06"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":327,"author":{"gitId":"jiexuanc"},"content":"    Use case ends  ","lastModifiedDate":"2023-03-06"},{"lineNumber":328,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":329,"author":{"gitId":"jiexuanc"},"content":"**Extensions**","lastModifiedDate":"2023-03-06"},{"lineNumber":330,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":331,"author":{"gitId":"jiexuanc"},"content":"* 2a.The list is empty.","lastModifiedDate":"2023-03-06"},{"lineNumber":332,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":333,"author":{"gitId":"jiexuanc"},"content":"    Use case ends","lastModifiedDate":"2023-03-06"},{"lineNumber":334,"author":{"gitId":"jiexuanc"},"content":"* 3a. The given name is invalid","lastModifiedDate":"2023-03-06"},{"lineNumber":335,"author":{"gitId":"jiexuanc"},"content":"  * 3a1. Reroll shows an error message.","lastModifiedDate":"2023-03-06"},{"lineNumber":336,"author":{"gitId":"jiexuanc"},"content":"  ","lastModifiedDate":"2023-03-06"},{"lineNumber":337,"author":{"gitId":"jiexuanc"},"content":"    Use case resumes at step 2","lastModifiedDate":"2023-03-06"},{"lineNumber":338,"author":{"gitId":"jiexuanc"},"content":"* 4a. The given fields are invalid","lastModifiedDate":"2023-03-06"},{"lineNumber":339,"author":{"gitId":"jiexuanc"},"content":"  * 4a.1 Reroll shows an error message and exits edit mode","lastModifiedDate":"2023-03-06"},{"lineNumber":340,"author":{"gitId":"jiexuanc"},"content":"  ","lastModifiedDate":"2023-03-06"},{"lineNumber":341,"author":{"gitId":"jiexuanc"},"content":"    Use case resumes at step 2","lastModifiedDate":"2023-03-06"},{"lineNumber":342,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":343,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":344,"author":{"gitId":"jiexuanc"},"content":"**Use case: Delete an entity**","lastModifiedDate":"2023-03-06"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":346,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":348,"author":{"gitId":"jiexuanc"},"content":"1.  User requests to list entities based on classification","lastModifiedDate":"2023-03-06"},{"lineNumber":349,"author":{"gitId":"jiexuanc"},"content":"2.  Reroll shows a list of entities","lastModifiedDate":"2023-03-06"},{"lineNumber":350,"author":{"gitId":"jiexuanc"},"content":"3.  User requests to delete a specific entity in the list by name","lastModifiedDate":"2023-03-06"},{"lineNumber":351,"author":{"gitId":"jiexuanc"},"content":"4.  Reroll deletes the entity","lastModifiedDate":"2023-03-06"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":357,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"jiexuanc"},"content":"* 3a. The given name is invalid.","lastModifiedDate":"2023-03-06"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"jiexuanc"},"content":"    * 3a1. Reroll shows an error message.","lastModifiedDate":"2023-03-06"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":372,"author":{"gitId":"LeonardYam"},"content":"2. Should be able to hold up to 500 _entities_ without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-07"},{"lineNumber":373,"author":{"gitId":"-"},"content":"3. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"LeonardYam"},"content":"4. The application is not required to be compatible with any existing tracking applications.","lastModifiedDate":"2023-03-07"},{"lineNumber":375,"author":{"gitId":"LeonardYam"},"content":"5. The application should be usable by new players not familiar with RPG trackers.","lastModifiedDate":"2023-03-07"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":379,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"LeonardYam"},"content":"* **Entities**: General term for __characters__, _mobs_ and _items_","lastModifiedDate":"2023-03-07"},{"lineNumber":381,"author":{"gitId":"LeonardYam"},"content":"* **Characters**: Characters, typically humans, that are controlled by players participating in a table-top RPG game","lastModifiedDate":"2023-03-07"},{"lineNumber":382,"author":{"gitId":"LeonardYam"},"content":"* **Mobs**: Non-player characters (NPCS) that are typically monsters","lastModifiedDate":"2023-03-07"},{"lineNumber":383,"author":{"gitId":"LeonardYam"},"content":"* **Items**: Weapons, armor or tools that players can keep and use","lastModifiedDate":"2023-03-07"},{"lineNumber":384,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":393,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":397,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":399,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":403,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"roultitude"},"content":"### Deleting a entity","lastModifiedDate":"2023-03-16"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"roultitude"},"content":"1. Deleting a entity while all entities are being shown","lastModifiedDate":"2023-03-16"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"roultitude"},"content":"   1. Prerequisites: List all entities using the `list` command. Multiple entities in the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":419,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":422,"author":{"gitId":"roultitude"},"content":"      Expected: No entity is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-03-16"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"roultitude":10,"jiexuanc":34,"-":345,"LeonardYam":7,"Zeli0":39}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"roultitude"},"content":"Reroll is a **desktop app for managing tabletop RPG character, monster and item sheets, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Reroll can get your entity management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"roultitude"},"content":"1. Download the latest `reroll.jar` from [here](https://github.com/se-edu/addressbook-level3/releases).","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"roultitude"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for Reroll.","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"roultitude"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar reroll.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"roultitude"},"content":"   * `view mob` : Lists all monster sheets in the database.","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"roultitude"},"content":"   * `make char John Cena` : Adds a character sheet named `John Cena` to the database.","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"roultitude"},"content":"   * `kill char John Cena` : Deletes previously created character `John Cena`.","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"roultitude"},"content":"   * `clear` : Deletes all entity sheets.","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"roultitude"},"content":"  e.g. in `make CLASSIFICATION NAME`, `CLASSIFICATION` and `NAME` are parameters which can be used as `add item gilded dagger`.","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"roultitude"},"content":"* CLASSIFICATION can be the following: .\u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"roultitude"},"content":"  Item: `item`, Monster:`mob`, Character: `char`.","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Viewing help : `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"Format: `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"roultitude"},"content":"### Adding an entity: `make`","lastModifiedDate":"2023-03-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"roultitude"},"content":"Adds a new entity into the database.","lastModifiedDate":"2023-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"roultitude"},"content":"Format: `make CLASSIFICATION NAME`","lastModifiedDate":"2023-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"roultitude"},"content":"* `make char John Cena `","lastModifiedDate":"2023-03-07"},{"lineNumber":80,"author":{"gitId":"roultitude"},"content":"* `make item Sword`","lastModifiedDate":"2023-03-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"roultitude"},"content":"### Listing all entities of a classification : `view`","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"roultitude"},"content":"Shows a list of all entities in Reroll\u0027s database.","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"roultitude"},"content":"Format: `view CLASSIFICATION`","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"roultitude"},"content":"A detailed view of a single entity may be entered when specified.","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"roultitude"},"content":"Format: `view CLASSFICIATION NAME`","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"roultitude"},"content":"Detailed view may be left by entering the command: `back` or `b` while in detailed view.","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"roultitude"},"content":"### Editing a entity : `edit`","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"roultitude"},"content":"Enter into edit mode for the specified entity.","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"roultitude"},"content":"Format: `edit CLASSIFICATION NAME`","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"roultitude"},"content":"* In edit mode, changes can be made with the following format: \u003cbr\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"roultitude"},"content":"  * `FIELD NEW_VALUE`","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"roultitude"},"content":"  * e.g. `name gilded staff` or `hp 100`","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"roultitude"},"content":"  * If the specified field is unavailable (i.e. hp of an item), no values will be changed.","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"roultitude"},"content":"* Edit mode may be left by entering the command: `back` or `b` while in edit mode.","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"roultitude"},"content":"### Locating Entity by name: `find`","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"roultitude"},"content":"Finds Entity whose names contain any of the given keywords.","lastModifiedDate":"2023-03-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"Format: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"* Persons matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* `find John` returns `john` and `John Doe`","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"* `find alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"roultitude"},"content":"### Deleting an entity : `kill`","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"roultitude"},"content":"Deletes the specified entity from Reroll\u0027s database.","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"roultitude"},"content":"Format: `kill CLASSIFICATION NAME`","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"roultitude"},"content":"* Deletes the entity with both the specified `CLASSIFICATION` and `NAME`.","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"roultitude"},"content":"* `kill item black sword` will delete only exactly an `item` with the name `black sword`.","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"### Clearing all entries : `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"roultitude"},"content":"Clears all entries from the database.","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"roultitude"},"content":"Reroll\u0027s database is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-03-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":152,"author":{"gitId":"roultitude"},"content":"Reroll\u0027s data is saved as a JSON file `[JAR file location]/data/reroll.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-03-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":155,"author":{"gitId":"roultitude"},"content":"If your changes to the data file makes its format invalid, Reroll will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2023-03-07"},{"lineNumber":156,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"roultitude"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Reroll home folder.","lastModifiedDate":"2023-03-07"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"Zeli0"},"content":"| Action                        | Format, Examples                                                  |","lastModifiedDate":"2023-03-16"},{"lineNumber":174,"author":{"gitId":"Zeli0"},"content":"|-------------------------------|-------------------------------------------------------------------|","lastModifiedDate":"2023-03-16"},{"lineNumber":175,"author":{"gitId":"Zeli0"},"content":"| **Make**                      | `make CLASSIFICATION NAME` \u003cbr\u003e e.g., `make char BigMcLargeHuge`  |","lastModifiedDate":"2023-03-16"},{"lineNumber":176,"author":{"gitId":"Zeli0"},"content":"| **Clear**                     | `clear`                                                           |","lastModifiedDate":"2023-03-16"},{"lineNumber":177,"author":{"gitId":"Zeli0"},"content":"| **Delete**                    | `kill CLASSIFICATION NAME`\u003cbr\u003e e.g., `delete char BigMcLargeHuge` |","lastModifiedDate":"2023-03-16"},{"lineNumber":178,"author":{"gitId":"Zeli0"},"content":"| **Enter Edit Mode**           | `edit CLASSIFICATION NAME`\u003cbr\u003e e.g.,`edit char BigMcLargeHuge`    |","lastModifiedDate":"2023-03-16"},{"lineNumber":179,"author":{"gitId":"Zeli0"},"content":"| **Edit field (in Edit Mode)** | `FIELD NEW_VALUE` \u003cbr\u003e e.g., `name SmallMcTinyMicro`              |","lastModifiedDate":"2023-03-16"},{"lineNumber":180,"author":{"gitId":"Zeli0"},"content":"| **Find**                      | `find KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `find Large`             |","lastModifiedDate":"2023-03-16"},{"lineNumber":181,"author":{"gitId":"Zeli0"},"content":"| **List entities**             | `view CLASSIFICATION` \u003cbr\u003e e.g., `view items`                     |","lastModifiedDate":"2023-03-16"},{"lineNumber":182,"author":{"gitId":"Zeli0"},"content":"| **Help**                      | `help`                                                            |","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"roultitude":43,"-":129,"Zeli0":10}},{"path":"docs/team/jiexuanc.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"---","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"layout: page","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"title: Jiexuan\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"---","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"jiexuanc"},"content":"* **Project management**:","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"jiexuanc"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"jiexuanc"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"jiexuanc"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"jiexuanc"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"jiexuanc"},"content":"    * User Guide:","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"jiexuanc"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"jiexuanc"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"jiexuanc"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"jiexuanc"},"content":"* **Community**:","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"jiexuanc"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"jiexuanc"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"jiexuanc"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"jiexuanc"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"jiexuanc"},"content":"* **Tools**:","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"jiexuanc"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"jiexuanc"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"jiexuanc"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"jiexuanc":46}},{"path":"docs/team/junyang.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"---","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"layout: page","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"AngJunYang"},"content":"---","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"* **Project management**:","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"AngJunYang"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"AngJunYang"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"AngJunYang"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"AngJunYang"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"AngJunYang"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"AngJunYang"},"content":"  * User Guide:","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"AngJunYang"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"AngJunYang"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"AngJunYang"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"AngJunYang"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"AngJunYang"},"content":"* **Community**:","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"AngJunYang"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"AngJunYang"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"AngJunYang"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"AngJunYang"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"AngJunYang"},"content":"* **Tools**:","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"AngJunYang"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"AngJunYang"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"AngJunYang"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"AngJunYang":46}},{"path":"docs/team/leonardyam.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"---","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"layout: page","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"title: Leonard\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"---","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"* **Project management**:","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"LeonardYam"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"LeonardYam"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"LeonardYam"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"LeonardYam"},"content":"    * User Guide:","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"LeonardYam"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"LeonardYam"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"LeonardYam"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"LeonardYam"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"LeonardYam"},"content":"* **Community**:","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"LeonardYam"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"LeonardYam"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"LeonardYam"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"LeonardYam"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"LeonardYam"},"content":"* **Tools**:","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"LeonardYam"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"LeonardYam"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"LeonardYam"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"LeonardYam":46}},{"path":"docs/team/roultitude.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"roultitude"},"content":"---","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"roultitude"},"content":"layout: page","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"roultitude"},"content":"title: Troy\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"roultitude"},"content":"---","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"roultitude"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"roultitude"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"roultitude"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"roultitude"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"roultitude"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"roultitude"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"roultitude"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"roultitude"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"roultitude"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"roultitude"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"roultitude"},"content":"* **Project management**:","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"roultitude"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"roultitude"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"roultitude"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"roultitude"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":29,"author":{"gitId":"roultitude"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"roultitude"},"content":"  * User Guide:","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"roultitude"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"roultitude"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"roultitude"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"roultitude"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"roultitude"},"content":"* **Community**:","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"roultitude"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"roultitude"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"roultitude"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"roultitude"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"roultitude"},"content":"* **Tools**:","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"roultitude"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"roultitude"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"roultitude"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"roultitude":46}},{"path":"docs/team/zeli0.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"---","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"layout: page","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"title: Jiexuan\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"Zeli0"},"content":"---","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"Zeli0"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"Zeli0"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"Zeli0"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"Zeli0"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"Zeli0"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"Zeli0"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"Zeli0"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"Zeli0"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"Zeli0"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"Zeli0"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"Zeli0"},"content":"* **Project management**:","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"Zeli0"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"Zeli0"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"Zeli0"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"Zeli0"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"Zeli0"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"Zeli0"},"content":"    * User Guide:","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"Zeli0"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"Zeli0"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"Zeli0"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"Zeli0"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"Zeli0"},"content":"* **Community**:","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"Zeli0"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"Zeli0"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"Zeli0"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"Zeli0"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"Zeli0"},"content":"* **Tools**:","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"Zeli0"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"Zeli0"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"Zeli0"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"Zeli0":46}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"Zeli0"},"content":" * Changes the remark of an existing entity in the address book.","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"Zeli0"},"content":"            + \": Edits the remark of the entity identified \"","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"Zeli0"},"content":"            + \"by the index number used in the last entity listing. \"","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"Zeli0"},"content":"     * @param index of the entity in the filtered entity list to edit the remark","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"Zeli0"},"content":"     * @param remark of the entity to be updated to","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"Zeli0"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of entity data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the entity’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a entity.","lastModifiedDate":"2023-03-16"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"Zeli0"},"content":"Create a new `Remark` in `seedu.address.model.entity`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-03-16"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"Zeli0"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each entity.","lastModifiedDate":"2023-03-16"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"Zeli0"},"content":"public PersonCard(Person entity, int displayedIndex) {","lastModifiedDate":"2023-03-16"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"Zeli0"},"content":"    remark.setText(entity.getRemark().value);","lastModifiedDate":"2023-03-16"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"Zeli0"},"content":"        Person entityToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-16"},{"lineNumber":347,"author":{"gitId":"Zeli0"},"content":"        Person editedEntity \u003d new Person(","lastModifiedDate":"2023-03-16"},{"lineNumber":348,"author":{"gitId":"Zeli0"},"content":"                entityToEdit.getName(), entityToEdit.getPhone(), entityToEdit.getEmail(),","lastModifiedDate":"2023-03-16"},{"lineNumber":349,"author":{"gitId":"Zeli0"},"content":"                entityToEdit.getAddress(), remark, entityToEdit.getTags());","lastModifiedDate":"2023-03-16"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"Zeli0"},"content":"        model.setPerson(entityToEdit, editedEntity);","lastModifiedDate":"2023-03-16"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"Zeli0"},"content":"        return new CommandResult(generateSuccessMessage(editedEntity));","lastModifiedDate":"2023-03-16"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"Zeli0"},"content":"     * {@code entityToEdit}.","lastModifiedDate":"2023-03-16"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"Zeli0"},"content":"    private String generateSuccessMessage(Person entityToEdit) {","lastModifiedDate":"2023-03-16"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"Zeli0"},"content":"        return String.format(message, entityToEdit);","lastModifiedDate":"2023-03-16"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"-":382,"Zeli0":19}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"Zeli0"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.entity.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"Zeli0"},"content":"  \"entities\": [ {","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":110,"Zeli0":2}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"Zeli0"},"content":"       Person entityToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-16"},{"lineNumber":193,"author":{"gitId":"Zeli0"},"content":"       Person editedEntity \u003d createEditedPerson(entityToEdit, editPersonDescriptor);","lastModifiedDate":"2023-03-16"},{"lineNumber":194,"author":{"gitId":"Zeli0"},"content":"       if (!entityToEdit.isSamePerson(editedEntity) \u0026\u0026 model.hasPerson(editedEntity)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"Zeli0"},"content":"       model.setPerson(entityToEdit, editedEntity);","lastModifiedDate":"2023-03-16"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"Zeli0"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedEntity));","lastModifiedDate":"2023-03-16"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"Zeli0"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the entity data.","lastModifiedDate":"2023-03-16"},{"lineNumber":205,"author":{"gitId":"Zeli0"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ entities.\u003cbr\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":206,"author":{"gitId":"Zeli0"},"content":"     FYI, The \u0027filtered list\u0027 is the list of entities resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the entities so that the user can see the edited entity along with all other entities. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":207,"author":{"gitId":"Zeli0"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of entities is being tracked.","lastModifiedDate":"2023-03-16"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"Zeli0"},"content":"        entities.addAll(","lastModifiedDate":"2023-03-16"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":291,"Zeli0":10}},{"path":"src/main/java/seedu/address/experimental/Tester.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.model.ReadOnlyReroll;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.model.UserPrefs;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.storage.JsonRerollStorage;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.storage.RerollStorage;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.storage.Storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.storage.StorageManager;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"// This is tldr of the initialization for storage.","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"/***/","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"public class Tester {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"    /***/","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jiexuanc"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":"        // Instead of hard coded filepath, MainApp uses Config to get this.","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jiexuanc"},"content":"        UserPrefsStorage ups \u003d new JsonUserPrefsStorage(Paths.get(\"preferences.json\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"jiexuanc"},"content":"        // Instead of explicit object creation, MainApp uses some function to get UserPrefs","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"jiexuanc"},"content":"        UserPrefs up \u003d new UserPrefs();","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"jiexuanc"},"content":"        // Creates RerollStorage using UserPrefs filePath","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"jiexuanc"},"content":"        RerollStorage rrs \u003d new JsonRerollStorage(up.getRerollFilePath());","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"jiexuanc"},"content":"        // Creates Storage!","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"jiexuanc"},"content":"        Storage storage \u003d new StorageManager(rrs, ups);","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"jiexuanc"},"content":"        // Quick check that storage is working as expected.","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"        // Creates a ReadOnlyReroll using SampleDataUtil (default behaviour of AddressBook) and save it","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"jiexuanc"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jiexuanc"},"content":"            // Expects to create a new reroll.json with the sample data","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"jiexuanc"},"content":"            storage.saveReroll(SampleDataUtil.getSampleReroll());","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"jiexuanc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"jiexuanc"},"content":"            System.out.println(\"error\");","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"jiexuanc"},"content":"        // Check that readReroll is consistent","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"jiexuanc"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"jiexuanc"},"content":"            // read is only used at the start of the program.","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"jiexuanc"},"content":"            ReadOnlyReroll rr \u003d storage.readReroll().get();","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"jiexuanc"},"content":"            System.out.println(\"Characters: \" + rr.getCharacters().getEntityList());","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"jiexuanc"},"content":"            System.out.println(\"Mobs: \" + rr.getMobs().getEntityList());","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"jiexuanc"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"jiexuanc"},"content":"            System.out.println(\"May this never happen\");","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"jiexuanc"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"jiexuanc"},"content":"            System.out.println(\"error\");","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"jiexuanc":52}},{"path":"src/main/java/seedu/address/experimental/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.model;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":" * The API of the Model component.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"public interface Model {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"    Predicate\u003cEntity\u003e PREDICATE_SHOW_ALL_ENTITIES \u003d unused -\u003e true;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":"     * Returns the user prefs.","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jiexuanc"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jiexuanc"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jiexuanc"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jiexuanc"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jiexuanc"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jiexuanc"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jiexuanc"},"content":"    Path getRerollFilePath();","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jiexuanc"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jiexuanc"},"content":"    void setRerollFilePath(Path rerollFilePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jiexuanc"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jiexuanc"},"content":"    void setReroll(ReadOnlyReroll reroll);","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jiexuanc"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jiexuanc"},"content":"    ReadOnlyReroll getReroll();","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jiexuanc"},"content":"     * Returns true if a entity with the same identity as {@code entity} exists in the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jiexuanc"},"content":"    boolean hasEntity(Entity entity);","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jiexuanc"},"content":"     * Deletes the given entity.","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"jiexuanc"},"content":"     * The entity must exist in the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"jiexuanc"},"content":"    void deleteEntity(Entity target);","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jiexuanc"},"content":"     * Adds the given entity.","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"jiexuanc"},"content":"     * {@code entity} must not already exist in the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"jiexuanc"},"content":"    void addEntity(Entity entity);","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"jiexuanc"},"content":"     * Replaces the given entity {@code target} with {@code editedPerson}.","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"jiexuanc"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"jiexuanc"},"content":"     * The entity identity of {@code editedPerson} must not be the same as another existing entity in the address book.","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"jiexuanc"},"content":"    void setEntity(Entity target, Entity editedEntity);","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"jiexuanc"},"content":"    /** Returns an unmodifiable view of the filtered entity list */","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"jiexuanc"},"content":"    ObservableList\u003cEntity\u003e getFilteredEntityList();","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"jiexuanc"},"content":"     * Updates the filter of the filtered entity list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"jiexuanc"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"jiexuanc"},"content":"    void updateFilteredEntityList(Predicate\u003cEntity\u003e predicate);","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jiexuanc":88}},{"path":"src/main/java/seedu/address/experimental/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.model;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":" * Represents the in-memory model of the Reroll data.","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jiexuanc"},"content":"    private final Reroll reroll;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jiexuanc"},"content":"    private final FilteredList\u003cEntity\u003e filteredEntities;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jiexuanc"},"content":"     * Initializes a ModelManager with the given reroll and userPrefs.","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jiexuanc"},"content":"    public ModelManager(ReadOnlyReroll reroll, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jiexuanc"},"content":"        requireAllNonNull(reroll, userPrefs);","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jiexuanc"},"content":"        logger.fine(\"Initializing with Reroll: \" + reroll + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jiexuanc"},"content":"        this.reroll \u003d new Reroll(reroll);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jiexuanc"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jiexuanc"},"content":"        // Meaningless to maintain generics at this point.","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jiexuanc"},"content":"        // Don\u0027t want any generics outside of this model.","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jiexuanc"},"content":"        @SuppressWarnings(\"unchecked\")","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jiexuanc"},"content":"        FilteredList\u003cEntity\u003e temp \u003d (FilteredList\u003cEntity\u003e) new FilteredList\u003c\u003e(this.reroll.getList());","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jiexuanc"},"content":"        this.filteredEntities \u003d temp;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jiexuanc"},"content":"    public ModelManager() {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jiexuanc"},"content":"        this(new Reroll(), new UserPrefs());","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jiexuanc"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jiexuanc"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jiexuanc"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jiexuanc"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jiexuanc"},"content":"        return userPrefs;","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jiexuanc"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"jiexuanc"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jiexuanc"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jiexuanc"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"jiexuanc"},"content":"    public Path getRerollFilePath() {","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"jiexuanc"},"content":"        return userPrefs.getRerollFilePath();","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"jiexuanc"},"content":"    public void setRerollFilePath(Path rerollFilePath) {","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(rerollFilePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"jiexuanc"},"content":"        userPrefs.setRerollFilePath(rerollFilePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"jiexuanc"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003dRerollllll\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"jiexuanc"},"content":"    public void setReroll(ReadOnlyReroll reroll) {","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"jiexuanc"},"content":"        this.reroll.resetData(reroll);","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"jiexuanc"},"content":"    public ReadOnlyReroll getReroll() {","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"jiexuanc"},"content":"        return reroll;","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"jiexuanc"},"content":"    public boolean hasEntity(Entity entity) {","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(entity);","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"jiexuanc"},"content":"        return reroll.hasEntity(entity);","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"jiexuanc"},"content":"    public void addEntity(Entity entity) {","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(entity);","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"jiexuanc"},"content":"        reroll.addEntity(entity);","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"jiexuanc"},"content":"        updateFilteredEntityList(PREDICATE_SHOW_ALL_ENTITIES);","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"jiexuanc"},"content":"    public void deleteEntity(Entity entity) {","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"jiexuanc"},"content":"        reroll.deleteEntity(entity);","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"jiexuanc"},"content":"    public void setEntity(Entity target, Entity edited) {","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"jiexuanc"},"content":"        reroll.setEntity(target, edited);","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"jiexuanc"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Entity List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"jiexuanc"},"content":"    public ObservableList\u003cEntity\u003e getFilteredEntityList() {","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"jiexuanc"},"content":"        return filteredEntities;","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"jiexuanc"},"content":"    public void updateFilteredEntityList(Predicate\u003cEntity\u003e predicate) {","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"jiexuanc"},"content":"        filteredEntities.setPredicate(predicate);","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jiexuanc":130}},{"path":"src/main/java/seedu/address/experimental/model/ReadOnlyEntities.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.model;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":" * TBC","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":" * @param \u003cT\u003e TBC","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"public interface ReadOnlyEntities\u003cT extends Entity\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"     * TBC","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"     * @return TBC","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"    ObservableList\u003cT\u003e getEntityList();","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jiexuanc":16}},{"path":"src/main/java/seedu/address/experimental/model/ReadOnlyReroll.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.model;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Character;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Item;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Mob;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"/***/","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"public interface ReadOnlyReroll {","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"    public ReadOnlyEntities\u003cItem\u003e getItems();","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"    public ReadOnlyEntities\u003cCharacter\u003e getCharacters();","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"    public ReadOnlyEntities\u003cMob\u003e getMobs();","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jiexuanc":11}},{"path":"src/main/java/seedu/address/experimental/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.model;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"    Path getRerollFilePath();","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jiexuanc":16}},{"path":"src/main/java/seedu/address/experimental/model/Reroll.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.model;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Character;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Item;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Mob;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"// Driver function.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":" * Reroll...","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"public class Reroll implements ReadOnlyReroll {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"    private final RerollCharacters characters;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"    private final RerollItems items;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"    private final RerollMobs mobs;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"    {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jiexuanc"},"content":"        characters \u003d new RerollCharacters();","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":"        items \u003d new RerollItems();","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jiexuanc"},"content":"        mobs \u003d new RerollMobs();","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jiexuanc"},"content":"    public Reroll() {}","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jiexuanc"},"content":"     * Create Reroll from existing copy","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jiexuanc"},"content":"     * @param toBeCopied","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jiexuanc"},"content":"    public Reroll(ReadOnlyReroll toBeCopied) {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jiexuanc"},"content":"        this();","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jiexuanc"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jiexuanc"},"content":"     * Reset data to newData","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jiexuanc"},"content":"     * @param newData","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jiexuanc"},"content":"    public void resetData(ReadOnlyReroll newData) {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jiexuanc"},"content":"        characters.resetData(newData.getCharacters());","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jiexuanc"},"content":"        items.resetData(newData.getItems());","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jiexuanc"},"content":"        mobs.resetData(newData.getMobs());","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jiexuanc"},"content":"    public ReadOnlyEntities\u003cItem\u003e getItems() {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jiexuanc"},"content":"        return items;","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jiexuanc"},"content":"    public ReadOnlyEntities\u003cCharacter\u003e getCharacters() {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jiexuanc"},"content":"        return characters;","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jiexuanc"},"content":"    public ReadOnlyEntities\u003cMob\u003e getMobs() {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jiexuanc"},"content":"        return mobs;","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jiexuanc"},"content":"    // Entity level operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jiexuanc"},"content":"     * Has entity","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jiexuanc"},"content":"     * @param e","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"jiexuanc"},"content":"     * @return","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"jiexuanc"},"content":"    public boolean hasEntity(Entity e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"jiexuanc"},"content":"        // Switch till it works","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"jiexuanc"},"content":"        if (e instanceof Item) {","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"jiexuanc"},"content":"            return items.hasEntity((Item) e);","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"jiexuanc"},"content":"        } else if (e instanceof Character) {","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"jiexuanc"},"content":"            return characters.hasEntity((Character) e);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"jiexuanc"},"content":"        } else if (e instanceof Mob) {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"jiexuanc"},"content":"            return mobs.hasEntity((Mob) e);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"jiexuanc"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"jiexuanc"},"content":"            // Should throw error","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"jiexuanc"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"jiexuanc"},"content":"     * Add Entity","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"jiexuanc"},"content":"     * @param e","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"jiexuanc"},"content":"    public void addEntity(Entity e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"jiexuanc"},"content":"        if (e instanceof Item) {","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"jiexuanc"},"content":"            items.addEntity((Item) e);","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"jiexuanc"},"content":"        } else if (e instanceof Character) {","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"jiexuanc"},"content":"            characters.addEntity((Character) e);","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"jiexuanc"},"content":"        } else if (e instanceof Mob) {","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"jiexuanc"},"content":"            mobs.addEntity((Mob) e);","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"jiexuanc"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"jiexuanc"},"content":"     * Set Entity","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"jiexuanc"},"content":"     * @param target","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"jiexuanc"},"content":"     * @param edited","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"jiexuanc"},"content":"    public void setEntity(Entity target, Entity edited) {","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"jiexuanc"},"content":"        if (!target.getClass().equals(edited.getClass())) {","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"jiexuanc"},"content":"            return; // throw error.","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"jiexuanc"},"content":"        if (target instanceof Item) {","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"jiexuanc"},"content":"            items.setEntity((Item) target, (Item) edited);","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"jiexuanc"},"content":"        } else if (target instanceof Character) {","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"jiexuanc"},"content":"            characters.setEntity((Character) target, (Character) edited);","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"jiexuanc"},"content":"        } else if (target instanceof Mob) {","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"jiexuanc"},"content":"            mobs.setEntity((Mob) target, (Mob) edited);","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"jiexuanc"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"jiexuanc"},"content":"     * Edit entity","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"jiexuanc"},"content":"     * @param key","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"jiexuanc"},"content":"    public void deleteEntity(Entity key) {","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"jiexuanc"},"content":"        if (key instanceof Item) {","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"jiexuanc"},"content":"            items.deleteEntity((Item) key);","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"jiexuanc"},"content":"        } else if (key instanceof Character) {","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"jiexuanc"},"content":"            characters.deleteEntity((Character) key);","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"jiexuanc"},"content":"        } else if (key instanceof Mob) {","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"jiexuanc"},"content":"            mobs.deleteEntity((Mob) key);","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"jiexuanc"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"jiexuanc"},"content":"    // Misc \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"jiexuanc"},"content":"     * Return some list for the updated list","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"jiexuanc"},"content":"     * @return","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"jiexuanc"},"content":"    public ObservableList\u003c? extends Entity\u003e getList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"jiexuanc"},"content":"        // not slap at all","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"jiexuanc"},"content":"        return characters.entities.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"jiexuanc"},"content":"    public String toString() {","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"jiexuanc"},"content":"        return \"Characters:\" + characters.toString() + \"\\nItems\" + items.toString() + \"\\nMobs\" + mobs.toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jiexuanc":152}},{"path":"src/main/java/seedu/address/experimental/model/RerollCharacters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.model;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Character;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":" * Abstraction of all characters","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"public class RerollCharacters extends RerollEntities\u003cCharacter\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"    // For convenience","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"    private final UniqueEntityList\u003cCharacter\u003e characters \u003d entities;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"                || (other instanceof RerollCharacters","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"                \u0026\u0026 characters.equals(((RerollCharacters) other).characters));","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jiexuanc":20}},{"path":"src/main/java/seedu/address/experimental/model/RerollEntities.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.model;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":" * Abstraction of some specific entity class T","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":" * @param \u003cT\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"public abstract class RerollEntities\u003cT extends Entity\u003e implements ReadOnlyEntities {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"    protected final UniqueEntityList\u003cT\u003e entities;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"    {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"        entities \u003d new UniqueEntityList\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"    // List level operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"    void setEntities(List\u003cT\u003e entities) {","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jiexuanc"},"content":"        this.entities.setEntities(entities);","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jiexuanc"},"content":"    void resetData(ReadOnlyEntities\u003cT\u003e newData) {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jiexuanc"},"content":"        setEntities(newData.getEntityList());","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jiexuanc"},"content":"    // Entity level operations \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jiexuanc"},"content":"    boolean hasEntity(T entity) {","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(entity);","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jiexuanc"},"content":"        return entities.contains(entity);","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jiexuanc"},"content":"    void addEntity(T entity) {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(entity);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jiexuanc"},"content":"        entities.add(entity);","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jiexuanc"},"content":"    void setEntity(T target, T edited) {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(edited);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jiexuanc"},"content":"        entities.setEntity(target, edited);","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jiexuanc"},"content":"    void deleteEntity(T entity) {","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jiexuanc"},"content":"        entities.remove(entity);","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jiexuanc"},"content":"    public ObservableList\u003cT\u003e getEntityList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jiexuanc"},"content":"        return entities.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jiexuanc"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jiexuanc"},"content":"        return entities.asUnmodifiableObservableList().size() + \" entities\";","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jiexuanc":62}},{"path":"src/main/java/seedu/address/experimental/model/RerollItems.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.model;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Item;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":" * Abstraction of all items","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"public class RerollItems extends RerollEntities\u003cItem\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"    // For convenience","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"    private final UniqueEntityList items \u003d entities;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"                || (other instanceof RerollItems","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"                \u0026\u0026 items.equals(((RerollItems) other).items));","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jiexuanc":21}},{"path":"src/main/java/seedu/address/experimental/model/RerollMobs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.model;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Mob;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":" * Abstraction of all Mobs","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"public class RerollMobs extends RerollEntities\u003cMob\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"    // for convenience","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"    private final UniqueEntityList mobs \u003d entities;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"                || (other instanceof RerollMobs","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"                \u0026\u0026 mobs.equals(((RerollMobs) other).mobs));","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jiexuanc":19}},{"path":"src/main/java/seedu/address/experimental/model/UniqueEntityList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.model;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":" * A list of entities that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":" * A entity is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":" * entities uses Person#isSamePerson(Person) for equality so as to ensure that the entity being added or updated is","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a entity uses Person#equals(Object) so","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":" * as to ensure that the entity with exactly the same fields will be removed.","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":" *","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jiexuanc"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":" *","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jiexuanc"},"content":" * @see Entity#isSameEntity(Entity)","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jiexuanc"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jiexuanc"},"content":"public class UniqueEntityList\u003cT extends Entity\u003e implements Iterable\u003cT\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jiexuanc"},"content":"    private final ObservableList\u003cT\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jiexuanc"},"content":"    private final ObservableList\u003cT\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jiexuanc"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jiexuanc"},"content":"     * Returns true if the list contains an equivalent entity as the given argument.","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jiexuanc"},"content":"    public boolean contains(T toCheck) {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jiexuanc"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEntity);","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jiexuanc"},"content":"     * Adds a entity to the list.","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"jiexuanc"},"content":"     * The entity must not already exist in the list.","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jiexuanc"},"content":"    public void add(T toAdd) {","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jiexuanc"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jiexuanc"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jiexuanc"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jiexuanc"},"content":"     * Replaces the entity {@code target} in the list with {@code editedEntity}.","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"jiexuanc"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"jiexuanc"},"content":"     * The entity identity of {@code editedEntity} must not be the same as another existing entity in the list.","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"jiexuanc"},"content":"    public void setEntity(T target, T editedEntity) {","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"jiexuanc"},"content":"        requireAllNonNull(target, editedEntity);","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jiexuanc"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jiexuanc"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jiexuanc"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jiexuanc"},"content":"        if (!target.isSameEntity(editedEntity) \u0026\u0026 contains(editedEntity)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"jiexuanc"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jiexuanc"},"content":"        internalList.set(index, editedEntity);","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"jiexuanc"},"content":"     * Removes the equivalent entity from the list.","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"jiexuanc"},"content":"     * The entity must exist in the list.","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"jiexuanc"},"content":"    public void remove(T toRemove) {","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"jiexuanc"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"jiexuanc"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"jiexuanc"},"content":"    public void setEntities(UniqueEntityList\u003c? extends T\u003e replacement) {","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"jiexuanc"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"jiexuanc"},"content":"     * Replaces the contents of this list with {@code entities}.","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"jiexuanc"},"content":"     * {@code entities} must not contain duplicate entities.","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"jiexuanc"},"content":"    public void setEntities(List\u003cT\u003e entities) {","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"jiexuanc"},"content":"        requireAllNonNull(entities);","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"jiexuanc"},"content":"        if (!entitiesAreUnique(entities)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"jiexuanc"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"jiexuanc"},"content":"        internalList.setAll(entities);","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"jiexuanc"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"jiexuanc"},"content":"    public ObservableList\u003cT\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"jiexuanc"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"jiexuanc"},"content":"    public Iterator\u003cT\u003e iterator() {","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"jiexuanc"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"jiexuanc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"jiexuanc"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"jiexuanc"},"content":"                || (other instanceof UniqueEntityList // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"jiexuanc"},"content":"                        \u0026\u0026 internalList.equals(((UniqueEntityList\u003c?\u003e) other).internalList));","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"jiexuanc"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"jiexuanc"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"jiexuanc"},"content":"     * Returns true if {@code entities} contains only unique entities.","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"jiexuanc"},"content":"    private boolean entitiesAreUnique(List\u003c? extends T\u003e entities) {","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"jiexuanc"},"content":"        for (int i \u003d 0; i \u003c entities.size() - 1; i++) {","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"jiexuanc"},"content":"            for (int j \u003d i + 1; j \u003c entities.size(); j++) {","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"jiexuanc"},"content":"                if (entities.get(i).isSameEntity(entities.get(j))) {","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"jiexuanc"},"content":"                    return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"jiexuanc"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"jiexuanc"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"jiexuanc"},"content":"        return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jiexuanc":138}},{"path":"src/main/java/seedu/address/experimental/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.model;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"    private Path rerollFilePath \u003d Paths.get(\"data\" , \"reroll.json\");","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"jiexuanc"},"content":"    public UserPrefs() {}","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"jiexuanc"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"jiexuanc"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"jiexuanc"},"content":"        this();","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"jiexuanc"},"content":"        resetData(userPrefs);","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jiexuanc"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"jiexuanc"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jiexuanc"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jiexuanc"},"content":"        setRerollFilePath(newUserPrefs.getRerollFilePath());","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"jiexuanc"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"jiexuanc"},"content":"        return guiSettings;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"jiexuanc"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"jiexuanc"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"jiexuanc"},"content":"    public Path getRerollFilePath() {","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"jiexuanc"},"content":"        return rerollFilePath;","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"jiexuanc"},"content":"    public void setRerollFilePath(Path rerollFilePath) {","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(rerollFilePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"jiexuanc"},"content":"        this.rerollFilePath \u003d rerollFilePath;","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"jiexuanc"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"jiexuanc"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"jiexuanc"},"content":"            return true;","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"jiexuanc"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"jiexuanc"},"content":"            return false;","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"jiexuanc"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"jiexuanc"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"jiexuanc"},"content":"                \u0026\u0026 rerollFilePath.equals(o.rerollFilePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"jiexuanc"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"jiexuanc"},"content":"        return Objects.hash(guiSettings, rerollFilePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"jiexuanc"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"jiexuanc"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"jiexuanc"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"jiexuanc"},"content":"        sb.append(\"\\nLocal data file location : \" + rerollFilePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"jiexuanc"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jiexuanc":87}},{"path":"src/main/java/seedu/address/experimental/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.model.util;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.model.ReadOnlyReroll;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.model.Reroll;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Character;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Mob;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Zeli0"},"content":"import seedu.address.model.entity.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.entity.Stats;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"/***/","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"public class SampleDataUtil {","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"    /***/","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"    public static Entity[] getSampleEntities() {","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"        Character c \u003d new Character(new Name(\"Item1\"), new Stats(0, 0, 0), 3, 2, new HashSet\u003cTag\u003e());","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"        Mob m \u003d new Mob(new Name(\"Mob1\"), new Stats(300, 300, 300), 2, true, new HashSet\u003cTag\u003e());","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"        Mob m2 \u003d new Mob(new Name(\"Mob2\"), new Stats(300, 300, 300), 2, true, new HashSet\u003cTag\u003e());","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jiexuanc"},"content":"        Entity[] entities \u003d {c, m, m2};","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":"        return entities;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"jiexuanc"},"content":"    /***/","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"jiexuanc"},"content":"    public static ReadOnlyReroll getSampleReroll() {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"jiexuanc"},"content":"        Reroll sampleRr \u003d new Reroll();","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"jiexuanc"},"content":"        for (Entity sampleEntity : getSampleEntities()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"jiexuanc"},"content":"            sampleRr.addEntity(sampleEntity);","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"        return sampleRr;","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"roultitude":3,"jiexuanc":30,"Zeli0":1}},{"path":"src/main/java/seedu/address/experimental/storage/JsonAdaptedCharacter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Character;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Zeli0"},"content":"import seedu.address.model.entity.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Stats;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"/***/","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"public class JsonAdaptedCharacter {","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"    private final String name;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"    private final JsonAdaptedStats stats;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"    private final int level;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"    private final int xp;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jiexuanc"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":"    JsonAdaptedCharacter(@JsonProperty(\"name\") String name, @JsonProperty(\"stats\") JsonAdaptedStats stats,","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jiexuanc"},"content":"        @JsonProperty(\"level\") int level, @JsonProperty(\"xp\") int xp) {","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"jiexuanc"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"jiexuanc"},"content":"        this.stats \u003d stats;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"jiexuanc"},"content":"        this.level \u003d level;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"jiexuanc"},"content":"        this.xp \u003d xp;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"jiexuanc"},"content":"    /***/","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"    public JsonAdaptedCharacter(Character source) {","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"jiexuanc"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jiexuanc"},"content":"        stats \u003d new JsonAdaptedStats(source.getStats());","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"jiexuanc"},"content":"        this.level \u003d source.getLevel();","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"jiexuanc"},"content":"        this.xp \u003d source.getXP();","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"jiexuanc"},"content":"    /***/","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"jiexuanc"},"content":"    public Character toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"jiexuanc"},"content":"        // dont care about error...","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"jiexuanc"},"content":"        Stats stat \u003d stats.toModalType();","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"jiexuanc"},"content":"        return new Character(new Name(name), stat, level, xp, new HashSet\u003c\u003e());","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"roultitude":4,"jiexuanc":41,"Zeli0":1}},{"path":"src/main/java/seedu/address/experimental/storage/JsonAdaptedMob.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Mob;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Zeli0"},"content":"import seedu.address.model.entity.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Stats;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"/***/","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"public class JsonAdaptedMob {","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"    private final String name;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"    private final JsonAdaptedStats stats;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"    private final int challengeRating;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"    private final boolean isLegendary;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"    /***/","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jiexuanc"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":"    JsonAdaptedMob(@JsonProperty(\"name\") String name, @JsonProperty(\"stats\") JsonAdaptedStats stats,","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jiexuanc"},"content":"        @JsonProperty(\"challengeRating\") int challengeRating,","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"jiexuanc"},"content":"        @JsonProperty(\"isLegendary\") boolean isLegendary) {","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"jiexuanc"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"jiexuanc"},"content":"        this.stats \u003d stats;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"jiexuanc"},"content":"        this.challengeRating \u003d challengeRating;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"jiexuanc"},"content":"        this.isLegendary \u003d isLegendary;","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"    /***/","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"jiexuanc"},"content":"    public JsonAdaptedMob(Mob source) {","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jiexuanc"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"jiexuanc"},"content":"        stats \u003d new JsonAdaptedStats(source.getStats());","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"jiexuanc"},"content":"        this.challengeRating \u003d source.getChallengeRating();","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"jiexuanc"},"content":"        this.isLegendary \u003d source.getLegendaryStatus();","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"jiexuanc"},"content":"    /***/","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"jiexuanc"},"content":"    public Mob toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"jiexuanc"},"content":"        // dont care","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"jiexuanc"},"content":"        Stats stat \u003d stats.toModalType();","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"jiexuanc"},"content":"        return new Mob(new Name(name), stat, challengeRating, isLegendary, new HashSet\u003c\u003e());","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"roultitude":4,"jiexuanc":41,"Zeli0":1}},{"path":"src/main/java/seedu/address/experimental/storage/JsonAdaptedStats.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.entity.Stats;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"/***/","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"public class JsonAdaptedStats {","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"    private final int strength;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"    private final int dexterity;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"    private final int intelligence;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"    /***/","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"    public JsonAdaptedStats(@JsonProperty(\"strength\") int strength, @JsonProperty(\"dexterity\") int dexterity,","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"                            @JsonProperty(\"intelligence\") int intelligence) {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"        this.strength \u003d strength;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"        this.dexterity \u003d dexterity;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"        this.intelligence \u003d intelligence;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jiexuanc"},"content":"    /***/","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":"    public JsonAdaptedStats(Stats stats) {","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jiexuanc"},"content":"        this.strength \u003d stats.getStrength();","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"jiexuanc"},"content":"        this.dexterity \u003d stats.getDexterity();","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"jiexuanc"},"content":"        this.intelligence \u003d stats.getIntelligence();","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"jiexuanc"},"content":"    /***/","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"jiexuanc"},"content":"    public Stats toModalType() throws IllegalValueException {","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"jiexuanc"},"content":"        return new Stats(strength, dexterity, intelligence);","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"jiexuanc":33}},{"path":"src/main/java/seedu/address/experimental/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"    private final String tagName;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"jiexuanc"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"jiexuanc"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"jiexuanc"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"jiexuanc"},"content":"    @JsonValue","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"    public String getTagName() {","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"jiexuanc"},"content":"        return tagName;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"jiexuanc"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"jiexuanc"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"jiexuanc"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"jiexuanc"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"jiexuanc"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"jiexuanc"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"jiexuanc"},"content":"        return new Tag(tagName);","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"jiexuanc":48}},{"path":"src/main/java/seedu/address/experimental/storage/JsonRerollStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.model.ReadOnlyReroll;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"/***/","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"public class JsonRerollStorage implements RerollStorage {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonRerollStorage.class);","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jiexuanc"},"content":"    public JsonRerollStorage(Path filePath) {","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"jiexuanc"},"content":"    public Path getRerollFilePath() {","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"jiexuanc"},"content":"        return filePath;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"jiexuanc"},"content":"    public Optional\u003cReadOnlyReroll\u003e readReroll() throws DataConversionException {","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"        return readReroll(filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jiexuanc"},"content":"    /***/","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"jiexuanc"},"content":"    public Optional\u003cReadOnlyReroll\u003e readReroll(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"jiexuanc"},"content":"        Optional\u003cJsonSerializableReroll\u003e jsonReroll \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"jiexuanc"},"content":"                filePath, JsonSerializableReroll.class);","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"jiexuanc"},"content":"        if (!jsonReroll.isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"jiexuanc"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"jiexuanc"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"jiexuanc"},"content":"            return Optional.of(jsonReroll.get().toModelType());","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"jiexuanc"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"jiexuanc"},"content":"            logger.info(\"Illegal value found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"jiexuanc"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"jiexuanc"},"content":"    public void saveReroll(ReadOnlyReroll reroll) throws IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"jiexuanc"},"content":"        saveReroll(reroll, filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"jiexuanc"},"content":"    /***/","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"jiexuanc"},"content":"    public void saveReroll(ReadOnlyReroll reroll, Path filePath) throws IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(reroll);","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"jiexuanc"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"jiexuanc"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"jiexuanc"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableReroll(reroll), filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"jiexuanc":64}},{"path":"src/main/java/seedu/address/experimental/storage/JsonSerializableReroll.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.model.ReadOnlyReroll;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.model.Reroll;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"/***/","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"@JsonRootName(value \u003d \"reroll\")","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"public class JsonSerializableReroll {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"    private final List\u003cJsonAdaptedMob\u003e mobs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"    private final List\u003cJsonAdaptedCharacter\u003e characters \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"    /***/","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jiexuanc"},"content":"    public JsonSerializableReroll(@JsonProperty(\"mobs\") List\u003cJsonAdaptedMob\u003e mobs,","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":"                                  @JsonProperty(\"characters\") List\u003cJsonAdaptedCharacter\u003e characters) {","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jiexuanc"},"content":"        this.mobs.addAll(mobs);","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"jiexuanc"},"content":"        this.characters.addAll(characters);","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"jiexuanc"},"content":"    /***/","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"jiexuanc"},"content":"    public JsonSerializableReroll(ReadOnlyReroll source) {","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"jiexuanc"},"content":"        mobs.addAll(source.getMobs().getEntityList().stream().map(JsonAdaptedMob::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"jiexuanc"},"content":"        characters.addAll(source.getCharacters()","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"jiexuanc"},"content":"                .getEntityList().stream().map(JsonAdaptedCharacter::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"jiexuanc"},"content":"    /***/","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jiexuanc"},"content":"    public Reroll toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"jiexuanc"},"content":"        Reroll reroll \u003d new Reroll();","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"jiexuanc"},"content":"        // Add all mobs","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"jiexuanc"},"content":"        for (JsonAdaptedMob jsonMob : mobs) {","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"jiexuanc"},"content":"            reroll.addEntity(jsonMob.toModelType());","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"jiexuanc"},"content":"        // Add all characters","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"jiexuanc"},"content":"        for (JsonAdaptedCharacter jsonChar : characters) {","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"jiexuanc"},"content":"            reroll.addEntity(jsonChar.toModelType());","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"jiexuanc"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"jiexuanc"},"content":"        return reroll;","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"jiexuanc":47}},{"path":"src/main/java/seedu/address/experimental/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jiexuanc"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"jiexuanc"},"content":"        return filePath;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"jiexuanc"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"jiexuanc"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jiexuanc"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"jiexuanc"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"jiexuanc"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"jiexuanc"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"jiexuanc"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"jiexuanc"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"jiexuanc"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"jiexuanc":47}},{"path":"src/main/java/seedu/address/experimental/storage/RerollStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.model.ReadOnlyReroll;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"/***/","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"public interface RerollStorage {","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"    Path getRerollFilePath();","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"    Optional\u003cReadOnlyReroll\u003e readReroll() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"    Optional\u003cReadOnlyReroll\u003e readReroll(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"    void saveReroll(ReadOnlyReroll rr) throws IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"    void saveReroll(ReadOnlyReroll rr, Path filePath) throws IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"jiexuanc":21}},{"path":"src/main/java/seedu/address/experimental/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.model.ReadOnlyReroll;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":" * API of the Storage component","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"public interface Storage extends RerollStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jiexuanc"},"content":"    Path getRerollFilePath();","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"jiexuanc"},"content":"    Optional\u003cReadOnlyReroll\u003e readReroll() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"jiexuanc"},"content":"    void saveReroll(ReadOnlyReroll reroll) throws IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"jiexuanc":32}},{"path":"src/main/java/seedu/address/experimental/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.model.ReadOnlyReroll;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"    private RerollStorage rerollStorage;","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jiexuanc"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"jiexuanc"},"content":"    public StorageManager(RerollStorage rerollStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"jiexuanc"},"content":"        this.rerollStorage \u003d rerollStorage;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"jiexuanc"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"jiexuanc"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jiexuanc"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"jiexuanc"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"jiexuanc"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"jiexuanc"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"jiexuanc"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"jiexuanc"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"jiexuanc"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Reroll methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"jiexuanc"},"content":"    public Path getRerollFilePath() {","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"jiexuanc"},"content":"        return rerollStorage.getRerollFilePath();","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"jiexuanc"},"content":"    public Optional\u003cReadOnlyReroll\u003e readReroll() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"jiexuanc"},"content":"        return readReroll(rerollStorage.getRerollFilePath());","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"jiexuanc"},"content":"    public Optional\u003cReadOnlyReroll\u003e readReroll(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"jiexuanc"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"jiexuanc"},"content":"        return rerollStorage.readReroll(filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"jiexuanc"},"content":"    public void saveReroll(ReadOnlyReroll reroll) throws IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"jiexuanc"},"content":"        saveReroll(reroll, rerollStorage.getRerollFilePath());","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"jiexuanc"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"jiexuanc"},"content":"    public void saveReroll(ReadOnlyReroll reroll, Path filePath) throws IOException {","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"jiexuanc"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"jiexuanc"},"content":"        rerollStorage.saveReroll(reroll, filePath);","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"jiexuanc":78}},{"path":"src/main/java/seedu/address/experimental/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.experimental.storage;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"jiexuanc"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"jiexuanc"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"jiexuanc"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.experimental.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"jiexuanc"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"jiexuanc"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"jiexuanc"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"jiexuanc"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"jiexuanc"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"jiexuanc"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"jiexuanc"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"jiexuanc"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"jiexuanc"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"jiexuanc"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"jiexuanc"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"jiexuanc"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"jiexuanc"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"jiexuanc"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"jiexuanc":36}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":34,"author":{"gitId":"roultitude"},"content":"    ObservableList\u003cEntity\u003e getFilteredPersonList();","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"roultitude":2,"-":48}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"roultitude"},"content":"    public ObservableList\u003cEntity\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"roultitude":2,"-":79}},{"path":"src/main/java/seedu/address/logic/commands/AddEntityCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"roultitude"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASSIFICATION;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"roultitude"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"roultitude"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"Zeli0"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"Zeli0"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"Zeli0"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"Zeli0"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"Zeli0"},"content":" * Adds a person to the address book.","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"Zeli0"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"Zeli0"},"content":"public class AddEntityCommand extends Command {","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"Zeli0"},"content":"    public static final String COMMAND_WORD \u003d \"make\";","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"Zeli0"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an entity to the management system. \"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"Zeli0"},"content":"        + \"Parameters: \"","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"Zeli0"},"content":"        + PREFIX_CLASSIFICATION + \"CLASSIFICATION \"","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"roultitude"},"content":"        + PREFIX_NAME + \"NAME\"","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"roultitude"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"Zeli0"},"content":"        + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"Zeli0"},"content":"        + PREFIX_CLASSIFICATION + \"char \"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"roultitude"},"content":"        + PREFIX_NAME + \"Leeroy Jenkins\"","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"roultitude"},"content":"        + \"[\" + PREFIX_TAG + \"Orc]...\";","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"Zeli0"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"Zeli0"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"Zeli0"},"content":"    private final Entity toAdd;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"Zeli0"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"Zeli0"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"Zeli0"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"Zeli0"},"content":"    public AddEntityCommand(Entity entity) {","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"Zeli0"},"content":"        requireNonNull(entity);","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"Zeli0"},"content":"        toAdd \u003d entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"Zeli0"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"Zeli0"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"Zeli0"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"Zeli0"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"Zeli0"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"Zeli0"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"Zeli0"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"Zeli0"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"Zeli0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"Zeli0"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"Zeli0"},"content":"            || (other instanceof AddEntityCommand // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"Zeli0"},"content":"            \u0026\u0026 toAdd.equals(((AddEntityCommand) other).toAdd));","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"Zeli0"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"roultitude":8,"Zeli0":52}},{"path":"src/main/java/seedu/address/logic/commands/AddItemCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"roultitude"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"roultitude"},"content":" * Adds an item to the address book.","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"roultitude"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"Zeli0"},"content":"public class AddItemCommand {","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"Zeli0"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"roultitude":4,"Zeli0":4}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"roultitude"},"content":"import seedu.address.logic.parser.UiSwitchMode;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"roultitude"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"roultitude"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"roultitude"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"roultitude"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"roultitude"},"content":"     * The application should exit.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"roultitude"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"roultitude"},"content":"    private final UiSwitchMode switchMode;","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"roultitude"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, UiSwitchMode switchMode) {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"roultitude"},"content":"        this.switchMode \u003d switchMode;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"roultitude"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"roultitude"},"content":"     * Constructs a {@code CommandResult} with the specified fields, and default switch mode of NONE.","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"roultitude"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"roultitude"},"content":"        this.switchMode \u003d UiSwitchMode.NONE;","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"roultitude"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser}, and other fields set to their","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"roultitude"},"content":"     * default value.","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"roultitude"},"content":"        this(feedbackToUser, false, false, UiSwitchMode.NONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"roultitude"},"content":"    public UiSwitchMode getSwitchMode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"roultitude"},"content":"        return switchMode;","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"roultitude"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"},{"lineNumber":96,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"roultitude":24,"-":72}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"roultitude"},"content":"        List\u003cEntity\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"roultitude"},"content":"        Entity entityToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"roultitude"},"content":"        model.deletePerson(entityToDelete);","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"roultitude"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, entityToDelete));","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"roultitude":5,"-":48}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.entity.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"roultitude"},"content":"        List\u003cEntity\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"roultitude"},"content":"        Entity entityToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"roultitude"},"content":"        Entity editedEntity \u003d createEditedPerson(entityToEdit, editPersonDescriptor);","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"roultitude"},"content":"        if (!entityToEdit.isSamePerson(editedEntity) \u0026\u0026 model.hasPerson(editedEntity)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"roultitude"},"content":"        model.setPerson(entityToEdit, editedEntity);","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"roultitude"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedEntity));","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"roultitude"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit} edited with {@code","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"roultitude"},"content":"     * editPersonDescriptor}.","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"roultitude"},"content":"    private static Entity createEditedPerson(Entity entityToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"roultitude"},"content":"        assert entityToEdit !\u003d null;","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"roultitude"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(entityToEdit.getName());","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"roultitude"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(entityToEdit.getTags());","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":99,"author":{"gitId":"roultitude"},"content":"        return new Entity(updatedName, updatedTags);","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":121,"author":{"gitId":"roultitude"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the corresponding field value","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"roultitude"},"content":"     * of the person.","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"roultitude"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"roultitude"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":136,"author":{"gitId":"roultitude"},"content":"         * Copy constructor. A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":186,"author":{"gitId":"roultitude"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}. A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-16"},{"lineNumber":187,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"roultitude"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException} if modification is","lastModifiedDate":"2023-03-16"},{"lineNumber":194,"author":{"gitId":"roultitude"},"content":"         * attempted. Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-03-16"},{"lineNumber":195,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":204,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":205,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":217,"author":{"gitId":"-"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"roultitude":24,"-":198}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"roultitude"},"content":"import seedu.address.logic.parser.UiSwitchMode;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":17,"author":{"gitId":"roultitude"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, UiSwitchMode.NONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"roultitude":2,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"roultitude"},"content":"import seedu.address.logic.parser.UiSwitchMode;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"roultitude"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, UiSwitchMode.NONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"roultitude":2,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"roultitude"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"roultitude"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"roultitude"},"content":"import seedu.address.logic.parser.UiSwitchMode;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"roultitude"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"roultitude"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"roultitude"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"roultitude"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"roultitude"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"roultitude"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Toggled view mode\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"roultitude"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"roultitude"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"roultitude"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"roultitude"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, UiSwitchMode.TOGGLE);","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"roultitude"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"roultitude"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"roultitude":23}},{"path":"src/main/java/seedu/address/logic/parser/AddEntityCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"roultitude"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CLASSIFICATION;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"roultitude"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"roultitude"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"Zeli0"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"Zeli0"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"Zeli0"},"content":"import seedu.address.logic.commands.AddEntityCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"Zeli0"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"Zeli0"},"content":"import seedu.address.model.entity.Classification;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"Zeli0"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"Zeli0"},"content":"import seedu.address.model.entity.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"Zeli0"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"Zeli0"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"Zeli0"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"Zeli0"},"content":"public class AddEntityCommandParser implements Parser\u003cAddEntityCommand\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"Zeli0"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"roultitude"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand and returns an AddCommand object","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"roultitude"},"content":"     * for execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"roultitude"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"Zeli0"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"Zeli0"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"Zeli0"},"content":"    public AddEntityCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"Zeli0"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"Zeli0"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_CLASSIFICATION, PREFIX_NAME);","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"Zeli0"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_CLASSIFICATION, PREFIX_NAME)","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"Zeli0"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"roultitude"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"roultitude"},"content":"                AddEntityCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"Zeli0"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"roultitude"},"content":"        Classification classification \u003d ParserUtil.parseClassification(","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"roultitude"},"content":"            argMultimap.getValue(PREFIX_CLASSIFICATION).get());","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"roultitude"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"roultitude"},"content":"        Entity entity \u003d new Entity(name, tagList);","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"roultitude"},"content":"        return new AddEntityCommand(entity);","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"roultitude"},"content":"        /*","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"roultitude"},"content":"        if (classification.isCharacter()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"roultitude"},"content":"            //Call AddCharacterCommmand","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"roultitude"},"content":"        } else if (classification.isItem()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"roultitude"},"content":"            return new AddItemCommand(entity);","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"roultitude"},"content":"        } else if (classification.isMob()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"roultitude"},"content":"            // Call AddMobCommand","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"roultitude"},"content":"        } else {","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"roultitude"},"content":"        }*/","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"Zeli0"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"roultitude"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given {@code","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"roultitude"},"content":"     * ArgumentMultimap}.","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"Zeli0"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"Zeli0"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"Zeli0"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"Zeli0"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"roultitude":25,"Zeli0":41}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"Zeli0"},"content":"import seedu.address.logic.commands.AddEntityCommand;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"roultitude"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"Zeli0"},"content":"        case AddEntityCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"Zeli0"},"content":"            return new AddEntityCommandParser().parse(arguments);","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"roultitude"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"roultitude"},"content":"            return new ViewCommand();","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"roultitude":4,"-":73,"Zeli0":3}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"Zeli0"},"content":"    public static final Prefix PREFIX_CLASSIFICATION \u003d new Prefix(\"c/\");","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"    public static final Prefix PREFIX_STRENGTH \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"    public static final Prefix PREFIX_DEXTERITY \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"    public static final Prefix PREFIX_INTELLIGENCE \u003d new Prefix(\"i/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"    public static final Prefix PREFIX_LEVEL \u003d new Prefix(\"lvl/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"    public static final Prefix PREFIX_XP \u003d new Prefix(\"x/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"    public static final Prefix PREFIX_CHALLENGE_RATING \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"    public static final Prefix PREFIX_LEGENDARY \u003d new Prefix(\"l/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"-":14,"LeonardYam":7,"Zeli0":1}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"Zeli0"},"content":"import seedu.address.model.entity.Classification;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.entity.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":29,"author":{"gitId":"roultitude"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":41,"author":{"gitId":"roultitude"},"content":"     * Parses a {@code String name} into a {@code Name}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":55,"author":{"gitId":"roultitude"},"content":"     * Parses a {@code String phone} into a {@code Phone}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"roultitude"},"content":"     * Parses a {@code String address} into an {@code Address}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"roultitude"},"content":"     * Parses a {@code String email} into an {@code Email}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"roultitude"},"content":"     * Parses a {@code String classification} into an {@code Classification}. Leading and trailing whitespaces will be","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"roultitude"},"content":"     * trimmed.","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"Zeli0"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"Zeli0"},"content":"     * @throws ParseException if the given {@code classification} is invalid.","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"Zeli0"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"Zeli0"},"content":"    public static Classification parseClassification(String classification) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"Zeli0"},"content":"        requireNonNull(classification);","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"Zeli0"},"content":"        String trimmedClassification \u003d classification.trim();","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"Zeli0"},"content":"        if (!Classification.isValidClassification(trimmedClassification)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"Zeli0"},"content":"            throw new ParseException(Classification.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"Zeli0"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"Zeli0"},"content":"        return new Classification(trimmedClassification);","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"roultitude"},"content":"     * Parses a {@code String tag} into a {@code Tag}. Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":137,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":138,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"LeonardYam"},"content":"     * Parses integer","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":141,"author":{"gitId":"LeonardYam"},"content":"    public static int parseInt(String integer) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"LeonardYam"},"content":"        requireNonNull(integer);","lastModifiedDate":"2023-03-15"},{"lineNumber":143,"author":{"gitId":"LeonardYam"},"content":"        String trimmedInt \u003d integer.trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"LeonardYam"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":145,"author":{"gitId":"LeonardYam"},"content":"            return Integer.parseInt(trimmedInt);","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"LeonardYam"},"content":"        } catch (NumberFormatException err) {","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"LeonardYam"},"content":"            throw new ParseException(err.getMessage());","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"roultitude":9,"-":114,"LeonardYam":13,"Zeli0":14}},{"path":"src/main/java/seedu/address/logic/parser/UiSwitchMode.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"roultitude"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"roultitude"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"roultitude"},"content":" * Enum of possible state transitions from a parsed command.","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"roultitude"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"roultitude"},"content":"public enum UiSwitchMode {","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"roultitude"},"content":"    NONE,","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"roultitude"},"content":"    VIEW,","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"roultitude"},"content":"    LIST,","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"roultitude"},"content":"    TOGGLE","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"roultitude"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"roultitude":11}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"roultitude"},"content":"    public void setPersons(List\u003cEntity\u003e entities) {","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"roultitude"},"content":"        this.persons.setPersons(entities);","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"roultitude"},"content":"    public boolean hasPerson(Entity entity) {","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"roultitude"},"content":"        requireNonNull(entity);","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"roultitude"},"content":"        return persons.contains(entity);","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"roultitude"},"content":"    public void addPerson(Entity p) {","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"roultitude"},"content":"    public void setPerson(Entity target, Entity editedEntity) {","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"roultitude"},"content":"        requireNonNull(editedEntity);","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"roultitude"},"content":"        persons.setPerson(target, editedEntity);","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"roultitude"},"content":"    public void removePerson(Entity key) {","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"roultitude"},"content":"    public ObservableList\u003cEntity\u003e getPersonList() {","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"roultitude":12,"-":108}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"roultitude"},"content":"    Predicate\u003cEntity\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"roultitude"},"content":"    boolean hasPerson(Entity entity);","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"roultitude"},"content":"    void deletePerson(Entity target);","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"roultitude"},"content":"    void addPerson(Entity entity);","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":77,"author":{"gitId":"roultitude"},"content":"    void setPerson(Entity target, Entity editedEntity);","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":80,"author":{"gitId":"roultitude"},"content":"    ObservableList\u003cEntity\u003e getFilteredPersonList();","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"roultitude"},"content":"    void updateFilteredPersonList(Predicate\u003cEntity\u003e predicate);","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"roultitude":8,"-":79}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"roultitude"},"content":"    private final FilteredList\u003cEntity\u003e filteredEntities;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"roultitude"},"content":"        filteredEntities \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"LeonardYam"},"content":"     * TBC","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"LeonardYam"},"content":"     * TBC","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"roultitude"},"content":"    public boolean hasPerson(Entity entity) {","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"roultitude"},"content":"        requireNonNull(entity);","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"roultitude"},"content":"        return addressBook.hasPerson(entity);","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":104,"author":{"gitId":"roultitude"},"content":"    public void deletePerson(Entity target) {","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":109,"author":{"gitId":"roultitude"},"content":"    public void addPerson(Entity entity) {","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"roultitude"},"content":"        addressBook.addPerson(entity);","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"roultitude"},"content":"    public void setPerson(Entity target, Entity editedEntity) {","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"roultitude"},"content":"        requireAllNonNull(target, editedEntity);","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"roultitude"},"content":"        addressBook.setPerson(target, editedEntity);","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":128,"author":{"gitId":"roultitude"},"content":"    public ObservableList\u003cEntity\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"roultitude"},"content":"        return filteredEntities;","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":133,"author":{"gitId":"roultitude"},"content":"    public void updateFilteredPersonList(Predicate\u003cEntity\u003e predicate) {","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"roultitude"},"content":"        filteredEntities.setPredicate(predicate);","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"roultitude"},"content":"                \u0026\u0026 filteredEntities.equals(other.filteredEntities);","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"roultitude":17,"-":133,"LeonardYam":7}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"roultitude"},"content":"    ObservableList\u003cEntity\u003e getPersonList();","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"roultitude":2,"-":15}},{"path":"src/main/java/seedu/address/model/entity/Character.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"package seedu.address.model.entity;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":" * Represents a Character, which is a child class of Entity","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"public class Character extends Entity {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"    private Stats stats;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"    private int level;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"    // Represents the amount of experience points (xp) needed for the next level-up","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"    private int xp;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"     * Every field should be present and non-null.","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"     * @param name name of the character","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"     * @param stats stats of the character (e.g. Strength, Dexterity)","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"     * @param level level of the character","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"     * @param xp experience points of the character","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"     * @param tags tags categorizing the character","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"    public Character(Name name, Stats stats, int level, int xp, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"LeonardYam"},"content":"        super(name, tags);","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"LeonardYam"},"content":"        this.stats \u003d stats;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"        this.level \u003d level;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"LeonardYam"},"content":"        this.xp \u003d xp;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"jiexuanc"},"content":"    public int getLevel() {","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"jiexuanc"},"content":"        return this.level;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jiexuanc"},"content":"    public int getXP() {","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"jiexuanc"},"content":"        return this.xp;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"jiexuanc"},"content":"    public Stats getStats() {","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"jiexuanc"},"content":"        return this.stats;","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"LeonardYam"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"LeonardYam"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"LeonardYam"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"LeonardYam"},"content":"        return Objects.hash(","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"LeonardYam"},"content":"                getName(),","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"LeonardYam"},"content":"                stats.getStrength(),","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"LeonardYam"},"content":"                stats.getDexterity(),","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"LeonardYam"},"content":"                stats.getIntelligence(),","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"LeonardYam"},"content":"                getLevel(),","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"LeonardYam"},"content":"                getXP(),","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"LeonardYam"},"content":"                getTags()","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"LeonardYam"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"LeonardYam"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"LeonardYam"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"LeonardYam"},"content":"        String characterDetails \u003d String.format(","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"LeonardYam"},"content":"                \"Name: %s | Str: %d | Dex: %d | Int: %d | Level: %d | XP: %d\",","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"LeonardYam"},"content":"                getName(),","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"LeonardYam"},"content":"                stats.getStrength(),","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"LeonardYam"},"content":"                stats.getDexterity(),","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"LeonardYam"},"content":"                stats.getIntelligence(),","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"LeonardYam"},"content":"                getLevel(),","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"LeonardYam"},"content":"                getXP()","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"LeonardYam"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"LeonardYam"},"content":"        final StringBuilder builder \u003d new StringBuilder(characterDetails);","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"LeonardYam"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"LeonardYam"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"LeonardYam"},"content":"            builder.append(\" | Tags: \");","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"LeonardYam"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"LeonardYam"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jiexuanc":10,"LeonardYam":69}},{"path":"src/main/java/seedu/address/model/entity/Classification.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"package seedu.address.model.entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"Zeli0"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"Zeli0"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"roultitude"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"roultitude"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"roultitude"},"content":" * Represents the classification of an entity: char, item or mob","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"roultitude"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"Zeli0"},"content":"public class Classification {","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"Zeli0"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"Zeli0"},"content":"        \"Classifications can only be char, item or mob, and should not be left blank.\";","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"Zeli0"},"content":"    public static final String VALIDATION_REGEX \u003d \"char|item|mob\";","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"Zeli0"},"content":"    public final String classification;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"Zeli0"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"Zeli0"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"Zeli0"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"Zeli0"},"content":"     * @param classification A valid category.","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"Zeli0"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"Zeli0"},"content":"    public Classification(String classification) {","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"Zeli0"},"content":"        requireNonNull(classification);","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"Zeli0"},"content":"        checkArgument(isValidClassification(classification), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"Zeli0"},"content":"        this.classification \u003d classification;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"Zeli0"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"Zeli0"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"Zeli0"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"Zeli0"},"content":"    public static boolean isValidClassification(String test) {","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"Zeli0"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"Zeli0"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"Zeli0"},"content":"    public String toString() {","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"Zeli0"},"content":"        return classification;","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"Zeli0"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"Zeli0"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"Zeli0"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"Zeli0"},"content":"            || (other instanceof Classification // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"Zeli0"},"content":"            \u0026\u0026 classification.equals(((Classification) other).classification)); // state check","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"Zeli0"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"Zeli0"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"Zeli0"},"content":"        return classification.hashCode();","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"Zeli0"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"Zeli0"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"roultitude"},"content":"    public boolean isCharacter() {","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"roultitude"},"content":"        return Objects.equals(classification, \"char\");","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"roultitude"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"roultitude"},"content":"    public boolean isItem() {","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"roultitude"},"content":"        return Objects.equals(classification, \"item\");","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"roultitude"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"roultitude"},"content":"    public boolean isMob() {","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"roultitude"},"content":"        return Objects.equals(classification, \"mob\");","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"roultitude"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"Zeli0"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"roultitude":18,"Zeli0":50}},{"path":"src/main/java/seedu/address/model/entity/Entity.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"AngJunYang"},"content":"package seedu.address.model.entity;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"roultitude"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"AngJunYang"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"AngJunYang"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"AngJunYang"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"AngJunYang"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"AngJunYang"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"roultitude"},"content":" * Represents a Person in the address book. Guarantees: details are present and not null, field values are validated,","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"roultitude"},"content":" * immutable.","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"roultitude"},"content":"public class Entity {","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"    // Identity fields","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"    private final Name name;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"AngJunYang"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"    public Entity(Name name, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"roultitude"},"content":"        requireAllNonNull(name, tags);","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"AngJunYang"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"AngJunYang"},"content":"    public Name getName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"AngJunYang"},"content":"        return name;","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"roultitude"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException} if modification is attempted.","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"AngJunYang"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"AngJunYang"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"roultitude"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"roultitude"},"content":"     * Returns true if both persons have the same name. This defines a weaker notion of equality between two persons.","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"roultitude"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"roultitude"},"content":"    public boolean isSamePerson(Entity otherEntity) {","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"roultitude"},"content":"        if (otherEntity \u003d\u003d this) {","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"roultitude"},"content":"            return true;","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"roultitude"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"roultitude"},"content":"        return otherEntity !\u003d null","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"roultitude"},"content":"            \u0026\u0026 otherEntity.getName().equals(getName());","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"roultitude"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"roultitude"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"roultitude"},"content":"     * Returns true if both persons have the same identity and data fields. This defines a stronger notion of equality","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"roultitude"},"content":"     * between two persons.","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"roultitude"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"roultitude"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"roultitude"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"roultitude"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"roultitude"},"content":"            return true;","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"roultitude"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"roultitude"},"content":"        if (!(other instanceof Entity)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"roultitude"},"content":"            return false;","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"roultitude"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"roultitude"},"content":"        Entity otherEntity \u003d (Entity) other;","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"roultitude"},"content":"        return otherEntity.getName().equals(getName())","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"roultitude"},"content":"            \u0026\u0026 otherEntity.getTags().equals(getTags());","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"roultitude"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"AngJunYang"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"AngJunYang"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"AngJunYang"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"AngJunYang"},"content":"        return Objects.hash(name, tags);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"AngJunYang"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"AngJunYang"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"AngJunYang"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"AngJunYang"},"content":"        builder.append(getName());","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"AngJunYang"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"AngJunYang"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"AngJunYang"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"AngJunYang"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"AngJunYang"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"jiexuanc"},"content":"    // Not implemented. in other branch temp.","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"roultitude"},"content":"    public boolean isSameEntity(seedu.address.model.entity.Entity other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"jiexuanc"},"content":"        return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"AngJunYang"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"roultitude":41,"jiexuanc":3,"AngJunYang":50,"LeonardYam":2}},{"path":"src/main/java/seedu/address/model/entity/Item.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jiexuanc"},"content":"package seedu.address.model.entity;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"AngJunYang"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"jiexuanc"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":" * Represents an item, which is a child class of Entity","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"jiexuanc"},"content":"public class Item extends Entity {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"AngJunYang"},"content":"    private final int cost;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"AngJunYang"},"content":"    private final float weight;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"AngJunYang"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"AngJunYang"},"content":"     * Every field should be present and non-null.","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"AngJunYang"},"content":"     * @param name name of the character","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"AngJunYang"},"content":"     * @param cost price of the item","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"AngJunYang"},"content":"     * @param weight weight of the item","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"AngJunYang"},"content":"     * @param tags tags categorizing the item","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"AngJunYang"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"AngJunYang"},"content":"    public Item(Name name, int cost, float weight, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"jiexuanc"},"content":"        super(name, tags);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"AngJunYang"},"content":"        this.cost \u003d cost;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"AngJunYang"},"content":"        this.weight \u003d weight;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"AngJunYang"},"content":"    public int getCost() { return this.cost; }","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"AngJunYang"},"content":"    public float getWeight() { return this.weight; }","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"AngJunYang"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"AngJunYang"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"AngJunYang"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"AngJunYang"},"content":"        return Objects.hash(","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"AngJunYang"},"content":"                getName(),","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"AngJunYang"},"content":"                getCost(),","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"AngJunYang"},"content":"                getWeight(),","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"AngJunYang"},"content":"                getTags()","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"AngJunYang"},"content":"        );","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"AngJunYang"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"AngJunYang"},"content":"    public String toString() {","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"AngJunYang"},"content":"        String characterDetails \u003d String.format(","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"AngJunYang"},"content":"                \"Name: %s | Cost: %d | Weight: %d | Attribute: %s\",","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"AngJunYang"},"content":"                getName(),","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"AngJunYang"},"content":"                getCost(),","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"AngJunYang"},"content":"                getWeight()","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"AngJunYang"},"content":"        );","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"AngJunYang"},"content":"        final StringBuilder builder \u003d new StringBuilder(characterDetails);","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"AngJunYang"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"AngJunYang"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"AngJunYang"},"content":"            builder.append(\" | Tags: \");","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"AngJunYang"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"AngJunYang"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"AngJunYang"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"AngJunYang"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"AngJunYang"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"jiexuanc"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jiexuanc":8,"AngJunYang":49,"LeonardYam":5}},{"path":"src/main/java/seedu/address/model/entity/Mob.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"package seedu.address.model.entity;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":" * Represents a mob, which is a child class of Entity","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"public class Mob extends Entity {","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"    private final Stats stats;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"    // A higher challenge rating (CR) represents an increased difficulty to defeat a mob","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"    private final int challengeRating;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"    private final boolean isLegendary;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"     * Every field should be present and non-null.","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"     * @param name name of the mob","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"     * @param stats stats of the mob (e.g. Strength, Dexterity)","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"     * @param challengeRating challenge rating of the mob","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"     * @param isLegendary legendary status of the mob","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"     * @param tags tags categorizing the mob","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"    public Mob(Name name, Stats stats, int challengeRating, boolean isLegendary, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"LeonardYam"},"content":"        super(name, tags);","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"LeonardYam"},"content":"        this.stats \u003d stats;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"        this.challengeRating \u003d challengeRating;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"LeonardYam"},"content":"        this.isLegendary \u003d isLegendary;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"LeonardYam"},"content":"    public int getChallengeRating() { return this.challengeRating; }","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"LeonardYam"},"content":"    public boolean getLegendaryStatus() { return this.isLegendary; }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"jiexuanc"},"content":"    public Stats getStats() {","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"jiexuanc"},"content":"        return this.getStats();","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"jiexuanc"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"jiexuanc"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"LeonardYam"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"LeonardYam"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"LeonardYam"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"LeonardYam"},"content":"        return Objects.hash(","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"LeonardYam"},"content":"                getName(),","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"LeonardYam"},"content":"                stats.getStrength(),","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"LeonardYam"},"content":"                stats.getDexterity(),","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"LeonardYam"},"content":"                stats.getIntelligence(),","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"LeonardYam"},"content":"                getChallengeRating(),","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"LeonardYam"},"content":"                getLegendaryStatus(),","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"LeonardYam"},"content":"                getTags()","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"LeonardYam"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"LeonardYam"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"LeonardYam"},"content":"    public String toString() {","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"LeonardYam"},"content":"        String characterDetails \u003d String.format(","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"LeonardYam"},"content":"                \"Name: %s | Str: %d | Dex: %d | Int: %d | CR: %d | Legendary: %b\",","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"LeonardYam"},"content":"                getName(),","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"LeonardYam"},"content":"                stats.getStrength(),","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"LeonardYam"},"content":"                stats.getDexterity(),","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"LeonardYam"},"content":"                stats.getIntelligence(),","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"LeonardYam"},"content":"                getChallengeRating(),","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"LeonardYam"},"content":"                getLegendaryStatus()","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"LeonardYam"},"content":"        );","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"LeonardYam"},"content":"        final StringBuilder builder \u003d new StringBuilder(characterDetails);","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"LeonardYam"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"LeonardYam"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"LeonardYam"},"content":"            builder.append(\" | Tags: \");","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"LeonardYam"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"LeonardYam"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"LeonardYam"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"jiexuanc":4,"LeonardYam":71}},{"path":"src/main/java/seedu/address/model/entity/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zeli0"},"content":"package seedu.address.model.entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":58,"Zeli0":1}},{"path":"src/main/java/seedu/address/model/entity/Stats.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"LeonardYam"},"content":"package seedu.address.model.entity;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"LeonardYam"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"LeonardYam"},"content":" * Represents the stats of a single character/mob","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"LeonardYam"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"LeonardYam"},"content":"public class Stats {","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"LeonardYam"},"content":"    private final int strength;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"LeonardYam"},"content":"    private final int dexterity;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"LeonardYam"},"content":"    private final int intelligence;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"LeonardYam"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"LeonardYam"},"content":"     * Every field should be present and non-null.","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"LeonardYam"},"content":"     * @param str Strength of the character/mob","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"LeonardYam"},"content":"     * @param dex Dexterity of the character/mob","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"LeonardYam"},"content":"     * @param intel Intelligence of the character/mob","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"LeonardYam"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"LeonardYam"},"content":"    public Stats(int str, int dex, int intel) {","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"LeonardYam"},"content":"        this.strength \u003d str;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"LeonardYam"},"content":"        this.dexterity \u003d dex;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"LeonardYam"},"content":"        this.intelligence \u003d intel;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"LeonardYam"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"LeonardYam"},"content":"    public int getStrength() { return this.strength; }","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"LeonardYam"},"content":"    public int getDexterity() { return this.dexterity; }","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"LeonardYam"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"LeonardYam"},"content":"    public int getIntelligence() { return this.intelligence; }","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"LeonardYam"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"LeonardYam":28}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"roultitude"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cEntity\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"roultitude"},"content":"    public boolean test(Entity entity) {","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"roultitude"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(entity.getName().fullName, keyword));","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"roultitude":4,"-":28}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"roultitude"},"content":" * @see Entity#isSamePerson(Entity)","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"roultitude"},"content":"public class UniquePersonList implements Iterable\u003cEntity\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"roultitude"},"content":"    private final ObservableList\u003cEntity\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"roultitude"},"content":"    private final ObservableList\u003cEntity\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"roultitude"},"content":"    public boolean contains(Entity toCheck) {","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"roultitude"},"content":"    public void add(Entity toAdd) {","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":57,"author":{"gitId":"roultitude"},"content":"    public void setPerson(Entity target, Entity editedEntity) {","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"roultitude"},"content":"        requireAllNonNull(target, editedEntity);","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"roultitude"},"content":"        if (!target.isSamePerson(editedEntity) \u0026\u0026 contains(editedEntity)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"roultitude"},"content":"        internalList.set(index, editedEntity);","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"roultitude"},"content":"    public void remove(Entity toRemove) {","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"roultitude"},"content":"    public void setPersons(List\u003cEntity\u003e entities) {","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"roultitude"},"content":"        requireAllNonNull(entities);","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"roultitude"},"content":"        if (!personsAreUnique(entities)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"roultitude"},"content":"        internalList.setAll(entities);","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"roultitude"},"content":"    public ObservableList\u003cEntity\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"roultitude"},"content":"    public Iterator\u003cEntity\u003e iterator() {","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"roultitude"},"content":"    private boolean personsAreUnique(List\u003cEntity\u003e entities) {","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"roultitude"},"content":"        for (int i \u003d 0; i \u003c entities.size() - 1; i++) {","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"roultitude"},"content":"            for (int j \u003d i + 1; j \u003c entities.size(); j++) {","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"roultitude"},"content":"                if (entities.get(i).isSamePerson(entities.get(j))) {","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"roultitude":22,"-":116}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"Zeli0"},"content":"import seedu.address.model.entity.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"roultitude"},"content":"    public static Entity[] getSamplePersons() {","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"roultitude"},"content":"        return new Entity[]{","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"roultitude"},"content":"            new Entity(new Name(\"Alex Yeoh\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":22,"author":{"gitId":"roultitude"},"content":"            new Entity(new Name(\"Bernice Yu\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":24,"author":{"gitId":"roultitude"},"content":"            new Entity(new Name(\"Charlotte Oliveiro\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":26,"author":{"gitId":"roultitude"},"content":"            new Entity(new Name(\"David Li\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":28,"author":{"gitId":"roultitude"},"content":"            new Entity(new Name(\"Irfan Ibrahim\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":30,"author":{"gitId":"roultitude"},"content":"            new Entity(new Name(\"Roy Balakrishnan\"),","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":37,"author":{"gitId":"roultitude"},"content":"        for (Entity sampleEntity : getSamplePersons()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"roultitude"},"content":"            sampleAb.addPerson(sampleEntity);","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"roultitude":12,"-":39,"Zeli0":1}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"Zeli0"},"content":"import seedu.address.model.entity.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"roultitude"},"content":" * Jackson-friendly version of {@link Entity}.","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"roultitude"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"roultitude"},"content":"    public JsonAdaptedPerson(Entity source) {","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"roultitude"},"content":"    public Entity toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"roultitude"},"content":"        return new Entity(modelName, modelTags);","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"roultitude":6,"-":65,"Zeli0":1}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"roultitude"},"content":"            Entity entity \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"roultitude"},"content":"            if (addressBook.hasPerson(entity)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"roultitude"},"content":"            addressBook.addPerson(entity);","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"roultitude":4,"-":56}},{"path":"src/main/java/seedu/address/ui/EntityListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"roultitude"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"roultitude"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"roultitude"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"roultitude"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"roultitude"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"roultitude"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"roultitude"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"roultitude"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"roultitude"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"roultitude"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"roultitude"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"roultitude"},"content":"public class EntityListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"roultitude"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"roultitude"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EntityListPanel.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"roultitude"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"roultitude"},"content":"    private ListView\u003cEntity\u003e personListView;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"roultitude"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"roultitude"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"roultitude"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"roultitude"},"content":"    public EntityListPanel(ObservableList\u003cEntity\u003e entityList) {","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"roultitude"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"roultitude"},"content":"        personListView.setItems(entityList);","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"roultitude"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"roultitude"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"roultitude"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"roultitude"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"roultitude"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"roultitude"},"content":"    class PersonListViewCell extends ListCell\u003cEntity\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"roultitude"},"content":"        @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"roultitude"},"content":"        protected void updateItem(Entity entity, boolean empty) {","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"roultitude"},"content":"            super.updateItem(entity, empty);","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"roultitude"},"content":"            if (empty || entity \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"roultitude"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"roultitude"},"content":"                setText(null);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"roultitude"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"roultitude"},"content":"                setGraphic(new PersonCard(entity, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"roultitude"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"roultitude"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"roultitude"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"roultitude"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"roultitude":51}},{"path":"src/main/java/seedu/address/ui/ListModePanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"roultitude"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"roultitude"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"roultitude"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"roultitude"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"roultitude"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"roultitude"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"roultitude"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"roultitude"},"content":" * Panel containing the detailed entity view elements.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"roultitude"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"roultitude"},"content":"public class ListModePanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"roultitude"},"content":"    private static final String FXML \u003d \"ListModePanel.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"roultitude"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ListModePanel.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"roultitude"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"roultitude"},"content":"    private StackPane entityListPanelPlaceholder;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"roultitude"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"roultitude"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"roultitude"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"roultitude"},"content":"    public ListModePanel(EntityListPanel entityListPanel) {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"roultitude"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"roultitude"},"content":"        entityListPanelPlaceholder.getChildren().add(entityListPanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"roultitude"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"roultitude"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"roultitude":29}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"roultitude"},"content":" * The Main Window. Provides the basic application layout containing a menu bar and space where other JavaFX elements","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"roultitude"},"content":" * can be placed.","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"roultitude"},"content":"    private ViewModePanel viewModePanel;","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"roultitude"},"content":"    private EntityListPanel viewModeEntityListPanel;","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"roultitude"},"content":"    private ListModePanel listModePanel;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"roultitude"},"content":"    private EntityListPanel listModeEntityListPanel;","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"roultitude"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"roultitude"},"content":"    private StackPane modePanelPlaceholder;","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"roultitude"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"roultitude"},"content":"    private StackPane entityListPanelPlaceholder;","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"roultitude"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"roultitude"},"content":"        listModeEntityListPanel \u003d new EntityListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"roultitude"},"content":"        viewModeEntityListPanel \u003d new EntityListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"roultitude"},"content":"        listModePanel \u003d new ListModePanel(listModeEntityListPanel);","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"roultitude"},"content":"        viewModePanel \u003d new ViewModePanel(viewModeEntityListPanel);","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"roultitude"},"content":"        modePanelPlaceholder.getChildren().add(listModePanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":142,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":190,"author":{"gitId":"roultitude"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":191,"author":{"gitId":"roultitude"},"content":"     * Switches between list mode and view mode displays.","lastModifiedDate":"2023-03-14"},{"lineNumber":192,"author":{"gitId":"roultitude"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":193,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":194,"author":{"gitId":"roultitude"},"content":"    public void switchDisplayMode(boolean isViewMode) {","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"roultitude"},"content":"        logger.info(\"switching display mode, isViewMode: \" + isViewMode);","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"roultitude"},"content":"        modePanelPlaceholder.getChildren().remove(0);","lastModifiedDate":"2023-03-14"},{"lineNumber":197,"author":{"gitId":"roultitude"},"content":"        if (isViewMode) {","lastModifiedDate":"2023-03-14"},{"lineNumber":198,"author":{"gitId":"roultitude"},"content":"            modePanelPlaceholder.getChildren().add(viewModePanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":199,"author":{"gitId":"roultitude"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":200,"author":{"gitId":"roultitude"},"content":"            modePanelPlaceholder.getChildren().add(listModePanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":201,"author":{"gitId":"roultitude"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":202,"author":{"gitId":"roultitude"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":203,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"roultitude"},"content":"            switch (commandResult.getSwitchMode()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":224,"author":{"gitId":"roultitude"},"content":"            case NONE:","lastModifiedDate":"2023-03-14"},{"lineNumber":225,"author":{"gitId":"roultitude"},"content":"                break;","lastModifiedDate":"2023-03-14"},{"lineNumber":226,"author":{"gitId":"roultitude"},"content":"            case VIEW:","lastModifiedDate":"2023-03-14"},{"lineNumber":227,"author":{"gitId":"roultitude"},"content":"                switchDisplayMode(true);","lastModifiedDate":"2023-03-14"},{"lineNumber":228,"author":{"gitId":"roultitude"},"content":"                break;","lastModifiedDate":"2023-03-14"},{"lineNumber":229,"author":{"gitId":"roultitude"},"content":"            case LIST:","lastModifiedDate":"2023-03-14"},{"lineNumber":230,"author":{"gitId":"roultitude"},"content":"                switchDisplayMode(false);","lastModifiedDate":"2023-03-14"},{"lineNumber":231,"author":{"gitId":"roultitude"},"content":"                break;","lastModifiedDate":"2023-03-14"},{"lineNumber":232,"author":{"gitId":"roultitude"},"content":"            case TOGGLE:","lastModifiedDate":"2023-03-14"},{"lineNumber":233,"author":{"gitId":"roultitude"},"content":"                switchDisplayMode(modePanelPlaceholder.getChildren().contains(listModePanel.getRoot()));","lastModifiedDate":"2023-03-14"},{"lineNumber":234,"author":{"gitId":"roultitude"},"content":"                break;","lastModifiedDate":"2023-03-14"},{"lineNumber":235,"author":{"gitId":"roultitude"},"content":"            default:","lastModifiedDate":"2023-03-14"},{"lineNumber":236,"author":{"gitId":"roultitude"},"content":"                logger.info(\"UiSwitchMode enum switch case defaulted!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"roultitude"},"content":"                assert (false);","lastModifiedDate":"2023-03-14"},{"lineNumber":238,"author":{"gitId":"roultitude"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":247,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"roultitude":55,"-":192}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"roultitude"},"content":"    public final Entity entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"roultitude"},"content":"     * Creates a {@code PersonCard} with the given {@code Person} and index to display.","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"roultitude"},"content":"    public PersonCard(Entity entity, int displayedIndex) {","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"roultitude"},"content":"        this.entity \u003d entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"roultitude"},"content":"        name.setText(entity.getName().fullName);","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"roultitude"},"content":"        entity.getTags().stream()","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"roultitude"},"content":"                \u0026\u0026 entity.equals(card.entity);","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"roultitude":8,"-":60}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"roultitude"},"content":"import seedu.address.model.entity.Entity;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"roultitude"},"content":"    private ListView\u003cEntity\u003e personListView;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"roultitude"},"content":"    public PersonListPanel(ObservableList\u003cEntity\u003e entityList) {","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"roultitude"},"content":"        personListView.setItems(entityList);","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"roultitude"},"content":"    class PersonListViewCell extends ListCell\u003cEntity\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"roultitude"},"content":"        protected void updateItem(Entity entity, boolean empty) {","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"roultitude"},"content":"            super.updateItem(entity, empty);","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"roultitude"},"content":"            if (empty || entity \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"roultitude"},"content":"                setGraphic(new PersonCard(entity, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"roultitude":9,"-":40}},{"path":"src/main/java/seedu/address/ui/ViewModePanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"roultitude"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"roultitude"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"roultitude"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"roultitude"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"roultitude"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"roultitude"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"roultitude"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"roultitude"},"content":" * Panel containing the detailed entity view elements.","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"roultitude"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"roultitude"},"content":"public class ViewModePanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"roultitude"},"content":"    private static final String FXML \u003d \"ViewModePanel.fxml\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"roultitude"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ViewModePanel.class);","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"roultitude"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"roultitude"},"content":"    private StackPane entityListPanelPlaceholder;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"roultitude"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"roultitude"},"content":"    private StackPane entityDetailsPlaceholder;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"roultitude"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"roultitude"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"roultitude"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"roultitude"},"content":"    public ViewModePanel(EntityListPanel entityListPanel) {","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"roultitude"},"content":"        super(FXML);","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"roultitude"},"content":"        entityListPanelPlaceholder.getChildren().add(entityListPanel.getRoot());","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"roultitude"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"roultitude"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"roultitude":32}},{"path":"src/main/resources/view/EntityListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"roultitude"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"roultitude"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"roultitude"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"roultitude"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"roultitude"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"roultitude"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"roultitude":8}},{"path":"src/main/resources/view/ListModePanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"roultitude"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"roultitude"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"roultitude"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"roultitude"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"roultitude"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"roultitude"},"content":"\u003cHBox alignment\u003d\"CENTER\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"roultitude"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"roultitude"},"content":"      \u003cVBox fx:id\u003d\"entityList\" minHeight\u003d\"100.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"roultitude"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"roultitude"},"content":"            \u003cStackPane fx:id\u003d\"entityListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"roultitude"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"roultitude"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"roultitude"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"roultitude"},"content":"   \u003cstylesheets\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"roultitude"},"content":"      \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"roultitude"},"content":"      \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"roultitude"},"content":"   \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"roultitude"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"roultitude":20}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"roultitude"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"roultitude"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Address App\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"roultitude"},"content":"            \u003cStackPane fx:id\u003d\"modePanelPlaceholder\" minHeight\u003d\"100\" prefHeight\u003d\"400.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":36,"author":{"gitId":"roultitude"},"content":"                  \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"roultitude"},"content":"           \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"roultitude"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"roultitude"},"content":"           \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":48,"author":{"gitId":"roultitude"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"roultitude":8,"-":48}},{"path":"src/main/resources/view/ViewModePanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"roultitude"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"roultitude"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"roultitude"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"roultitude"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"roultitude"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"roultitude"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"roultitude"},"content":"\u003cHBox alignment\u003d\"CENTER\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"roultitude"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"roultitude"},"content":"      \u003cVBox fx:id\u003d\"entityList\" minHeight\u003d\"100.0\" prefWidth\u003d\"340.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"roultitude"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"roultitude"},"content":"            \u003cStackPane fx:id\u003d\"entityListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"roultitude"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"roultitude"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"roultitude"},"content":"      \u003cStackPane fx:id\u003d\"entityDetailsPlaceholder\" minHeight\u003d\"100.0\" minWidth\u003d\"200.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"roultitude"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"roultitude"},"content":"   \u003cstylesheets\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"roultitude"},"content":"      \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"roultitude"},"content":"      \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"roultitude"},"content":"   \u003c/stylesheets\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"roultitude"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"roultitude":22}}]
