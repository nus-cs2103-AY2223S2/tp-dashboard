[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-T11-4/tp/branch/master/graph/badge.svg?token\u003d540MA4AXQI)](https://codecov.io/gh/AY2223S2-CS2103T-T11-4/tp)","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"* This is our **Team Project for CS2103T-T11-4**.","lastModifiedDate":"2023-03-01"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"* HospiSearch (HS) is a **desktop app for managing patients and hospital admin details, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI).","lastModifiedDate":"2023-03-01"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"* Users will be able to add patients alongside their contact info and address.","lastModifiedDate":"2023-03-01"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"* Users will be able to find patients according to their names.","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"dawg420":9,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"run {","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    archiveFileName \u003d \u0027addressbook.jar\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"ongweijie7"},"content":"tasks.withType(JavaCompile) {","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"ongweijie7"},"content":"    options.compilerArgs \u003c\u003c \u0027-Xlint:unchecked\u0027","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"ongweijie7"},"content":"    options.deprecation \u003d true","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"ongweijie7"},"content":"}","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ongweijie7":5,"Creationsv2":4,"-":72}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"### Jonathon Low Eng Kiat","lastModifiedDate":"2023-03-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"\u003cimg src\u003d\"images/creationsv2.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"[[github](https://github.com/Creationsv2)]","lastModifiedDate":"2023-03-01"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"[[portfolio](team/creationsv2.md)]","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"* Role: Developer","lastModifiedDate":"2023-03-01"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"* Responsibilities: ","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"  * `add` command","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"  * `nric`, `tag`, `doctor` fields","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"  * User Guide","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"### Ong Wei Jie","lastModifiedDate":"2023-03-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"\u003cimg src\u003d\"images/ongweijie7.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"[[github](http://github.com/ongweijie7)]","lastModifiedDate":"2023-03-01"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"[[portfolio](team/ongweijie7.md)]","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"* Role: Developer","lastModifiedDate":"2023-03-01"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"* Responsibilities: ","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"  * `filter` command","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"  * `gender`, `dateofbirth` fields","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"  * Developer Guide","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"### Sean Chin Jun Kai","lastModifiedDate":"2023-03-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"\u003cimg src\u003d\"images/seanchinjunkai.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"[[github](http://github.com/seanchinjunkai)]","lastModifiedDate":"2023-03-01"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"[[portfolio](team/seanchinjunkai.md)]","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"* Responsibilities: ","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"  * `help` and `delete` commands","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"  * `drugallergy` field","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"  * User Guide","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"Creationsv2"},"content":"### Ma Yu Chen","lastModifiedDate":"2023-03-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"Creationsv2"},"content":"\u003cimg src\u003d\"images/dawg420.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"Creationsv2"},"content":"[[github](http://github.com/dawg420)]","lastModifiedDate":"2023-03-01"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"[[portfolio](team/dawg420.md)]","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"* Responsibilities:","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"  * `backup`, `load`, `viewbackups` and `deletebackups` commands","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"  * `medicine` field","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"  * Developer Guide","lastModifiedDate":"2023-04-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"CedricPei"},"content":"### Pei Wenqi","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"Creationsv2"},"content":"\u003cimg src\u003d\"images/cedricpei.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-03-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"Creationsv2"},"content":"[[github](http://github.com/cedricpei)]","lastModifiedDate":"2023-03-01"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"[[portfolio](team/cedricpei.md)]","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"SeanChinJunKai"},"content":"* Responsibilities:","lastModifiedDate":"2023-04-09"},{"lineNumber":70,"author":{"gitId":"SeanChinJunKai"},"content":"  * GUI","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"SeanChinJunKai"},"content":"  * `undo`, `redo`, `light`, `dark`, `view` commands","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"SeanChinJunKai"},"content":"  * User Guide","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"CedricPei":1,"SeanChinJunKai":25,"Creationsv2":16,"-":30}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"layout: page ","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"# Table of Contents:","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"- [Acknowledgements](#acknowledgements)","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"- [Setting up, getting started](#setting-up-getting-started)","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"- [Design](#design)","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"    - [Architecture](#architecture)","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"    - [UI Component](#ui-component)","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"    - [Logic Component](#logic-component)","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"    - [Model Component](#model-component)","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"    - [Storage Component](#storage-component)","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"    - [Common Classes](#common-classes)","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"- [Implementation](#implementation)","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    - [Backup/Load feature](#backupload-feature)","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"    - [Undo/Redo feature](#undoredo-feature)","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"    - [Add patient feature](#add-patient-feature)","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"    - [Edit patient feature](#edit-patient-feature)","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"CedricPei"},"content":"    - [View patient particulars feature](#view-patient-particulars-feature)","lastModifiedDate":"2023-04-08"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"    - [Delete patient feature](#delete-patient-record-by-nric-feature)","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"    - [Filter patients feature](#filter-patient-record-by-attribute)","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"CedricPei"},"content":"    - [Light/dark theme](#lightdark-theme)","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"    - [Adding Nric as identifier](#adding-nric-as-identifier)","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"    - [Adding health conditions](#adding-health-conditions)","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"    - [Adding attending doctor](#adding-attending-doctor)","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"- [Documentation, logging, testing, configuration, dev-ops](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"- [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"    - [Product Scope](#product-scope)","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"    - [User stories](#user-stories)","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"    - [Use cases](#use-cases)","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"    - [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"    - [Glossary](#glossary)","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"- [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"    - [Launch and shutdown](#launch-and-shutdown)","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"    - [Adding a person](#adding-a-person)","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"    - [Deleting a person](#deleting-a-person)","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"    - [Finding a person](#finding-a-person)","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"    - [Saving and Loading data](#saving-and-loading-data)","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"* Adapted from [AB3](https://github.com/se-edu/addressbook-level3)","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"CedricPei"},"content":"* Adapted `Theme` from [here](https://github.com/junlong4321/tp/blob/master/src/main/java/tutorspet/ui/stylesheet/Stylesheet.java)","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"dawg420"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"dawg420"},"content":"the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"dawg420"},"content":"Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"dawg420"},"content":"diagrams.","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":70,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"dawg420"},"content":"**`Main`** has two classes","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"dawg420"},"content":"called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java)","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"dawg420"},"content":"and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"dawg420"},"content":"is responsible for,","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"dawg420"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"SeanChinJunKai"},"content":"the command `delete i/T0123456A T0124563B`.","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"SeanChinJunKai"},"content":"\u003cimg src\u003d\"images/BetterArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"dawg420"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"dawg420"},"content":"  API `interface` mentioned in the previous point.","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"dawg420"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using","lastModifiedDate":"2023-03-24"},{"lineNumber":112,"author":{"gitId":"dawg420"},"content":"the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component","lastModifiedDate":"2023-03-24"},{"lineNumber":113,"author":{"gitId":"dawg420"},"content":"through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"dawg420"},"content":"implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"dawg420"},"content":"The **API** of this component is specified","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"dawg420"},"content":"in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"ongweijie7"},"content":"\u003cimg src\u003d\"images/UiClassDiagram.png\" width\u003d\"600\" /\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"dawg420"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`","lastModifiedDate":"2023-03-24"},{"lineNumber":130,"author":{"gitId":"dawg420"},"content":", `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures","lastModifiedDate":"2023-03-24"},{"lineNumber":131,"author":{"gitId":"dawg420"},"content":"the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"dawg420"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"dawg420"},"content":"are in the `src/main/resources/view` folder. For example, the layout of","lastModifiedDate":"2023-03-24"},{"lineNumber":135,"author":{"gitId":"dawg420"},"content":"the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java)","lastModifiedDate":"2023-03-24"},{"lineNumber":136,"author":{"gitId":"dawg420"},"content":"is specified","lastModifiedDate":"2023-03-24"},{"lineNumber":137,"author":{"gitId":"dawg420"},"content":"in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":147,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"dawg420"},"content":"**","lastModifiedDate":"2023-03-24"},{"lineNumber":151,"author":{"gitId":"dawg420"},"content":"API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2023-03-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"dawg420"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is","lastModifiedDate":"2023-03-24"},{"lineNumber":161,"author":{"gitId":"dawg420"},"content":"   executed by the `LogicManager`.","lastModifiedDate":"2023-03-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":165,"author":{"gitId":"dawg420"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"dawg420"},"content":"the `execute(\"delete i/T0123456A T0124563B\")` API call.","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"SeanChinJunKai"},"content":"![Interactions Inside the Logic Component for the `delete i/T0123456A T0124563B` Command](images/BetterDeleteSequenceDiagram.png)","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2023-03-30"},{"lineNumber":171,"author":{"gitId":"Creationsv2"},"content":"[] refers to an ArrayList Object.","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"dawg420"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"dawg420"},"content":"  placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"dawg420"},"content":"  the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"dawg420"},"content":"  a `Command` object.","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"dawg420"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser`","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"dawg420"},"content":"  interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"dawg420"},"content":"**","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"dawg420"},"content":"API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"ongweijie7"},"content":"\u003cimg src\u003d\"images/NricModelClassDiagram.png\" width\u003d\"600\" /\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":201,"author":{"gitId":"dawg420"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"dawg420"},"content":"  is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to","lastModifiedDate":"2023-03-24"},{"lineNumber":203,"author":{"gitId":"dawg420"},"content":"  this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-03-24"},{"lineNumber":204,"author":{"gitId":"dawg420"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as","lastModifiedDate":"2023-03-24"},{"lineNumber":205,"author":{"gitId":"dawg420"},"content":"  a `ReadOnlyUserPref` objects.","lastModifiedDate":"2023-03-24"},{"lineNumber":206,"author":{"gitId":"dawg420"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they","lastModifiedDate":"2023-03-24"},{"lineNumber":207,"author":{"gitId":"dawg420"},"content":"  should make sense on their own without depending on other components)","lastModifiedDate":"2023-03-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":211,"author":{"gitId":"ongweijie7"},"content":"\u003cimg src\u003d\"images/BetterNricModelClassDiagram.png\" width\u003d\"500\" /\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":217,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"dawg420"},"content":"**","lastModifiedDate":"2023-03-24"},{"lineNumber":220,"author":{"gitId":"dawg420"},"content":"API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2023-03-24"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":226,"author":{"gitId":"dawg420"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding","lastModifiedDate":"2023-03-24"},{"lineNumber":227,"author":{"gitId":"dawg420"},"content":"  objects.","lastModifiedDate":"2023-03-24"},{"lineNumber":228,"author":{"gitId":"dawg420"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only","lastModifiedDate":"2023-03-24"},{"lineNumber":229,"author":{"gitId":"dawg420"},"content":"  the functionality of only one is needed).","lastModifiedDate":"2023-03-24"},{"lineNumber":230,"author":{"gitId":"dawg420"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects","lastModifiedDate":"2023-03-24"},{"lineNumber":231,"author":{"gitId":"dawg420"},"content":"  that belong to the `Model`)","lastModifiedDate":"2023-03-24"},{"lineNumber":232,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"dawg420"},"content":"### Backup/Load feature","lastModifiedDate":"2023-03-24"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":247,"author":{"gitId":"dawg420"},"content":"The backup feature is facilitated by BackupCommand. Upon execution, it creates a new Storage object. The current state","lastModifiedDate":"2023-03-28"},{"lineNumber":248,"author":{"gitId":"dawg420"},"content":"of the address book, accessed via the model object, is then saved onto the hard disk via the storage object to a","lastModifiedDate":"2023-03-28"},{"lineNumber":249,"author":{"gitId":"dawg420"},"content":"specified location (default: data/backup/...)","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"dawg420"},"content":"Steps of its execution are as follows:","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"dawg420"},"content":"* `BackupCommandParser` parses user input and creates a new BackupCommand with a specified`index` and `description`","lastModifiedDate":"2023-03-28"},{"lineNumber":254,"author":{"gitId":"dawg420"},"content":"* `BackupCommand` is then executed with `execute()`","lastModifiedDate":"2023-03-28"},{"lineNumber":255,"author":{"gitId":"dawg420"},"content":"    * A new `Storage` object is created with the path of the backup file specified.","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"dawg420"},"content":"    * The current Addressbook data, retrieved via `Model.getAddressBook()`, is now saved to the specified location via `","lastModifiedDate":"2023-03-28"},{"lineNumber":257,"author":{"gitId":"dawg420"},"content":"      storage.saveAddressBook()`","lastModifiedDate":"2023-03-28"},{"lineNumber":258,"author":{"gitId":"dawg420"},"content":"    * A `BackupDataStorage` object is retrieved from the model using a getter method. The details of the backup are then","lastModifiedDate":"2023-03-28"},{"lineNumber":259,"author":{"gitId":"dawg420"},"content":"      saved into the hard disk using `BackupDataStorage.saveBackupData()`","lastModifiedDate":"2023-03-28"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":261,"author":{"gitId":"dawg420"},"content":"\u003cimg src\u003d\"images/BackupSequenceDiagram.png\" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":262,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":263,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":264,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":265,"author":{"gitId":"CedricPei"},"content":"### Undo/redo feature","lastModifiedDate":"2023-03-22"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"CedricPei"},"content":"#### Implementation","lastModifiedDate":"2023-04-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"dawg420"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo","lastModifiedDate":"2023-03-24"},{"lineNumber":270,"author":{"gitId":"dawg420"},"content":"history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the","lastModifiedDate":"2023-03-24"},{"lineNumber":271,"author":{"gitId":"dawg420"},"content":"following operations:","lastModifiedDate":"2023-03-24"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"dawg420"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2023-03-24"},{"lineNumber":274,"author":{"gitId":"dawg420"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2023-03-24"},{"lineNumber":275,"author":{"gitId":"dawg420"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2023-03-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"dawg420"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()`","lastModifiedDate":"2023-03-24"},{"lineNumber":278,"author":{"gitId":"dawg420"},"content":"and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2023-03-24"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"dawg420"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the","lastModifiedDate":"2023-03-24"},{"lineNumber":283,"author":{"gitId":"dawg420"},"content":"initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2023-03-24"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"CedricPei"},"content":"Step 2. The user executes `delete i/T1234567A` command to delete the person with NRIC T1234567A. The `delete` command","lastModifiedDate":"2023-04-08"},{"lineNumber":288,"author":{"gitId":"CedricPei"},"content":"calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete i/T1234567A` command executes","lastModifiedDate":"2023-04-08"},{"lineNumber":289,"author":{"gitId":"dawg420"},"content":"to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book","lastModifiedDate":"2023-03-24"},{"lineNumber":290,"author":{"gitId":"dawg420"},"content":"state.","lastModifiedDate":"2023-03-24"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"CedricPei"},"content":"Step 3. The user executes `add i/T1234567A …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`","lastModifiedDate":"2023-04-08"},{"lineNumber":295,"author":{"gitId":"dawg420"},"content":", causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2023-03-24"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":303,"author":{"gitId":"dawg420"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing","lastModifiedDate":"2023-03-24"},{"lineNumber":304,"author":{"gitId":"dawg420"},"content":"the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer`","lastModifiedDate":"2023-03-24"},{"lineNumber":305,"author":{"gitId":"dawg420"},"content":"once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2023-03-24"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":309,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":310,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":314,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":318,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":320,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":322,"author":{"gitId":"dawg420"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once","lastModifiedDate":"2023-03-24"},{"lineNumber":323,"author":{"gitId":"dawg420"},"content":"to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2023-03-24"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"dawg420"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such","lastModifiedDate":"2023-03-24"},{"lineNumber":330,"author":{"gitId":"dawg420"},"content":"as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`.","lastModifiedDate":"2023-03-24"},{"lineNumber":331,"author":{"gitId":"dawg420"},"content":"Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2023-03-24"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"dawg420"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not","lastModifiedDate":"2023-03-24"},{"lineNumber":336,"author":{"gitId":"dawg420"},"content":"pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be","lastModifiedDate":"2023-03-24"},{"lineNumber":337,"author":{"gitId":"CedricPei"},"content":"purged. Reason: It no longer makes sense to redo the `add i/T1234567A …​` command. This is the behavior that most modern","lastModifiedDate":"2023-04-08"},{"lineNumber":338,"author":{"gitId":"dawg420"},"content":"desktop applications follow.","lastModifiedDate":"2023-03-24"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":342,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":346,"author":{"gitId":"CedricPei"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":347,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":348,"author":{"gitId":"SeanChinJunKai"},"content":"### Add patient feature","lastModifiedDate":"2023-03-27"},{"lineNumber":349,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":350,"author":{"gitId":"SeanChinJunKai"},"content":"#### Implementation","lastModifiedDate":"2023-03-27"},{"lineNumber":351,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":352,"author":{"gitId":"dawg420"},"content":"The implemented add mechanism is facilitated by `AddCommandParser`. It extends `AddressBookParser` and implements the","lastModifiedDate":"2023-03-28"},{"lineNumber":353,"author":{"gitId":"dawg420"},"content":"following operations:","lastModifiedDate":"2023-03-28"},{"lineNumber":354,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":355,"author":{"gitId":"SeanChinJunKai"},"content":"* `AddCommandParser#parse()` — Parses user input into `Person` and creates an `AddCommand` object","lastModifiedDate":"2023-03-27"},{"lineNumber":356,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":357,"author":{"gitId":"SeanChinJunKai"},"content":"These operations are exposed in the Model interface as methods with the same name e.g.","lastModifiedDate":"2023-03-27"},{"lineNumber":358,"author":{"gitId":"SeanChinJunKai"},"content":"`Model#addPerson()`.","lastModifiedDate":"2023-03-27"},{"lineNumber":359,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":360,"author":{"gitId":"SeanChinJunKai"},"content":"Given below is an example usage scenario and how the add command works at each step","lastModifiedDate":"2023-03-27"},{"lineNumber":361,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":362,"author":{"gitId":"dawg420"},"content":"Step 1. A new patient visits the clinic/hospital and the clinic administrator registers the new patient in the patient","lastModifiedDate":"2023-03-28"},{"lineNumber":363,"author":{"gitId":"dawg420"},"content":"records system.","lastModifiedDate":"2023-03-28"},{"lineNumber":364,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":365,"author":{"gitId":"dawg420"},"content":"Step 2. The administrator","lastModifiedDate":"2023-03-28"},{"lineNumber":366,"author":{"gitId":"dawg420"},"content":"executes `add i/T0012345A n/John Doe p/98765432 a/John street, block 123, #01-01 d/NKDA g/Male e/johnd@example.com t/Diabetic`","lastModifiedDate":"2023-03-28"},{"lineNumber":367,"author":{"gitId":"dawg420"},"content":". The `AddCommand` is executed and `Model#hasPerson` is called and followed by a call to `Model#addPerson()`","lastModifiedDate":"2023-03-28"},{"lineNumber":368,"author":{"gitId":"SeanChinJunKai"},"content":"which adds the record into the patient records system if the record does not already exist in the system.","lastModifiedDate":"2023-03-27"},{"lineNumber":369,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":370,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":371,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":372,"author":{"gitId":"SeanChinJunKai"},"content":"### Edit patient feature","lastModifiedDate":"2023-03-27"},{"lineNumber":373,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":374,"author":{"gitId":"SeanChinJunKai"},"content":"#### Implementation","lastModifiedDate":"2023-03-27"},{"lineNumber":375,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":376,"author":{"gitId":"dawg420"},"content":"The implemented edit mechanism is facilitated by `EditCommandParser`. It extends `AddressBookParser` and implements the","lastModifiedDate":"2023-03-28"},{"lineNumber":377,"author":{"gitId":"dawg420"},"content":"following operations:","lastModifiedDate":"2023-03-28"},{"lineNumber":378,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":379,"author":{"gitId":"dawg420"},"content":"* `EditCommandParser#parse()` — Parses user input into `INDEX` and `editPersonDescriptor` and creates an `EditCommand`","lastModifiedDate":"2023-03-28"},{"lineNumber":380,"author":{"gitId":"dawg420"},"content":"  object","lastModifiedDate":"2023-03-28"},{"lineNumber":381,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":382,"author":{"gitId":"SeanChinJunKai"},"content":"These operations are exposed in the Model interface as methods with the same name e.g.","lastModifiedDate":"2023-03-27"},{"lineNumber":383,"author":{"gitId":"SeanChinJunKai"},"content":"`Model#setPerson()`.","lastModifiedDate":"2023-03-27"},{"lineNumber":384,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":385,"author":{"gitId":"SeanChinJunKai"},"content":"Given below is an example usage scenario and how the add command works at each step","lastModifiedDate":"2023-03-27"},{"lineNumber":386,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":387,"author":{"gitId":"dawg420"},"content":"Step 1. A patient visits the clinic/hospital and the clinic administrator registers the patient. The patient mentions","lastModifiedDate":"2023-03-28"},{"lineNumber":388,"author":{"gitId":"dawg420"},"content":"that he has changed his phone number to 987654321.","lastModifiedDate":"2023-03-28"},{"lineNumber":389,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":390,"author":{"gitId":"dawg420"},"content":"Step 2. The administrator executes `edit 1 p/987654321`. The `EditCommand` is executed and `Model#getFilteredPersonList`","lastModifiedDate":"2023-03-28"},{"lineNumber":391,"author":{"gitId":"dawg420"},"content":"is called, then the parsed index is checked for validity followed by getting the patient record specified by the index.","lastModifiedDate":"2023-03-28"},{"lineNumber":392,"author":{"gitId":"dawg420"},"content":"Next, `EditCommand#createEditedPerson` is called, followed by calls to both `Person#isSamePerson`","lastModifiedDate":"2023-03-28"},{"lineNumber":393,"author":{"gitId":"dawg420"},"content":"and `Model#hasPerson()` to check for possible duplicates. `Model#setPerson` is called followed","lastModifiedDate":"2023-03-28"},{"lineNumber":394,"author":{"gitId":"dawg420"},"content":"by `Model#updateFilteredPersonList()`","lastModifiedDate":"2023-03-28"},{"lineNumber":395,"author":{"gitId":"SeanChinJunKai"},"content":"which adds the record into the patient records system if the record does not already exist in the system.","lastModifiedDate":"2023-03-27"},{"lineNumber":396,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":397,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":398,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":399,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":400,"author":{"gitId":"CedricPei"},"content":"### View patient particulars feature","lastModifiedDate":"2023-04-08"},{"lineNumber":401,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":402,"author":{"gitId":"CedricPei"},"content":"#### Implementation","lastModifiedDate":"2023-04-08"},{"lineNumber":403,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":404,"author":{"gitId":"CedricPei"},"content":"The logic mechanism of this feature is the same as finding a patient by NRIC, but it will show all information of the patient on the view pane","lastModifiedDate":"2023-04-08"},{"lineNumber":405,"author":{"gitId":"CedricPei"},"content":"including email, birthdate, drug allergies, and medicines. The view pane UI construction is similar to person card, which needs one `Person` as a parameter. ","lastModifiedDate":"2023-04-08"},{"lineNumber":406,"author":{"gitId":"CedricPei"},"content":"This operation could be activated by typing a command or double-clicking the patient card. ","lastModifiedDate":"2023-04-08"},{"lineNumber":407,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":408,"author":{"gitId":"CedricPei"},"content":"Given blow is an example usage scenario and how the view command works at each step","lastModifiedDate":"2023-04-08"},{"lineNumber":409,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":410,"author":{"gitId":"CedricPei"},"content":"Step 1. The clinical/hospital administrator wants to see the detailed information of a patient with NRIC `T1234567A` ","lastModifiedDate":"2023-04-08"},{"lineNumber":411,"author":{"gitId":"CedricPei"},"content":"in order to know what medicine he/she used.","lastModifiedDate":"2023-04-08"},{"lineNumber":412,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":413,"author":{"gitId":"CedricPei"},"content":"Step 2. The clinical/hospital administrator double-clicks the corresponding person card in the list panel or execute `view i/T1234567A`.","lastModifiedDate":"2023-04-08"},{"lineNumber":414,"author":{"gitId":"CedricPei"},"content":"Then personal particulars of that patient will appear on the view pane.","lastModifiedDate":"2023-04-08"},{"lineNumber":415,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":416,"author":{"gitId":"CedricPei"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":417,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":418,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":419,"author":{"gitId":"SeanChinJunKai"},"content":"### Delete patient record by NRIC feature","lastModifiedDate":"2023-03-27"},{"lineNumber":420,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":421,"author":{"gitId":"SeanChinJunKai"},"content":"#### Implementation","lastModifiedDate":"2023-03-27"},{"lineNumber":422,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":423,"author":{"gitId":"SeanChinJunKai"},"content":"The implemented delete mechanism is facilitated by `DeleteCommandParser`. It extends `AddressBookParser` and implements","lastModifiedDate":"2023-03-27"},{"lineNumber":424,"author":{"gitId":"SeanChinJunKai"},"content":"the following operations:","lastModifiedDate":"2023-03-27"},{"lineNumber":425,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":426,"author":{"gitId":"SeanChinJunKai"},"content":"* `DeleteCommandParser#parse()` — Parses user input into `ArrayList\u003cNRIC\u003e` and creates a `DeleteCommand` object","lastModifiedDate":"2023-03-27"},{"lineNumber":427,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":428,"author":{"gitId":"SeanChinJunKai"},"content":"These operations are exposed in the Model interface as methods with the same name e.g.","lastModifiedDate":"2023-03-27"},{"lineNumber":429,"author":{"gitId":"SeanChinJunKai"},"content":"`Model#deletePerson()`.","lastModifiedDate":"2023-03-27"},{"lineNumber":430,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":431,"author":{"gitId":"SeanChinJunKai"},"content":"Given below is an example usage scenario and how the delete command works at each step","lastModifiedDate":"2023-03-27"},{"lineNumber":432,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":433,"author":{"gitId":"dawg420"},"content":"Step 1. The clinical/hospital administrator has been informed of death of 2 patients and their NRIC, T0123456A","lastModifiedDate":"2023-03-28"},{"lineNumber":434,"author":{"gitId":"dawg420"},"content":"T0124563B.","lastModifiedDate":"2023-03-28"},{"lineNumber":435,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":436,"author":{"gitId":"SeanChinJunKai"},"content":"Step 2. The administrator executes `delete i/T0123456A i/T0124563B`. The `DeleteCommand` is executed and for each `NRIC`","lastModifiedDate":"2023-03-28"},{"lineNumber":437,"author":{"gitId":"SeanChinJunKai"},"content":"in the `Set\u003cNRIC\u003e`, `Model#findPersonByNric()` is called and followed by a call to `Model#deletePerson()`","lastModifiedDate":"2023-03-28"},{"lineNumber":438,"author":{"gitId":"SeanChinJunKai"},"content":"which deletes the record in the system with the specified `NRIC`.","lastModifiedDate":"2023-03-27"},{"lineNumber":439,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":440,"author":{"gitId":"SeanChinJunKai"},"content":"The following sequence diagram shows how the delete command works:","lastModifiedDate":"2023-03-27"},{"lineNumber":441,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":442,"author":{"gitId":"SeanChinJunKai"},"content":"![BetterDeleteSequenceDiagram](images/BetterDeleteSequenceDiagram.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":443,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":444,"author":{"gitId":"Creationsv2"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-24"},{"lineNumber":445,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":446,"author":{"gitId":"SeanChinJunKai"},"content":"**Aspect: Deletion criteria**","lastModifiedDate":"2023-03-27"},{"lineNumber":447,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":448,"author":{"gitId":"SeanChinJunKai"},"content":"* **Alternative 1 (current choice):** Deletion by `NRIC`.","lastModifiedDate":"2023-03-27"},{"lineNumber":449,"author":{"gitId":"SeanChinJunKai"},"content":"    * Pros: Very efficient as program will search for the record with specified `NRIC` and delete it.","lastModifiedDate":"2023-03-27"},{"lineNumber":450,"author":{"gitId":"SeanChinJunKai"},"content":"    * Cons: Might be less convenient for clinical administrator to type out `NRIC` as compared to INDEX especially for","lastModifiedDate":"2023-03-27"},{"lineNumber":451,"author":{"gitId":"SeanChinJunKai"},"content":"      the top few records displayed.","lastModifiedDate":"2023-03-27"},{"lineNumber":452,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":453,"author":{"gitId":"SeanChinJunKai"},"content":"* **Alternative 2:** Deletion by INDEX.","lastModifiedDate":"2023-03-27"},{"lineNumber":454,"author":{"gitId":"SeanChinJunKai"},"content":"    * Pros: More convenient for clinical administrator to type out INDEX for the top few displayed records.","lastModifiedDate":"2023-03-27"},{"lineNumber":455,"author":{"gitId":"SeanChinJunKai"},"content":"    * Cons: If the record we are searching for does not appear in the top few records, we would have to execute a find","lastModifiedDate":"2023-03-27"},{"lineNumber":456,"author":{"gitId":"SeanChinJunKai"},"content":"      command and then get corresponding INDEX to carry out deletion.","lastModifiedDate":"2023-03-27"},{"lineNumber":457,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":458,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":459,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":460,"author":{"gitId":"SeanChinJunKai"},"content":"### Filter patient record by attribute","lastModifiedDate":"2023-03-30"},{"lineNumber":461,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":462,"author":{"gitId":"SeanChinJunKai"},"content":"#### Implementation","lastModifiedDate":"2023-03-27"},{"lineNumber":463,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":464,"author":{"gitId":"ongweijie7"},"content":"The implemented delete mechanism is facilitated by `FindCommandParser`. It extends `AddressBookParser` and implements","lastModifiedDate":"2023-03-26"},{"lineNumber":465,"author":{"gitId":"ongweijie7"},"content":"the following operations:","lastModifiedDate":"2023-03-26"},{"lineNumber":466,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":467,"author":{"gitId":"dawg420"},"content":"* `FindCommandParser#parse()` — Parses user input into a `Predicate` object according to the `Prefix` used. It then","lastModifiedDate":"2023-03-28"},{"lineNumber":468,"author":{"gitId":"dawg420"},"content":"  creates a `FindCommand` object and passes the `Predicate` into `FindCommand` object.","lastModifiedDate":"2023-03-28"},{"lineNumber":469,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":470,"author":{"gitId":"ongweijie7"},"content":"These operations are exposed in the Model interface as Model#updateFilteredPersonList.","lastModifiedDate":"2023-03-26"},{"lineNumber":471,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":472,"author":{"gitId":"ongweijie7"},"content":"Given below is an example usage scenario and how the find command works at each step","lastModifiedDate":"2023-03-26"},{"lineNumber":473,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":474,"author":{"gitId":"dawg420"},"content":"Step 1. The clinical/hospital administrator has been informed of death of 2 patients and their NRIC, T0123456A","lastModifiedDate":"2023-03-28"},{"lineNumber":475,"author":{"gitId":"dawg420"},"content":"T0124563B.","lastModifiedDate":"2023-03-28"},{"lineNumber":476,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":477,"author":{"gitId":"ongweijie7"},"content":"Step 2. The administrator executes `find n/Alice`. The model then creates a `Predicate` based on the provided prefix and ","lastModifiedDate":"2023-04-10"},{"lineNumber":478,"author":{"gitId":"ongweijie7"},"content":"passes the `Predicate` as an argument when creating a `FindCommand`. The `FindCommand` will then be executed by the model ","lastModifiedDate":"2023-04-10"},{"lineNumber":479,"author":{"gitId":"ongweijie7"},"content":"and it filters the list of person that matches the provided `NAME`.","lastModifiedDate":"2023-04-10"},{"lineNumber":480,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":481,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":482,"author":{"gitId":"ongweijie7"},"content":"The following sequence diagram shows how the find command works:","lastModifiedDate":"2023-04-10"},{"lineNumber":483,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":484,"author":{"gitId":"ongweijie7"},"content":"![FindSequenceDiagram](images/FindSequenceDiagram.png)","lastModifiedDate":"2023-03-26"},{"lineNumber":485,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":486,"author":{"gitId":"ongweijie7"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-26"},{"lineNumber":487,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":488,"author":{"gitId":"SeanChinJunKai"},"content":"**Aspect: Filter criteria**","lastModifiedDate":"2023-03-27"},{"lineNumber":489,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":490,"author":{"gitId":"ongweijie7"},"content":"* **Alternative 1 (current choice):** Find by `NRIC`, `Name`, `Tag`, `Medicine`, `Doctor`.","lastModifiedDate":"2023-04-10"},{"lineNumber":491,"author":{"gitId":"ongweijie7"},"content":"    * Pros:","lastModifiedDate":"2023-03-26"},{"lineNumber":492,"author":{"gitId":"ongweijie7"},"content":"        * Very efficient as program will search for the record with specified `NRIC` and return the filtered person list","lastModifiedDate":"2023-03-26"},{"lineNumber":493,"author":{"gitId":"ongweijie7"},"content":"        * Allows clinical administrator to filter for frequently used `Medicine` and stock up relevant supplies","lastModifiedDate":"2023-03-26"},{"lineNumber":494,"author":{"gitId":"ongweijie7"},"content":"        * Allows clinical administrator to filter for common health condition `Tag` of patients at the clinic.","lastModifiedDate":"2023-04-10"},{"lineNumber":495,"author":{"gitId":"ongweijie7"},"content":"    * Cons:","lastModifiedDate":"2023-03-26"},{"lineNumber":496,"author":{"gitId":"dawg420"},"content":"        * Might be less convenient for clinical administrator to type out `NRIC` as compared to INDEX especially for the","lastModifiedDate":"2023-03-28"},{"lineNumber":497,"author":{"gitId":"dawg420"},"content":"          top few records displayed.","lastModifiedDate":"2023-03-28"},{"lineNumber":498,"author":{"gitId":"dawg420"},"content":"        * clinical administrator might need to type more since the `Attributes` to find by are generally longer in","lastModifiedDate":"2023-03-28"},{"lineNumber":499,"author":{"gitId":"dawg420"},"content":"          spelling.","lastModifiedDate":"2023-03-28"},{"lineNumber":500,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":501,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":502,"author":{"gitId":"ongweijie7"},"content":"* **Alternative 2:** Find by any `Attribute`. Eg. `Address`, `Phone` etc.","lastModifiedDate":"2023-03-26"},{"lineNumber":503,"author":{"gitId":"ongweijie7"},"content":"    * Pros: More convenient for clinical administrator to search by any attributes that he deem easy to type","lastModifiedDate":"2023-03-26"},{"lineNumber":504,"author":{"gitId":"ongweijie7"},"content":"    * Cons: Unlikely for the clinical administrator to use other attributes to find a particular patient.","lastModifiedDate":"2023-03-26"},{"lineNumber":505,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":506,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":507,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":508,"author":{"gitId":"CedricPei"},"content":"### Light/dark Theme","lastModifiedDate":"2023-04-08"},{"lineNumber":509,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":510,"author":{"gitId":"CedricPei"},"content":"#### Implementation","lastModifiedDate":"2023-04-08"},{"lineNumber":511,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":512,"author":{"gitId":"dawg420"},"content":"The theme is facilitated by `Theme`. It contains two modes which are light mode and dark mode. The light mode is closely","lastModifiedDate":"2023-03-24"},{"lineNumber":513,"author":{"gitId":"dawg420"},"content":"related to `LightModeCommand` and `LightTheme.css`. The dark mode is associated to `DarkModeCommand` and `DarkTheme.css`","lastModifiedDate":"2023-03-24"},{"lineNumber":514,"author":{"gitId":"dawg420"},"content":". Moreover, two attributes (`showLight` and `showDark`) of `CommandResult` indicate what the current theme is.","lastModifiedDate":"2023-03-24"},{"lineNumber":515,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":516,"author":{"gitId":"CedricPei"},"content":"Given below is an example usage scenario and how the light/dark mechanism behaves at each step.","lastModifiedDate":"2023-03-20"},{"lineNumber":517,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":518,"author":{"gitId":"CedricPei"},"content":"Step 1. The user launches the application and the current theme is Dark.","lastModifiedDate":"2023-03-20"},{"lineNumber":519,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":520,"author":{"gitId":"CedricPei"},"content":"Step 2. The user executes `light` command and the theme changed to light mode.","lastModifiedDate":"2023-03-20"},{"lineNumber":521,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":522,"author":{"gitId":"dawg420"},"content":"Step 3. The user clicks the `Theme` button above and select the `Dark` choice. The theme go back to the dark mode again.","lastModifiedDate":"2023-03-24"},{"lineNumber":523,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":524,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-20"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":526,"author":{"gitId":"SeanChinJunKai"},"content":"**Aspect: How light \u0026 dark executes:**","lastModifiedDate":"2023-03-27"},{"lineNumber":527,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":528,"author":{"gitId":"CedricPei"},"content":"* **Alternative 1 (current choice):** CSS file for Dark and Light separately.","lastModifiedDate":"2023-03-20"},{"lineNumber":529,"author":{"gitId":"CedricPei"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2023-03-20"},{"lineNumber":530,"author":{"gitId":"CedricPei"},"content":"    * Cons: More resource space and necessity to switch between two file paths.","lastModifiedDate":"2023-03-20"},{"lineNumber":531,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":532,"author":{"gitId":"CedricPei"},"content":"* **Alternative 2:** One CSS file containing the information of two modes.","lastModifiedDate":"2023-03-20"},{"lineNumber":533,"author":{"gitId":"CedricPei"},"content":"    * Pros: Less resource space and no need to change the file path.","lastModifiedDate":"2023-03-20"},{"lineNumber":534,"author":{"gitId":"CedricPei"},"content":"    * Cons: Not easy to implement and require more FXML changes.","lastModifiedDate":"2023-03-20"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":538,"author":{"gitId":"SeanChinJunKai"},"content":"### Adding Nric as identifier","lastModifiedDate":"2023-03-27"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":540,"author":{"gitId":"SeanChinJunKai"},"content":"#### Implementation","lastModifiedDate":"2023-03-27"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":542,"author":{"gitId":"SeanChinJunKai"},"content":"The proposed `Nric` field is done similar to the implementation of the `Name` field.","lastModifiedDate":"2023-03-27"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":544,"author":{"gitId":"SeanChinJunKai"},"content":"Previously, name was used as the unique identifier for a `Person` object, where we check for equality between","lastModifiedDate":"2023-03-27"},{"lineNumber":545,"author":{"gitId":"SeanChinJunKai"},"content":"two `Person` objects by name matching. As we acknowledge that in a clinical/hospital system, several patients may have","lastModifiedDate":"2023-03-27"},{"lineNumber":546,"author":{"gitId":"SeanChinJunKai"},"content":"the same name, `Nric` was identified as a better unique identification choice.","lastModifiedDate":"2023-03-27"},{"lineNumber":547,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":548,"author":{"gitId":"SeanChinJunKai"},"content":"The following additional constraints will be applied:","lastModifiedDate":"2023-03-27"},{"lineNumber":549,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":550,"author":{"gitId":"SeanChinJunKai"},"content":"1. `Nric` will be mandatory field when adding a new `Person`.","lastModifiedDate":"2023-03-27"},{"lineNumber":551,"author":{"gitId":"SeanChinJunKai"},"content":"2. `Nric` has to be in the following format: `@xxxxxxx#`","lastModifiedDate":"2023-03-27"},{"lineNumber":552,"author":{"gitId":"SeanChinJunKai"},"content":"    1. `@` has to be one of the following: `S`, `T`, `F`, `G`, or `M`","lastModifiedDate":"2023-03-27"},{"lineNumber":553,"author":{"gitId":"SeanChinJunKai"},"content":"    2. `xxxxxxx` is a 7-digit serial number, each `x` can be any number `0-9`","lastModifiedDate":"2023-03-27"},{"lineNumber":554,"author":{"gitId":"SeanChinJunKai"},"content":"    3. `#` can be any capital alphabet `A-Z`, and the field cannot be blank.","lastModifiedDate":"2023-03-27"},{"lineNumber":555,"author":{"gitId":"SeanChinJunKai"},"content":"3. `Nric` must be unique, the system will not allow the addition of a new person otherwise","lastModifiedDate":"2023-03-27"},{"lineNumber":556,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":557,"author":{"gitId":"SeanChinJunKai"},"content":"Given below is an updated `Model` component diagram.","lastModifiedDate":"2023-03-27"},{"lineNumber":558,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":559,"author":{"gitId":"SeanChinJunKai"},"content":"\u003cimg src\u003d\"images/NricModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":560,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":561,"author":{"gitId":"SeanChinJunKai"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-27"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":563,"author":{"gitId":"SeanChinJunKai"},"content":"**Aspect: Mutability of `Nric` field:**","lastModifiedDate":"2023-03-27"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":565,"author":{"gitId":"SeanChinJunKai"},"content":"* **Alternative 1 (current choice):** `Nric` is mutable.","lastModifiedDate":"2023-03-27"},{"lineNumber":566,"author":{"gitId":"SeanChinJunKai"},"content":"    * Pros: Easy to make corrections if entered wrongly, no need to type the entire `add` command again","lastModifiedDate":"2023-03-27"},{"lineNumber":567,"author":{"gitId":"SeanChinJunKai"},"content":"    * Cons: `Nric` never changes for a person, it may not make sense to make it mutable.","lastModifiedDate":"2023-03-27"},{"lineNumber":568,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":569,"author":{"gitId":"SeanChinJunKai"},"content":"* **Alternative 2:** `Nric` is immutable.","lastModifiedDate":"2023-03-27"},{"lineNumber":570,"author":{"gitId":"SeanChinJunKai"},"content":"    * Pros: Will ensure no tampering of identifier for a `Person` object.","lastModifiedDate":"2023-03-27"},{"lineNumber":571,"author":{"gitId":"SeanChinJunKai"},"content":"    * Cons: If `Nric` is wrongly entered, user will have to re-type the entire `add` command.","lastModifiedDate":"2023-03-27"},{"lineNumber":572,"author":{"gitId":"SeanChinJunKai"},"content":"        * This can have heavier consequences if much more data is added before the mistake is noticed.","lastModifiedDate":"2023-03-27"},{"lineNumber":573,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":574,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":575,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":576,"author":{"gitId":"ongweijie7"},"content":"### Adding Date Of Birth","lastModifiedDate":"2023-04-10"},{"lineNumber":577,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":578,"author":{"gitId":"ongweijie7"},"content":"The proposed `DateOfBirth` field is done similar to the implementation of the `Name` field.","lastModifiedDate":"2023-04-10"},{"lineNumber":579,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":580,"author":{"gitId":"ongweijie7"},"content":"E.g., 12 April 2000, 1 January 2001","lastModifiedDate":"2023-04-10"},{"lineNumber":581,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":582,"author":{"gitId":"ongweijie7"},"content":"The addition of this field will allow staff to quickly filter by date of birth, or quickly glance at a patient to verify ","lastModifiedDate":"2023-04-10"},{"lineNumber":583,"author":{"gitId":"ongweijie7"},"content":"identity.","lastModifiedDate":"2023-04-10"},{"lineNumber":584,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":585,"author":{"gitId":"ongweijie7"},"content":"#### Design considerations:","lastModifiedDate":"2023-04-10"},{"lineNumber":586,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":587,"author":{"gitId":"ongweijie7"},"content":"**Aspect: Implementing a new object to represent `DateOfBirth`:**","lastModifiedDate":"2023-04-10"},{"lineNumber":588,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":589,"author":{"gitId":"ongweijie7"},"content":"* **Alternative 1 (current choice):** Convert `DateOfBirth` given in the format `dd/mm/yyyy` to `dd month yyyy`.","lastModifiedDate":"2023-04-10"},{"lineNumber":590,"author":{"gitId":"ongweijie7"},"content":"    * Pros: User does not have to type the full date in string when adding a person.","lastModifiedDate":"2023-04-10"},{"lineNumber":591,"author":{"gitId":"ongweijie7"},"content":"    * Cons: It might be messy when adding a person since there will be more `/`.","lastModifiedDate":"2023-04-10"},{"lineNumber":592,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":593,"author":{"gitId":"ongweijie7"},"content":"* **Alternative 2:** User have to type in the full date when adding a person.","lastModifiedDate":"2023-04-10"},{"lineNumber":594,"author":{"gitId":"ongweijie7"},"content":"    * Pros: It will not be as messy since there will be less `/` when adding a person.","lastModifiedDate":"2023-04-10"},{"lineNumber":595,"author":{"gitId":"ongweijie7"},"content":"    * Cons: User will have to type more which might result in more errors when adding a person.","lastModifiedDate":"2023-04-10"},{"lineNumber":596,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":597,"author":{"gitId":"CedricPei"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":598,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":599,"author":{"gitId":"SeanChinJunKai"},"content":"### Adding Health Conditions","lastModifiedDate":"2023-03-27"},{"lineNumber":600,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":601,"author":{"gitId":"SeanChinJunKai"},"content":"The proposed implementation of separate `Conditions` object to encapsulate health conditions of a patient.","lastModifiedDate":"2023-03-27"},{"lineNumber":602,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":603,"author":{"gitId":"SeanChinJunKai"},"content":"E.g., Diabetic, Dyslexic, Osteporotic.","lastModifiedDate":"2023-03-27"},{"lineNumber":604,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":605,"author":{"gitId":"dawg420"},"content":"The addition of this field will allow staff to quickly filter by conditions, or quickly glance at a patient to identify","lastModifiedDate":"2023-03-28"},{"lineNumber":606,"author":{"gitId":"dawg420"},"content":"what known conditions he/she has.","lastModifiedDate":"2023-03-28"},{"lineNumber":607,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":608,"author":{"gitId":"SeanChinJunKai"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-27"},{"lineNumber":609,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":610,"author":{"gitId":"ongweijie7"},"content":"**Aspect: Implementing a new object to represent `Conditions`:**","lastModifiedDate":"2023-04-10"},{"lineNumber":611,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":612,"author":{"gitId":"SeanChinJunKai"},"content":"* **Alternative 1 (current choice):** Convert `Tag` objects to health conditions.","lastModifiedDate":"2023-03-27"},{"lineNumber":613,"author":{"gitId":"SeanChinJunKai"},"content":"    * Pros: The `Tag` object originally implemented in AB3 currently does not have much meaning in the context of","lastModifiedDate":"2023-03-27"},{"lineNumber":614,"author":{"gitId":"dawg420"},"content":"      HospiSearch. The highlighting of the tags can be repurposed to show a quick view of known conditions a patient","lastModifiedDate":"2023-03-28"},{"lineNumber":615,"author":{"gitId":"dawg420"},"content":"      has.","lastModifiedDate":"2023-03-28"},{"lineNumber":616,"author":{"gitId":"dawg420"},"content":"    * Cons: If a patient has many pre-existing conditions, this may end up as visual clutter. Furthermore, we may wish","lastModifiedDate":"2023-03-28"},{"lineNumber":617,"author":{"gitId":"dawg420"},"content":"      for other details to be highlighted instead of health conditions.","lastModifiedDate":"2023-03-28"},{"lineNumber":618,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":619,"author":{"gitId":"SeanChinJunKai"},"content":"* **Alternative 2:** Implement `Conditions` as a separate object","lastModifiedDate":"2023-03-27"},{"lineNumber":620,"author":{"gitId":"dawg420"},"content":"    * Pros: We can still tag a patient with details other than health conditions. The functionality of `Tag` will not be","lastModifiedDate":"2023-03-28"},{"lineNumber":621,"author":{"gitId":"dawg420"},"content":"      deprecated.","lastModifiedDate":"2023-03-28"},{"lineNumber":622,"author":{"gitId":"SeanChinJunKai"},"content":"    * Cons: This will require more restructuring of the codebase, the location to display health conditions may not be","lastModifiedDate":"2023-03-27"},{"lineNumber":623,"author":{"gitId":"SeanChinJunKai"},"content":"      as obvious as well compared to the current display of tags.","lastModifiedDate":"2023-03-27"},{"lineNumber":624,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":625,"author":{"gitId":"CedricPei"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":626,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":627,"author":{"gitId":"ongweijie7"},"content":"### Adding Gender","lastModifiedDate":"2023-04-10"},{"lineNumber":628,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":629,"author":{"gitId":"ongweijie7"},"content":"The proposed `Gender` field is done similar to the implementation of the `Name` field.","lastModifiedDate":"2023-04-10"},{"lineNumber":630,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":631,"author":{"gitId":"ongweijie7"},"content":"E.g., Male, Female, Others","lastModifiedDate":"2023-04-10"},{"lineNumber":632,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":633,"author":{"gitId":"ongweijie7"},"content":"The addition of this field will allow staff to quickly verify the gender of a patient.","lastModifiedDate":"2023-04-10"},{"lineNumber":634,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":635,"author":{"gitId":"ongweijie7"},"content":"#### Design considerations:","lastModifiedDate":"2023-04-10"},{"lineNumber":636,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":637,"author":{"gitId":"ongweijie7"},"content":"**Aspect: Implementing a new object to represent `Gender`:**","lastModifiedDate":"2023-04-10"},{"lineNumber":638,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":639,"author":{"gitId":"ongweijie7"},"content":"* **Alternative 1 (current choice):** Gender is restricted to `Male`, `Female`, `Others`.","lastModifiedDate":"2023-04-10"},{"lineNumber":640,"author":{"gitId":"ongweijie7"},"content":"    * Pros: There will only be 3 categories to classify a person.","lastModifiedDate":"2023-04-10"},{"lineNumber":641,"author":{"gitId":"ongweijie7"},"content":"    * Cons: Cannot represent other genders.","lastModifiedDate":"2023-04-10"},{"lineNumber":642,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":643,"author":{"gitId":"CedricPei"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":644,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":645,"author":{"gitId":"Creationsv2"},"content":"### Adding Attending Doctor","lastModifiedDate":"2023-04-09"},{"lineNumber":646,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":647,"author":{"gitId":"Creationsv2"},"content":"The proposed implementation of separate `Doctor` object to encapsulate the current attending doctor of a patient.","lastModifiedDate":"2023-03-29"},{"lineNumber":648,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":649,"author":{"gitId":"Creationsv2"},"content":"The addition of this field will allow staff to quickly filter by attending doctor, or quickly glance at a patient to identify","lastModifiedDate":"2023-03-29"},{"lineNumber":650,"author":{"gitId":"Creationsv2"},"content":"what doctor is in charge of him/her.","lastModifiedDate":"2023-03-29"},{"lineNumber":651,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":652,"author":{"gitId":"Creationsv2"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-29"},{"lineNumber":653,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":654,"author":{"gitId":"Creationsv2"},"content":"**Aspect: Implementing a new object to represent conditions:**","lastModifiedDate":"2023-03-29"},{"lineNumber":655,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":656,"author":{"gitId":"Creationsv2"},"content":"* **Alternative 1 (current choice):** Have the `doctor` field function similar to the `name` field.","lastModifiedDate":"2023-03-29"},{"lineNumber":657,"author":{"gitId":"Creationsv2"},"content":"    * Pros: More flexibility, in terms of tagging patients to doctors","lastModifiedDate":"2023-03-29"},{"lineNumber":658,"author":{"gitId":"Creationsv2"},"content":"    * Cons: Will have to ensure no ambiguous `doctor` names, e.g., if there are two `doctor`s  named `Ben`, we will","lastModifiedDate":"2023-03-29"},{"lineNumber":659,"author":{"gitId":"Creationsv2"},"content":"       have to include their surname to differentiate.","lastModifiedDate":"2023-03-29"},{"lineNumber":660,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":661,"author":{"gitId":"Creationsv2"},"content":"* **Alternative 2:** Have a separate encapsulation for `doctor` where we record doctors as persons as well, then link","lastModifiedDate":"2023-03-29"},{"lineNumber":662,"author":{"gitId":"Creationsv2"},"content":"                     each patient to a `doctor`\u0027s nric.","lastModifiedDate":"2023-03-29"},{"lineNumber":663,"author":{"gitId":"Creationsv2"},"content":"    * Pros: Less ambiguity, we can navigate to the specific `doctor`.","lastModifiedDate":"2023-03-29"},{"lineNumber":664,"author":{"gitId":"Creationsv2"},"content":"    * Cons: This will require more restructuring of the codebase, storing both doctors and patients, which makes the","lastModifiedDate":"2023-03-29"},{"lineNumber":665,"author":{"gitId":"Creationsv2"},"content":"      database more messy.","lastModifiedDate":"2023-03-29"},{"lineNumber":666,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":667,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":669,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":673,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":674,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":675,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":676,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":677,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"* has a need to manage a significant number of contacts","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":690,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"dawg420"},"content":"**Value proposition**: HospiSearch is a comprehensive hospital records management system designed to streamline","lastModifiedDate":"2023-03-24"},{"lineNumber":693,"author":{"gitId":"dawg420"},"content":"administrative tasks and improve patient care. With our app, you can easily store, retrieve, and manage patient records,","lastModifiedDate":"2023-03-24"},{"lineNumber":694,"author":{"gitId":"dawg420"},"content":"appointment schedules, and billing information all in one place","lastModifiedDate":"2023-03-24"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"CedricPei"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":698,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"| Priority | As a …​  | I want to …​                | So that I can…​                                        |","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"Creationsv2"},"content":"|----------|----------|-----------------------------|--------------------------------------------------------|","lastModifiedDate":"2023-04-09"},{"lineNumber":704,"author":{"gitId":"Creationsv2"},"content":"| `* * *`  | new user | see the user guide          | know about all functions                               |","lastModifiedDate":"2023-03-02"},{"lineNumber":705,"author":{"gitId":"Creationsv2"},"content":"| `* * *`  | new user | access a help menu          | know about all commands                                |","lastModifiedDate":"2023-03-02"},{"lineNumber":706,"author":{"gitId":"Creationsv2"},"content":"| `* * *`  | admin    | add patients’ records       | keep track of their information                        |","lastModifiedDate":"2023-03-02"},{"lineNumber":707,"author":{"gitId":"Creationsv2"},"content":"| `* * *`  | admin    | edit patients’ records      | update their information                               |","lastModifiedDate":"2023-03-02"},{"lineNumber":708,"author":{"gitId":"CedricPei"},"content":"| `* * *`  | admin    | view a patient particulars  | have an overall understanding of the patient           |","lastModifiedDate":"2023-04-08"},{"lineNumber":709,"author":{"gitId":"SeanChinJunKai"},"content":"| `* * *`  | admin    | delete patients’ records    | free up space for other patient records                |","lastModifiedDate":"2023-03-27"},{"lineNumber":710,"author":{"gitId":"Creationsv2"},"content":"| `* *`    | admin    | list all patients           | have an overview                                       |","lastModifiedDate":"2023-03-02"},{"lineNumber":711,"author":{"gitId":"Creationsv2"},"content":"| `* *`    | admin    | search for a patient record | find the needed information quickly                    |","lastModifiedDate":"2023-03-02"},{"lineNumber":712,"author":{"gitId":"Creationsv2"},"content":"| `**`     | admin    | backup data                 | backup data in the event of a primary data failure     |","lastModifiedDate":"2023-04-09"},{"lineNumber":713,"author":{"gitId":"Creationsv2"},"content":"| `**`     | admin    | load data                   | load data in the event of a primary data failure       |","lastModifiedDate":"2023-04-09"},{"lineNumber":714,"author":{"gitId":"Creationsv2"},"content":"| `**`     | admin    | undo commands               | roll back current state if I made a unintended command |","lastModifiedDate":"2023-04-09"},{"lineNumber":715,"author":{"gitId":"Creationsv2"},"content":"| `**`     | admin    | redo commands               | roll back current state if I made an unintended redo   |","lastModifiedDate":"2023-04-09"},{"lineNumber":716,"author":{"gitId":"Creationsv2"},"content":"| `*`      | admin    | clear data                  | start the database from scratch                        |","lastModifiedDate":"2023-03-02"},{"lineNumber":717,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":721,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"dawg420"},"content":"(For all use cases below, the **System** is the `HospiSearch` and the **Actor** is the `user`, unless specified","lastModifiedDate":"2023-03-24"},{"lineNumber":724,"author":{"gitId":"dawg420"},"content":"otherwise)","lastModifiedDate":"2023-03-24"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"Creationsv2"},"content":"**Use case: UC1 - Add patient to system**","lastModifiedDate":"2023-03-02"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"dawg420"},"content":"1. Administrator types add command together with the patient details (NRIC, age, gender, medicine usage, health","lastModifiedDate":"2023-03-24"},{"lineNumber":731,"author":{"gitId":"dawg420"},"content":"   conditions).","lastModifiedDate":"2023-03-24"},{"lineNumber":732,"author":{"gitId":"dawg420"},"content":"2. HS adds the patient to the system. Use case ends.","lastModifiedDate":"2023-03-24"},{"lineNumber":733,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":736,"author":{"gitId":"Creationsv2"},"content":"* 1a. HS detects an error in the entered patient details or missing patient details.","lastModifiedDate":"2023-03-02"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"dawg420"},"content":"  1a1. HS requests for the correct data. 1a2. Administrator enters the new data. Steps 1a1-1a2 are repeated until the","lastModifiedDate":"2023-03-24"},{"lineNumber":739,"author":{"gitId":"dawg420"},"content":"  data entered are correct. Use case resumes at step 2.","lastModifiedDate":"2023-03-24"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"SeanChinJunKai"},"content":"**Use case: UC2 - Edit patients\u0027 details**","lastModifiedDate":"2023-03-04"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":743,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":745,"author":{"gitId":"SeanChinJunKai"},"content":"1. Administrator requests to update a patients\u0027 details and enters the updated information.","lastModifiedDate":"2023-03-04"},{"lineNumber":746,"author":{"gitId":"dawg420"},"content":"2. HS updates the patient\u0027s record in the system. Use case ends.","lastModifiedDate":"2023-03-24"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":748,"author":{"gitId":"SeanChinJunKai"},"content":"**Extensions**","lastModifiedDate":"2023-03-04"},{"lineNumber":749,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":750,"author":{"gitId":"SeanChinJunKai"},"content":"* 1a. HS detects an error in the updated information.","lastModifiedDate":"2023-03-04"},{"lineNumber":751,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":752,"author":{"gitId":"dawg420"},"content":"  1a1. HS requests for the correct data. 1a2. Administrator enters the new data. Steps 1a1-1a2 are repeated until the","lastModifiedDate":"2023-03-24"},{"lineNumber":753,"author":{"gitId":"dawg420"},"content":"  data entered are correct. Use case resumes at step 2.","lastModifiedDate":"2023-03-24"},{"lineNumber":754,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":755,"author":{"gitId":"SeanChinJunKai"},"content":"**Use case: UC3 - Help Administrator obtain information on HospiSearch**","lastModifiedDate":"2023-03-04"},{"lineNumber":756,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":757,"author":{"gitId":"SeanChinJunKai"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":758,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":759,"author":{"gitId":"SeanChinJunKai"},"content":"1. Administrator is new to the system and requests for help.","lastModifiedDate":"2023-03-04"},{"lineNumber":760,"author":{"gitId":"dawg420"},"content":"2. HS gives a list of all possible commands together with brief descriptions to guide the user. Use case ends.","lastModifiedDate":"2023-03-24"},{"lineNumber":761,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":762,"author":{"gitId":"SeanChinJunKai"},"content":"**Use case: UC4 - Clear all data**","lastModifiedDate":"2023-03-04"},{"lineNumber":763,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":764,"author":{"gitId":"SeanChinJunKai"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":765,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":766,"author":{"gitId":"SeanChinJunKai"},"content":"1. Administrator requests to clear all data in the system.","lastModifiedDate":"2023-03-04"},{"lineNumber":767,"author":{"gitId":"dawg420"},"content":"2. HS clears all the data in the system. Use case ends.","lastModifiedDate":"2023-03-24"},{"lineNumber":768,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":769,"author":{"gitId":"ongweijie7"},"content":"**Use case: UC5 - Search for patients by address**","lastModifiedDate":"2023-03-22"},{"lineNumber":770,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":771,"author":{"gitId":"SeanChinJunKai"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":772,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":773,"author":{"gitId":"ongweijie7"},"content":"1. Administrator wants to search for patient by his address","lastModifiedDate":"2023-03-22"},{"lineNumber":774,"author":{"gitId":"ongweijie7"},"content":"2. HS provides a list of all people staying in the given address","lastModifiedDate":"2023-03-22"},{"lineNumber":775,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":776,"author":{"gitId":"SeanChinJunKai"},"content":"**Extensions**","lastModifiedDate":"2023-03-04"},{"lineNumber":777,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":778,"author":{"gitId":"dawg420"},"content":"* 1a. No such patient has the specified address. Use case ends.","lastModifiedDate":"2023-03-24"},{"lineNumber":779,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":780,"author":{"gitId":"SeanChinJunKai"},"content":"**Use case: UC6 - Search for patients by medicine**","lastModifiedDate":"2023-03-04"},{"lineNumber":781,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":782,"author":{"gitId":"SeanChinJunKai"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":783,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":784,"author":{"gitId":"SeanChinJunKai"},"content":"1. Administrator requests for a list of patients using a certain type of medicine as he wants to stock up on medicine.","lastModifiedDate":"2023-03-04"},{"lineNumber":785,"author":{"gitId":"dawg420"},"content":"2. HS provides a list of patients using the specified type of medicine. Use case ends.","lastModifiedDate":"2023-03-24"},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":787,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-03-04"},{"lineNumber":788,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":789,"author":{"gitId":"dawg420"},"content":"* 1a. There are no patients using the specified type of medicine in HS system. Use case ends.","lastModifiedDate":"2023-03-24"},{"lineNumber":790,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":791,"author":{"gitId":"SeanChinJunKai"},"content":"**Use case: UC7 - Get patient by NRIC**","lastModifiedDate":"2023-03-04"},{"lineNumber":792,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":793,"author":{"gitId":"SeanChinJunKai"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":794,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":795,"author":{"gitId":"SeanChinJunKai"},"content":"1. Administrator wants to get patient details’ based on the patient’s NRIC.","lastModifiedDate":"2023-03-04"},{"lineNumber":796,"author":{"gitId":"dawg420"},"content":"2. HS provides the details of the patient with the specified NRIC. Use case ends.","lastModifiedDate":"2023-03-24"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":798,"author":{"gitId":"SeanChinJunKai"},"content":"**Extensions**","lastModifiedDate":"2023-03-04"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":800,"author":{"gitId":"dawg420"},"content":"* 1a. There is no such patient with specified NRIC in the HS system. Use case ends.","lastModifiedDate":"2023-03-24"},{"lineNumber":801,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":802,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":804,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":805,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":808,"author":{"gitId":"-"},"content":"2. Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"ongweijie7"},"content":"3. Should be able to produce find results in less than 3 seconds for a database of less than 10000 user information.","lastModifiedDate":"2023-03-05"},{"lineNumber":810,"author":{"gitId":"dawg420"},"content":"4. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2023-03-24"},{"lineNumber":811,"author":{"gitId":"dawg420"},"content":"   able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-03-24"},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"CedricPei"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":818,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":819,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":820,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":821,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":822,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":823,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":824,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":825,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":826,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":827,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":830,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":832,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":833,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":834,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":835,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":836,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":837,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":838,"author":{"gitId":"dawg420"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be","lastModifiedDate":"2023-03-24"},{"lineNumber":839,"author":{"gitId":"dawg420"},"content":"       optimum.","lastModifiedDate":"2023-03-24"},{"lineNumber":840,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":841,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":842,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":843,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":844,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":845,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":846,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":847,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":848,"author":{"gitId":"CedricPei"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":849,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":850,"author":{"gitId":"Creationsv2"},"content":"### Adding a person","lastModifiedDate":"2023-03-27"},{"lineNumber":851,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":852,"author":{"gitId":"Creationsv2"},"content":"1. Adding a person to HospiSearch","lastModifiedDate":"2023-03-27"},{"lineNumber":853,"author":{"gitId":"Creationsv2"},"content":"    1. Prerequisites: Current person (identified by `Nric`) does not exist in the database","lastModifiedDate":"2023-03-27"},{"lineNumber":854,"author":{"gitId":"dawg420"},"content":"    2. Test","lastModifiedDate":"2023-03-28"},{"lineNumber":855,"author":{"gitId":"dawg420"},"content":"       case: `add i/S1234567A n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 g/Male d/NKDA` \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":856,"author":{"gitId":"Creationsv2"},"content":"       Expected: person above is added to HospiSearch, provided another entry does not have the same `nric`. Timestamp","lastModifiedDate":"2023-03-27"},{"lineNumber":857,"author":{"gitId":"Creationsv2"},"content":"       in the status bar is updated.","lastModifiedDate":"2023-03-27"},{"lineNumber":858,"author":{"gitId":"dawg420"},"content":"    3. Test case: `add n/John Doe p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 g/Male d/NKDA` \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":859,"author":{"gitId":"Creationsv2"},"content":"       Expected: No person is added. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-03-27"},{"lineNumber":860,"author":{"gitId":"dawg420"},"content":"    4. Test case: `add i/S1234567A p/98765432 e/johnd@example.com a/311, Clementi Ave 2, #02-25 g/Male d/NKDA` \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":861,"author":{"gitId":"Creationsv2"},"content":"       Expected: No person is added. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-03-27"},{"lineNumber":862,"author":{"gitId":"dawg420"},"content":"    5. Test case: `add S1234567A 98765432 johnd@example.com 311, Clementi Ave 2, #02-25 Male NKDA` \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":863,"author":{"gitId":"Creationsv2"},"content":"       Expected: No person is added. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2023-03-27"},{"lineNumber":864,"author":{"gitId":"Creationsv2"},"content":"    6. Other incorrect add commands to try: `add`, `add x/...`, `...` (where x is some invalid tag)","lastModifiedDate":"2023-03-27"},{"lineNumber":865,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":866,"author":{"gitId":"CedricPei"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":867,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":868,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":869,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":870,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":871,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":872,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":873,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":874,"author":{"gitId":"SeanChinJunKai"},"content":"    1. Test case: `delete i/S1234567A`\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":875,"author":{"gitId":"SeanChinJunKai"},"content":"       Expected: Patient record with the specified NRIC will be removed.","lastModifiedDate":"2023-03-27"},{"lineNumber":876,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":877,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":878,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":879,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":880,"author":{"gitId":"CedricPei"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":881,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":882,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":883,"author":{"gitId":"ongweijie7"},"content":"### Finding a person","lastModifiedDate":"2023-03-27"},{"lineNumber":884,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":885,"author":{"gitId":"ongweijie7"},"content":"1. Finding a person while all persons are being shown","lastModifiedDate":"2023-03-27"},{"lineNumber":886,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":887,"author":{"gitId":"ongweijie7"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2023-03-27"},{"lineNumber":888,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":889,"author":{"gitId":"ongweijie7"},"content":"    2. Test case: `find i/S1234567A`\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":890,"author":{"gitId":"ongweijie7"},"content":"       Person with the exact matching NRIC will be shown. It is case-insensitive.","lastModifiedDate":"2023-03-27"},{"lineNumber":891,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":892,"author":{"gitId":"ongweijie7"},"content":"    3. Test case: `find n/JAMES`\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":893,"author":{"gitId":"ongweijie7"},"content":"       Persons with names containing the string \u0027james\u0027 will be shown. It is case-insensitive.","lastModifiedDate":"2023-03-27"},{"lineNumber":894,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":895,"author":{"gitId":"ongweijie7"},"content":"    4. Test case: `find t/diabetic`\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":896,"author":{"gitId":"ongweijie7"},"content":"       Persons with `diabetic` tags will be shown. It is case-insensitive.","lastModifiedDate":"2023-03-27"},{"lineNumber":897,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":898,"author":{"gitId":"ongweijie7"},"content":"    5. Test case: `find m/panadol`\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":899,"author":{"gitId":"ongweijie7"},"content":"       Persons that have been prescribed `panadol` will be shown. It is case-insensitive.","lastModifiedDate":"2023-03-27"},{"lineNumber":900,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":901,"author":{"gitId":"ongweijie7"},"content":"    6. Test case: `find n/`\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":902,"author":{"gitId":"dawg420"},"content":"       Expected: No particular string has been input after the given prefix. Error details shown in the status message.","lastModifiedDate":"2023-03-28"},{"lineNumber":903,"author":{"gitId":"dawg420"},"content":"       Status bar remains the same.","lastModifiedDate":"2023-03-28"},{"lineNumber":904,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":905,"author":{"gitId":"ongweijie7"},"content":"    7. Test case: `find n/ t/`\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":906,"author":{"gitId":"dawg420"},"content":"       Expected: Multiple attributes have been input. Error details shown in the status message. Status bar remains the","lastModifiedDate":"2023-03-28"},{"lineNumber":907,"author":{"gitId":"dawg420"},"content":"       same.","lastModifiedDate":"2023-03-28"},{"lineNumber":908,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":909,"author":{"gitId":"Creationsv2"},"content":"    8. Other incorrect delete commands to try: `find`, `find x`(no prefix have been given),\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":910,"author":{"gitId":"Creationsv2"},"content":"       `find n/ i/`,  `find n/ m/ i/`, `...` \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":911,"author":{"gitId":"ongweijie7"},"content":"       Expected: Similar to previous wrong commands.","lastModifiedDate":"2023-03-27"},{"lineNumber":912,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":913,"author":{"gitId":"ongweijie7"},"content":"2. Returning to the full list of persons","lastModifiedDate":"2023-03-27"},{"lineNumber":914,"author":{"gitId":"ongweijie7"},"content":"    1. List all persons using the `list` command to return back to the full list of persons in the database.","lastModifiedDate":"2023-03-27"},{"lineNumber":915,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":916,"author":{"gitId":"CedricPei"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":917,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":918,"author":{"gitId":"Creationsv2"},"content":"### Saving and Loading data","lastModifiedDate":"2023-04-09"},{"lineNumber":919,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":920,"author":{"gitId":"Creationsv2"},"content":"1. Saving current state of HospiSearch","lastModifiedDate":"2023-04-09"},{"lineNumber":921,"author":{"gitId":"Creationsv2"},"content":"   1. Prerequisites: There are 1 or more patient records in HospiSearch. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":922,"author":{"gitId":"Creationsv2"},"content":"   The following test cases should be executed sequentially (one after the other)/","lastModifiedDate":"2023-04-09"},{"lineNumber":923,"author":{"gitId":"Creationsv2"},"content":"   2. Test case 1.1: `backup 1`, then `viewbackups` \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":924,"author":{"gitId":"Creationsv2"},"content":"      Expected: Current state is saved in backup slot 1.","lastModifiedDate":"2023-04-09"},{"lineNumber":925,"author":{"gitId":"Creationsv2"},"content":"   3. Test case 1.2: `delete i/x`, (replace x with `nric` of the first patient), then `load 1`","lastModifiedDate":"2023-04-09"},{"lineNumber":926,"author":{"gitId":"Creationsv2"},"content":"      Expected: The state of HospiSearch should be as if the `delete` command was not executed.","lastModifiedDate":"2023-04-09"},{"lineNumber":927,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":928,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":929,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":930,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":931,"author":{"gitId":"ongweijie7"},"content":"### Appendix:Planned Enhancements","lastModifiedDate":"2023-04-10"},{"lineNumber":932,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":933,"author":{"gitId":"ongweijie7"},"content":"1. At present, a user has the option to enter an individual\u0027s `NRIC` number in the future, such as adding a person with ","lastModifiedDate":"2023-04-10"},{"lineNumber":934,"author":{"gitId":"ongweijie7"},"content":"NRIC T99******, despite the year 2099 being in the future. We intend to implement a feature that will validate ","lastModifiedDate":"2023-04-10"},{"lineNumber":935,"author":{"gitId":"ongweijie7"},"content":"`NRIC`s and generate an error message `Please input a valid NRIC` should an `NRIC` from the future be inputted.","lastModifiedDate":"2023-04-10"},{"lineNumber":936,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":937,"author":{"gitId":"ongweijie7"},"content":"2. Currently, a user is unable to input a `DateOfBirth` with a year that is in the future.In the future, We plan to make ","lastModifiedDate":"2023-04-10"},{"lineNumber":938,"author":{"gitId":"ongweijie7"},"content":"it such that we will check for future dates inputted as `DateOfBirth` and generate an error message `Only dates that ","lastModifiedDate":"2023-04-10"},{"lineNumber":939,"author":{"gitId":"ongweijie7"},"content":"have occurred are valid inputs`","lastModifiedDate":"2023-04-10"},{"lineNumber":940,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":941,"author":{"gitId":"ongweijie7"},"content":"3. Currently, a user is unable to input `Medicine`s that contain non-alphanumeric characters.In the future, we plan to ","lastModifiedDate":"2023-04-10"},{"lineNumber":942,"author":{"gitId":"ongweijie7"},"content":"make it such that you can input `Medicine`s with non-alphanumeric characters such as \"retin-A\".","lastModifiedDate":"2023-04-10"},{"lineNumber":943,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":944,"author":{"gitId":"ongweijie7"},"content":"4. Currently, you are unable to input `Name`s that contain non-alphanumeric characters.In the future, we plan to","lastModifiedDate":"2023-04-10"},{"lineNumber":945,"author":{"gitId":"ongweijie7"},"content":"make it such that you can input `Name`s with non-alphanumeric characters such as \"s/o\".","lastModifiedDate":"2023-04-10"},{"lineNumber":946,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":947,"author":{"gitId":"ongweijie7"},"content":"5. Currently, whenever a user `views` a patient, the scroll bar will bring you back to the very top of the list of ","lastModifiedDate":"2023-04-10"},{"lineNumber":948,"author":{"gitId":"ongweijie7"},"content":"patients. In the future, we will ensure tha the scroll bar remains in position even after running a `view` command.","lastModifiedDate":"2023-04-10"},{"lineNumber":949,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":950,"author":{"gitId":"CedricPei"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-04-10"}],"authorContributionMap":{"CedricPei":64,"SeanChinJunKai":195,"dawg420":175,"ongweijie7":121,"Creationsv2":87,"-":308}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-03-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2023-03-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"# Introduction","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"Streamline your patient management with lightning-fast efficiency using HospiSearch","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"HospiSearch is a **desktop app for managing hospital/clinic patients\u0027 particulars, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a **Graphical User Interface (GUI)**. HospiSearch can also help you complete your patient management tasks faster than traditional GUI apps, regardless of your typing speed.","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"Our target audience is hospital and clinical administrative staff who deal with the management of large physical patient records and seek a more efficient and streamlined solution. Our app provides them with the ability to add, edit, delete, filter patient records and so much more.","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"## About this Guide","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"The purpose of this user guide document is to provide staff with a clear understanding of the features and benefits of HospiSearch. The guide aims to assist users in effectively utilizing HospiSearch\u0027s features to streamline their patient management tasks and improve overall efficiency.","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** Messages in this format are important!","lastModifiedDate":"2023-03-31"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"💡**Tip**:","lastModifiedDate":"2023-03-31"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"\u003cbr/\u003e Messages in this format include information that may be useful to the user.","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"# Table of Contents:","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"- [Setup](#setup)","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"- [GUI Information](#gui-information)","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"- [Command Prefixes](#command-prefixes)","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"- [Features](#features)","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"  - [Add patient](#adding-a-patient-record-add): `add`","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"  - [Edit patient](#editing-a-patient-record-edit): `edit`","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"  - [View patient particulars](#viewing-a-patient-detailed-particulars-view): `view`","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"  - [Delete patient](#deleting-a-patient-record-delete): `delete`","lastModifiedDate":"2023-03-30"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"  - [Filter patients](#filtering-patients-by-attribute-find): `find`","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"  - [List all patients](#listing-all-patients-list): `list`","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"  - [Backup patient records](#backing-up-patient-records-backup): `backup`","lastModifiedDate":"2023-03-31"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"  - [Load backups](#loading-data-load): `load`","lastModifiedDate":"2023-03-31"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"  - [View backups](#viewing-backup-data-viewbackups): `viewbackups`","lastModifiedDate":"2023-03-31"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"  - [Delete backups](#deleting-backup-data-deletebackup): `deletebackup`","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"  - [Clear all data](#clearing-all-data-clear): `clear`","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"  - [Light mode](#switching-to-light-mode-light): `light`","lastModifiedDate":"2023-03-31"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"  - [Dark mode](#switching-to-dark-mode-dark): `dark`","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"  - [Undo](#undoing-previous-command-undo): `undo`","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"  - [Redo](#redoing-previous-undo-redo): `redo`","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"  - [Help](#viewing-help--help): `help`","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"- [FAQ](#faq)","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"## Setup","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"dawg420"},"content":"2. Download the latest `HospiSearch.jar` from [here](https://github.com/AY2223S2-CS2103T-T11-4/tp/releases).","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for  HospiSearch.","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"dawg420"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar hospisearch.jar`command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"SeanChinJunKai"},"content":"Note:","lastModifiedDate":"2023-04-09"},{"lineNumber":64,"author":{"gitId":"SeanChinJunKai"},"content":"  - For Mac Users:","lastModifiedDate":"2023-04-09"},{"lineNumber":65,"author":{"gitId":"SeanChinJunKai"},"content":"    1. Click on the Finder icon in the Dock (the bar of icons at the bottom of the screen).","lastModifiedDate":"2023-04-09"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"    2. Click on Applications in the left-hand sidebar.","lastModifiedDate":"2023-04-09"},{"lineNumber":67,"author":{"gitId":"SeanChinJunKai"},"content":"    3. Open the Utilities folder.","lastModifiedDate":"2023-04-09"},{"lineNumber":68,"author":{"gitId":"SeanChinJunKai"},"content":"    4. Double-click on the Terminal application to launch the command terminal.","lastModifiedDate":"2023-04-09"},{"lineNumber":69,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"SeanChinJunKai"},"content":"  - For Windows Users:","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"SeanChinJunKai"},"content":"    1. Click on the Start button in the bottom left corner of the screen.","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"SeanChinJunKai"},"content":"    2. Type command prompt into the search bar.","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"SeanChinJunKai"},"content":"    3. Click on the Command Prompt application that appears in the search results to launch the command terminal.","lastModifiedDate":"2023-04-09"},{"lineNumber":74,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":75,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":76,"author":{"gitId":"SeanChinJunKai"},"content":"   A GUI similar to the one below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"dawg420"},"content":"5. Type in a command in the command box to execute it. Some commands to try:","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"Creationsv2"},"content":"    1. `help` opens up the help menu.","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"dawg420"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"SeanChinJunKai"},"content":"Note: HospiSearch is compatible with Windows, MacOS and Ubuntu.","lastModifiedDate":"2023-03-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"dawg420"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"Creationsv2"},"content":"## GUI Information","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"SeanChinJunKai"},"content":"![DefinedGUI](images/DefinedGUI.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"SeanChinJunKai"},"content":"## Command Prefixes","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"SeanChinJunKai"},"content":"| Patient Record Field | Prefix |","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"SeanChinJunKai"},"content":"|----------------------|--------|","lastModifiedDate":"2023-03-27"},{"lineNumber":100,"author":{"gitId":"SeanChinJunKai"},"content":"| NRIC                 | i/     |","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"Creationsv2"},"content":"| Date Of Birth        | dob/   | ","lastModifiedDate":"2023-04-06"},{"lineNumber":102,"author":{"gitId":"SeanChinJunKai"},"content":"| Name                 | n/     |  ","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"SeanChinJunKai"},"content":"| Phone                | p/     |  ","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"SeanChinJunKai"},"content":"| Gender               | g/     |  ","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"Creationsv2"},"content":"| Doctor               | ad/    |  ","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"SeanChinJunKai"},"content":"| Email                | e/     |  ","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"SeanChinJunKai"},"content":"| Address              | a/     | ","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"SeanChinJunKai"},"content":"| Tag                  | t/     |","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"SeanChinJunKai"},"content":"| Drug Allergy         | d/     |","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"dawg420"},"content":"| Medicine             | m/     |","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"dawg420"},"content":"| Backup description   | b/     |","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":114,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"Creationsv2"},"content":"### Notes:","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"dawg420"},"content":"- Input words in `UPPER_CASE` are the parameters to be supplied by the user. e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2023-03-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":122,"author":{"gitId":"ongweijie7"},"content":"- Commands in square brackets are optional. e.g. `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":125,"author":{"gitId":"dawg420"},"content":"- Commands separated by `|` within `()` suggest that only one of the commands must be present to be valid.","lastModifiedDate":"2023-03-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":128,"author":{"gitId":"Creationsv2"},"content":"- Items with `…` after them can be used multiple times, including zero. e.g., [t/TAG] …​ can be used","lastModifiedDate":"2023-03-30"},{"lineNumber":129,"author":{"gitId":"Creationsv2"},"content":"  (i.e. 0 or more times), t/friend t/family etc.","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":132,"author":{"gitId":"dawg420"},"content":"- Parameters can be in any order. e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2023-03-30"},{"lineNumber":133,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":134,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":135,"author":{"gitId":"dawg420"},"content":"- Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored. e.g., if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2023-03-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"Creationsv2"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** All commands from this point onwards are to be","lastModifiedDate":"2023-04-06"},{"lineNumber":138,"author":{"gitId":"Creationsv2"},"content":"executed in lower case. E.g., `find` is valid, but `FIND` or `FinD` is considered as invalid. Keywords following commands do","lastModifiedDate":"2023-04-06"},{"lineNumber":139,"author":{"gitId":"Creationsv2"},"content":"not need to be in lower case.","lastModifiedDate":"2023-04-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":144,"author":{"gitId":"dawg420"},"content":"### Adding a patient record: `add`","lastModifiedDate":"2023-03-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":146,"author":{"gitId":"SeanChinJunKai"},"content":"In a situation when you want to register a patient who is visiting your clinc for the first time, this feature can allow you to add the patient\u0027s record to the patient records list.","lastModifiedDate":"2023-04-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"ongweijie7"},"content":"Format: `add i/NRIC n/NAME dob/DATE OF BIRTH p/PHONE a/ADDRESS d/DRUGALLERGIES g/GENDER ad/DOCTOR [e/EMAIL] [t/TAG]…​ [m/MEDICINE]…​`","lastModifiedDate":"2023-03-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"ongweijie7"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** Do take note which patient details are","lastModifiedDate":"2023-03-30"},{"lineNumber":151,"author":{"gitId":"ongweijie7"},"content":"optional.","lastModifiedDate":"2023-03-30"},{"lineNumber":152,"author":{"gitId":"ongweijie7"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":154,"author":{"gitId":"dawg420"},"content":"💡**Tip**:","lastModifiedDate":"2023-03-30"},{"lineNumber":155,"author":{"gitId":"SeanChinJunKai"},"content":"\u003cbr/\u003eThe drug allergies field is required however if the patient you are registering does not have any drug allergies, type in NKDA(No Known Drug Allergies)","lastModifiedDate":"2023-04-06"},{"lineNumber":156,"author":{"gitId":"dawg420"},"content":"\u003cbr/\u003eA patient can have any number of tags and medicine (including 0).","lastModifiedDate":"2023-03-31"},{"lineNumber":157,"author":{"gitId":"dawg420"},"content":"\u003cbr/\u003eA patient can leave out the email prefix should they not want to share it.","lastModifiedDate":"2023-03-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"SeanChinJunKai"},"content":"Examples:","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"ongweijie7"},"content":"* `add i/T0012345A n/John Doe dob/20/12/2000 p/98765432 a/John street, block 123, #01-01 d/NKDA g/Male ad/Alex t/Diabetic m/Lantus`","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"ongweijie7"},"content":"* `add i/T0012345B n/Betsy Crowe dob/18/12/1998 p/1234567 a/Newgate Prison d/Panadol g/Female ad/Shannon e/betsycrowe@example.com t/Dyslexic`","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"CedricPei"},"content":"![Add](images/command_result/Add.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"Creationsv2"},"content":"Above is the execution result of the input `add i/S1234567H n/Cedric Pei dob/03/04/2002 p/84655284 a/PGPR g/Male d/NKDA ad/Shannon t/Diabetic m/Lantus m/Soliqua`.","lastModifiedDate":"2023-04-06"},{"lineNumber":167,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"SeanChinJunKai"},"content":"### Editing a patient record: `edit`","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"SeanChinJunKai"},"content":"In a situation when you want to update a patient\u0027s phone number or other particulars this feature can allow you to do so.","lastModifiedDate":"2023-04-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"ongweijie7"},"content":"Format: `edit INDEX [i/NRIC] [n/NAME] [dob/DATE OF BIRTH] [p/PHONE] [e/EMAIL] [a/ADDRESS] [d/DRUGALLERGIES] [g/GENDER] [ad/DOCTOR] [t/TAG]…​ [m/MEDICINE]…​`","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":174,"author":{"gitId":"ongweijie7"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** Only include the prefixes for the specific","lastModifiedDate":"2023-03-30"},{"lineNumber":175,"author":{"gitId":"ongweijie7"},"content":"patient detail you would like to edit.","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"dawg420"},"content":"💡**Tip**:","lastModifiedDate":"2023-03-30"},{"lineNumber":179,"author":{"gitId":"dawg420"},"content":"\u003cbr/\u003eYou can remove all the patient’s tags/medicine by typing t/ or m/ respectively, without specifying any tags/medicine after it.","lastModifiedDate":"2023-03-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"dawg420"},"content":"* `edit 1 p/91234567 e/johndoe@example.com` edit the phone number and email address of the patient at index 1 to be 91234567 and johndoe@example.com respectively.","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"CedricPei"},"content":"![Edit](images/command_result/Edit.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":187,"author":{"gitId":"CedricPei"},"content":"Above is the execution result of the input `edit 7 i/G0000000A`.","lastModifiedDate":"2023-04-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":189,"author":{"gitId":"CedricPei"},"content":"### Viewing a patient detailed particulars: `view`","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"SeanChinJunKai"},"content":"In a situation when you want to obtain in depth information of a particular patient which is not available in the patient records list, you can use this feature to do so.","lastModifiedDate":"2023-04-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":193,"author":{"gitId":"CedricPei"},"content":"Format : `view i/NRIC`","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":195,"author":{"gitId":"CedricPei"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** For other commands, the view pane will show the particulars of the first patient in our system by default.","lastModifiedDate":"2023-04-09"},{"lineNumber":196,"author":{"gitId":"CedricPei"},"content":"But after ADD or EDIT command, the view pane will show the corresponding patient\u0027s particulars.","lastModifiedDate":"2023-04-09"},{"lineNumber":197,"author":{"gitId":"CedricPei"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"CedricPei"},"content":"* `view i/G0000000A` shows detailed information about the patient on the view pane.","lastModifiedDate":"2023-04-09"},{"lineNumber":201,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":202,"author":{"gitId":"CedricPei"},"content":"![View](images/command_result/View.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":204,"author":{"gitId":"dawg420"},"content":"Above is the execution result of the input `view i/S1234567H`.","lastModifiedDate":"2023-03-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"SeanChinJunKai"},"content":"### Deleting a patient record: `delete`","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"SeanChinJunKai"},"content":"In a situation when you want to delete a patient from the patient records list due to death and the specified retention period is over, you can use this feature to do so.","lastModifiedDate":"2023-04-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"SeanChinJunKai"},"content":"Format: `delete i/NRIC…​`","lastModifiedDate":"2023-03-28"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"ongweijie7"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If multiple deletes are made in a single","lastModifiedDate":"2023-03-30"},{"lineNumber":213,"author":{"gitId":"ongweijie7"},"content":"command, `undo` command will not undo all deletes made, but only **one** at a time.","lastModifiedDate":"2023-03-30"},{"lineNumber":214,"author":{"gitId":"ongweijie7"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-18"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":218,"author":{"gitId":"CedricPei"},"content":"* `delete i/S1234567A` deletes the patient with NRIC S1234567A from patient records system.","lastModifiedDate":"2023-03-30"},{"lineNumber":219,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":220,"author":{"gitId":"CedricPei"},"content":"### Filtering patients by attribute: `find`","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"SeanChinJunKai"},"content":"You can search for patients based on their name, age, medical condition, or any other relevant criteria","lastModifiedDate":"2023-04-09"},{"lineNumber":223,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":224,"author":{"gitId":"ongweijie7"},"content":"Command Prefixes that can be searched:","lastModifiedDate":"2023-03-30"},{"lineNumber":225,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":226,"author":{"gitId":"ongweijie7"},"content":"* name(`n/`)","lastModifiedDate":"2023-03-30"},{"lineNumber":227,"author":{"gitId":"ongweijie7"},"content":"* nric(`i/`)","lastModifiedDate":"2023-03-30"},{"lineNumber":228,"author":{"gitId":"ongweijie7"},"content":"* tag(`t/`)","lastModifiedDate":"2023-03-30"},{"lineNumber":229,"author":{"gitId":"ongweijie7"},"content":"* doctor(`ad/`)","lastModifiedDate":"2023-03-30"},{"lineNumber":230,"author":{"gitId":"ongweijie7"},"content":"* medicine(`m/`)","lastModifiedDate":"2023-03-30"},{"lineNumber":231,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":232,"author":{"gitId":"ongweijie7"},"content":"Format: `find (n/NAME | i/NRIC | t/TAG | ad/DOCTOR | m/MEDICINE ) [MORE_KEYWORDS]`","lastModifiedDate":"2023-03-30"},{"lineNumber":233,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":234,"author":{"gitId":"ongweijie7"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2023-03-30"},{"lineNumber":235,"author":{"gitId":"ongweijie7"},"content":"**Note:** `find` searches by **complete strings** and not **substrings**. The search will only be carried out for","lastModifiedDate":"2023-03-30"},{"lineNumber":236,"author":{"gitId":"ongweijie7"},"content":"**one** given attribute.","lastModifiedDate":"2023-03-30"},{"lineNumber":237,"author":{"gitId":"ongweijie7"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":238,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":239,"author":{"gitId":"ongweijie7"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:","lastModifiedDate":"2023-03-30"},{"lineNumber":240,"author":{"gitId":"ongweijie7"},"content":"**Note:** The search is **case-insensitive**. The order of the keywords does not matter.","lastModifiedDate":"2023-03-30"},{"lineNumber":241,"author":{"gitId":"ongweijie7"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":242,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":243,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":244,"author":{"gitId":"Creationsv2"},"content":"Examples (The following results are based of the sample data provided):","lastModifiedDate":"2023-03-30"},{"lineNumber":245,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"Creationsv2"},"content":"* `find n/john` returns `John Lim` and `John Doe` who both contain the name `John` in their names.","lastModifiedDate":"2023-03-30"},{"lineNumber":247,"author":{"gitId":"ongweijie7"},"content":"* `find n/yu bernice` returns `Bernice Yu` as the order of keywords does not matter","lastModifiedDate":"2023-03-30"},{"lineNumber":248,"author":{"gitId":"Creationsv2"},"content":"* `find i/S0078957G` returns `Alice Tan` who has an NRIC of `S0078957G`.","lastModifiedDate":"2023-03-30"},{"lineNumber":249,"author":{"gitId":"Creationsv2"},"content":"* `find t/Diabetic Osteoporotic` returns all persons with the tag `Diabetic` or `Osteoporotic` or both.","lastModifiedDate":"2023-03-24"},{"lineNumber":250,"author":{"gitId":"ongweijie7"},"content":"* `find ad/Shannon` returns all persons with attending doctor `Shannon`.","lastModifiedDate":"2023-03-30"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"CedricPei"},"content":"![Find](images/command_result/Find.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":253,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":254,"author":{"gitId":"CedricPei"},"content":"Above is the execution result of the input `find ad/Alex`.","lastModifiedDate":"2023-04-09"},{"lineNumber":255,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":256,"author":{"gitId":"dawg420"},"content":"### Listing all patients: `list`","lastModifiedDate":"2023-04-09"},{"lineNumber":257,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":258,"author":{"gitId":"dawg420"},"content":"You can use this feature to get a list of all patients in the records.","lastModifiedDate":"2023-04-09"},{"lineNumber":259,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":260,"author":{"gitId":"dawg420"},"content":"Format: `list`","lastModifiedDate":"2023-04-09"},{"lineNumber":261,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":262,"author":{"gitId":"dawg420"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** List returns the entire current database","lastModifiedDate":"2023-04-09"},{"lineNumber":263,"author":{"gitId":"dawg420"},"content":"that you have loaded.","lastModifiedDate":"2023-04-09"},{"lineNumber":264,"author":{"gitId":"dawg420"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":265,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":266,"author":{"gitId":"dawg420"},"content":"💡**Tip**:","lastModifiedDate":"2023-04-09"},{"lineNumber":267,"author":{"gitId":"dawg420"},"content":"\u003cbr/\u003eAfter filtering for specific patients, you can view all patients by using the `list` command.","lastModifiedDate":"2023-04-09"},{"lineNumber":268,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":269,"author":{"gitId":"dawg420"},"content":"![List](images/command_result/List.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":270,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":271,"author":{"gitId":"dawg420"},"content":"Above is the execution result of the input `list`.","lastModifiedDate":"2023-04-09"},{"lineNumber":272,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":273,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":274,"author":{"gitId":"CedricPei"},"content":"### Backing up patient records: `backup`","lastModifiedDate":"2023-03-30"},{"lineNumber":275,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":276,"author":{"gitId":"SeanChinJunKai"},"content":"In order to prevent data loss, you can back up the patient records to a specified slot represented by an index and add a description for the backup.","lastModifiedDate":"2023-04-09"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"dawg420"},"content":"Format: `backup INDEX_NO [b/DESCRIPTION]`","lastModifiedDate":"2023-03-30"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":281,"author":{"gitId":"dawg420"},"content":"💡**Tip**:","lastModifiedDate":"2023-03-30"},{"lineNumber":282,"author":{"gitId":"dawg420"},"content":"\u003cbr/\u003eBacking up without a description will leave the description field empty.","lastModifiedDate":"2023-03-30"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":284,"author":{"gitId":"ongweijie7"},"content":"Format: `backup INDEX_NO [b/DESCRIPTION]`","lastModifiedDate":"2023-03-31"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-14"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":290,"author":{"gitId":"dawg420"},"content":"* `backup 3 b/Test` backups the data to the 3rd slot with description \u0027Test\u0027.","lastModifiedDate":"2023-03-30"},{"lineNumber":291,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":292,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":293,"author":{"gitId":"dawg420"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:**: INDEX_NO can only be an integer between 1 and 10","lastModifiedDate":"2023-03-30"},{"lineNumber":294,"author":{"gitId":"dawg420"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":295,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":296,"author":{"gitId":"CedricPei"},"content":"![Backup](images/command_result/Backup.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":297,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":298,"author":{"gitId":"dawg420"},"content":"Above is the execution result of the input `backup 1`.","lastModifiedDate":"2023-03-31"},{"lineNumber":299,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":300,"author":{"gitId":"CedricPei"},"content":"### Loading data: `load`","lastModifiedDate":"2023-03-30"},{"lineNumber":301,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":302,"author":{"gitId":"SeanChinJunKai"},"content":"In the event of a data loss, you can load the backup data from a specified slot represented by an index.","lastModifiedDate":"2023-04-09"},{"lineNumber":303,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":304,"author":{"gitId":"ongweijie7"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** Allows access to a specific backup.","lastModifiedDate":"2023-03-30"},{"lineNumber":305,"author":{"gitId":"ongweijie7"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":306,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":307,"author":{"gitId":"dawg420"},"content":"Format: `load INDEX_NO`","lastModifiedDate":"2023-03-14"},{"lineNumber":308,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":309,"author":{"gitId":"dawg420"},"content":"Example:","lastModifiedDate":"2023-03-14"},{"lineNumber":310,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":311,"author":{"gitId":"Creationsv2"},"content":"* `load 3` loads the data from the 3rd slot.","lastModifiedDate":"2023-03-30"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":314,"author":{"gitId":"dawg420"},"content":"### Viewing backup data: `viewbackups`","lastModifiedDate":"2023-03-31"},{"lineNumber":315,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":316,"author":{"gitId":"SeanChinJunKai"},"content":"You can use this feature to shows all the data you have backed up.","lastModifiedDate":"2023-04-09"},{"lineNumber":317,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":318,"author":{"gitId":"ongweijie7"},"content":"Format: `viewbackups`","lastModifiedDate":"2023-03-31"},{"lineNumber":319,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":320,"author":{"gitId":"dawg420"},"content":"💡**Tip**:","lastModifiedDate":"2023-03-30"},{"lineNumber":321,"author":{"gitId":"dawg420"},"content":"\u003cbr/\u003eYou can exit the backups page by typing the command `list`.","lastModifiedDate":"2023-03-30"},{"lineNumber":322,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":323,"author":{"gitId":"dawg420"},"content":"![Viewbackups](images/command_result/Viewbackups.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":324,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":325,"author":{"gitId":"dawg420"},"content":"Above is the execution result of the input `viewbackups`.","lastModifiedDate":"2023-03-31"},{"lineNumber":326,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":327,"author":{"gitId":"CedricPei"},"content":"### Deleting backup data: `deletebackup`","lastModifiedDate":"2023-03-30"},{"lineNumber":328,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":329,"author":{"gitId":"SeanChinJunKai"},"content":"You can use this feature to delete the backup data from a specified slot represented by an index.","lastModifiedDate":"2023-04-09"},{"lineNumber":330,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":331,"author":{"gitId":"ongweijie7"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** Deleted backups cannot be retrieved after","lastModifiedDate":"2023-03-30"},{"lineNumber":332,"author":{"gitId":"ongweijie7"},"content":"deletion.","lastModifiedDate":"2023-03-30"},{"lineNumber":333,"author":{"gitId":"ongweijie7"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":334,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":335,"author":{"gitId":"dawg420"},"content":"Format: `deletebackup INDEX_NO`","lastModifiedDate":"2023-03-28"},{"lineNumber":336,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":337,"author":{"gitId":"dawg420"},"content":"Example:","lastModifiedDate":"2023-03-28"},{"lineNumber":338,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":339,"author":{"gitId":"dawg420"},"content":"* `deletebackup 3` deletes the data from the 3rd slot.","lastModifiedDate":"2023-03-28"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":341,"author":{"gitId":"SeanChinJunKai"},"content":"### Clearing all data: `clear`","lastModifiedDate":"2023-03-27"},{"lineNumber":342,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":343,"author":{"gitId":"Creationsv2"},"content":"Purges all data from the database.","lastModifiedDate":"2023-03-30"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"ongweijie7"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** Data cannot be retrieved after clearing.","lastModifiedDate":"2023-03-30"},{"lineNumber":346,"author":{"gitId":"dawg420"},"content":"Use this command with caution.","lastModifiedDate":"2023-03-31"},{"lineNumber":347,"author":{"gitId":"ongweijie7"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":349,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2023-03-27"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":351,"author":{"gitId":"dawg420"},"content":"![Clear](images/command_result/Clear.png)","lastModifiedDate":"2023-04-10"},{"lineNumber":352,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":353,"author":{"gitId":"dawg420"},"content":"Above is the execution result of the input `clear`.","lastModifiedDate":"2023-04-10"},{"lineNumber":354,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":355,"author":{"gitId":"dawg420"},"content":"### Undoing previous command: `undo`","lastModifiedDate":"2023-04-09"},{"lineNumber":356,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":357,"author":{"gitId":"dawg420"},"content":"In the event that your previous change was a mistake, you can use this feature to revert the patient records to the state before the previous command was executed.","lastModifiedDate":"2023-04-09"},{"lineNumber":358,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":359,"author":{"gitId":"dawg420"},"content":"Format: `undo`","lastModifiedDate":"2023-04-09"},{"lineNumber":360,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":361,"author":{"gitId":"dawg420"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The initial starting state will be upon","lastModifiedDate":"2023-04-09"},{"lineNumber":362,"author":{"gitId":"dawg420"},"content":"launch of HospiSearch application. Undo can be executed up to the initial starting state.","lastModifiedDate":"2023-04-09"},{"lineNumber":363,"author":{"gitId":"dawg420"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":365,"author":{"gitId":"dawg420"},"content":"\u003cbr/\u003e\u003cbr/\u003e![Undo-1](images/command_result/Undo-1.png)","lastModifiedDate":"2023-04-10"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":367,"author":{"gitId":"dawg420"},"content":"Changing the name of a patient above `edit 6 n/John Balakrishnan` (Previously Roy Balakrishnan)","lastModifiedDate":"2023-04-09"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":369,"author":{"gitId":"dawg420"},"content":"\u003cbr/\u003e\u003cbr/\u003e![Undo-2](images/command_result/Undo-2.png)","lastModifiedDate":"2023-04-10"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":371,"author":{"gitId":"dawg420"},"content":"And above is the execution of `undo`","lastModifiedDate":"2023-04-09"},{"lineNumber":372,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":373,"author":{"gitId":"dawg420"},"content":"### Redoing previous undo: `redo`","lastModifiedDate":"2023-04-09"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":375,"author":{"gitId":"dawg420"},"content":"In the event that you accidentally removed the changes you made, you can use this feature to revert the patient records to the state before the previous undo was executed.","lastModifiedDate":"2023-04-09"},{"lineNumber":376,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":377,"author":{"gitId":"dawg420"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source:**Note:** Redo can only be executed if undo command","lastModifiedDate":"2023-04-09"},{"lineNumber":378,"author":{"gitId":"dawg420"},"content":"has been executed.","lastModifiedDate":"2023-04-09"},{"lineNumber":379,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":381,"author":{"gitId":"dawg420"},"content":"Format: `redo`","lastModifiedDate":"2023-04-09"},{"lineNumber":382,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":383,"author":{"gitId":"dawg420"},"content":"![Redo](images/command_result/Redo.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":384,"author":{"gitId":"dawg420"},"content":"Following the above example for `undo`, `redo` would subsequently change the name of the patient again.","lastModifiedDate":"2023-04-09"},{"lineNumber":385,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":386,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":387,"author":{"gitId":"CedricPei"},"content":"### Switching to light mode: `light`","lastModifiedDate":"2023-03-30"},{"lineNumber":388,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":389,"author":{"gitId":"Creationsv2"},"content":"Switches the GUI to light mode.","lastModifiedDate":"2023-03-30"},{"lineNumber":390,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":391,"author":{"gitId":"CedricPei"},"content":"Format: `light`","lastModifiedDate":"2023-03-22"},{"lineNumber":392,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":393,"author":{"gitId":"CedricPei"},"content":"![Light](images/command_result/Light.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":394,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":395,"author":{"gitId":"dawg420"},"content":"Above is the execution result of the input `light`.","lastModifiedDate":"2023-03-31"},{"lineNumber":396,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":397,"author":{"gitId":"CedricPei"},"content":"### Switching to dark mode: `dark`","lastModifiedDate":"2023-03-30"},{"lineNumber":398,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":399,"author":{"gitId":"Creationsv2"},"content":"Switches the GUI to dark mode.","lastModifiedDate":"2023-03-30"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":401,"author":{"gitId":"SeanChinJunKai"},"content":"Format: `dark`","lastModifiedDate":"2023-03-27"},{"lineNumber":402,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":403,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":404,"author":{"gitId":"dawg420"},"content":"💡**Tip**:","lastModifiedDate":"2023-03-31"},{"lineNumber":405,"author":{"gitId":"dawg420"},"content":"\u003cbr/\u003eThe default GUI is light mode. Use these commands and see which is your preferred GUI!","lastModifiedDate":"2023-03-31"},{"lineNumber":406,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":407,"author":{"gitId":"CedricPei"},"content":"![Dark](images/command_result/Dark.png)","lastModifiedDate":"2023-03-30"},{"lineNumber":408,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":409,"author":{"gitId":"dawg420"},"content":"Above is the execution result of the input `dark`.","lastModifiedDate":"2023-03-31"},{"lineNumber":410,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":411,"author":{"gitId":"SeanChinJunKai"},"content":"### Viewing help : `help`","lastModifiedDate":"2023-04-09"},{"lineNumber":412,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":413,"author":{"gitId":"SeanChinJunKai"},"content":"In case you need help navigating HospiSearch, you can use this feature which lists out all the commands available, along with a brief description.","lastModifiedDate":"2023-04-09"},{"lineNumber":414,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":415,"author":{"gitId":"SeanChinJunKai"},"content":"Format: `help`","lastModifiedDate":"2023-04-09"},{"lineNumber":416,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":417,"author":{"gitId":"SeanChinJunKai"},"content":"![Help](images/command_result/Help.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":418,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":419,"author":{"gitId":"SeanChinJunKai"},"content":"Above is the view of help window after the input `help`.","lastModifiedDate":"2023-04-09"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":422,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer? \u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"dawg420"},"content":"**A**: Install the app on the other computer and overwrite all files in the `data` directory it creates with the files from your previous HospiSearch `data` directory.","lastModifiedDate":"2023-03-30"},{"lineNumber":429,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":430,"author":{"gitId":"Creationsv2"},"content":"**Q**: Where is my HospiSearch `data` directory? \u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":431,"author":{"gitId":"Creationsv2"},"content":"**A**: The `data` directory is created in the same folder your HospiSearch Jar file is opened in.","lastModifiedDate":"2023-03-30"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":434,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":438,"author":{"gitId":"SeanChinJunKai"},"content":"| Action             | Format, Examples                                                                                                                                                                                                                                                         |","lastModifiedDate":"2023-03-08"},{"lineNumber":439,"author":{"gitId":"dawg420"},"content":"|--------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  ","lastModifiedDate":"2023-04-09"},{"lineNumber":440,"author":{"gitId":"SeanChinJunKai"},"content":"| **Add**            | `add i/NRIC n/NAME dob/DATE OF BIRTH p/PHONE a/ADDRESS d/DRUGALLERGIES g/GENDER ad/DOCTOR [e/EMAIL] [t/TAG]…​ [m/MEDICINE]…​` \u003cbr/\u003e e.g. add i/T0012345A n/John Doe dob/20/12/2000 p/98765432 a/John street, block 123, #01-01 d/NKDA g/Male ad/Alex t/Diabetic m/Lantus | ","lastModifiedDate":"2023-04-06"},{"lineNumber":441,"author":{"gitId":"SeanChinJunKai"},"content":"| **Edit**           | `edit INDEX [i/NRIC] [n/NAME] [dob/DATE OF BIRTH] [p/PHONE] [e/EMAIL] [a/ADDRESS] [d/DRUGALLERGIES] [g/GENDER] [ad/DOCTOR] [t/TAG]…​ [m/MEDICINE]…​` \u003cbr/\u003e e.g. edit 1 p/91234567 e/johndoe@example.com                                                                  |  ","lastModifiedDate":"2023-04-06"},{"lineNumber":442,"author":{"gitId":"dawg420"},"content":"| **View**           | `view i/NRIC` \u003cbr/\u003e e.g. find i/S1234567H                                                                                                                                                                                                                                |  ","lastModifiedDate":"2023-04-09"},{"lineNumber":443,"author":{"gitId":"dawg420"},"content":"| **Delete**         | `delete i/NRIC…​` \u003cbr/\u003e e.g. delete i/T0012345A                                                                                                                                                                                                                          |  ","lastModifiedDate":"2023-03-30"},{"lineNumber":444,"author":{"gitId":"dawg420"},"content":"| **Find**           | `find attribute/KEYWORD [MORE_KEYWORDS]` \u003cbr/\u003e e.g. find a/Alex  \u003cbr/\u003e e.g. find t/diabetic                                                                                                                                                                              |  ","lastModifiedDate":"2023-03-30"},{"lineNumber":445,"author":{"gitId":"dawg420"},"content":"| **List**           | `list`                                                                                                                                                                                                                                                                   |  ","lastModifiedDate":"2023-04-09"},{"lineNumber":446,"author":{"gitId":"dawg420"},"content":"| **Backup**         | `backup INDEX_NO [b/Description]` \u003cbr/\u003e e.g. backup 3 b/Day shift                                                                                                                                                                                                        |  ","lastModifiedDate":"2023-04-09"},{"lineNumber":447,"author":{"gitId":"dawg420"},"content":"| **Load**           | `load INDEX_NO` \u003cbr/\u003e e.g. load 3                                                                                                                                                                                                                                        |  ","lastModifiedDate":"2023-03-30"},{"lineNumber":448,"author":{"gitId":"dawg420"},"content":"| **View backups**   | `viewbackups`                                                                                                                                                                                                                                                            |  ","lastModifiedDate":"2023-03-30"},{"lineNumber":449,"author":{"gitId":"Creationsv2"},"content":"| **Delete backups** | `deletebackup INDEX_NO` \u003cbr/\u003e e.g. deletebackup 3                                                                                                                                                                                                                        |  ","lastModifiedDate":"2023-03-31"},{"lineNumber":450,"author":{"gitId":"dawg420"},"content":"| **Clear all**      | `clear`                                                                                                                                                                                                                                                                  |  ","lastModifiedDate":"2023-03-30"},{"lineNumber":451,"author":{"gitId":"dawg420"},"content":"| **Undo**           | `undo`                                                                                                                                                                                                                                                                   |  ","lastModifiedDate":"2023-04-09"},{"lineNumber":452,"author":{"gitId":"dawg420"},"content":"| **Redo**           | `redo`                                                                                                                                                                                                                                                                   |  ","lastModifiedDate":"2023-04-09"},{"lineNumber":453,"author":{"gitId":"dawg420"},"content":"| **Light**          | `light`                                                                                                                                                                                                                                                                  |  ","lastModifiedDate":"2023-03-30"},{"lineNumber":454,"author":{"gitId":"dawg420"},"content":"| **Dark**           | `dark`                                                                                                                                                                                                                                                                   |","lastModifiedDate":"2023-03-30"},{"lineNumber":455,"author":{"gitId":"dawg420"},"content":"| **Help**           | `help`                                                                                                                                                                                                                                                                   |  ","lastModifiedDate":"2023-04-09"},{"lineNumber":456,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":457,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":458,"author":{"gitId":"SeanChinJunKai"},"content":"\u003csub\u003e[return to table of contents](#table-of-contents)\u003c/sub\u003e","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"CedricPei":39,"SeanChinJunKai":86,"dawg420":144,"ongweijie7":43,"Creationsv2":33,"-":113}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"SeanChinJunKai"},"content":"    content: \"HospiSearch\";","lastModifiedDate":"2023-03-05"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"SeanChinJunKai":1,"-":294}},{"path":"docs/diagrams/BackupSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"\u0027https://plantuml.com/sequence-diagram","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"participant \":BackupCommand\" as BackupCommand LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"participant \":BackupCommandParser\" as BackupCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"participant \":Storage\" as Storage STORAGE_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"participant \":BackupDataStorage\" as BackupDataStorage STORAGE_COLOR","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"create BackupCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"BackupCommandParser -\u003e BackupCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"activate BackupCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"BackupCommand --\u003e BackupCommandParser","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"deactivate BackupCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"[-\u003e BackupCommand : execute()","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"activate BackupCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"BackupCommand -\u003e Model : getBackupDataStorage()","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"activate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"Model --\u003e BackupCommand : backupDataStorage","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"deactivate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"BackupCommand -\u003e Model : getAddressBook()","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"activate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"Model --\u003e BackupCommand : addressBook","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"deactivate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"BackupCommand -\u003e Model : getBackupData()","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"activate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"Model --\u003e BackupCommand : backupData","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"deactivate Model","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"BackupCommand -\u003e Storage : saveAddressBook(addressBook)","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"activate Storage","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"Storage --\u003e BackupCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"deactivate Storage","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"BackupCommand -\u003e BackupDataStorage : saveBackupData(backupData)","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"activate BackupDataStorage","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"BackupDataStorage --\u003e BackupCommand","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"deactivate BackupDataStorage","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"dawg420":44}},{"path":"docs/diagrams/BetterArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"user -[USER_COLOR]\u003e ui : \"delete i/T0123456A i/T0124563B\"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"activate ui UI_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete i/T0123456A i/T0124563B\")","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p1)","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"deactivate model","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p2)","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"deactivate model","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"deactivate storage","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"deactivate storage","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"deactivate logic","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"deactivate ui","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"@enduml","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"SeanChinJunKai":45}},{"path":"docs/diagrams/BetterDeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"@startuml","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"!include style.puml","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"end box","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"[-\u003e LogicManager : execute(\"delete i/T0123456A i/T0124563B\")","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"activate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"delete i/T0123456A i/T0124563B\")","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"create DeleteCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"activate DeleteCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse([\"T0123456A\", \"T0124563B\"])","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"activate DeleteCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"create DeleteCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"activate DeleteCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"deactivate DeleteCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"activate DeleteCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"loop nricList not empty","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"DeleteCommand -\u003e Model : findPersonByNRIC()","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"Model --\u003e DeleteCommand: p","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"DeleteCommand -\u003e Model : deletePerson(p)","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"activate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"SeanChinJunKai"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"SeanChinJunKai"},"content":"deactivate Model","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"SeanChinJunKai"},"content":"end","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"create CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"SeanChinJunKai"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"SeanChinJunKai"},"content":"activate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"SeanChinJunKai"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"SeanChinJunKai"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"SeanChinJunKai"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"SeanChinJunKai"},"content":"deactivate DeleteCommand","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"SeanChinJunKai"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"SeanChinJunKai"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"SeanChinJunKai"},"content":"@enduml","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"SeanChinJunKai":78}},{"path":"docs/diagrams/BetterNricModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"@startuml","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"!include style.puml","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"AddressBook *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"Person *--\u003e Nric","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"Person *--\u003e Name","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"ongweijie7"},"content":"Person *--\u003e DateOfBirth","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"Person *--\u003e Phone","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"Person *--\u003e Email","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"Person *--\u003e Address","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"Person *--\u003e DrugAllergy","lastModifiedDate":"2023-03-23"},{"lineNumber":22,"author":{"gitId":"ongweijie7"},"content":"Person *--\u003e Gender","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"Person *--\u003e Doctor","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"ongweijie7"},"content":"Person *--\u003e \"*\" Medicine","lastModifiedDate":"2023-04-10"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"@enduml","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"SeanChinJunKai":1,"ongweijie7":3,"Creationsv2":21}},{"path":"docs/diagrams/FindSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ongweijie7"},"content":"@startuml","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"ongweijie7"},"content":"!include style.puml","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"ongweijie7"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"ongweijie7"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"ongweijie7"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"ongweijie7"},"content":"participant \":FindCommandParser\" as FindCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"ongweijie7"},"content":"participant \"NP:NameContainsKeywordPredicate\" as NameContainsKeywordPredicate LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"ongweijie7"},"content":"participant \"FC:FindCommand\" as FindCommand LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"ongweijie7"},"content":"participant \"result:CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"ongweijie7"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"ongweijie7"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"ongweijie7"},"content":"participant \"model:Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"ongweijie7"},"content":"end box","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"ongweijie7"},"content":"[-\u003e LogicManager : execute(\"find n/Alice\")","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"ongweijie7"},"content":"activate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"ongweijie7"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"find n/Alice\")","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"ongweijie7"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"ongweijie7"},"content":"create FindCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"ongweijie7"},"content":"AddressBookParser -\u003e FindCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"ongweijie7"},"content":"activate FindCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"ongweijie7"},"content":"FindCommandParser --\u003e AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"ongweijie7"},"content":"deactivate FindCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"ongweijie7"},"content":"AddressBookParser -\u003e FindCommandParser : parse(\"Alice\")","lastModifiedDate":"2023-04-10"},{"lineNumber":31,"author":{"gitId":"ongweijie7"},"content":"activate FindCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"ongweijie7"},"content":"create NameContainsKeywordPredicate","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"ongweijie7"},"content":"FindCommandParser -\u003e NameContainsKeywordPredicate","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"ongweijie7"},"content":"activate NameContainsKeywordPredicate","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"ongweijie7"},"content":"NameContainsKeywordPredicate --\u003e FindCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"ongweijie7"},"content":"deactivate NameContainsKeywordPredicate","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"ongweijie7"},"content":"create FindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"ongweijie7"},"content":"FindCommandParser -\u003e FindCommand : FindCommand(NP)","lastModifiedDate":"2023-04-10"},{"lineNumber":42,"author":{"gitId":"ongweijie7"},"content":"activate FindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"ongweijie7"},"content":"FindCommand --\u003e FindCommandParser : FC","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"ongweijie7"},"content":"deactivate FindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"ongweijie7"},"content":"FindCommandParser --\u003e AddressBookParser : FC","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"ongweijie7"},"content":"deactivate FindCommandParser","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"ongweijie7"},"content":"AddressBookParser --\u003e LogicManager : FC","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"ongweijie7"},"content":"deactivate AddressBookParser","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"ongweijie7"},"content":"LogicManager -\u003e FindCommand : execute(model)","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"ongweijie7"},"content":"activate FindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"ongweijie7"},"content":"FindCommand -\u003e Model : updateFilteredPersonList(NP)","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"ongweijie7"},"content":"activate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"ongweijie7"},"content":"Model --\u003e FindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"ongweijie7"},"content":"deactivate Model","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"ongweijie7"},"content":"create CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"ongweijie7"},"content":"FindCommand -\u003e CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"ongweijie7"},"content":"activate CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"ongweijie7"},"content":"CommandResult --\u003e FindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"ongweijie7"},"content":"deactivate CommandResult","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"ongweijie7"},"content":"FindCommand --\u003e LogicManager : result","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"ongweijie7"},"content":"deactivate FindCommand","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"ongweijie7"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"ongweijie7"},"content":"deactivate LogicManager","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"ongweijie7"},"content":"@enduml","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"ongweijie7":75}},{"path":"docs/diagrams/NricModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"@startuml","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"!include style.puml","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"Package ModelComponent \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyAddressBook\" as ReadOnlyAddressBook","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"Class AddressBook","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"Class ModelManager","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"Class UserPrefs","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"Class UniquePersonList","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"Class Person","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"Class Address","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"Class Email","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"Class Name","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"Class Nric","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"ongweijie7"},"content":"Class DateOfBirth","lastModifiedDate":"2023-04-10"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"Class Phone","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"Class DrugAllergy","lastModifiedDate":"2023-03-23"},{"lineNumber":24,"author":{"gitId":"ongweijie7"},"content":"Class Gender","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"ongweijie7"},"content":"Class Doctor","lastModifiedDate":"2023-04-10"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"Class Tag","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"ongweijie7"},"content":"Class Medicine","lastModifiedDate":"2023-04-10"},{"lineNumber":28,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"Creationsv2"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"Creationsv2"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"Creationsv2"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"Person *--\u003e Nric","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"Person *--\u003e Name","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"ongweijie7"},"content":"Person *--\u003e DateOfBirth","lastModifiedDate":"2023-04-10"},{"lineNumber":49,"author":{"gitId":"Creationsv2"},"content":"Person *--\u003e Phone","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"Creationsv2"},"content":"Person *--\u003e Email","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"Creationsv2"},"content":"Person *--\u003e Address","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"Person *--\u003e DrugAllergy","lastModifiedDate":"2023-03-23"},{"lineNumber":53,"author":{"gitId":"ongweijie7"},"content":"Person *--\u003e Gender","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"ongweijie7"},"content":"Person *--\u003e Doctor","lastModifiedDate":"2023-04-10"},{"lineNumber":55,"author":{"gitId":"Creationsv2"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"ongweijie7"},"content":"Person *--\u003e \"*\" Medicine","lastModifiedDate":"2023-04-10"},{"lineNumber":57,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"Creationsv2"},"content":"Nric -[hidden]right-\u003e Name","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"ongweijie7"},"content":"Name -[hidden]right-\u003e DateOfBirth","lastModifiedDate":"2023-04-10"},{"lineNumber":61,"author":{"gitId":"ongweijie7"},"content":"DateOfBirth -[hidden]right-\u003e Phone","lastModifiedDate":"2023-04-10"},{"lineNumber":62,"author":{"gitId":"Creationsv2"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"Creationsv2"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"Creationsv2"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"Creationsv2"},"content":"@enduml","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"SeanChinJunKai":2,"ongweijie7":12,"Creationsv2":52}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"title: HospiSearch","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-T11-4/tp/branch/master/graph/badge.svg?token\u003d540MA4AXQI)](https://codecov.io/gh/AY2223S2-CS2103T-T11-4/tp)","lastModifiedDate":"2023-02-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"CedricPei"},"content":"HospiSearch is a **desktop app for managing hospital/clinic patients\u0027 particulars, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a **Graphical User Interface (GUI)**. HospiSearch can help you complete your contact management tasks faster than traditional GUI apps, regardless of your typing speed.","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":"* If you are interested in using HospiSearch, head over to the [**User Guide**](UserGuide.html).","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"CedricPei"},"content":"* If you are interested about developing HospiSearch, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"CedricPei":4,"-":14}},{"path":"docs/team/cedricpei.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"CedricPei"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"CedricPei"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"title: Pei Wenqi\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":"### Project: HospiSearch","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":"HospiSearch is a desktop app for healthcare administrators to manage hospital/clinic patients\u0027 particulars and is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, HospiSearch can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"CedricPei"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":"    [\\#80](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/80)","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"CedricPei"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"CedricPei"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"CedricPei"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"* **New Feature**: Added the ability to switch between the dark and light theme.","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"CedricPei"},"content":"    [\\#61](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/61)","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"CedricPei"},"content":"    * What it does: allows the user to choose the GUI theme he/she prefers at a specific time.","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"CedricPei"},"content":"    * Justification: This feature increases the accessibility of the product because a user may not want to face strong screen light at night and don\u0027t want to look at a dark screen in the daytime.","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"CedricPei"},"content":"    * Highlights: The implementation of this feature requires combined knowledge of JavaFX, CSS, and fine arts. ","lastModifiedDate":"2023-04-08"},{"lineNumber":25,"author":{"gitId":"CedricPei"},"content":"    * Credit: Adapted `Theme` class from [here](https://github.com/junlong4321/tp/blob/master/src/main/java/tutorspet/ui/stylesheet/Stylesheet.java).","lastModifiedDate":"2023-04-08"},{"lineNumber":26,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":27,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"CedricPei"},"content":"* **New Feature**: Added the ability to view patient details.","lastModifiedDate":"2023-04-08"},{"lineNumber":30,"author":{"gitId":"CedricPei"},"content":"    [\\#106](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/106)","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"CedricPei"},"content":"    * What it does: allows the user to see detailed patient information other than the information on the small card.","lastModifiedDate":"2023-04-08"},{"lineNumber":32,"author":{"gitId":"CedricPei"},"content":"    * Justification: This feature is an indispensable part of the product because the patient card in the list panel cannot contain detailed patient particulars.","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"CedricPei"},"content":"    * Highlights: This enhancement is related to all commands which make modifications to the data. A view pane should also be built upon the original GUI to implement the functionality.","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":37,"author":{"gitId":"CedricPei"},"content":"* **User Interface**:","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"CedricPei"},"content":"    * Styled application UI with Java FX.","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"CedricPei"},"content":"    * Touched up overall application layout.","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"CedricPei"},"content":"    * Edited colours and restyled UI components.","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"CedricPei"},"content":"    * Enabled event handler (double click) for View command.","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"CedricPei"},"content":"    * Added a `Theme` toggle on the top bar.","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"CedricPei"},"content":"    * GUI Change ([\\#34](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/34), [\\#48](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/48), [\\#50](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/50), [\\#136](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/136), [\\#209](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/209))","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"CedricPei"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dcedric\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17)","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"CedricPei"},"content":"* **Project management**:","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"CedricPei"},"content":"    * Set up the team Google Drive folder.","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"CedricPei"},"content":"    * Organised and coordinated team meetings.","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"CedricPei"},"content":"    * Published `v1.3` demo.","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"CedricPei"},"content":"    * Reviewed and approved PRs for merging.","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"CedricPei"},"content":"    ","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"CedricPei"},"content":"* **Documentation**:","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"CedricPei"},"content":"    * User Guide:","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"CedricPei"},"content":"        * Added documentation for the features `dark` and `light`: [\\#80](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/80)","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"CedricPei"},"content":"        * Added documentation for the features `undo` and `redo`: [\\#80](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/80)","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"CedricPei"},"content":"        * Added documentation for the feature `view`: [\\#131](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/131)","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"CedricPei"},"content":"        * Added screenshots and captions for all features: [\\#131](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/131)","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"CedricPei"},"content":"        * Corrected grammar mistakes and polished sentences: [\\#64](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/64)","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"CedricPei"},"content":"    * Developer Guide:","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"CedricPei"},"content":"        * Added implementation details of the `dark` and `light` feature: [\\#64](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/64)","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"CedricPei"},"content":"        * Integrated and added all user stories.","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"CedricPei"},"content":"* **Community**:","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"CedricPei"},"content":"    * PRs reviewed (with non-trivial comments):[\\#42](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/42), [\\#58](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/58)","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"CedricPei"},"content":"    * Reported a total of [12](https://github.com/CedricPei/ped) bugs and issues for PE-D.","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"CedricPei":72}},{"path":"docs/team/creationsv2.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"layout: page ","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"title: Jonathon Low Eng Kiat\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"### Project: HospiSearch","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"HospiSearch is a desktop app for healthcare administrators to manage hospital/clinic patients\u0027 particulars and optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, HospiSearch can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"## Summary of Contributions","lastModifiedDate":"2023-04-06"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"* **New Feature**: Added `nric` field in patient records. [#45](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/45)","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"    * What it does: Allows users to store `nric` of patients and uniquely identify them my `nric`.","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"    * Justification: This feature allows for easy unqiue identification of a patient.","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"  Previously uniqueness was checked by the `name` field, which is not ideal as two patients may have the same name.","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"    * Highlights: To prevent incorrect formats, the `nric` field is only able to take in `nric`s with valid","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"                  formats.","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"* **New Feature**: Added ability to filter by `tag` fields.","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"  [#86](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/86)","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"    * What it does: Allows users to be filtered by their current `tag`s.","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"    * Justification: This feature allows for easy filtering of patients by their conditions, represented by `tag`s.","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"* **New Feature**: Added `doctor` field in patient records.","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"[#121](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/121)","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"    * What it does: Allows users to be tagged to an attending `doctor`.","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"    * Justification: This feature allows for easy identification of patients by current attending `doctor`.","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"    * Highlights: Attending `doctor` is now shown beside each patient for quick relational view.","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"* **New Feature**: Added ability to filter by attending `doctor` field.","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"[#123](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/123)","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"    * What it does: Allows users to be filtered by their current attending `doctor`.","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"    * Justification: This feature allows for easy filtering of patients by current attending `doctor`.","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"* **Code contributed**:","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"Creationsv2"},"content":"[RepoSense Link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dCreationsv2\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse)","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"Creationsv2"},"content":"* **Project Management**:","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"  * Organised and coordinated team meetings.","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"  * Published Releases `v1.2b`, `v1.3.trial`, `v1.3.1` and `v1.4`.","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"Creationsv2"},"content":"  * Set up and maintained team Organisation and Repo.","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"Creationsv2"},"content":"  * Used GitHub issue tracker.","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"Creationsv2"},"content":"  * Reviewed and approved PRs for merging.","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"Creationsv2"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"Creationsv2"},"content":"  * Changed usage of `tag` classes to reflect patient conditions. [#86](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/86)","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"Creationsv2"},"content":"  * Wrote test cases for `nric` classes. [#45](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/45), [#71](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/71)","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"Creationsv2"},"content":"  * Wrote test cases for `doctor` classes. [#121](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/121)","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"Creationsv2"},"content":"  * Wrote test cases for `tag` and its related classes. [#86](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/86)","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"Creationsv2"},"content":"* **Documentation**:","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"Creationsv2"},"content":"  * User Guide:","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"Creationsv2"},"content":"    * Added documentation for changed usage of `tag` field and how to filter it. [#86](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/86)","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"Creationsv2"},"content":"    * Added documentation for the feature of the attending `doctor` field. [#121](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/121)","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"Creationsv2"},"content":"    * General formatting aesthetic changes/fixes. [#56](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/56), [#126](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/126)","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"Creationsv2"},"content":"    , [#127](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/127), [#128](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/128), [#142](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/142/files)","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"Creationsv2"},"content":"  * Developer Guide:","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"Creationsv2"},"content":"    * Added implementation details for the `nric` class. [#83](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/83)","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"Creationsv2"},"content":"    * Added implementation details for using `tag` as patient conditions. [#86](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/86/files)","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"Creationsv2"},"content":"    * Added local testing details for `add` command. [#110](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/110)","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"Creationsv2"},"content":"    * General formatting aesthetic changes/fixes. [#20](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/20), [#97](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/97)","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"Creationsv2"},"content":"    , [#126](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/126), [#214](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/214)","lastModifiedDate":"2023-04-09"},{"lineNumber":72,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"Creationsv2"},"content":"* **Documentation**:","lastModifiedDate":"2023-04-06"},{"lineNumber":75,"author":{"gitId":"Creationsv2"},"content":"  * PRs reviewed (with non-trivial comments): [#42](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/42), [#76](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/76), [#125](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/125)","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"Creationsv2"},"content":"  , [#131](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/131), [#134](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/134),","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"Creationsv2"},"content":"  * Created a total of [27](https://github.com/AY2223S2-CS2103T-T11-4/tp/issues?q\u003dis%3Aissue+author%3ACreationsv2+) issues for GitHub issue tracker.","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"Creationsv2"},"content":"  * Reported a total of [12](https://github.com/Creationsv2/ped/issues) bugs and issues for PE-D.","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"SeanChinJunKai":1,"Creationsv2":78}},{"path":"docs/team/dawg420.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"title: Ma Yuchen\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"### Project: HospiSearch","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"HospiSearch is a desktop app for healthcare administrators to manage hospital/clinic patients\u0027 particulars and optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, HospiSearch can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"* Code Contributed: [Code dashboard](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003ddawg420\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"* New Feature: Backup/Load","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"    * What it does: Allows the user to backup to a specified slot, with an accompanying message.","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"    * Justification: This feature allows a user to save the current data state for safekeeping or exporting uses.","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"* New User field: Prescription medicine","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"  * Added medication fields for the patient.","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"* UI improvements:","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"  * Standardised the font and improved margins.","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"  * Highlighted certain fields for better visibility.","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"SeanChinJunKai":1,"dawg420":25}},{"path":"docs/team/ongweijie7.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ongweijie7"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"ongweijie7"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"ongweijie7"},"content":"title: Ong Wei Jie\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"ongweijie7"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"ongweijie7"},"content":"### Project: HospiSearch","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"HospiSearch is a desktop app for healthcare administrators to manage hospital/clinic patients\u0027 particulars and optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, HospiSearch can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"ongweijie7"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"ongweijie7"},"content":"* **New Feature**: Added ability to filter by `name` field. [#42](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/42)","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"ongweijie7"},"content":"    * What it does: Allows users to filter patient records by their `name`s.","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"ongweijie7"},"content":"    * Justification: This feature allows for filtering patient records by their `name`s before viewing it for more details.","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"ongweijie7"},"content":"    * Highlights: Can input multiple `name`s to filter by.","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"ongweijie7"},"content":"* **New Feature**: Added ability to filter by `nric` field. [#58](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/58)","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"ongweijie7"},"content":"    * What it does: Allows users to filter patient records by their `nric`s.","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"ongweijie7"},"content":"    * Justification: This feature allows for filtering patient records by their `nric`s before viewing it for more details.","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"ongweijie7"},"content":"    * Highlights: Can input multiple `nric`s to filter by.","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"ongweijie7"},"content":"* **New Feature**: Added `gender` field in patient records. [#93](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/93)","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"ongweijie7"},"content":"    * What it does: Allows users to store `gender` attribute of patients.","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"ongweijie7"},"content":"    * Justification: This feature allows for identification of gender given a patient.","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"ongweijie7"},"content":"    * Highlights: To prevent incorrect formats, the `gender` is only able to take in `male`, `female` or `others`.","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"ongweijie7"},"content":"* **New Feature**: Added ability to filter by `medicine` field. [#112](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/112)","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"ongweijie7"},"content":"    * What it does: Allows users to filter patient records by their `medicine` usage.","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"ongweijie7"},"content":"    * Justification: This feature allows for filtering patient records by their `medicine` usage before viewing it for more details.","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"ongweijie7"},"content":"    * Highlights: Can input multiple `medicine`s to filter by.","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"ongweijie7"},"content":"* **New Feature**: Added functionality to make email an optional field. [#119](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/119)","lastModifiedDate":"2023-04-06"},{"lineNumber":37,"author":{"gitId":"ongweijie7"},"content":"    * What it does: Allows users to create a patient record with the email as an optional field.","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"ongweijie7"},"content":"    * Justification: This feature allows for users to leave out the email field should the patient be unwilling to share it.","lastModifiedDate":"2023-04-06"},{"lineNumber":39,"author":{"gitId":"ongweijie7"},"content":"    * Highlights: Users can simply leave out the `e/` prefix when entering a user and it will be shown as a `-` in the patient\u0027s record or they can choose","lastModifiedDate":"2023-04-06"},{"lineNumber":40,"author":{"gitId":"ongweijie7"},"content":"  to enter `e/-` and the email will also be shown as a `-`.","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"ongweijie7"},"content":"* **New Feature**: Updated the `help` command pop-out. [#120](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/120)","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"ongweijie7"},"content":"    * What it does: Updated the list of commands on the `help` command pop-out window for users who require help","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"ongweijie7"},"content":"    * Justification: This feature allows for users get quick access to information should they struggle with any syntax of the commands.","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"ongweijie7"},"content":"* **New Feature**: Added `DateOfBirth` field in patient records. [#125](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/125)","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"ongweijie7"},"content":"    * What it does: Allows users to store `DateOfBirth` attribute of patients.","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"ongweijie7"},"content":"    * Justification: This feature allows for identification of the date of birth of patient.","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"ongweijie7"},"content":"    * Highlights: By inputting in date in the format `DD/MM/YYYY`, the date of birth shown in the record will be `DD MONTH YYYY`","lastModifiedDate":"2023-04-06"},{"lineNumber":52,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":53,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":54,"author":{"gitId":"ongweijie7"},"content":"### **Code contributed**:","lastModifiedDate":"2023-04-06"},{"lineNumber":55,"author":{"gitId":"ongweijie7"},"content":"  [RepoSense Link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dongweijie7\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":57,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":58,"author":{"gitId":"ongweijie7"},"content":"### **Enhancements to existing features**:","lastModifiedDate":"2023-04-06"},{"lineNumber":59,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":60,"author":{"gitId":"ongweijie7"},"content":"* Changed the syntax of `find` command to be aligned with that of `add` command. [#76](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/76)","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"ongweijie7"},"content":"* Changed `find` command from filtering by address to filtering by medicine. [#112](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/112)","lastModifiedDate":"2023-04-06"},{"lineNumber":62,"author":{"gitId":"ongweijie7"},"content":"* Added test cases for `find` command for the various prefixes to search for. [#42](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/42), [#58](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/58), [#112](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/112)","lastModifiedDate":"2023-04-06"},{"lineNumber":63,"author":{"gitId":"ongweijie7"},"content":"* Added more test cases to detect any bugs when adding `gender` field and executing `find` command. [#105](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/105)","lastModifiedDate":"2023-04-06"},{"lineNumber":64,"author":{"gitId":"ongweijie7"},"content":"* Added test cases for `Gender` classes. [#93](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/93)","lastModifiedDate":"2023-04-06"},{"lineNumber":65,"author":{"gitId":"ongweijie7"},"content":"* Added test cases to allow for `email` as an optional field which requires for `null` checking when email field is empty. [#119](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/119)","lastModifiedDate":"2023-04-06"},{"lineNumber":66,"author":{"gitId":"ongweijie7"},"content":"* Added test cases for `DateOfBirth` classes. [#125](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/125)","lastModifiedDate":"2023-04-06"},{"lineNumber":67,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":68,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":69,"author":{"gitId":"ongweijie7"},"content":"### **Documentation**:","lastModifiedDate":"2023-04-06"},{"lineNumber":70,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":71,"author":{"gitId":"ongweijie7"},"content":"User Guide:","lastModifiedDate":"2023-04-06"},{"lineNumber":72,"author":{"gitId":"ongweijie7"},"content":"* Added documentation to include details and example of the basic commands we were implementing. [#15](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/15)","lastModifiedDate":"2023-04-06"},{"lineNumber":73,"author":{"gitId":"ongweijie7"},"content":"* Added documentation to include command notes to take note for each command. [#129](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/129)","lastModifiedDate":"2023-04-06"},{"lineNumber":74,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":75,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":76,"author":{"gitId":"ongweijie7"},"content":"Developer Guide:","lastModifiedDate":"2023-04-06"},{"lineNumber":77,"author":{"gitId":"ongweijie7"},"content":"* Added implementation details and design considerations for the `find` command and its respective prefixes. [#95](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/95)","lastModifiedDate":"2023-04-06"},{"lineNumber":78,"author":{"gitId":"ongweijie7"},"content":"* Added sequence diagram for `find` command. [#95](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/95)","lastModifiedDate":"2023-04-06"},{"lineNumber":79,"author":{"gitId":"ongweijie7"},"content":"* Added test cases implementation for the `find` command. [#109](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/109)","lastModifiedDate":"2023-04-06"},{"lineNumber":80,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":81,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":82,"author":{"gitId":"ongweijie7"},"content":"### **Review contributions**:","lastModifiedDate":"2023-04-06"},{"lineNumber":83,"author":{"gitId":"ongweijie7"},"content":"* Organised and coordinated team meetings.","lastModifiedDate":"2023-04-06"},{"lineNumber":84,"author":{"gitId":"ongweijie7"},"content":"* Took video demo for `v1.3`.","lastModifiedDate":"2023-04-06"},{"lineNumber":85,"author":{"gitId":"ongweijie7"},"content":"* Reviewed and approved PRs for merging.","lastModifiedDate":"2023-04-06"},{"lineNumber":86,"author":{"gitId":"ongweijie7"},"content":"* PRs reviewed (with non-trivial comments): [#83](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/83), [#85](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/85), [#86](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/86)","lastModifiedDate":"2023-04-06"},{"lineNumber":87,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":88,"author":{"gitId":"ongweijie7"},"content":"### **Review contributions beyond the team**:","lastModifiedDate":"2023-04-06"},{"lineNumber":89,"author":{"gitId":"ongweijie7"},"content":"* Reported a total of [10](https://github.com/ongweijie7/ped/issues) bugs and issues for PE-D.","lastModifiedDate":"2023-04-06"}],"authorContributionMap":{"SeanChinJunKai":1,"ongweijie7":88}},{"path":"docs/team/seanchinjunkai.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"title: Sean Chin Jun Kai\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"### Project: HospiSearch","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"HospiSearch is a desktop app for healthcare administrators to manage hospital/clinic patients\u0027 particulars and optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, HospiSearch can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-04-06"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"* **Code Contributed** : [Code dashboard](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dSeanChinJunKai\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle%20dsc\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-04-06"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"* **New Feature** : Delete patient records by their unique identifier, NRIC [\\#49](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/49), [\\#62](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/62), [\\#115](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/115)","lastModifiedDate":"2023-04-06"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"    * What it does: Allows healthcare administrators to delete patient records from the system by NRIC.","lastModifiedDate":"2023-04-06"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"    * Justification: This allows the healthcare administrators to remove patient records which are no longer needed. One such example could be that after a patient has died and the required retention period has passed, the records can be deleted to free up memory in the system.","lastModifiedDate":"2023-04-06"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"* **New Feature** : Implemented the logic for `view` command. [\\#90](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/90)","lastModifiedDate":"2023-04-06"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"    * What it does: Allows healthcare administrators to view in-depth patient information.","lastModifiedDate":"2023-04-06"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"    * Justification: Since a patient has many details to keep track of, we are unable to show everything in the patient records list.","lastModifiedDate":"2023-04-06"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"* **New User field** : Drug allergies [\\#81](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/81)","lastModifiedDate":"2023-04-06"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"    * What it does: Allows healthcare administrators to take note of patients\u0027 drug allergies during registration or updating of medical information.","lastModifiedDate":"2023-04-06"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"    * Justification: This allows the drug allergy information to be present so that doctors can prescribe the correct medication to the patients.","lastModifiedDate":"2023-04-06"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"* **Project management** :","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"    * Created tags for issue triaging.","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"    * Reviewed and approved PRs for merging.","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"    * PRs reviewed (with non-trivial comments): [\\#71](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/71)","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"    * Created a total of [5](https://github.com/AY2223S2-CS2103T-T11-4/tp/issues?q\u003dis%3Aissue+author%3ASeanChinJunKai+) issues for GitHub issue tracker.","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"    * Wrote test cases for `drugallergy` class [\\#81](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/81), [\\#96](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/96)","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"    * Wrote test cases for `nric` class [\\#96](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/96)","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"* **Documentation** :","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"    * User Guide","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"        * Added picture of GUI and description of each GUI section [\\#130](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/130)","lastModifiedDate":"2023-04-06"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"        * Added documentation for `delete` command [\\#117](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/117)","lastModifiedDate":"2023-04-06"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"        * Added table of contents and improve navigability [\\#107](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/107)","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"    * Developer Guide","lastModifiedDate":"2023-04-06"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"        * Added implementation details for `delete` command with sequence diagrams [\\#85](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/85), [\\#88](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/88)","lastModifiedDate":"2023-04-06"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"        * Added table of contents and improve navigability [\\#108](https://github.com/AY2223S2-CS2103T-T11-4/tp/pull/108)","lastModifiedDate":"2023-04-06"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"* **Contributions beyond project team** :","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"    * Reported a total of [6](https://github.com/SeanChinJunKai/ped/issues) bugs and issues for PE-D.","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"SeanChinJunKai":54}},{"path":"src/main/java/seedu/address/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2019-02-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"dawg420":4,"-":21}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.BackupData;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.ReadOnlyBackupData;","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.BackupDataStorage;","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.JsonBackupDataStorage;","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 0, true);","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"dawg420"},"content":"        BackupDataStorage backupDataStorage \u003d new JsonBackupDataStorage(config.getBackupDataFilePath());","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"dawg420"},"content":"        BackupData backupData \u003d initBackup(backupDataStorage);","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"dawg420"},"content":"        model \u003d initModelManager(storage, userPrefs, backupData);","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"dawg420"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs, ReadOnlyBackupData backupData) {","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"dawg420"},"content":"        return new ModelManager(initialData, userPrefs, backupData);","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"dawg420"},"content":"    protected BackupData initBackup(BackupDataStorage storage) {","lastModifiedDate":"2023-03-24"},{"lineNumber":175,"author":{"gitId":"dawg420"},"content":"        Path backupFilePath \u003d storage.getBackupDataFilePath();","lastModifiedDate":"2023-03-24"},{"lineNumber":176,"author":{"gitId":"dawg420"},"content":"        logger.info(\"Using backup file:\" + backupFilePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":177,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":178,"author":{"gitId":"dawg420"},"content":"        BackupData initializedBackup;","lastModifiedDate":"2023-03-24"},{"lineNumber":179,"author":{"gitId":"dawg420"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":180,"author":{"gitId":"dawg420"},"content":"            Optional\u003cBackupData\u003e backupOptional \u003d storage.readBackupData();","lastModifiedDate":"2023-03-24"},{"lineNumber":181,"author":{"gitId":"dawg420"},"content":"            initializedBackup \u003d backupOptional.orElse(new BackupData());","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"dawg420"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"dawg420"},"content":"            logger.warning(\"BackupData file at \" + backupFilePath + \" is not in the correct format. \"","lastModifiedDate":"2023-03-24"},{"lineNumber":184,"author":{"gitId":"dawg420"},"content":"                    + \"Using default backup data\");","lastModifiedDate":"2023-03-24"},{"lineNumber":185,"author":{"gitId":"dawg420"},"content":"            initializedBackup \u003d new BackupData();","lastModifiedDate":"2023-03-24"},{"lineNumber":186,"author":{"gitId":"dawg420"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":187,"author":{"gitId":"dawg420"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2023-03-24"},{"lineNumber":188,"author":{"gitId":"dawg420"},"content":"            initializedBackup \u003d new BackupData();","lastModifiedDate":"2023-03-24"},{"lineNumber":189,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":190,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":191,"author":{"gitId":"dawg420"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2023-03-24"},{"lineNumber":192,"author":{"gitId":"dawg420"},"content":"        try {","lastModifiedDate":"2023-03-24"},{"lineNumber":193,"author":{"gitId":"dawg420"},"content":"            storage.saveBackupData(initializedBackup);","lastModifiedDate":"2023-03-24"},{"lineNumber":194,"author":{"gitId":"dawg420"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-24"},{"lineNumber":195,"author":{"gitId":"dawg420"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2023-03-24"},{"lineNumber":196,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":197,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":198,"author":{"gitId":"dawg420"},"content":"        return initializedBackup;","lastModifiedDate":"2023-03-24"},{"lineNumber":199,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":200,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":201,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dawg420":37,"Creationsv2":1,"-":179}},{"path":"src/main/java/seedu/address/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"    private Path backupDataFilePath \u003d Paths.get(\"data/backup/backupData.json\");","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"    public Path getBackupDataFilePath() {","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"        return backupDataFilePath;","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"    public void setBackupDataFilePath(Path backupDataFilePath) {","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"        this.backupDataFilePath \u003d backupDataFilePath;","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dawg420":9,"-":63}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"import static seedu.address.ui.theme.Theme.DEFAULT_THEME;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":"    public final String theme;","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":30,"author":{"gitId":"CedricPei"},"content":"        theme \u003d DEFAULT_THEME.toString();","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"CedricPei"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition, String theme) {","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"CedricPei"},"content":"        this.theme \u003d theme;","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"CedricPei"},"content":"    public String getTheme() {","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"CedricPei"},"content":"        return theme;","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"CedricPei":10,"-":78}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"    private static final String LOG_FILE \u003d \"hospirecord.log\";","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-04-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dawg420":2,"-":111}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d person(s) listed!\";","lastModifiedDate":"2023-04-06"},{"lineNumber":12,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"    public static final String MESSAGE_NRIC_DOES_NOT_EXIST \u003d \"The patient with the provided NRIC does not exist\\n\";","lastModifiedDate":"2023-04-06"},{"lineNumber":14,"author":{"gitId":"CedricPei"},"content":"    public static final String MESSAGE_CANNOT_REDO \u003d \"Cannot redo any further!\";","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"CedricPei"},"content":"    public static final String MESSAGE_CANNOT_UNDO \u003d \"Cannot undo any further!\";","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"CedricPei":3,"Creationsv2":2,"-":12}},{"path":"src/main/java/seedu/address/commons/exceptions/CannotRedoAddressBookException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricPei"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":" * Signals that undo operation is not possible.","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":"public class CannotRedoAddressBookException extends Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"    public CannotRedoAddressBookException(String message) {","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"CedricPei"},"content":"        super(message);","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"CedricPei"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"CedricPei"},"content":"     * @param cause of the main exception","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":"    public CannotRedoAddressBookException(String message, Throwable cause) {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"CedricPei"},"content":"        super(message, cause);","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"CedricPei":21}},{"path":"src/main/java/seedu/address/commons/exceptions/CannotUndoAddressBookException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricPei"},"content":"package seedu.address.commons.exceptions;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":" * Signals that undo operation is not possible.","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":"public class CannotUndoAddressBookException extends Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"    public CannotUndoAddressBookException(String message) {","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"CedricPei"},"content":"        super(message);","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"CedricPei"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"CedricPei"},"content":"     * @param cause of the main exception","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":"    public CannotUndoAddressBookException(String message, Throwable cause) {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"CedricPei"},"content":"        super(message, cause);","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"CedricPei":21}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.backup.Backup;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws ParseException   If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"     * Returns an unmodifiable view of the filtered list of persons","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-04-10"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"     * Changes the list of filtered people","lastModifiedDate":"2023-04-10"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-04-10"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2023-04-10"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"     * Returns an unmodifiable view of backups","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"    ObservableList\u003cBackup\u003e getBackupList() throws IllegalValueException;","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"dawg420":17,"-":49}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.backup.Backup;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":70,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-04-10"},{"lineNumber":71,"author":{"gitId":"dawg420"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-04-10"},{"lineNumber":72,"author":{"gitId":"dawg420"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-04-10"},{"lineNumber":73,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-04-10"},{"lineNumber":74,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-04-10"},{"lineNumber":75,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"dawg420"},"content":"    public ObservableList\u003cBackup\u003e getBackupList() throws IllegalValueException {","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"dawg420"},"content":"        return model.getBackupList();","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"dawg420":13,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_OF_BIRTH;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICINE;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"            + PREFIX_NRIC + \"NRIC \"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":31,"author":{"gitId":"ongweijie7"},"content":"            + PREFIX_DATE_OF_BIRTH + \"DATE OF BIRTH \"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"            + PREFIX_DRUG_ALLERGY + \"DRUGALLERGIES \"","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"ongweijie7"},"content":"            + PREFIX_GENDER + \"GENDER \"","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"            + PREFIX_DOCTOR + \"DOCTOR \"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\"","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"            + \"[\" + PREFIX_MEDICINE + \"MEDICINE]...\\n\"","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"            + PREFIX_NRIC + \"S1234567A \"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"ongweijie7"},"content":"            + PREFIX_DATE_OF_BIRTH + \"22/12/2018 \"","lastModifiedDate":"2023-03-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"ongweijie7"},"content":"            + PREFIX_GENDER + \"Male \"","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"Creationsv2"},"content":"            + PREFIX_DOCTOR + \"Shannon \"","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"CedricPei"},"content":"            + PREFIX_DRUG_ALLERGY + \"NKDA \"","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"            + PREFIX_TAG + \"Diabetic \"","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"dawg420"},"content":"            + PREFIX_MEDICINE + \"Lantus \"","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"CedricPei"},"content":"            + PREFIX_MEDICINE + \"Soliqua\";","lastModifiedDate":"2023-03-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"Creationsv2"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in HospiSearch\";","lastModifiedDate":"2023-04-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"CedricPei":2,"SeanChinJunKai":2,"dawg420":5,"ongweijie7":6,"Creationsv2":7,"-":63}},{"path":"src/main/java/seedu/address/logic/commands/BackupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESC;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.BackupData;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.backup.Backup;","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.BackupDataStorage;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":" * Backs up the data to a specified index","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"public class BackupCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"    public static final String COMMAND_WORD \u003d \"backup\";","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"        + \": Backs up the file to a specified slot \"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"        + \"Existing backup file will be overwritten.\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"        + \"Parameters: INDEX (must be an integer between 1 and 10) \"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"        + \"[\" + PREFIX_DESC + \"DESCRIPTION]...\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"        + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"        + \" 3 \"","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"        + PREFIX_DESC + \"day 1\";","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"File saved to: index %1$d\";","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"    public static final String SAVE_ERROR \u003d \"Error saving file!\";","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"    private final Backup backup;","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"     * @param index of the backup file","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"     * @param desc  description of the backup","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"    public BackupCommand(Index index, String desc) {","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"        this.backup \u003d new Backup(index, desc);","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"dawg420"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"dawg420"},"content":"        UserPrefsStorage userPrefsStorage \u003d model.getUserPrefsStorage();","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"dawg420"},"content":"        AddressBookStorage backupStorage \u003d new JsonAddressBookStorage(Path.of(backup.backupLocation));","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"dawg420"},"content":"        Storage storage \u003d new StorageManager(backupStorage, userPrefsStorage);","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"dawg420"},"content":"        BackupDataStorage backupDataStorage \u003d model.getBackupDataStorage();","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"dawg420"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"dawg420"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"dawg420"},"content":"            model.addBackupToBackupData(backup);","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"dawg420"},"content":"            BackupData backupData \u003d model.getBackupData();","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"dawg420"},"content":"            backupDataStorage.saveBackupData(backupData);","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"dawg420"},"content":"        } catch (IOException ex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"dawg420"},"content":"            throw new CommandException(SAVE_ERROR);","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"dawg420"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, backup.getBackupIndex().getOneBased()),","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"dawg420"},"content":"            false, false, true);","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"dawg420"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"dawg420"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"dawg420"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"dawg420"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"dawg420"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"dawg420"},"content":"        if (!(other instanceof BackupCommand)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"dawg420"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"dawg420"},"content":"        // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"dawg420"},"content":"        BackupCommand e \u003d (BackupCommand) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"dawg420"},"content":"        return backup.equals(e.backup);","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"dawg420":86}},{"path":"src/main/java/seedu/address/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Records have been cleared!\";","lastModifiedDate":"2023-04-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dawg420":1,"-":22}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"     * Light mode should be shown to the user.","lastModifiedDate":"2023-03-30"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"    private final boolean showLight;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"     * Dark mode should be shown to the user.","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"CedricPei"},"content":"    private final boolean showDark;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"     * Help information should be shown to the user.","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"     * The application should exit.","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"     * The application should show backups.","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"    private final boolean showBackups;","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"CedricPei"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean showLight, boolean showDark) {","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"        this.showBackups \u003d false;","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"CedricPei"},"content":"        this.showDark \u003d showDark;","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"CedricPei"},"content":"        this.showLight \u003d showLight;","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"dawg420"},"content":"     * Constructs a {@code CommandResult} with the specified fields,","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"dawg420"},"content":"     * including showBackup.","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"dawg420"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit, boolean showBackups) {","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"dawg420"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"dawg420"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"dawg420"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"dawg420"},"content":"        this.showBackups \u003d showBackups;","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"dawg420"},"content":"        this.showDark \u003d false;","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"dawg420"},"content":"        this.showLight \u003d false;","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"CedricPei"},"content":"        this(feedbackToUser, false, false, false, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"dawg420"},"content":"    public boolean isShowBackups() {","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"dawg420"},"content":"        return showBackups;","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"CedricPei"},"content":"            \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"CedricPei"},"content":"            \u0026\u0026 showLight \u003d\u003d otherCommandResult.showLight","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"dawg420"},"content":"            \u0026\u0026 showDark \u003d\u003d otherCommandResult.showDark","lastModifiedDate":"2023-03-30"},{"lineNumber":105,"author":{"gitId":"dawg420"},"content":"            \u0026\u0026 showBackups \u003d\u003d otherCommandResult.showBackups;","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"CedricPei"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit, showLight, showDark);","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"CedricPei"},"content":"    public boolean isShowLight() {","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"CedricPei"},"content":"        return showLight;","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"CedricPei"},"content":"    public boolean isShowDark() {","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"CedricPei"},"content":"        return showDark;","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"CedricPei":16,"dawg420":37,"-":67}},{"path":"src/main/java/seedu/address/logic/commands/DarkModeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricPei"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":" * Changes mode to Dark Mode.","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"CedricPei"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"public class DarkModeCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"CedricPei"},"content":"    public static final String COMMAND_WORD \u003d \"dark\";","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"CedricPei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Switched to dark mode.\";","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"CedricPei"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"CedricPei"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, false, true);","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"CedricPei":21}},{"path":"src/main/java/seedu/address/logic/commands/DeleteBackupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.BackupDataStorage;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":" * Deletes a backup from a specified index","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"public class DeleteBackupCommand extends Command {","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"    public static final String COMMAND_WORD \u003d \"deletebackup\";","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"                                                   + \": Deletes a backup from a specified slot\\n \"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"                                                   + \"Parameters: INDEX (backup must exist in that index)\\n \"","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"                                                   + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"                                                   + \" 3\";","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Backup deleted from: index %1$d\";","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"    public static final String DELETE_ERROR \u003d \"Error deleting file!\";","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"    private final Index index;","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"    private final Path backupLocation;","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"    private final Path userPrefsPath \u003d Path.of(\"preferences.json\");","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"    private final Path backupDataPath \u003d Path.of(\"data/backup/backupData.json\");","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"     * @param index of the backup file","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"    public DeleteBackupCommand(Index index) {","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"        this.backupLocation \u003d Path.of(\"data/backup/hospirecordBackup\"","lastModifiedDate":"2023-04-08"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"                                          + index.getOneBased()","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"                                          + \".json\");","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"dawg420"},"content":"        UserPrefsStorage userPrefsStorage \u003d model.getUserPrefsStorage();","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"dawg420"},"content":"        AddressBookStorage backupStorage \u003d new JsonAddressBookStorage(backupLocation);","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"dawg420"},"content":"        BackupDataStorage backupDataStorage \u003d model.getBackupDataStorage();","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"dawg420"},"content":"        Storage storage \u003d new StorageManager(backupStorage, userPrefsStorage);","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"dawg420"},"content":"        try {","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"dawg420"},"content":"            model.removeBackupFromBackupData(String.valueOf(index.getOneBased()));","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"dawg420"},"content":"            backupDataStorage.saveBackupData(model.getBackupData());","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"dawg420"},"content":"            storage.deleteBackup(backupLocation);","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"dawg420"},"content":"        } catch (IndexOutOfBoundsException | IOException ex) {","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"dawg420"},"content":"            throw new CommandException(DELETE_ERROR);","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"dawg420"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, index.getOneBased()), false, false, true);","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"dawg420"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"dawg420"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"dawg420"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"dawg420"},"content":"            return true;","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"dawg420"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"dawg420"},"content":"        if (!(other instanceof DeleteBackupCommand)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"dawg420"},"content":"            return false;","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"dawg420"},"content":"        // state check","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"dawg420"},"content":"        DeleteBackupCommand e \u003d (DeleteBackupCommand) other;","lastModifiedDate":"2023-03-25"},{"lineNumber":79,"author":{"gitId":"dawg420"},"content":"        return index.equals(e.index);","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"dawg420":82}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":" * Deletes person(s) identified by their NRIC from the address book. (at least one NRIC to be supplied)","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"            + \": Deletes person(s) identified by their NRIC in the displayed person list.\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"            + \"Parameters: \" + PREFIX_NRIC + \"NRIC...\\n\"","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NRIC + \"S1234567A\";","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person List: \\n\";","lastModifiedDate":"2023-03-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"    private final Set\u003cNric\u003e nricList;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"    public DeleteCommand(Set\u003cNric\u003e nricList) {","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"        this.nricList \u003d nricList;","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"        boolean throwException \u003d false;","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"        String errorMessage \u003d \"\";","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"        String deletedPersonMessage \u003d MESSAGE_DELETE_PERSON_SUCCESS;","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"        for (Nric nric: nricList) {","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"            Person personToDelete \u003d model.findPersonByNric(nric);","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"            if (personToDelete \u003d\u003d null) {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"                throwException \u003d true;","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"                errorMessage +\u003d String.format(Messages.MESSAGE_NRIC_DOES_NOT_EXIST, nric);","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"            } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"                deletedPersonMessage +\u003d String.format(\"%s\\n\", nric);","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"        if (throwException) {","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new CommandException(errorMessage);","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"        return new CommandResult(deletedPersonMessage);","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"SeanChinJunKai"},"content":"                \u0026\u0026 nricList.equals(((DeleteCommand) other).nricList)); // state check","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SeanChinJunKai":28,"-":36}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_OF_BIRTH;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICINE;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.medicine.Medicine;","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":52,"author":{"gitId":"Creationsv2"},"content":"        + \"[\" + PREFIX_NRIC + \"NRIC] \"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":54,"author":{"gitId":"ongweijie7"},"content":"        + \"[\" + PREFIX_DATE_OF_BIRTH + \"DATEOFBIRTH] \"","lastModifiedDate":"2023-03-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"        + \"[\" + PREFIX_DRUG_ALLERGY + \"DRUGALLERGIES] \"","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"ongweijie7"},"content":"        + \"[\" + PREFIX_GENDER + \"GENDER] \"","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"Creationsv2"},"content":"        + \"[\" + PREFIX_DOCTOR + \"DOCTOR] \"","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"dawg420"},"content":"        + \"[\" + PREFIX_MEDICINE + \"MEDICINE]...\\n\"","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * @param index                of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"Creationsv2"},"content":"        Nric updatedNric \u003d editPersonDescriptor.getNric().orElse(personToEdit.getNric());","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":116,"author":{"gitId":"ongweijie7"},"content":"        DateOfBirth updatedDate \u003d editPersonDescriptor.getDate().orElse(personToEdit.getDate());","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":120,"author":{"gitId":"SeanChinJunKai"},"content":"        DrugAllergy updatedAllergy \u003d editPersonDescriptor.getDrugAllergy().orElse(personToEdit.getDrugAllergy());","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"ongweijie7"},"content":"        Gender updatedGender \u003d editPersonDescriptor.getGender().orElse(personToEdit.getGender());","lastModifiedDate":"2023-03-26"},{"lineNumber":122,"author":{"gitId":"Creationsv2"},"content":"        Doctor updatedDoctor \u003d editPersonDescriptor.getDoctor().orElse(personToEdit.getDoctor());","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":124,"author":{"gitId":"dawg420"},"content":"        Set\u003cMedicine\u003e updatedMedicines \u003d editPersonDescriptor.getMedicines().orElse(personToEdit.getMedicines());","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"ongweijie7"},"content":"        return new Person(updatedNric, updatedName, updatedDate, updatedPhone, updatedEmail,","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"Creationsv2"},"content":"            updatedAddress, updatedAllergy, updatedGender, updatedDoctor, updatedTags, updatedMedicines);","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"Creationsv2"},"content":"        private Nric nric;","lastModifiedDate":"2023-03-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"ongweijie7"},"content":"        private DateOfBirth date;","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"ongweijie7"},"content":"        private Gender gender;","lastModifiedDate":"2023-03-26"},{"lineNumber":160,"author":{"gitId":"Creationsv2"},"content":"        private Doctor doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"SeanChinJunKai"},"content":"        private DrugAllergy drugAllergy;","lastModifiedDate":"2023-03-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"dawg420"},"content":"        private Set\u003cMedicine\u003e medicines;","lastModifiedDate":"2023-03-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"dawg420"},"content":"        public EditPersonDescriptor() {","lastModifiedDate":"2023-03-26"},{"lineNumber":166,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"Creationsv2"},"content":"            setNric(toCopy.nric);","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":175,"author":{"gitId":"ongweijie7"},"content":"            setDate(toCopy.date);","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":179,"author":{"gitId":"ongweijie7"},"content":"            setGender(toCopy.gender);","lastModifiedDate":"2023-03-26"},{"lineNumber":180,"author":{"gitId":"Creationsv2"},"content":"            setDoctor(toCopy.doctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"SeanChinJunKai"},"content":"            setDrugAllergy(toCopy.drugAllergy);","lastModifiedDate":"2023-03-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":183,"author":{"gitId":"dawg420"},"content":"            setMedicines(toCopy.medicines);","lastModifiedDate":"2023-03-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"ongweijie7"},"content":"            return CollectionUtil.isAnyNonNull(nric, name, date, phone, email, address, drugAllergy,","lastModifiedDate":"2023-04-07"},{"lineNumber":191,"author":{"gitId":"Creationsv2"},"content":"                    gender, doctor, tags, medicines);","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":193,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":194,"author":{"gitId":"Creationsv2"},"content":"        public void setNric(Nric nric) {","lastModifiedDate":"2023-03-12"},{"lineNumber":195,"author":{"gitId":"Creationsv2"},"content":"            this.nric \u003d nric;","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"Creationsv2"},"content":"        public Optional\u003cNric\u003e getNric() {","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"Creationsv2"},"content":"            return Optional.ofNullable(nric);","lastModifiedDate":"2023-03-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":210,"author":{"gitId":"ongweijie7"},"content":"        public void setDate(DateOfBirth date) {","lastModifiedDate":"2023-03-29"},{"lineNumber":211,"author":{"gitId":"ongweijie7"},"content":"            this.date \u003d date;","lastModifiedDate":"2023-03-29"},{"lineNumber":212,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":213,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"ongweijie7"},"content":"        public Optional\u003cDateOfBirth\u003e getDate() {","lastModifiedDate":"2023-03-29"},{"lineNumber":215,"author":{"gitId":"ongweijie7"},"content":"            return Optional.ofNullable(date);","lastModifiedDate":"2023-03-29"},{"lineNumber":216,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":217,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":242,"author":{"gitId":"ongweijie7"},"content":"        public void setGender(Gender gender) {","lastModifiedDate":"2023-03-26"},{"lineNumber":243,"author":{"gitId":"ongweijie7"},"content":"            this.gender \u003d gender;","lastModifiedDate":"2023-03-26"},{"lineNumber":244,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":245,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":246,"author":{"gitId":"ongweijie7"},"content":"        public Optional\u003cGender\u003e getGender() {","lastModifiedDate":"2023-03-26"},{"lineNumber":247,"author":{"gitId":"ongweijie7"},"content":"            return Optional.ofNullable(gender);","lastModifiedDate":"2023-03-26"},{"lineNumber":248,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":249,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":250,"author":{"gitId":"Creationsv2"},"content":"        public void setDoctor(Doctor doctor) {","lastModifiedDate":"2023-03-29"},{"lineNumber":251,"author":{"gitId":"Creationsv2"},"content":"            this.doctor \u003d doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":252,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":253,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":254,"author":{"gitId":"Creationsv2"},"content":"        public Optional\u003cDoctor\u003e getDoctor() {","lastModifiedDate":"2023-03-29"},{"lineNumber":255,"author":{"gitId":"Creationsv2"},"content":"            return Optional.ofNullable(doctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":256,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":257,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":258,"author":{"gitId":"SeanChinJunKai"},"content":"        public void setDrugAllergy(DrugAllergy drugAllergy) {","lastModifiedDate":"2023-03-21"},{"lineNumber":259,"author":{"gitId":"SeanChinJunKai"},"content":"            this.drugAllergy \u003d drugAllergy;","lastModifiedDate":"2023-03-21"},{"lineNumber":260,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":261,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":262,"author":{"gitId":"SeanChinJunKai"},"content":"        public Optional\u003cDrugAllergy\u003e getDrugAllergy() {","lastModifiedDate":"2023-03-21"},{"lineNumber":263,"author":{"gitId":"SeanChinJunKai"},"content":"            return Optional.ofNullable(drugAllergy);","lastModifiedDate":"2023-03-21"},{"lineNumber":264,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":265,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":266,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":268,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":269,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":270,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":272,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":277,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":282,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":284,"author":{"gitId":"dawg420"},"content":"        /**","lastModifiedDate":"2023-03-26"},{"lineNumber":285,"author":{"gitId":"dawg420"},"content":"         * Sets {@code medicines} to this object\u0027s {@code medicines}.","lastModifiedDate":"2023-03-26"},{"lineNumber":286,"author":{"gitId":"dawg420"},"content":"         * A defensive copy of {@code medicines} is used internally.","lastModifiedDate":"2023-03-26"},{"lineNumber":287,"author":{"gitId":"dawg420"},"content":"         */","lastModifiedDate":"2023-03-26"},{"lineNumber":288,"author":{"gitId":"dawg420"},"content":"        public void setMedicines(Set\u003cMedicine\u003e medicines) {","lastModifiedDate":"2023-03-26"},{"lineNumber":289,"author":{"gitId":"dawg420"},"content":"            this.medicines \u003d (medicines !\u003d null) ? new HashSet\u003c\u003e(medicines) : null;","lastModifiedDate":"2023-03-26"},{"lineNumber":290,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":291,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":292,"author":{"gitId":"dawg420"},"content":"        /**","lastModifiedDate":"2023-03-26"},{"lineNumber":293,"author":{"gitId":"dawg420"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-26"},{"lineNumber":294,"author":{"gitId":"dawg420"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-26"},{"lineNumber":295,"author":{"gitId":"dawg420"},"content":"         * Returns {@code Optional#empty()} if {@code medicines} is null.","lastModifiedDate":"2023-03-26"},{"lineNumber":296,"author":{"gitId":"dawg420"},"content":"         */","lastModifiedDate":"2023-03-26"},{"lineNumber":297,"author":{"gitId":"dawg420"},"content":"        public Optional\u003cSet\u003cMedicine\u003e\u003e getMedicines() {","lastModifiedDate":"2023-03-26"},{"lineNumber":298,"author":{"gitId":"dawg420"},"content":"            return (medicines !\u003d null) ? Optional.of(Collections.unmodifiableSet(medicines)) : Optional.empty();","lastModifiedDate":"2023-03-26"},{"lineNumber":299,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":300,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":305,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":308,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":309,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":310,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":311,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":313,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":314,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":315,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":316,"author":{"gitId":"Creationsv2"},"content":"            return getNric().equals(e.getNric())","lastModifiedDate":"2023-03-12"},{"lineNumber":317,"author":{"gitId":"Creationsv2"},"content":"                \u0026\u0026 getName().equals(e.getName())","lastModifiedDate":"2023-03-12"},{"lineNumber":318,"author":{"gitId":"-"},"content":"                \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":319,"author":{"gitId":"-"},"content":"                \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":320,"author":{"gitId":"-"},"content":"                \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":321,"author":{"gitId":"Creationsv2"},"content":"                \u0026\u0026 getDoctor().equals(e.getDoctor())","lastModifiedDate":"2023-03-29"},{"lineNumber":322,"author":{"gitId":"SeanChinJunKai"},"content":"                \u0026\u0026 getDrugAllergy().equals(e.getDrugAllergy())","lastModifiedDate":"2023-03-21"},{"lineNumber":323,"author":{"gitId":"dawg420"},"content":"                \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2023-03-26"},{"lineNumber":324,"author":{"gitId":"dawg420"},"content":"                \u0026\u0026 getMedicines().equals(e.getMedicines());","lastModifiedDate":"2023-03-26"},{"lineNumber":325,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"SeanChinJunKai":15,"dawg420":28,"ongweijie7":30,"Creationsv2":33,"-":221}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"CedricPei"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"CedricPei":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICINE;","lastModifiedDate":"2023-04-10"},{"lineNumber":6,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"ongweijie7"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":" * Keyword matching is case-insensitive.","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"ongweijie7"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all persons whose attribute\"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"ongweijie7"},"content":"            + \" contain any of the specified keywords (case-insensitive)\"","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"ongweijie7"},"content":"            + \" and displays them as a list with\\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"ongweijie7"},"content":"            + \" index numbers. Attribute is specified using n/, a/ or i/ representing name, address \"","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"ongweijie7"},"content":"            + \" and nric respectively\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"ongweijie7"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"ongweijie7"},"content":"            + \"[\" + PREFIX_NAME + \" NAME] \"","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"            + \"[\" + PREFIX_NRIC + \"NRIC] \"","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"ongweijie7"},"content":"            + \"[\" + PREFIX_MEDICINE + \"MEDICINE] \"","lastModifiedDate":"2023-04-10"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"            + \"[\" + PREFIX_DOCTOR + \"DOCTOR] \"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"ongweijie7"},"content":"            + \"Example: \" + COMMAND_WORD + \" n/\" + \"alice\" + \"\\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"ongweijie7"},"content":"            + \"Example: \" + COMMAND_WORD + \" i/\" + \"S0067812L\" + \"\\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"ongweijie7"},"content":"            + \"Example: \" + COMMAND_WORD + \" m/\" + \"panadol\" + \"\\n\"","lastModifiedDate":"2023-04-10"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"            + \"Example: \" + COMMAND_WORD + \" ad/\" + \"Shannon\" + \"\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"            + \"Example: \" + COMMAND_WORD + \" t/\" + \"Diabetic\" + \"\\n\";","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"    public static final String MULTIPLE_PREFIX_MESSAGE \u003d \"Multiple attributes inputted. Only one attribute can be \"","lastModifiedDate":"2023-04-06"},{"lineNumber":42,"author":{"gitId":"Creationsv2"},"content":"            + \"filtered at a time\";","lastModifiedDate":"2023-04-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":44,"author":{"gitId":"ongweijie7"},"content":"    private final Predicate\u003cPerson\u003e predicate;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"ongweijie7"},"content":"    public FindCommand(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"ongweijie7":18,"Creationsv2":10,"-":36}},{"path":"src/main/java/seedu/address/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"CedricPei"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"CedricPei":1,"-":20}},{"path":"src/main/java/seedu/address/logic/commands/LightModeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricPei"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":" * Changes mode to Light Mode.","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"CedricPei"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"public class LightModeCommand extends Command {","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"CedricPei"},"content":"    public static final String COMMAND_WORD \u003d \"light\";","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"CedricPei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Switched to light mode.\";","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"CedricPei"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"CedricPei"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"CedricPei":21}},{"path":"src/main/java/seedu/address/logic/commands/LoadCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.backup.Backup;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":" * Loads the data from a specified backup","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"public class LoadCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"    public static final String COMMAND_WORD \u003d \"load\";","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"File loaded from: index %1$d\";","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"    public static final String LOAD_ERROR \u003d \"Error loading file!\";","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"    public static final String FILE_NOT_THERE \u003d \"Backup does not exist!\";","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"            + \": Loads the file from a specified slot \"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"            + \"Parameters: INDEX (must be an integer between 1 and 10) \"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"            + \"[INDEX]\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"            + \"Example: \" + COMMAND_WORD","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"            + \" 3\";","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"    private final Backup backup;","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"     * @param index of the backup file","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"    public LoadCommand(Index index) {","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"        this.backup \u003d new Backup(index, null);","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"        AddressBookStorage loadStorage \u003d new JsonAddressBookStorage(Path.of(backup.backupLocation));","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"dawg420"},"content":"        ReadOnlyAddressBook data;","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"dawg420"},"content":"            Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"dawg420"},"content":"            addressBookOptional \u003d loadStorage.readAddressBook();","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"dawg420"},"content":"            if (addressBookOptional.isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"dawg420"},"content":"                data \u003d addressBookOptional.get();","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"dawg420"},"content":"                model.setAddressBook(data);","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"dawg420"},"content":"            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"dawg420"},"content":"                throw new CommandException(FILE_NOT_THERE);","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"dawg420"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"dawg420"},"content":"        } catch (IOException | DataConversionException ex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"dawg420"},"content":"            throw new CommandException(LOAD_ERROR);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"dawg420"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, backup.getBackupIndex().getOneBased()));","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"dawg420"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"dawg420"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"dawg420"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"dawg420"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"dawg420"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"dawg420"},"content":"        if (!(other instanceof LoadCommand)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"dawg420"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"dawg420"},"content":"        // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"dawg420"},"content":"        LoadCommand e \u003d (LoadCommand) other;","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"dawg420"},"content":"        return backup.equals(e.backup);","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"dawg420":81}},{"path":"src/main/java/seedu/address/logic/commands/RedoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricPei"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"CedricPei"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":" * Restores the previously undone modification.","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"CedricPei"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"CedricPei"},"content":"public class RedoCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"CedricPei"},"content":"    public static final String COMMAND_WORD \u003d \"redo\";","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"CedricPei"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Restores the previously undone modification \"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"            + \"to HospiSearch.\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Redo successful!\";","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"CedricPei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"CedricPei"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"CedricPei"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"CedricPei"},"content":"        if (!model.canRedoAddressBook()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"CedricPei"},"content":"            throw new CommandException(Messages.MESSAGE_CANNOT_REDO);","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"CedricPei"},"content":"        model.redoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"CedricPei"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"CedricPei":31}},{"path":"src/main/java/seedu/address/logic/commands/UndoCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricPei"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"CedricPei"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":" * Undoes the previous modification.","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"CedricPei"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"CedricPei"},"content":"public class UndoCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"CedricPei"},"content":"    public static final String COMMAND_WORD \u003d \"undo\";","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"CedricPei"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Undoes the previous modification to HospiSearch.\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"CedricPei"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Undo successful!\";","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"CedricPei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"CedricPei"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"CedricPei"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"CedricPei"},"content":"        if (!model.canUndoAddressBook()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"CedricPei"},"content":"            throw new CommandException(Messages.MESSAGE_CANNOT_UNDO);","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"CedricPei"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"CedricPei"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"CedricPei":30}},{"path":"src/main/java/seedu/address/logic/commands/ViewBackupsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":" * Shows all the available backups to the user","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"public class ViewBackupsCommand extends Command {","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"    public static final String COMMAND_WORD \u003d \"viewbackups\";","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all backups\";","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"        return new CommandResult(MESSAGE_SUCCESS, false, false, true);","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"dawg420":21}},{"path":"src/main/java/seedu/address/logic/commands/ViewCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.NricContainsKeywordsPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":" * Detailed view of one\u0027s patient record specified by NRIC.","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"public class ViewCommand extends Command {","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"    public static final String COMMAND_WORD \u003d \"view\";","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"            + \": Shows a detailed, zoomed-in view of the patient\u0027s record who has the specified NRIC.\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"            + \"Parameters: \" + PREFIX_NRIC + \"NRIC\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"            + \"Example: \" + COMMAND_WORD + \" \" + PREFIX_NRIC + \"S1234567A\";","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"    public static final String MESSAGE_VIEW_PERSON_SUCCESS \u003d \"Displaying Patient Record!\";","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"    private final Nric nric;","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"    public ViewCommand(Nric nric) {","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"        Person specified \u003d model.findPersonByNric(nric);","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"        if (specified \u003d\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new CommandException(Messages.MESSAGE_NRIC_DOES_NOT_EXIST);","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"        Predicate\u003cPerson\u003e predicate \u003d new NricContainsKeywordsPredicate(Arrays.asList(nric.toString()));","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"        return new CommandResult(MESSAGE_VIEW_PERSON_SUCCESS);","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"                || (other instanceof ViewCommand // instanceof handles nulls","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"                \u0026\u0026 nric.equals(((ViewCommand) other).nric)); // state check","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"SeanChinJunKai":54}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_OF_BIRTH;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICINE;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.medicine.Medicine;","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NRIC, PREFIX_NAME, PREFIX_PHONE,","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"Creationsv2"},"content":"                PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_DRUG_ALLERGY, PREFIX_TAG, PREFIX_GENDER,","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"ongweijie7"},"content":"                    PREFIX_DOCTOR, PREFIX_MEDICINE, PREFIX_DATE_OF_BIRTH);","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NRIC, PREFIX_NAME, PREFIX_ADDRESS,","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"ongweijie7"},"content":"            PREFIX_DRUG_ALLERGY, PREFIX_GENDER, PREFIX_PHONE, PREFIX_DATE_OF_BIRTH)","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"ongweijie7"},"content":"            || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"Creationsv2"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"ongweijie7"},"content":"        DateOfBirth date \u003d ParserUtil.parseDateOfBirth(argMultimap.getValue(PREFIX_DATE_OF_BIRTH).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"ongweijie7"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).orElse(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"ongweijie7"},"content":"        Gender gender \u003d ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get());","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"Creationsv2"},"content":"        Doctor doctor \u003d ParserUtil.parseDoctor(argMultimap.getValue(PREFIX_DOCTOR).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"SeanChinJunKai"},"content":"        DrugAllergy drugAllergy \u003d ParserUtil.parseDrugAllergy(argMultimap.getValue(PREFIX_DRUG_ALLERGY).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":67,"author":{"gitId":"dawg420"},"content":"        Set\u003cMedicine\u003e medicineList \u003d ParserUtil.parseMedicines(argMultimap.getAllValues(PREFIX_MEDICINE));","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"ongweijie7"},"content":"        Person person \u003d new Person(nric, name, date, phone, email, address, drugAllergy,","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Creationsv2"},"content":"                gender, doctor, tagList, medicineList);","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"SeanChinJunKai":3,"dawg420":4,"ongweijie7":15,"Creationsv2":6,"-":55}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import seedu.address.logic.commands.BackupCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":"import seedu.address.logic.commands.DarkModeCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"import seedu.address.logic.commands.DeleteBackupCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"import seedu.address.logic.commands.LightModeCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"import seedu.address.logic.commands.LoadCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"CedricPei"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"CedricPei"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"import seedu.address.logic.commands.ViewBackupsCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":81,"author":{"gitId":"dawg420"},"content":"        case BackupCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"dawg420"},"content":"            return new BackupCommandParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"dawg420"},"content":"        case LoadCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"dawg420"},"content":"            return new LoadCommandParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"dawg420"},"content":"        case ViewBackupsCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"dawg420"},"content":"            return new ViewBackupsCommand();","lastModifiedDate":"2023-03-25"},{"lineNumber":89,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"dawg420"},"content":"        case DeleteBackupCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"dawg420"},"content":"            return new DeleteBackupCommandParser().parse(arguments);","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"CedricPei"},"content":"        case LightModeCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"CedricPei"},"content":"            return new LightModeCommand();","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"CedricPei"},"content":"        case DarkModeCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"CedricPei"},"content":"            return new DarkModeCommand();","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":98,"author":{"gitId":"CedricPei"},"content":"        case RedoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"CedricPei"},"content":"            return new RedoCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"CedricPei"},"content":"        case UndoCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"CedricPei"},"content":"            return new UndoCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"SeanChinJunKai"},"content":"        case ViewCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-25"},{"lineNumber":105,"author":{"gitId":"SeanChinJunKai"},"content":"            return new ViewCommandParser().parse(arguments);","lastModifiedDate":"2023-03-25"},{"lineNumber":106,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"CedricPei":15,"SeanChinJunKai":4,"dawg420":17,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/BackupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESC;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import seedu.address.logic.commands.BackupCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":" * Parses input arguments and creates a new {@code BackupCommand} object","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"public class BackupCommandParser implements Parser\u003cBackupCommand\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code BackupCommand}","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"     * and returns a {@code BackupCommand} object for execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"    public BackupCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"        Index index;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"        String desc;","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DESC);","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"            desc \u003d argMultimap.getValue(PREFIX_DESC).orElse(\"\");","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"            checkArgument(isValidIndex(index));","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"        } catch (IllegalValueException | IllegalArgumentException ive) {","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, BackupCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"        return new BackupCommand(index, desc);","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"     * Returns true if a given index is a valid","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"    public static boolean isValidIndex(Index test) {","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"        return test.getOneBased() \u003c\u003d 10 \u0026\u0026 test.getOneBased() \u003e 0;","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"dawg420":46}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"    public static final Prefix PREFIX_NRIC \u003d new Prefix(\"i/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"ongweijie7"},"content":"    public static final Prefix PREFIX_GENDER \u003d new Prefix(\"g/\");","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"    public static final Prefix PREFIX_DOCTOR \u003d new Prefix(\"ad/\");","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"ongweijie7"},"content":"    public static final Prefix PREFIX_DATE_OF_BIRTH \u003d new Prefix(\"dob/\");","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"    public static final Prefix PREFIX_DESC \u003d new Prefix(\"b/\");","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"    public static final Prefix PREFIX_DRUG_ALLERGY \u003d new Prefix(\"d/\");","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"    public static final Prefix PREFIX_MEDICINE \u003d new Prefix(\"m/\");","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"SeanChinJunKai":1,"dawg420":2,"ongweijie7":2,"Creationsv2":2,"-":14}},{"path":"src/main/java/seedu/address/logic/parser/DeleteBackupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import seedu.address.logic.commands.DeleteBackupCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":" * Parses input arguments and creates a new DeleteBackupCommand object","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"public class DeleteBackupCommandParser implements Parser\u003cDeleteBackupCommand\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"     * and returns an DeleteCommand object for execution.","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"    public DeleteBackupCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"        Index index;","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"        try {","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"            index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"        } catch (IllegalValueException | IllegalArgumentException ive) {","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"                    DeleteBackupCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"        return new DeleteBackupCommand(index);","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"dawg420":36}},{"path":"src/main/java/seedu/address/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NRIC);","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NRIC)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"        Set\u003cNric\u003e nricList \u003d ParserUtil.parseNrics(argMultimap.getAllValues(PREFIX_NRIC));","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"        return new DeleteCommand(nricList);","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"SeanChinJunKai":19,"-":23}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_OF_BIRTH;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICINE;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.medicine.Medicine;","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"            ArgumentTokenizer.tokenize(args, PREFIX_NRIC, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL,","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"ongweijie7"},"content":"                    PREFIX_ADDRESS, PREFIX_DRUG_ALLERGY, PREFIX_GENDER, PREFIX_DOCTOR,","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"ongweijie7"},"content":"                    PREFIX_TAG, PREFIX_MEDICINE, PREFIX_DATE_OF_BIRTH);","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"Creationsv2"},"content":"        if (argMultimap.getValue(PREFIX_NRIC).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"Creationsv2"},"content":"            editPersonDescriptor.setNric(ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get()));","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"ongweijie7"},"content":"        if (argMultimap.getValue(PREFIX_DATE_OF_BIRTH).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"ongweijie7"},"content":"            editPersonDescriptor.setDate(ParserUtil.parseDateOfBirth(argMultimap.getValue(PREFIX_DATE_OF_BIRTH).get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"ongweijie7"},"content":"        if (argMultimap.getValue(PREFIX_GENDER).isPresent()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"ongweijie7"},"content":"            editPersonDescriptor.setGender(ParserUtil.parseGender(argMultimap.getValue(PREFIX_GENDER).get()));","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"Creationsv2"},"content":"        if (argMultimap.getValue(PREFIX_DOCTOR).isPresent()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Creationsv2"},"content":"            editPersonDescriptor.setDoctor(ParserUtil.parseDoctor(argMultimap.getValue(PREFIX_DOCTOR).get()));","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":80,"author":{"gitId":"SeanChinJunKai"},"content":"        if (argMultimap.getValue(PREFIX_DRUG_ALLERGY).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"SeanChinJunKai"},"content":"            editPersonDescriptor.setDrugAllergy(ParserUtil.parseDrugAllergy(","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"SeanChinJunKai"},"content":"                argMultimap.getValue(PREFIX_DRUG_ALLERGY).get()));","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"dawg420"},"content":"        parseMedicinesForEdit(argMultimap.getAllValues(PREFIX_MEDICINE)).ifPresent(editPersonDescriptor::setMedicines);","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"dawg420"},"content":"     * Parses {@code Collection\u003cString\u003e medicines} into a {@code Set\u003cMedicine\u003e} if {@code medicines} is non-empty.","lastModifiedDate":"2023-03-26"},{"lineNumber":111,"author":{"gitId":"dawg420"},"content":"     * If {@code medicines} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2023-03-26"},{"lineNumber":112,"author":{"gitId":"dawg420"},"content":"     * {@code Set\u003cMedicine\u003e} containing zero medicines.","lastModifiedDate":"2023-03-26"},{"lineNumber":113,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":114,"author":{"gitId":"dawg420"},"content":"    private Optional\u003cSet\u003cMedicine\u003e\u003e parseMedicinesForEdit(Collection\u003cString\u003e medicines) throws ParseException {","lastModifiedDate":"2023-03-26"},{"lineNumber":115,"author":{"gitId":"dawg420"},"content":"        assert medicines !\u003d null;","lastModifiedDate":"2023-03-26"},{"lineNumber":116,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"dawg420"},"content":"        if (medicines.isEmpty()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":118,"author":{"gitId":"dawg420"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":120,"author":{"gitId":"dawg420"},"content":"        Collection\u003cString\u003e medicineSet \u003d","lastModifiedDate":"2023-03-26"},{"lineNumber":121,"author":{"gitId":"dawg420"},"content":"            medicines.size() \u003d\u003d 1 \u0026\u0026 medicines.contains(\"\") ? Collections.emptySet() : medicines;","lastModifiedDate":"2023-03-26"},{"lineNumber":122,"author":{"gitId":"dawg420"},"content":"        return Optional.of(ParserUtil.parseMedicines(medicineSet));","lastModifiedDate":"2023-03-26"},{"lineNumber":123,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":124,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"SeanChinJunKai":5,"dawg420":20,"ongweijie7":9,"Creationsv2":9,"-":82}},{"path":"src/main/java/seedu/address/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICINE;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"ongweijie7"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.model.person.DoctorContainsKeywordsPredicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.MedicineContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.NricContainsKeywordsPredicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"ongweijie7"},"content":"        String[] nrics;","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"ongweijie7"},"content":"        String[] names;","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"ongweijie7"},"content":"        String[] medicines;","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"        String[] tags;","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"        String[] doctors;","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"ongweijie7"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NRIC, PREFIX_NAME, PREFIX_MEDICINE, PREFIX_DOCTOR, PREFIX_TAG);","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"        if (moreThanOnePrefixPresent(argMultimap, PREFIX_NRIC, PREFIX_NAME, PREFIX_MEDICINE,","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Creationsv2"},"content":"                PREFIX_DOCTOR, PREFIX_TAG)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"ongweijie7"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MULTIPLE_PREFIX_MESSAGE));","lastModifiedDate":"2023-04-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"ongweijie7"},"content":"        if (isPrefixesPresent(argMultimap, PREFIX_NRIC)","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"ongweijie7"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"ongweijie7"},"content":"            nrics \u003d getKeywords(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"ongweijie7"},"content":"            return new FindCommand(new NricContainsKeywordsPredicate(Arrays.asList(nrics)));","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"ongweijie7"},"content":"        } else if (isPrefixesPresent(argMultimap, PREFIX_NAME)","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"ongweijie7"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"ongweijie7"},"content":"            names \u003d getKeywords(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"ongweijie7"},"content":"            return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(names)));","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"Creationsv2"},"content":"        } else if (isPrefixesPresent(argMultimap, PREFIX_DOCTOR)","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Creationsv2"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Creationsv2"},"content":"            doctors \u003d getKeywords(argMultimap.getValue(PREFIX_DOCTOR).get());","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Creationsv2"},"content":"            return new FindCommand(new DoctorContainsKeywordsPredicate(Arrays.asList(doctors)));","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"ongweijie7"},"content":"        } else if (isPrefixesPresent(argMultimap, PREFIX_MEDICINE)","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"ongweijie7"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"ongweijie7"},"content":"            medicines \u003d getKeywords(argMultimap.getValue(PREFIX_MEDICINE).get());","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"ongweijie7"},"content":"            System.out.println(medicines);","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"ongweijie7"},"content":"            return new FindCommand(new MedicineContainsKeywordsPredicate(Arrays.asList(medicines)));","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"Creationsv2"},"content":"        } else if (isPrefixesPresent(argMultimap, PREFIX_TAG)","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"Creationsv2"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"Creationsv2"},"content":"            tags \u003d getKeywords(argMultimap.getValue(PREFIX_TAG).get());","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"Creationsv2"},"content":"            return new FindCommand(new TagContainsKeywordsPredicate(Arrays.asList(tags)));","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"ongweijie7"},"content":"        } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"ongweijie7"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"ongweijie7"},"content":"                                                        FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"ongweijie7"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"ongweijie7"},"content":"     * Returns true if the given prefixes does not contain empty","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"ongweijie7"},"content":"     *  {@code Optional} values in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"ongweijie7"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"ongweijie7"},"content":"    private static boolean isPrefixesPresent(ArgumentMultimap argumentMultimap, Prefix prefixes) {","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"ongweijie7"},"content":"        return Stream.of(prefixes).anyMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"ongweijie7"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"ongweijie7"},"content":"     * Returns true if more than one prefix is given","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"ongweijie7"},"content":"     *  {@code Optional} values in the given {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"ongweijie7"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"ongweijie7"},"content":"    private static boolean moreThanOnePrefixPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"ongweijie7"},"content":"        Stream\u003cPrefix\u003e prefixStream \u003d Stream.of(prefixes).filter(","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"ongweijie7"},"content":"                                        prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"ongweijie7"},"content":"        int value \u003d (int) prefixStream.count();","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"ongweijie7"},"content":"        if (value \u003e 1) {","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"ongweijie7"},"content":"            return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"ongweijie7"},"content":"        } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"ongweijie7"},"content":"            return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"ongweijie7"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"ongweijie7"},"content":"     * Checks if argument is empty before splitting argument","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"ongweijie7"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"ongweijie7"},"content":"     * @param arg argument passed by user","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"ongweijie7"},"content":"     * @return argument split into an array of strings","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"ongweijie7"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"ongweijie7"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"ongweijie7"},"content":"    private static String[] getKeywords(String arg) throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"ongweijie7"},"content":"        if (arg.isEmpty()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"ongweijie7"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"ongweijie7"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"ongweijie7"},"content":"        String[] keywords \u003d arg.split(\"\\\\s+\");","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"ongweijie7"},"content":"        return keywords;","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"ongweijie7":72,"Creationsv2":24,"-":28}},{"path":"src/main/java/seedu/address/logic/parser/LoadCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import seedu.address.logic.commands.LoadCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":" * Parses input arguments and creates a new {@code LoadCommand} object","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"public class LoadCommandParser implements Parser\u003cLoadCommand\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code LoadCommand}","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"     * and returns a {@code LoadCommand} object for execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"    public LoadCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"        Index index;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"            index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"        } catch (IllegalValueException | IllegalArgumentException ive) {","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, LoadCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"        return new LoadCommand(index);","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"dawg420":33}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.medicine.Medicine;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"     * Parses a {@code String nric} into a {@code Nric}.","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"Creationsv2"},"content":"     * @throws ParseException if the given {@code nric} is invalid.","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"Creationsv2"},"content":"    public static Nric parseNric(String nric) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"Creationsv2"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"Creationsv2"},"content":"        String trimmedNric \u003d nric.trim();","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"Creationsv2"},"content":"        if (!Nric.isValidNric(trimmedNric)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"Creationsv2"},"content":"            throw new ParseException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"Creationsv2"},"content":"        return new Nric(trimmedNric);","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"SeanChinJunKai"},"content":"     * Parses {@code Collection\u003cNric\u003e tags} into a {@code Set\u003cNric\u003e}.","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"SeanChinJunKai"},"content":"    public static Set\u003cNric\u003e parseNrics(Collection\u003cString\u003e nrics) throws ParseException {","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"SeanChinJunKai"},"content":"        requireNonNull(nrics);","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"SeanChinJunKai"},"content":"        final Set\u003cNric\u003e nricSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"        for (String nric : nrics) {","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"SeanChinJunKai"},"content":"            nricSet.add(parseNric(nric));","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"SeanChinJunKai"},"content":"        return nricSet;","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"ongweijie7"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"ongweijie7"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"ongweijie7"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"ongweijie7"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"ongweijie7"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"ongweijie7"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"ongweijie7"},"content":"    public static DateOfBirth parseDateOfBirth(String date) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"ongweijie7"},"content":"        requireNonNull(date);","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"ongweijie7"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"ongweijie7"},"content":"        if (!DateOfBirth.isValidDate(trimmedDate)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"ongweijie7"},"content":"            throw new ParseException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"ongweijie7"},"content":"        return new DateOfBirth(trimmedDate);","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":103,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":135,"author":{"gitId":"SeanChinJunKai"},"content":"     * Parses a {@code String drugAllergy} into a {@code DrugAllergy}.","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"SeanChinJunKai"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":138,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws ParseException if the given {@code drugAllergy} is invalid.","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":140,"author":{"gitId":"SeanChinJunKai"},"content":"    public static DrugAllergy parseDrugAllergy(String drugAllergy) throws ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":141,"author":{"gitId":"SeanChinJunKai"},"content":"        requireNonNull(drugAllergy);","lastModifiedDate":"2023-03-21"},{"lineNumber":142,"author":{"gitId":"SeanChinJunKai"},"content":"        String trimmedAllergy \u003d drugAllergy.trim();","lastModifiedDate":"2023-03-21"},{"lineNumber":143,"author":{"gitId":"SeanChinJunKai"},"content":"        if (!Address.isValidAddress(trimmedAllergy)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":144,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new ParseException(DrugAllergy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-21"},{"lineNumber":145,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":146,"author":{"gitId":"SeanChinJunKai"},"content":"        return new DrugAllergy(trimmedAllergy);","lastModifiedDate":"2023-03-21"},{"lineNumber":147,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":148,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":156,"author":{"gitId":"ongweijie7"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"ongweijie7"},"content":"            return new Email(\"-\");","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":159,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"ongweijie7"},"content":"        if (trimmedEmail.equals(\"-\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"ongweijie7"},"content":"            return new Email(\"-\");","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"ongweijie7"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":172,"author":{"gitId":"ongweijie7"},"content":"     * Parses a {@code String gender} into an {@code gender}.","lastModifiedDate":"2023-03-26"},{"lineNumber":173,"author":{"gitId":"ongweijie7"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-26"},{"lineNumber":174,"author":{"gitId":"ongweijie7"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":175,"author":{"gitId":"ongweijie7"},"content":"     * @throws ParseException if the given {@code gender} is invalid.","lastModifiedDate":"2023-03-26"},{"lineNumber":176,"author":{"gitId":"ongweijie7"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":177,"author":{"gitId":"ongweijie7"},"content":"    public static Gender parseGender(String gender) throws ParseException {","lastModifiedDate":"2023-03-26"},{"lineNumber":178,"author":{"gitId":"ongweijie7"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-03-26"},{"lineNumber":179,"author":{"gitId":"ongweijie7"},"content":"        String trimmedGender \u003d gender.trim();","lastModifiedDate":"2023-03-26"},{"lineNumber":180,"author":{"gitId":"ongweijie7"},"content":"        if (!Gender.isValidGender(trimmedGender)) {","lastModifiedDate":"2023-03-26"},{"lineNumber":181,"author":{"gitId":"ongweijie7"},"content":"            throw new ParseException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-26"},{"lineNumber":182,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":183,"author":{"gitId":"ongweijie7"},"content":"        return new Gender(trimmedGender);","lastModifiedDate":"2023-03-26"},{"lineNumber":184,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":185,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":186,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":187,"author":{"gitId":"Creationsv2"},"content":"     * Parses a {@code String doctor} into a {@code Doctor}.","lastModifiedDate":"2023-03-29"},{"lineNumber":188,"author":{"gitId":"Creationsv2"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":190,"author":{"gitId":"Creationsv2"},"content":"     * @throws ParseException if the given {@code doctor} is invalid.","lastModifiedDate":"2023-03-29"},{"lineNumber":191,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"Creationsv2"},"content":"    public static Doctor parseDoctor(String doctor) throws ParseException {","lastModifiedDate":"2023-03-29"},{"lineNumber":193,"author":{"gitId":"Creationsv2"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":194,"author":{"gitId":"Creationsv2"},"content":"        String trimmedDoctor \u003d doctor.trim();","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"Creationsv2"},"content":"        if (!Doctor.isValidDoctor(trimmedDoctor)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"Creationsv2"},"content":"            throw new ParseException(Doctor.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"Creationsv2"},"content":"        return new Doctor(trimmedDoctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":217,"author":{"gitId":"dawg420"},"content":"     * Parses a {@code String medicine} into a {@code Tag}.","lastModifiedDate":"2023-03-26"},{"lineNumber":218,"author":{"gitId":"dawg420"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-26"},{"lineNumber":219,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":220,"author":{"gitId":"dawg420"},"content":"     * @throws ParseException if the given {@code medicine} is invalid.","lastModifiedDate":"2023-03-26"},{"lineNumber":221,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":222,"author":{"gitId":"dawg420"},"content":"    public static Medicine parseMedicine(String medicine) throws ParseException {","lastModifiedDate":"2023-03-26"},{"lineNumber":223,"author":{"gitId":"dawg420"},"content":"        requireNonNull(medicine);","lastModifiedDate":"2023-03-26"},{"lineNumber":224,"author":{"gitId":"dawg420"},"content":"        String trimmedMedicine \u003d medicine.trim();","lastModifiedDate":"2023-03-26"},{"lineNumber":225,"author":{"gitId":"dawg420"},"content":"        if (!Medicine.isValidMedicineName(trimmedMedicine)) {","lastModifiedDate":"2023-03-26"},{"lineNumber":226,"author":{"gitId":"dawg420"},"content":"            throw new ParseException(Medicine.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-26"},{"lineNumber":227,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":228,"author":{"gitId":"dawg420"},"content":"        return new Medicine(trimmedMedicine);","lastModifiedDate":"2023-03-26"},{"lineNumber":229,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":230,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":233,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":242,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":243,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":244,"author":{"gitId":"dawg420"},"content":"     * Parses {@code Collection\u003cString\u003e Medicines} into a {@code Set\u003cMedicine\u003e}.","lastModifiedDate":"2023-03-26"},{"lineNumber":245,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":246,"author":{"gitId":"dawg420"},"content":"    public static Set\u003cMedicine\u003e parseMedicines(Collection\u003cString\u003e medicines) throws ParseException {","lastModifiedDate":"2023-03-26"},{"lineNumber":247,"author":{"gitId":"dawg420"},"content":"        requireNonNull(medicines);","lastModifiedDate":"2023-03-26"},{"lineNumber":248,"author":{"gitId":"dawg420"},"content":"        final Set\u003cMedicine\u003e medicineSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-26"},{"lineNumber":249,"author":{"gitId":"dawg420"},"content":"        for (String medicineName : medicines) {","lastModifiedDate":"2023-03-26"},{"lineNumber":250,"author":{"gitId":"dawg420"},"content":"            medicineSet.add(parseMedicine(medicineName));","lastModifiedDate":"2023-03-26"},{"lineNumber":251,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":252,"author":{"gitId":"dawg420"},"content":"        return medicineSet;","lastModifiedDate":"2023-03-26"},{"lineNumber":253,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"SeanChinJunKai":28,"dawg420":29,"ongweijie7":41,"Creationsv2":33,"-":123}},{"path":"src/main/java/seedu/address/logic/parser/ViewCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":" * Parses input arguments and creates a new ViewCommand object","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"public class ViewCommandParser implements Parser\u003cViewCommand\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewCommand","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"     * and returns a ViewCommand object for execution.","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"    public ViewCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NRIC);","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NRIC)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"        Nric nric \u003d ParserUtil.parseNric(argMultimap.getValue(PREFIX_NRIC).get());","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"        return new ViewCommand(nric);","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"SeanChinJunKai":42}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"SeanChinJunKai"},"content":"    public Person findPersonByNric(Nric nric) {","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"SeanChinJunKai"},"content":"        return persons.findPersonByNric(nric);","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"SeanChinJunKai":5,"-":120}},{"path":"src/main/java/seedu/address/model/BackupData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.backup.Backup;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.JsonAdaptedBackup;","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":" * Represents backup data.","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"public class BackupData implements ReadOnlyBackupData {","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"    private List\u003cJsonAdaptedBackup\u003e backups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"     * Creates a {@code BackupData} with default values.","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"    public BackupData() {","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"     * Creates a {@code BackupData} with the data in {@code newBackupData}.","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"    public BackupData(ReadOnlyBackupData newBackupData) {","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"        this();","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"        resetData(newBackupData);","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"    public List\u003cJsonAdaptedBackup\u003e getJsonAdaptedBackups() {","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"        return backups;","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"     * Resets the existing data of this {@code BackupData} with {@code newBackupData}.","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"    public void resetData(ReadOnlyBackupData newBackupData) {","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"        requireNonNull(newBackupData);","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"        setBackups(newBackupData.getJsonAdaptedBackups());","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"     * Sets the backups of this {@code BackupData}","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"    public void setBackups(List\u003cJsonAdaptedBackup\u003e backups) {","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"dawg420"},"content":"        this.backups \u003d backups;","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"dawg420"},"content":"     * Adds a backup to {@code BackupData}","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"dawg420"},"content":"    public void addBackup(JsonAdaptedBackup backup) {","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"dawg420"},"content":"        backups.removeIf(b -\u003e b.index.equals(backup.index));","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"dawg420"},"content":"        backups.add(backup);","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"dawg420"},"content":"     * Gets a {@code JsonAdaptedBackup} from {@code BackupData}","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"dawg420"},"content":"     * @param i Index of the backup","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"dawg420"},"content":"    public JsonAdaptedBackup getBackup(String i) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"dawg420"},"content":"        for (JsonAdaptedBackup b : backups) {","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"dawg420"},"content":"            if (b.index.equals(i)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"dawg420"},"content":"                return b;","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"dawg420"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"dawg420"},"content":"        throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":75,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":76,"author":{"gitId":"dawg420"},"content":"    public void deleteBackup(JsonAdaptedBackup b) {","lastModifiedDate":"2023-03-25"},{"lineNumber":77,"author":{"gitId":"dawg420"},"content":"        backups.remove(b);","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"dawg420"},"content":"     * Gets a list of {@code Backup} from {@code BackupData}","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"dawg420"},"content":"     * The list is sorted according to the backup index.","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"dawg420"},"content":"    public List\u003cBackup\u003e getRawBackups() throws IllegalValueException {","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"dawg420"},"content":"        List\u003cBackup\u003e rawBackups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"dawg420"},"content":"        for (JsonAdaptedBackup jBackup : backups) {","lastModifiedDate":"2023-03-25"},{"lineNumber":87,"author":{"gitId":"dawg420"},"content":"            rawBackups.add(jBackup.toModelType());","lastModifiedDate":"2023-03-25"},{"lineNumber":88,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":89,"author":{"gitId":"dawg420"},"content":"        rawBackups.sort(new Comparator\u003cBackup\u003e() {","lastModifiedDate":"2023-03-25"},{"lineNumber":90,"author":{"gitId":"dawg420"},"content":"            @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"dawg420"},"content":"            public int compare(Backup o1, Backup o2) {","lastModifiedDate":"2023-03-25"},{"lineNumber":92,"author":{"gitId":"dawg420"},"content":"                return o1.getBackupIndex().getOneBased() - o2.getBackupIndex().getOneBased();","lastModifiedDate":"2023-03-25"},{"lineNumber":93,"author":{"gitId":"dawg420"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":94,"author":{"gitId":"dawg420"},"content":"        });","lastModifiedDate":"2023-03-25"},{"lineNumber":95,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"dawg420"},"content":"        return rawBackups;","lastModifiedDate":"2023-03-25"},{"lineNumber":97,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":98,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":99,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":100,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":101,"author":{"gitId":"dawg420"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-24"},{"lineNumber":102,"author":{"gitId":"dawg420"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-24"},{"lineNumber":103,"author":{"gitId":"dawg420"},"content":"            return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":104,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":105,"author":{"gitId":"dawg420"},"content":"        if (!(other instanceof BackupData)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":106,"author":{"gitId":"dawg420"},"content":"            return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":107,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":108,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":109,"author":{"gitId":"dawg420"},"content":"        BackupData o \u003d (BackupData) other;","lastModifiedDate":"2023-03-24"},{"lineNumber":110,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":111,"author":{"gitId":"dawg420"},"content":"        return backups.equals(o.getJsonAdaptedBackups());","lastModifiedDate":"2023-03-25"},{"lineNumber":112,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":113,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":114,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":115,"author":{"gitId":"dawg420"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-25"},{"lineNumber":116,"author":{"gitId":"dawg420"},"content":"        return Objects.hash(backups);","lastModifiedDate":"2023-03-25"},{"lineNumber":117,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":118,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":119,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":120,"author":{"gitId":"dawg420"},"content":"    public String toString() {","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"dawg420"},"content":"        return backups.toString();","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"dawg420":123}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.backup.Backup;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.BackupDataStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"     * {@code Predicate} that always evaluate to true","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"     * Returns the user prefs storage.","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"    UserPrefsStorage getUserPrefsStorage();","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"dawg420"},"content":"     * Sets the backup data","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"dawg420"},"content":"    void setBackupData(BackupData backupData);","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"dawg420"},"content":"     * Adds a backup to the backup data","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"dawg420"},"content":"    void addBackupToBackupData(Backup backup);","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"dawg420"},"content":"     * Removes a backup from BackupData","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":73,"author":{"gitId":"dawg420"},"content":"    void removeBackupFromBackupData(String index) throws IndexOutOfBoundsException;","lastModifiedDate":"2023-03-25"},{"lineNumber":74,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"dawg420"},"content":"    BackupData getBackupData();","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"dawg420"},"content":"    BackupDataStorage getBackupDataStorage();","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"dawg420"},"content":"     * Returns the AddressBook","lastModifiedDate":"2023-03-24"},{"lineNumber":86,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":113,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":114,"author":{"gitId":"dawg420"},"content":"     * Returns an unmodifiable view of the filtered person list","lastModifiedDate":"2023-03-24"},{"lineNumber":115,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":120,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":124,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"dawg420"},"content":"     * Restores the address book to its previous state.","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"CedricPei"},"content":"    void undoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"dawg420"},"content":"     * Restores the address book to its previously undone state.","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"CedricPei"},"content":"    void redoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"dawg420"},"content":"     * Returns true if the model has previous address states to restore.","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"CedricPei"},"content":"    boolean canUndoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"dawg420"},"content":"     * Returns true if the model has undone address states to restore.","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"CedricPei"},"content":"    boolean canRedoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":145,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"dawg420"},"content":"     * Saves the current address book state for undo/redo.","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"CedricPei"},"content":"    void commitAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":150,"author":{"gitId":"SeanChinJunKai"},"content":"    Person findPersonByNric(Nric nric);","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":152,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":153,"author":{"gitId":"dawg420"},"content":"     * Returns an unmodifiable view of the backup list","lastModifiedDate":"2023-03-25"},{"lineNumber":154,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":155,"author":{"gitId":"dawg420"},"content":"    ObservableList\u003cBackup\u003e getBackupList() throws IllegalValueException;","lastModifiedDate":"2023-03-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"CedricPei":10,"SeanChinJunKai":3,"dawg420":59,"-":84}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import java.util.List;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":16,"author":{"gitId":"CedricPei"},"content":"import seedu.address.commons.exceptions.CannotRedoAddressBookException;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"import seedu.address.commons.exceptions.CannotUndoAddressBookException;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.backup.Backup;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.BackupDataStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.JsonAdaptedBackup;","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.JsonBackupDataStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"    private final Path userPrefsPath \u003d Path.of(\"preferences.json\");","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"    private final Path backupDataPath \u003d Path.of(\"data/backup/backupData.json\");","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"CedricPei"},"content":"    private final VersionedAddressBook addressBook;","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"    private final BackupData backupData;","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"    private final UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"    private final BackupDataStorage backupDataStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"     * Initializes a ModelManager with the given addressBook userPrefs, and backupData","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs, ReadOnlyBackupData backupData) {","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"CedricPei"},"content":"        this.addressBook \u003d new VersionedAddressBook(addressBook);","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"dawg420"},"content":"        this.backupData \u003d new BackupData(backupData);","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"dawg420"},"content":"        this.filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"dawg420"},"content":"        this.userPrefsStorage \u003d new JsonUserPrefsStorage(userPrefsPath);","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"dawg420"},"content":"        this.backupDataStorage \u003d new JsonBackupDataStorage(backupDataPath);","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2023-03-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":68,"author":{"gitId":"dawg420"},"content":"        this.addressBook \u003d new VersionedAddressBook(addressBook);","lastModifiedDate":"2023-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"dawg420"},"content":"        this.backupData \u003d new BackupData();","lastModifiedDate":"2023-03-25"},{"lineNumber":71,"author":{"gitId":"dawg420"},"content":"        this.filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2023-03-25"},{"lineNumber":72,"author":{"gitId":"dawg420"},"content":"        this.userPrefsStorage \u003d new JsonUserPrefsStorage(userPrefsPath);","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"dawg420"},"content":"        this.backupDataStorage \u003d new JsonBackupDataStorage(backupDataPath);","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":77,"author":{"gitId":"dawg420"},"content":"        this(new VersionedAddressBook(new AddressBook()), new UserPrefs(), new BackupData());","lastModifiedDate":"2023-03-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"dawg420"},"content":"    public UserPrefsStorage getUserPrefsStorage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"dawg420"},"content":"        return userPrefsStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"dawg420"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d BackupData \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":121,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":122,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":123,"author":{"gitId":"dawg420"},"content":"    public void setBackupData(BackupData newBackupData) {","lastModifiedDate":"2023-03-24"},{"lineNumber":124,"author":{"gitId":"dawg420"},"content":"        backupData.resetData(newBackupData);","lastModifiedDate":"2023-03-24"},{"lineNumber":125,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":126,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":128,"author":{"gitId":"dawg420"},"content":"    public void addBackupToBackupData(Backup backup) {","lastModifiedDate":"2023-03-24"},{"lineNumber":129,"author":{"gitId":"dawg420"},"content":"        JsonAdaptedBackup jsonBackup \u003d new JsonAdaptedBackup(backup);","lastModifiedDate":"2023-03-25"},{"lineNumber":130,"author":{"gitId":"dawg420"},"content":"        backupData.addBackup(jsonBackup);","lastModifiedDate":"2023-03-25"},{"lineNumber":131,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":132,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":133,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":134,"author":{"gitId":"dawg420"},"content":"    public void removeBackupFromBackupData(String index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-03-25"},{"lineNumber":135,"author":{"gitId":"dawg420"},"content":"        JsonAdaptedBackup jsonBackup \u003d backupData.getBackup(index);","lastModifiedDate":"2023-03-25"},{"lineNumber":136,"author":{"gitId":"dawg420"},"content":"        backupData.deleteBackup(jsonBackup);","lastModifiedDate":"2023-03-25"},{"lineNumber":137,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":138,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":139,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":140,"author":{"gitId":"dawg420"},"content":"    public BackupData getBackupData() {","lastModifiedDate":"2023-03-24"},{"lineNumber":141,"author":{"gitId":"dawg420"},"content":"        return this.backupData;","lastModifiedDate":"2023-03-24"},{"lineNumber":142,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":143,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":144,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":145,"author":{"gitId":"dawg420"},"content":"    public ObservableList\u003cBackup\u003e getBackupList() throws IllegalValueException {","lastModifiedDate":"2023-03-25"},{"lineNumber":146,"author":{"gitId":"dawg420"},"content":"        ObservableList\u003cBackup\u003e observableBackups \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-25"},{"lineNumber":147,"author":{"gitId":"dawg420"},"content":"        List\u003cBackup\u003e backups \u003d backupData.getRawBackups();","lastModifiedDate":"2023-03-25"},{"lineNumber":148,"author":{"gitId":"dawg420"},"content":"        observableBackups.addAll(backups);","lastModifiedDate":"2023-03-25"},{"lineNumber":149,"author":{"gitId":"dawg420"},"content":"        return observableBackups;","lastModifiedDate":"2023-03-25"},{"lineNumber":150,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":151,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":152,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"dawg420"},"content":"    public BackupDataStorage getBackupDataStorage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"dawg420"},"content":"        return backupDataStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":162,"author":{"gitId":"CedricPei"},"content":"        commitAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":179,"author":{"gitId":"CedricPei"},"content":"        commitAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":186,"author":{"gitId":"CedricPei"},"content":"        commitAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":194,"author":{"gitId":"CedricPei"},"content":"        commitAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":210,"author":{"gitId":"ongweijie7"},"content":"        if (predicate \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"ongweijie7"},"content":"            filteredPersons.setPredicate(null);","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"ongweijie7"},"content":"        } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-22"},{"lineNumber":215,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":217,"author":{"gitId":"CedricPei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":218,"author":{"gitId":"CedricPei"},"content":"    public void undoAddressBook() {","lastModifiedDate":"2023-03-20"},{"lineNumber":219,"author":{"gitId":"CedricPei"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":220,"author":{"gitId":"CedricPei"},"content":"            addressBook.undo();","lastModifiedDate":"2023-03-20"},{"lineNumber":221,"author":{"gitId":"CedricPei"},"content":"        } catch (CannotUndoAddressBookException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":222,"author":{"gitId":"CedricPei"},"content":"            logger.warning(\"No undoable state found.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":223,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":224,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":225,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":226,"author":{"gitId":"CedricPei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":227,"author":{"gitId":"CedricPei"},"content":"    public void redoAddressBook() {","lastModifiedDate":"2023-03-20"},{"lineNumber":228,"author":{"gitId":"CedricPei"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":229,"author":{"gitId":"CedricPei"},"content":"            addressBook.redo();","lastModifiedDate":"2023-03-20"},{"lineNumber":230,"author":{"gitId":"CedricPei"},"content":"        } catch (CannotRedoAddressBookException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":231,"author":{"gitId":"CedricPei"},"content":"            logger.warning(\"No redoable state found.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":232,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":233,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":234,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":235,"author":{"gitId":"CedricPei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":236,"author":{"gitId":"CedricPei"},"content":"    public boolean canUndoAddressBook() {","lastModifiedDate":"2023-03-20"},{"lineNumber":237,"author":{"gitId":"CedricPei"},"content":"        return addressBook.canUndo();","lastModifiedDate":"2023-03-20"},{"lineNumber":238,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":239,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":240,"author":{"gitId":"CedricPei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":241,"author":{"gitId":"CedricPei"},"content":"    public boolean canRedoAddressBook() {","lastModifiedDate":"2023-03-20"},{"lineNumber":242,"author":{"gitId":"CedricPei"},"content":"        return addressBook.canRedo();","lastModifiedDate":"2023-03-20"},{"lineNumber":243,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":244,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":245,"author":{"gitId":"CedricPei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":246,"author":{"gitId":"CedricPei"},"content":"    public void commitAddressBook() {","lastModifiedDate":"2023-03-20"},{"lineNumber":247,"author":{"gitId":"CedricPei"},"content":"        addressBook.commit();","lastModifiedDate":"2023-03-20"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":265,"author":{"gitId":"-"},"content":"            \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":269,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":270,"author":{"gitId":"SeanChinJunKai"},"content":"    public Person findPersonByNric(Nric nric) {","lastModifiedDate":"2023-03-16"},{"lineNumber":271,"author":{"gitId":"SeanChinJunKai"},"content":"        return addressBook.findPersonByNric(nric);","lastModifiedDate":"2023-03-16"},{"lineNumber":272,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"CedricPei":39,"SeanChinJunKai":5,"dawg420":70,"ongweijie7":4,"-":155}},{"path":"src/main/java/seedu/address/model/ReadOnlyBackupData.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.JsonAdaptedBackup;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":" * Unmodifiable view of backup data.","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"public interface ReadOnlyBackupData {","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"    List\u003cJsonAdaptedBackup\u003e getJsonAdaptedBackups();","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"dawg420":13}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\", \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"    public UserPrefs() {","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dawg420":2,"-":86}},{"path":"src/main/java/seedu/address/model/VersionedAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricPei"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"CedricPei"},"content":"import seedu.address.commons.exceptions.CannotRedoAddressBookException;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"import seedu.address.commons.exceptions.CannotUndoAddressBookException;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"CedricPei"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"CedricPei"},"content":" * Subclass of AddressBook that stores the state of the AddressBook at a particular point in time.","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":" * This is used to implement the undo/redo feature.","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":" * Has an undo/redo history of AddressBook states.","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"CedricPei"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"public class VersionedAddressBook extends AddressBook {","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"CedricPei"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"CedricPei"},"content":"    private final List\u003cReadOnlyAddressBook\u003e addressBookStateList;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"CedricPei"},"content":"    private int currentStatePointer;","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"CedricPei"},"content":"    /*","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"CedricPei"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block,","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"CedricPei"},"content":"     * sometimes used to avoid duplication","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"CedricPei"},"content":"     * between constructors. See","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"CedricPei"},"content":"     * https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"CedricPei"},"content":"     *","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"CedricPei"},"content":"     * Note that non-static init blocks are not recommended to use. There are other","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"CedricPei"},"content":"     * ways to avoid duplication","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"CedricPei"},"content":"     * among constructors.","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"CedricPei"},"content":"    {","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"CedricPei"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"CedricPei"},"content":"     * Creates a VersionedAddressBook using an AddressBookStateList.","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"CedricPei"},"content":"     * @param addressBookStateList List of AddressBook states","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"CedricPei"},"content":"    public VersionedAddressBook(List\u003cReadOnlyAddressBook\u003e addressBookStateList) {","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"CedricPei"},"content":"        super();","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"CedricPei"},"content":"        this.addressBookStateList \u003d addressBookStateList;","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"CedricPei"},"content":"        currentStatePointer \u003d addressBookStateList.size() - 1;","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"CedricPei"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"CedricPei"},"content":"     * @param toBeCopied AddressBook to be copied","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"CedricPei"},"content":"    public VersionedAddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"CedricPei"},"content":"        super();","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"CedricPei"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"CedricPei"},"content":"        this.addressBookStateList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"CedricPei"},"content":"        this.currentStatePointer \u003d -1;","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"CedricPei"},"content":"        this.commit();","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"CedricPei"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied} and an AddressBookStateList.","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"CedricPei"},"content":"     * @param toBeCopied AddressBook to be copied","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"CedricPei"},"content":"     * @param addressBookStateList List of AddressBook states","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"CedricPei"},"content":"    public VersionedAddressBook(ReadOnlyAddressBook toBeCopied, List\u003cReadOnlyAddressBook\u003e addressBookStateList) {","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"CedricPei"},"content":"        this(addressBookStateList);","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"CedricPei"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"CedricPei"},"content":"    //// history operations","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"CedricPei"},"content":"     * Saves a copy of the current {@code AddressBook} state at the end of the state list.","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"CedricPei"},"content":"     * Undone states are removed from the state list.","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"CedricPei"},"content":"    public void commit() {","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"CedricPei"},"content":"        requireNonNull(addressBookStateList);","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"CedricPei"},"content":"        removeStatesAfterCurrentPointer();","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"CedricPei"},"content":"        AddressBook toAdd \u003d new AddressBook(this);","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"CedricPei"},"content":"        addressBookStateList.add(toAdd);","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"CedricPei"},"content":"        currentStatePointer \u003d addressBookStateList.size() - 1;","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"CedricPei"},"content":"     * Restores the address book to its previous state.","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"CedricPei"},"content":"    public void undo() throws CannotUndoAddressBookException {","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"CedricPei"},"content":"        if (!canUndo()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"CedricPei"},"content":"            throw new CannotUndoAddressBookException(\"AddressBook cannot be undone anymore!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"CedricPei"},"content":"        currentStatePointer--;","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"CedricPei"},"content":"        resetData(addressBookStateList.get(currentStatePointer));","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"CedricPei"},"content":"     * Restores the address book to its previously undone state.","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"CedricPei"},"content":"    public void redo() throws CannotRedoAddressBookException {","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"CedricPei"},"content":"        if (!canRedo()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"CedricPei"},"content":"            throw new CannotRedoAddressBookException(\"AddressBook cannot be redone anymore!\");","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"CedricPei"},"content":"        currentStatePointer++;","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"CedricPei"},"content":"        resetData(addressBookStateList.get(currentStatePointer));","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"CedricPei"},"content":"     * Removes all states after the current pointer.","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"CedricPei"},"content":"    private void removeStatesAfterCurrentPointer() {","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"CedricPei"},"content":"        assert currentStatePointer \u003c addressBookStateList.size();","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"CedricPei"},"content":"        addressBookStateList.subList(currentStatePointer + 1, addressBookStateList.size()).clear();","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"CedricPei"},"content":"     * Returns true if {@code undo()} has address book states to undo.","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"CedricPei"},"content":"    public boolean canUndo() {","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"CedricPei"},"content":"        return currentStatePointer \u003e 0;","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"CedricPei"},"content":"     * Returns true if {@code redo()} has address book states to redo.","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"CedricPei"},"content":"    public boolean canRedo() {","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"CedricPei"},"content":"        return currentStatePointer \u003c addressBookStateList.size() - 1;","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"CedricPei"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"CedricPei"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"CedricPei"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"CedricPei"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"CedricPei"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"CedricPei"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":144,"author":{"gitId":"CedricPei"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-20"},{"lineNumber":145,"author":{"gitId":"CedricPei"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-20"},{"lineNumber":146,"author":{"gitId":"CedricPei"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":148,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":149,"author":{"gitId":"CedricPei"},"content":"    //// person-level operations","lastModifiedDate":"2023-03-20"},{"lineNumber":150,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":151,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":152,"author":{"gitId":"CedricPei"},"content":"     * Returns true if a person with the same identity as {@code person} exists in","lastModifiedDate":"2023-03-20"},{"lineNumber":153,"author":{"gitId":"CedricPei"},"content":"     * the address book.","lastModifiedDate":"2023-03-21"},{"lineNumber":154,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":155,"author":{"gitId":"CedricPei"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-20"},{"lineNumber":156,"author":{"gitId":"CedricPei"},"content":"        requireNonNull(person);","lastModifiedDate":"2023-03-20"},{"lineNumber":157,"author":{"gitId":"CedricPei"},"content":"        return persons.contains(person);","lastModifiedDate":"2023-03-20"},{"lineNumber":158,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":159,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":160,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":161,"author":{"gitId":"CedricPei"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2023-03-21"},{"lineNumber":162,"author":{"gitId":"CedricPei"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2023-03-21"},{"lineNumber":163,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":164,"author":{"gitId":"CedricPei"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2023-03-20"},{"lineNumber":165,"author":{"gitId":"CedricPei"},"content":"        persons.add(p);","lastModifiedDate":"2023-03-20"},{"lineNumber":166,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":167,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":168,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":169,"author":{"gitId":"CedricPei"},"content":"     * Replaces the given person {@code target} in the list with","lastModifiedDate":"2023-03-20"},{"lineNumber":170,"author":{"gitId":"CedricPei"},"content":"     * {@code editedPerson}.","lastModifiedDate":"2023-03-20"},{"lineNumber":171,"author":{"gitId":"CedricPei"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-21"},{"lineNumber":172,"author":{"gitId":"CedricPei"},"content":"     * The person identity of {@code editedPerson} must not be the same as another","lastModifiedDate":"2023-03-20"},{"lineNumber":173,"author":{"gitId":"CedricPei"},"content":"     * existing person in the address book.","lastModifiedDate":"2023-03-21"},{"lineNumber":174,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":175,"author":{"gitId":"CedricPei"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-20"},{"lineNumber":176,"author":{"gitId":"CedricPei"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2023-03-20"},{"lineNumber":177,"author":{"gitId":"CedricPei"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2023-03-20"},{"lineNumber":178,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":179,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":180,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":181,"author":{"gitId":"CedricPei"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-20"},{"lineNumber":182,"author":{"gitId":"CedricPei"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-21"},{"lineNumber":183,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":184,"author":{"gitId":"CedricPei"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2023-03-20"},{"lineNumber":185,"author":{"gitId":"CedricPei"},"content":"        persons.remove(key);","lastModifiedDate":"2023-03-20"},{"lineNumber":186,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":187,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":188,"author":{"gitId":"CedricPei"},"content":"    //// util methods","lastModifiedDate":"2023-03-20"},{"lineNumber":189,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":190,"author":{"gitId":"CedricPei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":191,"author":{"gitId":"CedricPei"},"content":"    public String toString() {","lastModifiedDate":"2023-03-20"},{"lineNumber":192,"author":{"gitId":"CedricPei"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2023-03-20"},{"lineNumber":193,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":194,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":195,"author":{"gitId":"CedricPei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":196,"author":{"gitId":"CedricPei"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":197,"author":{"gitId":"CedricPei"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-20"},{"lineNumber":198,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":199,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":200,"author":{"gitId":"CedricPei"},"content":"    public List\u003cReadOnlyAddressBook\u003e getAddressBookStateList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":201,"author":{"gitId":"CedricPei"},"content":"        return addressBookStateList;","lastModifiedDate":"2023-03-20"},{"lineNumber":202,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":203,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":204,"author":{"gitId":"CedricPei"},"content":"    public Person findPersonByNric(Nric nric) {","lastModifiedDate":"2023-03-22"},{"lineNumber":205,"author":{"gitId":"CedricPei"},"content":"        return persons.findPersonByNric(nric);","lastModifiedDate":"2023-03-22"},{"lineNumber":206,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":207,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":208,"author":{"gitId":"CedricPei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":209,"author":{"gitId":"CedricPei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":210,"author":{"gitId":"CedricPei"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-20"},{"lineNumber":211,"author":{"gitId":"CedricPei"},"content":"                || (other instanceof VersionedAddressBook // instanceof handles nulls","lastModifiedDate":"2023-03-20"},{"lineNumber":212,"author":{"gitId":"CedricPei"},"content":"                \u0026\u0026 persons.equals(((VersionedAddressBook) other).persons));","lastModifiedDate":"2023-03-20"},{"lineNumber":213,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":214,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":215,"author":{"gitId":"CedricPei"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":216,"author":{"gitId":"CedricPei"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-20"},{"lineNumber":217,"author":{"gitId":"CedricPei"},"content":"        return persons.hashCode();","lastModifiedDate":"2023-03-20"},{"lineNumber":218,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":219,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-20"},{"lineNumber":220,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"CedricPei":220}},{"path":"src/main/java/seedu/address/model/backup/Backup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.model.backup;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":" * Represents a Backup file.","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"public class Backup {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"    public static final String INDEX_CONSTRAINTS \u003d \"Index of backup should be between 1 and 10\";","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"    public final String backupLocation;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"    public final String description;","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"    public final LocalDateTime backupTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"    private final Index index;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"     * Constructs a {@code Backup}.","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"     * @param index       Index of the backup.","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"     * @param description Description of the backup.","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"    public Backup(Index index, String description) {","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"        checkArgument(isValidIndex(index), INDEX_CONSTRAINTS);","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"        this.backupLocation \u003d getBackupLocation(index);","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"        this.backupTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"     * Constructs a {@code Backup}.","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"     * @param index       Index of the backup.","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"     * @param description Description of the backup.","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"     * @param backupTime  Timestamp of the backup.","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"    public Backup(Index index, String description, String backupTime) {","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"        checkArgument(isValidIndex(index), INDEX_CONSTRAINTS);","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"dawg420"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"dawg420"},"content":"        this.backupLocation \u003d getBackupLocation(index);","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"dawg420"},"content":"        this.backupTime \u003d LocalDateTime.parse(backupTime);","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"dawg420"},"content":"     * Returns true if a given index is a valid","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"dawg420"},"content":"    public static boolean isValidIndex(Index test) {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"dawg420"},"content":"        return test.getOneBased() \u003c\u003d 10 \u0026\u0026 test.getOneBased() \u003e 0;","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"dawg420"},"content":"     * Returns the location of the backup","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"dawg420"},"content":"     * @param index Index of backup","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"dawg420"},"content":"    public String getBackupLocation(Index index) {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"dawg420"},"content":"        return \"data/backup/hospirecordBackup\"","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"dawg420"},"content":"                   + index.getOneBased()","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"dawg420"},"content":"                   + \".json\";","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"dawg420"},"content":"     * Returns the description of the backup","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"dawg420"},"content":"    public String getBackupDesc() {","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"dawg420"},"content":"        return this.description;","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"dawg420"},"content":"     * Returns the index of a backup","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"dawg420"},"content":"    public Index getBackupIndex() {","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"dawg420"},"content":"        return this.index;","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":88,"author":{"gitId":"dawg420"},"content":"     * Returns the timestamp of a backup","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":90,"author":{"gitId":"dawg420"},"content":"    public LocalDateTime getBackupTime() {","lastModifiedDate":"2023-03-24"},{"lineNumber":91,"author":{"gitId":"dawg420"},"content":"        return this.backupTime;","lastModifiedDate":"2023-03-24"},{"lineNumber":92,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":93,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":94,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":95,"author":{"gitId":"dawg420"},"content":"     * Returns the timestamp of a backup as a string","lastModifiedDate":"2023-03-25"},{"lineNumber":96,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":97,"author":{"gitId":"dawg420"},"content":"    public String backupTimeToString() {","lastModifiedDate":"2023-03-25"},{"lineNumber":98,"author":{"gitId":"dawg420"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-03-25"},{"lineNumber":99,"author":{"gitId":"dawg420"},"content":"        return this.backupTime.format(formatter);","lastModifiedDate":"2023-03-25"},{"lineNumber":100,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":101,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":102,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"dawg420"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"dawg420"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"dawg420"},"content":"                   || (other instanceof Backup // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"dawg420"},"content":"                           \u0026\u0026 this.index.equals(((Backup) other).index)) // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"dawg420"},"content":"                          \u0026\u0026 Objects.equals(this.backupLocation, ((Backup) other).backupLocation);","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"dawg420":109}},{"path":"src/main/java/seedu/address/model/medicine/Medicine.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.model.medicine;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":" * Represents a Medicine in the app.","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"public class Medicine {","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Medicine names should be alphanumeric\";","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"    public final String medicineName;","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"     * Constructs a {@code Medicine}.","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"     * @param medicineName A valid tag name.","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"    public Medicine(String medicineName) {","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"        requireNonNull(medicineName);","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"        checkArgument(isValidMedicineName(medicineName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"        this.medicineName \u003d medicineName;","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"     * Returns true if a given string is a valid medicine name.","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"    public static boolean isValidMedicineName(String test) {","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"                || (other instanceof Medicine // instanceof handles nulls","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"                \u0026\u0026 medicineName.equals(((Medicine) other).medicineName)); // state check","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"        return medicineName.hashCode();","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"    public String toString() {","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"dawg420"},"content":"        return \u0027[\u0027 + medicineName + \u0027]\u0027;","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"dawg420":54}},{"path":"src/main/java/seedu/address/model/person/DateOfBirth.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ongweijie7"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"ongweijie7"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"ongweijie7"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"ongweijie7"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"ongweijie7"},"content":"import java.util.Date;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"ongweijie7"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"ongweijie7"},"content":" * Represents a Person\u0027s date of birth in the address book.","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"ongweijie7"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDate(String)}","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"ongweijie7"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"ongweijie7"},"content":"public class DateOfBirth {","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"ongweijie7"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"ongweijie7"},"content":"            \"Please give your date in the format DD/MM/YYYY\"","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ongweijie7"},"content":"            + \" and do only give valid date inputs.\";","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"ongweijie7"},"content":"    public static final String VALIDATION_REGEX \u003d \"^(0[1-9]|[1-2][0-9]|3[0-1])/(0[1-9]|1[0-2])/\\\\d{4}$\";","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"ongweijie7"},"content":"    public static final SimpleDateFormat INPUT_FORMAT \u003d new SimpleDateFormat(\"dd/MM/yyyy\");","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"ongweijie7"},"content":"    public static final SimpleDateFormat OUTPUT_FORMAT \u003d new SimpleDateFormat(\"dd MMMM yyyy\");","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"ongweijie7"},"content":"    public final String dateOfBirth;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"ongweijie7"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"ongweijie7"},"content":"     * Constructs a {@code dateOfBirth}.","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"ongweijie7"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"ongweijie7"},"content":"     * @param dateOfBirth A given date of birth.","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"ongweijie7"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"ongweijie7"},"content":"    public DateOfBirth(String dateOfBirth) {","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"ongweijie7"},"content":"        requireNonNull(dateOfBirth);","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"ongweijie7"},"content":"        checkArgument(isValidDate(dateOfBirth), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"ongweijie7"},"content":"        String formatted \u003d \"28/12/2000\";","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"ongweijie7"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"ongweijie7"},"content":"            Date date \u003d INPUT_FORMAT.parse(dateOfBirth);","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"ongweijie7"},"content":"            formatted \u003d OUTPUT_FORMAT.format(date);","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"ongweijie7"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"ongweijie7"},"content":"            System.out.println(\"Invalid date format\");","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"ongweijie7"},"content":"        this.dateOfBirth \u003d formatted;","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"ongweijie7"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"ongweijie7"},"content":"     * Returns true if a given string is a valid date of birth.","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"ongweijie7"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"ongweijie7"},"content":"    public static boolean isValidDate(String dateString) {","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"ongweijie7"},"content":"        if (!dateString.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"ongweijie7"},"content":"            return false;","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"ongweijie7"},"content":"        String[] dateParts \u003d dateString.split(\"/\");","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"ongweijie7"},"content":"        int day \u003d Integer.parseInt(dateParts[0]);","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"ongweijie7"},"content":"        int month \u003d Integer.parseInt(dateParts[1]);","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"ongweijie7"},"content":"        int year \u003d Integer.parseInt(dateParts[2]);","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"ongweijie7"},"content":"        return isValidInputs(day, month, year);","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"ongweijie7"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"ongweijie7"},"content":"     * Returns true if given day, month and year are valid","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"ongweijie7"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"ongweijie7"},"content":"    public static boolean isValidInputs(int day, int month, int year) {","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"ongweijie7"},"content":"        if (!isValidMonth(month)) {","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"ongweijie7"},"content":"            return false;","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"ongweijie7"},"content":"        if (month \u003d\u003d 2 \u0026\u0026 (day \u003e 28 \u0026\u0026 !isLeapYear(year))) {","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"ongweijie7"},"content":"            return false;","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"ongweijie7"},"content":"        } else if (month \u003d\u003d 2 \u0026\u0026 (day \u003e 29 \u0026\u0026 isLeapYear(year))) {","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"ongweijie7"},"content":"            return false;","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"ongweijie7"},"content":"        } else if (month \u003d\u003d 4 \u0026\u0026 day \u003e 30) {","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"ongweijie7"},"content":"            return false;","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"ongweijie7"},"content":"        } else if (month \u003d\u003d 6 \u0026\u0026 day \u003e 30) {","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"ongweijie7"},"content":"            return false;","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"ongweijie7"},"content":"        } else if (month \u003d\u003d 9 \u0026\u0026 day \u003e 30) {","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"ongweijie7"},"content":"            return false;","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"ongweijie7"},"content":"        } else if (month \u003d\u003d 11 \u0026\u0026 day \u003e 30) {","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"ongweijie7"},"content":"            return false;","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":87,"author":{"gitId":"ongweijie7"},"content":"        return true;","lastModifiedDate":"2023-04-07"},{"lineNumber":88,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":89,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":90,"author":{"gitId":"ongweijie7"},"content":"    /**","lastModifiedDate":"2023-04-07"},{"lineNumber":91,"author":{"gitId":"ongweijie7"},"content":"     * Returns true if given month is valid","lastModifiedDate":"2023-04-07"},{"lineNumber":92,"author":{"gitId":"ongweijie7"},"content":"     */","lastModifiedDate":"2023-04-07"},{"lineNumber":93,"author":{"gitId":"ongweijie7"},"content":"    public static boolean isValidMonth(int month) {","lastModifiedDate":"2023-04-07"},{"lineNumber":94,"author":{"gitId":"ongweijie7"},"content":"        return !(month \u003c 1 || month \u003e 12);","lastModifiedDate":"2023-04-07"},{"lineNumber":95,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":96,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":97,"author":{"gitId":"ongweijie7"},"content":"    public static boolean isLeapYear(int year) {","lastModifiedDate":"2023-04-07"},{"lineNumber":98,"author":{"gitId":"ongweijie7"},"content":"        return (year % 4 \u003d\u003d 0);","lastModifiedDate":"2023-04-07"},{"lineNumber":99,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"ongweijie7"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"ongweijie7"},"content":"    public String toString() {","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"ongweijie7"},"content":"        String output \u003d this.dateOfBirth;","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"ongweijie7"},"content":"        Date date \u003d null;","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"ongweijie7"},"content":"        try {","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"ongweijie7"},"content":"            date \u003d OUTPUT_FORMAT.parse(output);","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"ongweijie7"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"ongweijie7"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"ongweijie7"},"content":"        output \u003d INPUT_FORMAT.format(date);","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"ongweijie7"},"content":"        return output;","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"ongweijie7"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"ongweijie7"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"ongweijie7"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"ongweijie7"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"ongweijie7"},"content":"                \u0026\u0026 dateOfBirth.equals(((DateOfBirth) other).dateOfBirth)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"ongweijie7"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"ongweijie7"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"ongweijie7"},"content":"        return this.dateOfBirth.hashCode();","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"ongweijie7"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"ongweijie7":126}},{"path":"src/main/java/seedu/address/model/person/Doctor.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":" * Represents a Person\u0027s attending Doctor in the address book.","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDoctor(String)}","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"public class Doctor {","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"            \"Doctor names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"    /*","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"    public final String doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"     * Constructs a {@code Doctor}.","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"     * @param doctor A valid name.","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"    public Doctor(String doctor) {","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"        requireNonNull(doctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"        checkArgument(isValidDoctor(doctor), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"        this.doctor \u003d doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"     * Returns true if a given string is a valid doctor name.","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"    public static boolean isValidDoctor(String test) {","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"    public String toString() {","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Creationsv2"},"content":"        return doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Creationsv2"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Creationsv2"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Creationsv2"},"content":"                || (other instanceof Doctor // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Creationsv2"},"content":"                \u0026\u0026 doctor.equals(((Doctor) other).doctor)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Creationsv2"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Creationsv2"},"content":"        return doctor.hashCode();","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Creationsv2":59}},{"path":"src/main/java/seedu/address/model/person/DoctorContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"/**","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":" */","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"public class DoctorContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"    public DoctorContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getDoctor().doctor, keyword));","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"                || (other instanceof DoctorContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"                \u0026\u0026 keywords.equals(((DoctorContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Creationsv2":31}},{"path":"src/main/java/seedu/address/model/person/DrugAllergy.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":" * Represents a Person\u0027s NRIC in the address book.","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDrugAllergy(String)}","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"public class DrugAllergy {","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Drug allergies can take any values, and it should not be blank\";","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"    /*","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"    public final String value;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"     * Constructs a {@code DrugAllergy}.","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"     * @param drugAllergy A valid drug allergy.","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"    public DrugAllergy(String drugAllergy) {","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"        requireNonNull(drugAllergy);","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"        checkArgument(isValidDrugAllergy(drugAllergy), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"        value \u003d drugAllergy;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns true if a given string is a valid drug allergy.","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"    public static boolean isValidDrugAllergy(String test) {","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"    public String toString() {","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"        return value;","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"                || (other instanceof DrugAllergy // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"                \u0026\u0026 value.equals(((DrugAllergy) other).value)); // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"SeanChinJunKai":56}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"ongweijie7"},"content":"    public static final String EMPTY_EMAIL \u003d \"^\\\\s*(-)\\\\s*$\";","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":44,"author":{"gitId":"ongweijie7"},"content":"        if (email.equals(\"-\")) {","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"ongweijie7"},"content":"            value \u003d \"-\";","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"ongweijie7"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"ongweijie7"},"content":"        if (test.matches(EMPTY_EMAIL)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"ongweijie7"},"content":"            return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"ongweijie7"},"content":"        } else if (test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"ongweijie7"},"content":"            return true;","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"ongweijie7"},"content":"        } else {","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"ongweijie7"},"content":"            return false;","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ongweijie7":13,"-":69}},{"path":"src/main/java/seedu/address/model/person/Gender.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ongweijie7"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"ongweijie7"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"ongweijie7"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"ongweijie7"},"content":" * Represents a Person\u0027s gender in the address book.","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"ongweijie7"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGender(String)}","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"ongweijie7"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"ongweijie7"},"content":"public class Gender {","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"ongweijie7"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"ongweijie7"},"content":"            \"Gender can indicated either by Male, Female or others\";","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"ongweijie7"},"content":"    public final String gender;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"ongweijie7"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"ongweijie7"},"content":"     * Constructs a {@code gender}.","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"ongweijie7"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"ongweijie7"},"content":"     * @param gender A given gender.","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"ongweijie7"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"ongweijie7"},"content":"    public Gender(String gender) {","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"ongweijie7"},"content":"        requireNonNull(gender);","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"ongweijie7"},"content":"        checkArgument(isValidGender(gender), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"ongweijie7"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"ongweijie7"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"ongweijie7"},"content":"     * Returns true if a given string is a valid gender.","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"ongweijie7"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"ongweijie7"},"content":"    public static boolean isValidGender(String gender) {","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"ongweijie7"},"content":"        switch (gender.toLowerCase()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"ongweijie7"},"content":"        case \"male\":","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"ongweijie7"},"content":"        case \"female\":","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"ongweijie7"},"content":"        case \"others\":","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"ongweijie7"},"content":"            return true;","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"ongweijie7"},"content":"        default:","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"ongweijie7"},"content":"            return false;","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"ongweijie7"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"ongweijie7"},"content":"    public String toString() {","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"ongweijie7"},"content":"        return gender;","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"ongweijie7"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"ongweijie7"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"ongweijie7"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"ongweijie7"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"ongweijie7"},"content":"                \u0026\u0026 gender.equals(((Gender) other).gender)); // state check","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"ongweijie7"},"content":"    @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"ongweijie7"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"ongweijie7"},"content":"        return this.gender.hashCode();","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"ongweijie7"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"ongweijie7":58}},{"path":"src/main/java/seedu/address/model/person/MedicineContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ongweijie7"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"ongweijie7"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ongweijie7"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.medicine.Medicine;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"ongweijie7"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"ongweijie7"},"content":" * Tests that a {@code Person}\u0027s {@code Address} matches any of the keywords given.","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"ongweijie7"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"ongweijie7"},"content":"public class MedicineContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"ongweijie7"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"ongweijie7"},"content":"    public MedicineContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"ongweijie7"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"ongweijie7"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"ongweijie7"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"ongweijie7"},"content":"        Medicine[] medicineArray \u003d person.getMedicines().toArray(new Medicine[0]);","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"ongweijie7"},"content":"        for (int i \u003d 0; i \u003c medicineArray.length; i++) {","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"ongweijie7"},"content":"            String currentTag \u003d medicineArray[i].toString();","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"ongweijie7"},"content":"            if (keywords.stream()","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"ongweijie7"},"content":"                    .anyMatch(keyword -\u003e StringUtil","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"ongweijie7"},"content":"                            .containsWordIgnoreCase(currentTag.substring(1, currentTag.length() - 1), keyword))) {","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"ongweijie7"},"content":"                return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"ongweijie7"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"ongweijie7"},"content":"        return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"ongweijie7"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"ongweijie7"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"ongweijie7"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"ongweijie7"},"content":"                || (other instanceof MedicineContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"ongweijie7"},"content":"                \u0026\u0026 keywords.equals(((MedicineContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"ongweijie7"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"ongweijie7":42}},{"path":"src/main/java/seedu/address/model/person/Nric.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":" * Represents a Person\u0027s NRIC in the address book.","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidNric(String)}","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"public class Nric {","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"            \"NRIC should only be in the format \" + \"@xxxxxxx#, where:\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"                    + \"@ is a letter that can be \\\"S\\\", \\\"T\\\", \\\"F\\\", \\\"G\\\" or \\\"M\\\" \\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"                    + \"xxxxxxx is a 7-digit serial number, each x can be any number 0-9\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"                    + \"# can be any captial alphabet A-Z, and the field cannot be blank.\";","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"    /*","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[STFGM]\\\\d{7}[A-Z]$\";","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"    public final String fullNric;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"     * Constructs a {@code NRIC}.","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"     * @param nric A valid NRIC.","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"    public Nric(String nric) {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"        checkArgument(isValidNric(nric), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"        fullNric \u003d nric;","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"     * Returns true if a given string is a valid NRIC.","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"    public static boolean isValidNric(String test) {","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"Creationsv2"},"content":"    public String toString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"        return fullNric;","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"Creationsv2"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"Creationsv2"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"Creationsv2"},"content":"                || (other instanceof Nric // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"Creationsv2"},"content":"                \u0026\u0026 fullNric.equals(((Nric) other).fullNric)); // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"Creationsv2"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"        return fullNric.hashCode();","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Creationsv2":61}},{"path":"src/main/java/seedu/address/model/person/NricContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ongweijie7"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"ongweijie7"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"ongweijie7"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"ongweijie7"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"ongweijie7"},"content":" * Tests that a {@code Person}\u0027s {@code Nric} matches any of the keywords given.","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"ongweijie7"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"ongweijie7"},"content":"public class NricContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"ongweijie7"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"ongweijie7"},"content":"    public NricContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"ongweijie7"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"ongweijie7"},"content":"    } {","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"ongweijie7"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"ongweijie7"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"ongweijie7"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"ongweijie7"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getNric().toString(), keyword));","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"ongweijie7"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"ongweijie7"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"ongweijie7"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"ongweijie7"},"content":"                || (other instanceof NricContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"ongweijie7"},"content":"                \u0026\u0026 keywords.equals(((NricContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"ongweijie7"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"ongweijie7":31}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.medicine.Medicine;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"    private final Nric nric;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"ongweijie7"},"content":"    private final DateOfBirth date;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"ongweijie7"},"content":"    private final Gender gender;","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"    private final DrugAllergy drugAllergy;","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"    private final Doctor doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"    private final Set\u003cMedicine\u003e medicines \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"ongweijie7"},"content":"    public Person(Nric nric, Name name, DateOfBirth date, Phone phone,","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"ongweijie7"},"content":"                  Email email, Address address, DrugAllergy drugAllergy,","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"ongweijie7"},"content":"                  Gender gender, Doctor doctor,","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"ongweijie7"},"content":"                  Set\u003cTag\u003e tags, Set\u003cMedicine\u003e medicines) {","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"ongweijie7"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"ongweijie7"},"content":"        this.gender \u003d gender;","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"        this.drugAllergy \u003d drugAllergy;","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"Creationsv2"},"content":"        this.doctor \u003d doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"dawg420"},"content":"        this.medicines.addAll(medicines);","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"Creationsv2"},"content":"    public Nric getNric() {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"Creationsv2"},"content":"        return nric;","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"ongweijie7"},"content":"    public DateOfBirth getDate() {","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"ongweijie7"},"content":"        return date;","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"ongweijie7"},"content":"    public Gender getGender() {","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"ongweijie7"},"content":"        return gender;","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":84,"author":{"gitId":"Creationsv2"},"content":"    public Doctor getDoctor() {","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"Creationsv2"},"content":"        return doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"SeanChinJunKai"},"content":"    public DrugAllergy getDrugAllergy() {","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"SeanChinJunKai"},"content":"        return drugAllergy;","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":101,"author":{"gitId":"dawg420"},"content":"     * Returns an immutable medicine set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-26"},{"lineNumber":102,"author":{"gitId":"dawg420"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"dawg420"},"content":"    public Set\u003cMedicine\u003e getMedicines() {","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"dawg420"},"content":"        return Collections.unmodifiableSet(medicines);","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"Creationsv2"},"content":"     * Returns true if both persons have the same nric.","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"Creationsv2"},"content":"                \u0026\u0026 otherPerson.getNric().equals(getNric());","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":136,"author":{"gitId":"Creationsv2"},"content":"        return otherPerson.getNric().equals(getNric())","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"Creationsv2"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"SeanChinJunKai"},"content":"                \u0026\u0026 otherPerson.getDrugAllergy().equals(getDrugAllergy())","lastModifiedDate":"2023-03-21"},{"lineNumber":142,"author":{"gitId":"Creationsv2"},"content":"                \u0026\u0026 otherPerson.getDoctor().equals(getDoctor())","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"dawg420"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2023-03-26"},{"lineNumber":144,"author":{"gitId":"dawg420"},"content":"                \u0026\u0026 otherPerson.getMedicines().equals(getMedicines());","lastModifiedDate":"2023-03-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":150,"author":{"gitId":"Creationsv2"},"content":"        return Objects.hash(nric, name, phone, email, address, drugAllergy, doctor, tags, medicines);","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"Creationsv2"},"content":"        builder.append(getNric())","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"SeanChinJunKai"},"content":"                .append(\"; Name: \")","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"Creationsv2"},"content":"                .append(getName())","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"ongweijie7"},"content":"                .append(\"; DOB: \")","lastModifiedDate":"2023-03-29"},{"lineNumber":160,"author":{"gitId":"ongweijie7"},"content":"                .append(getDate())","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":166,"author":{"gitId":"SeanChinJunKai"},"content":"                .append(getAddress())","lastModifiedDate":"2023-03-21"},{"lineNumber":167,"author":{"gitId":"ongweijie7"},"content":"                .append(\"; Gender: \")","lastModifiedDate":"2023-03-26"},{"lineNumber":168,"author":{"gitId":"ongweijie7"},"content":"                .append(getGender())","lastModifiedDate":"2023-03-26"},{"lineNumber":169,"author":{"gitId":"Creationsv2"},"content":"                .append(\"; Attending Doctor: \")","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"Creationsv2"},"content":"                .append(getDoctor())","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"SeanChinJunKai"},"content":"                .append(\"; Drug Allergy: \")","lastModifiedDate":"2023-03-21"},{"lineNumber":172,"author":{"gitId":"SeanChinJunKai"},"content":"                .append(getDrugAllergy());","lastModifiedDate":"2023-03-21"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":175,"author":{"gitId":"dawg420"},"content":"        Set\u003cMedicine\u003e medicine \u003d getMedicines();","lastModifiedDate":"2023-03-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":180,"author":{"gitId":"dawg420"},"content":"        if (!medicines.isEmpty()) {","lastModifiedDate":"2023-03-26"},{"lineNumber":181,"author":{"gitId":"dawg420"},"content":"            builder.append(\"; Medicines: \");","lastModifiedDate":"2023-03-26"},{"lineNumber":182,"author":{"gitId":"dawg420"},"content":"            medicines.forEach(builder::append);","lastModifiedDate":"2023-03-26"},{"lineNumber":183,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SeanChinJunKai":11,"dawg420":17,"ongweijie7":21,"Creationsv2":20,"-":118}},{"path":"src/main/java/seedu/address/model/person/TagContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":" * Tests that a {@code Person}\u0027s {@code Nric} matches any of the keywords given.","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"public class TagContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"    public TagContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"    } {","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"        Tag[] tagsArray \u003d person.getTags().toArray(new Tag[0]);","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"        for (int i \u003d 0; i \u003c tagsArray.length; i++) {","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"            String currentTag \u003d tagsArray[i].toString();","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"            if (keywords.stream()","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"                    .anyMatch(keyword -\u003e StringUtil","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"                            .containsWordIgnoreCase(currentTag.substring(1, currentTag.length() - 1), keyword))) {","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"                return true;","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"        return false;","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"                || (other instanceof TagContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"                \u0026\u0026 keywords.equals(((TagContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Creationsv2":42}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"SeanChinJunKai"},"content":"     * Returns the {@code Person} with the specified Nric in the list otherwise returns null.","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"SeanChinJunKai"},"content":"    public Person findPersonByNric(Nric nric) {","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"SeanChinJunKai"},"content":"        requireNonNull(nric);","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"SeanChinJunKai"},"content":"        return internalList.stream().filter(p -\u003e p.getNric().equals(nric)).findFirst().orElse(null);","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"SeanChinJunKai":8,"-":137}},{"path":"src/main/java/seedu/address/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.tag;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":" * Represents a Tag in the app.","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tag names should be alphanumeric\";","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"dawg420":1,"Creationsv2":1,"-":52}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.medicine.Medicine;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":11,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":22,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return new Person[]{","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"ongweijie7"},"content":"            new Person(new Nric(\"S1234567A\"), new Name(\"Alex Yeoh\"), new DateOfBirth(\"01/04/2000\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"ongweijie7"},"content":"                    new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"ongweijie7"},"content":"                    new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"                    new DrugAllergy(\"NKDA\"), new Gender(\"male\"), new Doctor(\"Ben\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"                    getTagSet(\"Diabetic\"), getMedicineSet(\"Lantus\")),","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"ongweijie7"},"content":"            new Person(new Nric(\"S2345678B\"), new Name(\"Bernice Yu\"), new DateOfBirth(\"22/09/2022\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"ongweijie7"},"content":"                    new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"ongweijie7"},"content":"                    new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"                    new DrugAllergy(\"Panadol\"), new Gender(\"female\"), new Doctor(\"Alex\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"                    getTagSet(\"Osteoporotic\", \"Diabetic\"), getMedicineSet(\"ibuprofen\", \"diclofenac\")),","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"ongweijie7"},"content":"            new Person(new Nric(\"S3456789C\"), new Name(\"Charlotte Oliveiro\"), new DateOfBirth(\"18/12/2001\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"ongweijie7"},"content":"                    new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"ongweijie7"},"content":"                    new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Creationsv2"},"content":"                new DrugAllergy(\"Penicillin\"), new Gender(\"male\"), new Doctor(\"Ben\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"                    getTagSet(\"Asthmatic\"), getMedicineSet()),","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"ongweijie7"},"content":"            new Person(new Nric(\"S0012345D\"), new Name(\"David Li\"), new DateOfBirth(\"15/06/1998\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"ongweijie7"},"content":"                    new Phone(\"91031282\"), new Email(\"lidavid@example.com\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"ongweijie7"},"content":"                    new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"                    new DrugAllergy(\"Aspirin Panadol\"), new Gender(\"male\"), new Doctor(\"Alex\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Creationsv2"},"content":"                    getTagSet(\"Epileptic\"), getMedicineSet(\"DHAP\", \"DTIC\")),","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"ongweijie7"},"content":"            new Person(new Nric(\"S1212345E\"), new Name(\"Irfan Ibrahim\"), new DateOfBirth(\"12/05/2008\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"ongweijie7"},"content":"                    new Phone(\"92492021\"), new Email(\"irfan@example.com\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"ongweijie7"},"content":"                    new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Creationsv2"},"content":"                    new DrugAllergy(\"NKDA\"), new Gender(\"male\"), new Doctor(\"Shannon\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Creationsv2"},"content":"                    getTagSet(\"Arthritic\"), getMedicineSet(\"NTRI\")),","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"ongweijie7"},"content":"            new Person(new Nric(\"S0001111F\"), new Name(\"Roy Balakrishnan\"), new DateOfBirth(\"11/04/2001\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"ongweijie7"},"content":"                    new Phone(\"92624417\"), new Email(\"royb@example.com\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"ongweijie7"},"content":"                    new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Creationsv2"},"content":"                    new DrugAllergy(\"NKDA\"), new Gender(\"male\"), new Doctor(\"Ben\"),","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"                    getTagSet(\"Diabetic\"), getMedicineSet())","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"dawg420"},"content":"     * Returns a medicine set containing the list of strings given.","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":83,"author":{"gitId":"dawg420"},"content":"    public static Set\u003cMedicine\u003e getMedicineSet(String... strings) {","lastModifiedDate":"2023-03-26"},{"lineNumber":84,"author":{"gitId":"dawg420"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2023-03-26"},{"lineNumber":85,"author":{"gitId":"dawg420"},"content":"            .map(Medicine::new)","lastModifiedDate":"2023-03-26"},{"lineNumber":86,"author":{"gitId":"dawg420"},"content":"            .collect(Collectors.toSet());","lastModifiedDate":"2023-03-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"SeanChinJunKai":1,"dawg420":8,"ongweijie7":22,"Creationsv2":14,"-":44}},{"path":"src/main/java/seedu/address/storage/BackupDataStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.BackupData;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.ReadOnlyBackupData;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":" * Represents a storage for {@link seedu.address.model.BackupData}.","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"public interface BackupDataStorage {","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"     * Returns the file path of the BackupData data file.","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"    Path getBackupDataFilePath();","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"     * Returns BackupData data from storage","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"     * Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"     * @throws DataConversionException if data in storage is not in the expected format","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"     * @throws IOException             if there was any problem when reading from storage","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"    Optional\u003cBackupData\u003e readBackupData() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"     * Saves the given {@link seedu.address.model.ReadOnlyBackupData} to the storage.","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"     * @param backupData cannot be null.","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"    void saveBackupData(ReadOnlyBackupData backupData) throws IOException;","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"dawg420":37}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedBackup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.backup.Backup;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":" * Jackson-friendly version of {@link Backup}.","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"public class JsonAdaptedBackup {","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"    public final String index;","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"    public final String description;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"    public final String backupTime;","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"     * Constructs a {@code JsonAdaptedBackup} with the given Backup details.","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"    public JsonAdaptedBackup(@JsonProperty(\"index\") String index,","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"                             @JsonProperty(\"description\") String description,","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"                             @JsonProperty(\"backupTime\") String backupTime) {","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"        this.backupTime \u003d backupTime;","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"     * Converts a given {@code Backup} into this class for Jackson use.","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"    public JsonAdaptedBackup(Backup source) {","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"        index \u003d Integer.toString(source.getBackupIndex().getOneBased());","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"        description \u003d source.getBackupDesc();","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"        backupTime \u003d source.getBackupTime().toString();","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"     * Converts this Jackson-friendly adapted backup object into the model\u0027s {@code Backup} object.","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted backup.","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"    public Backup toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"        Index thisIndex \u003d Index.fromOneBased(Integer.parseInt(index));","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"dawg420"},"content":"        if (!Backup.isValidIndex(thisIndex)) {","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"            throw new IllegalValueException(Backup.INDEX_CONSTRAINTS);","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"dawg420"},"content":"        return new Backup(thisIndex, description, backupTime);","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"dawg420":54}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedMedicine.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.medicine.Medicine;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":" * Jackson-friendly version of {@link Medicine}.","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"class JsonAdaptedMedicine {","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"    private final String medicineName;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"     * Constructs a {@code JsonAdaptedMedicine} with the given {@code medicineName}.","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"    public JsonAdaptedMedicine(String medicineName) {","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"        this.medicineName \u003d medicineName;","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"     * Converts a given {@code Medicine} into this class for Jackson use.","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"    public JsonAdaptedMedicine(Medicine source) {","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"        medicineName \u003d source.medicineName;","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"    @JsonValue","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"    public String getMedicineName() {","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"        return medicineName;","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"     * Converts this Jackson-friendly adapted medicine object into the model\u0027s {@code Medicine} object.","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted medicine.","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"    public Medicine toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"        if (!Medicine.isValidMedicineName(medicineName)) {","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"            throw new IllegalValueException(Medicine.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"        return new Medicine(medicineName);","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"dawg420":48}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.medicine.Medicine;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"    private final String nric;","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"ongweijie7"},"content":"    private final String date;","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"ongweijie7"},"content":"    private final String gender;","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"    private final String doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"    private final String drugAllergy;","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"    private final List\u003cJsonAdaptedMedicine\u003e medicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"ongweijie7"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"nric\") String nric,","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"ongweijie7"},"content":"                             @JsonProperty(\"name\") String name,","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"ongweijie7"},"content":"                             @JsonProperty(\"date\") String date,","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"ongweijie7"},"content":"                             @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"ongweijie7"},"content":"                             @JsonProperty(\"email\") String email,","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Creationsv2"},"content":"                             @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"                             @JsonProperty(\"drugAllergy\") String drugAllergy,","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"ongweijie7"},"content":"                             @JsonProperty(\"gender\") String gender,","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"                             @JsonProperty(\"doctor\") String doctor,","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"dawg420"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"dawg420"},"content":"                             @JsonProperty(\"medicines\") List\u003cJsonAdaptedMedicine\u003e medicines) {","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"Creationsv2"},"content":"        this.nric \u003d nric;","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"ongweijie7"},"content":"        this.date \u003d date;","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"ongweijie7"},"content":"        this.gender \u003d String.valueOf(gender);","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"Creationsv2"},"content":"        this.doctor \u003d doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"SeanChinJunKai"},"content":"        this.drugAllergy \u003d drugAllergy;","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"dawg420"},"content":"        if (medicines !\u003d null) {","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"dawg420"},"content":"            this.medicines.addAll(medicines);","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"Creationsv2"},"content":"        nric \u003d source.getNric().fullNric;","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"ongweijie7"},"content":"        date \u003d source.getDate().toString();","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"ongweijie7"},"content":"        gender \u003d source.getGender().gender;","lastModifiedDate":"2023-03-26"},{"lineNumber":90,"author":{"gitId":"Creationsv2"},"content":"        doctor \u003d source.getDoctor().doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"SeanChinJunKai"},"content":"        drugAllergy \u003d source.getDrugAllergy().value;","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"dawg420"},"content":"        medicines.addAll(source.getMedicines().stream()","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"dawg420"},"content":"                .map(JsonAdaptedMedicine::new)","lastModifiedDate":"2023-03-26"},{"lineNumber":98,"author":{"gitId":"dawg420"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"dawg420"},"content":"        final List\u003cMedicine\u003e personMedicines \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-26"},{"lineNumber":113,"author":{"gitId":"dawg420"},"content":"        for (JsonAdaptedMedicine medicine : medicines) {","lastModifiedDate":"2023-03-26"},{"lineNumber":114,"author":{"gitId":"dawg420"},"content":"            personMedicines.add(medicine.toModelType());","lastModifiedDate":"2023-03-26"},{"lineNumber":115,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":116,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"Creationsv2"},"content":"        if (nric \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"Creationsv2"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName()));","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"Creationsv2"},"content":"        if (!Nric.isValidNric(nric)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"Creationsv2"},"content":"            throw new IllegalValueException(Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"Creationsv2"},"content":"        final Nric modelNric \u003d new Nric(nric);","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"ongweijie7"},"content":"        if (date \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"ongweijie7"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"ongweijie7"},"content":"                                            DateOfBirth.class.getSimpleName()));","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"ongweijie7"},"content":"        if (!DateOfBirth.isValidDate(date)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"ongweijie7"},"content":"            throw new IllegalValueException(DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"ongweijie7"},"content":"        final DateOfBirth modelDate \u003d new DateOfBirth(date);","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"ongweijie7"},"content":"        if (gender \u003d\u003d null) {","lastModifiedDate":"2023-03-26"},{"lineNumber":143,"author":{"gitId":"ongweijie7"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Gender.class.getSimpleName()));","lastModifiedDate":"2023-03-26"},{"lineNumber":144,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":145,"author":{"gitId":"ongweijie7"},"content":"        if (!Gender.isValidGender(gender)) {","lastModifiedDate":"2023-03-26"},{"lineNumber":146,"author":{"gitId":"ongweijie7"},"content":"            throw new IllegalValueException(Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-26"},{"lineNumber":147,"author":{"gitId":"ongweijie7"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":148,"author":{"gitId":"ongweijie7"},"content":"        final Gender modelGender \u003d new Gender(gender);","lastModifiedDate":"2023-03-26"},{"lineNumber":149,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":150,"author":{"gitId":"Creationsv2"},"content":"        if (doctor \u003d\u003d null) {","lastModifiedDate":"2023-03-29"},{"lineNumber":151,"author":{"gitId":"Creationsv2"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Doctor.class.getSimpleName()));","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"Creationsv2"},"content":"        if (!Doctor.isValidDoctor(doctor)) {","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"Creationsv2"},"content":"            throw new IllegalValueException(Doctor.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"Creationsv2"},"content":"        }","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"Creationsv2"},"content":"        final Doctor modelDoctor \u003d new Doctor(doctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":182,"author":{"gitId":"SeanChinJunKai"},"content":"        if (drugAllergy \u003d\u003d null) {","lastModifiedDate":"2023-03-21"},{"lineNumber":183,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-22"},{"lineNumber":184,"author":{"gitId":"SeanChinJunKai"},"content":"                    DrugAllergy.class.getSimpleName()));","lastModifiedDate":"2023-03-22"},{"lineNumber":185,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":186,"author":{"gitId":"SeanChinJunKai"},"content":"        if (!DrugAllergy.isValidDrugAllergy(drugAllergy)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":187,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new IllegalValueException(DrugAllergy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-21"},{"lineNumber":188,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":189,"author":{"gitId":"SeanChinJunKai"},"content":"        final DrugAllergy modelAllergy \u003d new DrugAllergy(drugAllergy);","lastModifiedDate":"2023-03-21"},{"lineNumber":190,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":192,"author":{"gitId":"dawg420"},"content":"        final Set\u003cMedicine\u003e modelMedicines \u003d new HashSet\u003c\u003e(personMedicines);","lastModifiedDate":"2023-03-26"},{"lineNumber":193,"author":{"gitId":"ongweijie7"},"content":"        return new Person(modelNric, modelName, modelDate,","lastModifiedDate":"2023-03-29"},{"lineNumber":194,"author":{"gitId":"ongweijie7"},"content":"                            modelPhone, modelEmail,","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"ongweijie7"},"content":"                            modelAddress, modelAllergy, modelGender,","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"ongweijie7"},"content":"                            modelDoctor, modelTags, modelMedicines);","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"SeanChinJunKai":14,"dawg420":16,"ongweijie7":38,"Creationsv2":26,"-":105}},{"path":"src/main/java/seedu/address/storage/JsonBackupDataStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.BackupData;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.ReadOnlyBackupData;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":" * A class to access Backupdata stored in the hard disk as a json file","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"public class JsonBackupDataStorage implements BackupDataStorage {","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"     * Creates a JsonBackupDataStorage object.","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"    public JsonBackupDataStorage(Path filePath) {","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"    public Path getBackupDataFilePath() {","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"        return filePath;","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"    public Optional\u003cBackupData\u003e readBackupData() throws DataConversionException {","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"        return readBackupData(filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"    public Optional\u003cBackupData\u003e readBackupData(Path backupDataFilePath) throws DataConversionException {","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"        return JsonUtil.readJsonFile(backupDataFilePath, BackupData.class);","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"    public void saveBackupData(ReadOnlyBackupData backupData) throws IOException {","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"        JsonUtil.saveJsonFile(backupData, filePath);","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"dawg420":47}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"     * Deletes a backup file","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"    void deleteBackup(Path filePath) throws IOException;","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"dawg420":4,"-":32}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import java.io.File;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":80,"author":{"gitId":"dawg420"},"content":"    public void deleteBackup(Path filePath) throws IOException {","lastModifiedDate":"2023-03-25"},{"lineNumber":81,"author":{"gitId":"dawg420"},"content":"        File backupToDelete \u003d new File(filePath.toString());","lastModifiedDate":"2023-03-25"},{"lineNumber":82,"author":{"gitId":"dawg420"},"content":"        if (!backupToDelete.delete()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"dawg420"},"content":"            throw new IOException();","lastModifiedDate":"2023-03-25"},{"lineNumber":84,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":85,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"dawg420":8,"-":78}},{"path":"src/main/java/seedu/address/ui/BackupCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.backup.Backup;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":" * An UI component that displays information of a {@code Backup}.","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"public class BackupCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"    private static final String FXML \u003d \"BackupCard.fxml\";","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"    public final Backup backup;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"    private final String slot \u003d \"Backup slot: \";","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"    private final String desc \u003d \"Description: \";","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"    private final String time \u003d \"time created: \";","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"    @FXML","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"    @FXML","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"    private Label index;","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"    @FXML","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"    private Label description;","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"    @FXML","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"    private Label backupTime;","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"     * Creates a {@code BackupCard} with the given {@code Backup}","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"    public BackupCard(Backup backup) {","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"        super(FXML);","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"        this.backup \u003d backup;","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"        index.setText(slot + String.valueOf(backup.getBackupIndex().getOneBased()));","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"        description.setText(desc + backup.getBackupDesc());","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"        backupTime.setText(time + backup.backupTimeToString());","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"            return true;","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"        if (!(other instanceof BackupCard)) {","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"dawg420"},"content":"            return false;","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"dawg420"},"content":"        BackupCard card \u003d (BackupCard) other;","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"dawg420"},"content":"        return backup.equals(card.backup);","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"dawg420":57}},{"path":"src/main/java/seedu/address/ui/BackupListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.backup.Backup;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":" * Panel containing the list of backups.","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"public class BackupListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"    private static final String FXML \u003d \"BackupListPanel.fxml\";","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(BackupListPanel.class);","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"    @FXML","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"    private ListView\u003cBackup\u003e backupListView;","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"     * Creates a {@code BackupListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"    public BackupListPanel(ObservableList\u003cBackup\u003e backupList) {","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"        super(FXML);","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"        backupListView.setItems(backupList);","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"        backupListView.setCellFactory(listView -\u003e new BackupListViewCell());","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Backup} using a {@code BackupCard}.","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"    class BackupListViewCell extends ListCell\u003cBackup\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"        protected void updateItem(Backup backup, boolean empty) {","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"            super.updateItem(backup, empty);","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"            if (empty || backup \u003d\u003d null) {","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"                setText(null);","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"            } else {","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"                setGraphic(new BackupCard(backup).getRoot());","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"dawg420":48}},{"path":"src/main/java/seedu/address/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"        } catch (CommandException | IllegalValueException e) {","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"dawg420"},"content":"        CommandResult execute(String commandText) throws CommandException, IllegalValueException;","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"dawg420":3,"-":82}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-t11-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"ongweijie7"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide for more in-depth information: \"","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"ongweijie7"},"content":"                                                  + USERGUIDE_URL;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"ongweijie7"},"content":"    public static final String UNDO_COMMAND_MESSAGE \u003d \"1) Reverts the patient records to the state\"","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"ongweijie7"},"content":"                                                          + \" before the previous command was executed:\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"ongweijie7"},"content":"                                                          + \"Format: undo\";","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"ongweijie7"},"content":"    public static final String REDO_COMMAND_MESSAGE \u003d \"2) Reverts the patient records to the state\"","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"ongweijie7"},"content":"                                                          + \" before the previous undo was executed:\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"ongweijie7"},"content":"                                                          + \"Format: redo\";","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"ongweijie7"},"content":"    public static final String ADD_COMMAND_MESSAGE \u003d \"3) Add a person to the patient records:\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"ongweijie7"},"content":"                                                         + \"Format: add n/NAME i/NRIC\"","lastModifiedDate":"2023-03-31"},{"lineNumber":32,"author":{"gitId":"ongweijie7"},"content":"                                                         + \" dob/DATE OF BIRTH\"","lastModifiedDate":"2023-03-31"},{"lineNumber":33,"author":{"gitId":"ongweijie7"},"content":"                                                         + \" p/PHONE_NUMBER a/ADDRESS\"","lastModifiedDate":"2023-03-31"},{"lineNumber":34,"author":{"gitId":"ongweijie7"},"content":"                                                         + \" d/DRUG ALLERGIES g/GENDER\"","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"ongweijie7"},"content":"                                                         + \" ad/DOCTOR\"","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"ongweijie7"},"content":"                                                         + \" [e/EMAIL] [t/TAG] [m/MEDICINE]\";","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"ongweijie7"},"content":"    public static final String EDIT_COMMAND_MESSAGE \u003d \"4) Edit an existing person in patient records\"","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"ongweijie7"},"content":"                                                          + \" based on the person\u0027s INDEX number:\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"                                                          + \"Format: edit INDEX [i/NRIC] [n/NAME] [dob/DATE OF BIRTH]\"","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"ongweijie7"},"content":"                                                          + \" [p/PHONE]\"","lastModifiedDate":"2023-03-31"},{"lineNumber":42,"author":{"gitId":"ongweijie7"},"content":"                                                          + \" [a/ADDRESS] [d/DRUG ALLERGIES]\"","lastModifiedDate":"2023-03-31"},{"lineNumber":43,"author":{"gitId":"ongweijie7"},"content":"                                                          + \" [g/GENDER] [ad/DOCTOR]\"","lastModifiedDate":"2023-03-31"},{"lineNumber":44,"author":{"gitId":"ongweijie7"},"content":"                                                          + \" [e/EMAIL] [t/TAG] [m/MEDICINE]\";","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"ongweijie7"},"content":"    public static final String DELETE_COMMAND_MESSAGE \u003d \"5) Deletes patient with the specified NRIC from\"","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"ongweijie7"},"content":"                                                            + \" the address book:\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"ongweijie7"},"content":"                                                            + \"Format: delete i/NRIC\";","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"ongweijie7"},"content":"    public static final String LIST_COMMAND_MESSAGE \u003d \"6) Lists all patients in the records system:\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"ongweijie7"},"content":"                                                          + \"Format: list\";","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"ongweijie7"},"content":"    public static final String VIEW_COMMAND_MESSAGE \u003d \"7) View a patient\u0027s record:\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"ongweijie7"},"content":"                                                          + \"Format: view i/NRIC\";","lastModifiedDate":"2023-03-31"},{"lineNumber":55,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"ongweijie7"},"content":"    public static final String FIND_COMMAND_MESSAGE \u003d \"8) Find patients according to a particular attribute:\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"ongweijie7"},"content":"                                                          + \"Format: find (i/NRIC | n/NAME | t/TAG |\"","lastModifiedDate":"2023-03-31"},{"lineNumber":58,"author":{"gitId":"ongweijie7"},"content":"                                                          + \" ad/doctor | m/MEDICINE)\";","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"ongweijie7"},"content":"    public static final String BACKUP_COMMAND_MESSAGE \u003d \"9) Backs up the patient records to specified\"","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"ongweijie7"},"content":"                                                            + \" slot represented by INDEX_NO with an optional\"","lastModifiedDate":"2023-03-31"},{"lineNumber":62,"author":{"gitId":"ongweijie7"},"content":"                                                            + \" description:\\n\"","lastModifiedDate":"2023-03-31"},{"lineNumber":63,"author":{"gitId":"ongweijie7"},"content":"                                                            + \" Format: backup INDEX_NO [b/DESCRIPTION]\";","lastModifiedDate":"2023-03-31"},{"lineNumber":64,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"ongweijie7"},"content":"    public static final String LOAD_DATA_COMMAND_MESSAGE \u003d \"10) Loads the data from a specified slot represented\"","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"ongweijie7"},"content":"                                                               + \" by an index.\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"ongweijie7"},"content":"                                                               + \" Format: load INDEX_NO\";","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"ongweijie7"},"content":"    public static final String VIEW_BACKUP_COMMAND_MESSAGE \u003d \"11) Shows all the backups available:\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"ongweijie7"},"content":"                                                                 + \"Format: viewbackups\";","lastModifiedDate":"2023-03-31"},{"lineNumber":71,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"ongweijie7"},"content":"    public static final String DELETE_BACKUP_COMMAND_MESSAGE \u003d \"12) Deletes the data from a specified slot\"","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"ongweijie7"},"content":"                                                                   + \" represented by an index.\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"ongweijie7"},"content":"                                                                   + \"Format: deletebackup INDEX_NO\";","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"ongweijie7"},"content":"    public static final String CLEAR_COMMAND_MESSAGE \u003d \"13) Purge all data in records system:\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"ongweijie7"},"content":"                                                           + \"Format: clear\";","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"ongweijie7"},"content":"    public static final String LIGHT_MODE_COMMAND_MESSAGE \u003d \"14) Switch to light mode:\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"ongweijie7"},"content":"                                                                + \"Format: light\";","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":82,"author":{"gitId":"ongweijie7"},"content":"    public static final String DARK_MODE_COMMAND_MESSAGE \u003d \"15) Switch to dark mode:\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":83,"author":{"gitId":"ongweijie7"},"content":"                                                               + \"Format: dark\";","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"ongweijie7"},"content":"    public static final String NOTE_MESSAGE \u003d \"Note that square brackets signify optional arguments.\\n\"","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"ongweijie7"},"content":"                                                  + \"Parentheses indicate that at least one of the arguments\"","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"ongweijie7"},"content":"                                                  + \" must be present.\";","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":97,"author":{"gitId":"ongweijie7"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"ongweijie7"},"content":"    private Label undoMessage;","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"ongweijie7"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"ongweijie7"},"content":"    private Label redoMessage;","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"SeanChinJunKai"},"content":"    @FXML","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"SeanChinJunKai"},"content":"    private Label addMessage;","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"SeanChinJunKai"},"content":"    @FXML","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"ongweijie7"},"content":"    private Label viewMessage;","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":109,"author":{"gitId":"SeanChinJunKai"},"content":"    @FXML","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"SeanChinJunKai"},"content":"    private Label editMessage;","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"SeanChinJunKai"},"content":"    @FXML","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"SeanChinJunKai"},"content":"    private Label deleteMessage;","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"SeanChinJunKai"},"content":"    @FXML","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"ongweijie7"},"content":"    private Label findMessage;","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"SeanChinJunKai"},"content":"    @FXML","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"SeanChinJunKai"},"content":"    private Label listMessage;","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"SeanChinJunKai"},"content":"    @FXML","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"SeanChinJunKai"},"content":"    private Label noteMessage;","lastModifiedDate":"2023-03-07"},{"lineNumber":123,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"SeanChinJunKai"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":125,"author":{"gitId":"ongweijie7"},"content":"    private Label backupMessage;","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"ongweijie7"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"ongweijie7"},"content":"    private Label loadBackupMessage;","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"ongweijie7"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"ongweijie7"},"content":"    private Label viewBackupMessage;","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"ongweijie7"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"ongweijie7"},"content":"    private Label deleteBackupMessage;","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":136,"author":{"gitId":"ongweijie7"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"ongweijie7"},"content":"    private Label lightModeMessage;","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"ongweijie7"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"ongweijie7"},"content":"    private Label darkModeMessage;","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":142,"author":{"gitId":"SeanChinJunKai"},"content":"    @FXML","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"SeanChinJunKai"},"content":"    private Label clearMessage;","lastModifiedDate":"2023-03-07"},{"lineNumber":144,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":145,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2023-03-10"},{"lineNumber":154,"author":{"gitId":"ongweijie7"},"content":"        undoMessage.setText(UNDO_COMMAND_MESSAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"ongweijie7"},"content":"        redoMessage.setText(REDO_COMMAND_MESSAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":156,"author":{"gitId":"SeanChinJunKai"},"content":"        addMessage.setText(ADD_COMMAND_MESSAGE);","lastModifiedDate":"2023-03-07"},{"lineNumber":157,"author":{"gitId":"SeanChinJunKai"},"content":"        editMessage.setText(EDIT_COMMAND_MESSAGE);","lastModifiedDate":"2023-03-07"},{"lineNumber":158,"author":{"gitId":"SeanChinJunKai"},"content":"        deleteMessage.setText(DELETE_COMMAND_MESSAGE);","lastModifiedDate":"2023-03-07"},{"lineNumber":159,"author":{"gitId":"SeanChinJunKai"},"content":"        listMessage.setText(LIST_COMMAND_MESSAGE);","lastModifiedDate":"2023-03-07"},{"lineNumber":160,"author":{"gitId":"ongweijie7"},"content":"        viewMessage.setText(VIEW_COMMAND_MESSAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":161,"author":{"gitId":"ongweijie7"},"content":"        findMessage.setText(FIND_COMMAND_MESSAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":162,"author":{"gitId":"ongweijie7"},"content":"        loadBackupMessage.setText(LOAD_DATA_COMMAND_MESSAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":163,"author":{"gitId":"ongweijie7"},"content":"        viewBackupMessage.setText(VIEW_BACKUP_COMMAND_MESSAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"ongweijie7"},"content":"        deleteBackupMessage.setText(DELETE_BACKUP_COMMAND_MESSAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"ongweijie7"},"content":"        backupMessage.setText(BACKUP_COMMAND_MESSAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"SeanChinJunKai"},"content":"        clearMessage.setText(CLEAR_COMMAND_MESSAGE);","lastModifiedDate":"2023-03-07"},{"lineNumber":167,"author":{"gitId":"ongweijie7"},"content":"        lightModeMessage.setText(LIGHT_MODE_COMMAND_MESSAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"ongweijie7"},"content":"        darkModeMessage.setText(DARK_MODE_COMMAND_MESSAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"SeanChinJunKai"},"content":"        noteMessage.setText(NOTE_MESSAGE);","lastModifiedDate":"2023-03-07"},{"lineNumber":170,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":182,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-04-09"},{"lineNumber":183,"author":{"gitId":"dawg420"},"content":"     * @throws IllegalStateException if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2023-04-10"},{"lineNumber":184,"author":{"gitId":"dawg420"},"content":"     *                               \u003cp\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":185,"author":{"gitId":"-"},"content":"     *                               if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":186,"author":{"gitId":"dawg420"},"content":"     *                               \u003cp\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     *                               if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":188,"author":{"gitId":"dawg420"},"content":"     *                               \u003cp\u003e","lastModifiedDate":"2023-04-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     *                               if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":199,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"SeanChinJunKai":32,"dawg420":6,"ongweijie7":102,"-":88}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"import static seedu.address.ui.theme.Theme.constructTheme;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"CedricPei"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"CedricPei"},"content":"import seedu.address.ui.theme.Theme;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"CedricPei"},"content":"import seedu.address.ui.theme.ThemeException;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"    private boolean isShowBackup \u003d false;","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"    private BackupListPanel backupListPanel;","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":47,"author":{"gitId":"CedricPei"},"content":"    private ViewPane viewPane;","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"CedricPei"},"content":"    private Theme theme;","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"CedricPei"},"content":"    private StackPane viewPanePlaceHolder;","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"CedricPei"},"content":"        GuiSettings guiSettings \u003d logic.getGuiSettings();","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"CedricPei"},"content":"        applyTheme(constructTheme(guiSettings.getTheme()));","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-03-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"CedricPei"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), this);","lastModifiedDate":"2023-03-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"CedricPei"},"content":"        if (logic.getAddressBook().getPersonList().size() !\u003d 0) {","lastModifiedDate":"2023-03-30"},{"lineNumber":134,"author":{"gitId":"CedricPei"},"content":"            viewPane \u003d new ViewPane(logic.getAddressBook().getPersonList().get(0));","lastModifiedDate":"2023-03-27"},{"lineNumber":135,"author":{"gitId":"CedricPei"},"content":"            viewPanePlaceHolder.getChildren().add(viewPane.getRoot());","lastModifiedDate":"2023-03-27"},{"lineNumber":136,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"CedricPei"},"content":"        applyTheme(Theme.DEFAULT_THEME);","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"dawg420"},"content":"    void newFillInnerParts() {","lastModifiedDate":"2023-03-25"},{"lineNumber":145,"author":{"gitId":"CedricPei"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList(), this);","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"dawg420"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-03-25"},{"lineNumber":147,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":148,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":149,"author":{"gitId":"dawg420"},"content":"    void fillInnerPartsBackup() throws IllegalValueException {","lastModifiedDate":"2023-03-25"},{"lineNumber":150,"author":{"gitId":"dawg420"},"content":"        backupListPanel \u003d new BackupListPanel(logic.getBackupList());","lastModifiedDate":"2023-03-25"},{"lineNumber":151,"author":{"gitId":"dawg420"},"content":"        personListPanelPlaceholder.getChildren().add(backupListPanel.getRoot());","lastModifiedDate":"2023-03-25"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":188,"author":{"gitId":"CedricPei"},"content":"            (int) primaryStage.getX(), (int) primaryStage.getY(), theme.toString());","lastModifiedDate":"2023-03-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"dawg420"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException,","lastModifiedDate":"2023-03-30"},{"lineNumber":200,"author":{"gitId":"dawg420"},"content":"                                                                        ParseException, IllegalValueException {","lastModifiedDate":"2023-03-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"CedricPei"},"content":"            String feedback \u003d commandResult.getFeedbackToUser();","lastModifiedDate":"2023-03-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":215,"author":{"gitId":"dawg420"},"content":"            if (commandResult.isShowBackups()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":216,"author":{"gitId":"dawg420"},"content":"                fillInnerPartsBackup();","lastModifiedDate":"2023-03-25"},{"lineNumber":217,"author":{"gitId":"dawg420"},"content":"                isShowBackup \u003d true;","lastModifiedDate":"2023-03-25"},{"lineNumber":218,"author":{"gitId":"CedricPei"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":219,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":220,"author":{"gitId":"dawg420"},"content":"            if (!commandResult.isShowBackups()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":221,"author":{"gitId":"dawg420"},"content":"                newFillInnerParts();","lastModifiedDate":"2023-03-25"},{"lineNumber":222,"author":{"gitId":"dawg420"},"content":"                isShowBackup \u003d false;","lastModifiedDate":"2023-03-25"},{"lineNumber":223,"author":{"gitId":"dawg420"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":224,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":225,"author":{"gitId":"CedricPei"},"content":"            if (commandResult.isShowDark()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":226,"author":{"gitId":"CedricPei"},"content":"                applyDarkTheme();","lastModifiedDate":"2023-03-28"},{"lineNumber":227,"author":{"gitId":"CedricPei"},"content":"            }","lastModifiedDate":"2023-03-28"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"CedricPei"},"content":"            if (commandResult.isShowLight()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":230,"author":{"gitId":"CedricPei"},"content":"                applyLightTheme();","lastModifiedDate":"2023-03-30"},{"lineNumber":231,"author":{"gitId":"CedricPei"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":232,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":233,"author":{"gitId":"CedricPei"},"content":"            handleUndoRedo(feedback);","lastModifiedDate":"2023-04-01"},{"lineNumber":234,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":235,"author":{"gitId":"CedricPei"},"content":"            handleViewPane(feedback, commandText);","lastModifiedDate":"2023-03-30"},{"lineNumber":236,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":244,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":245,"author":{"gitId":"CedricPei"},"content":"    public CommandResult execute(String commandText) throws CommandException, IllegalValueException {","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"CedricPei"},"content":"        return executeCommand(commandText);","lastModifiedDate":"2023-03-27"},{"lineNumber":247,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":249,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-30"},{"lineNumber":250,"author":{"gitId":"CedricPei"},"content":"     * Handles all view pane actions.","lastModifiedDate":"2023-03-30"},{"lineNumber":251,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-04-10"},{"lineNumber":252,"author":{"gitId":"CedricPei"},"content":"     * @param feedback","lastModifiedDate":"2023-03-30"},{"lineNumber":253,"author":{"gitId":"CedricPei"},"content":"     * @param commandText","lastModifiedDate":"2023-03-30"},{"lineNumber":254,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-30"},{"lineNumber":255,"author":{"gitId":"CedricPei"},"content":"    public void handleViewPane(String feedback, String commandText) {","lastModifiedDate":"2023-03-30"},{"lineNumber":256,"author":{"gitId":"CedricPei"},"content":"        viewPanePlaceHolder.getChildren().clear();","lastModifiedDate":"2023-04-01"},{"lineNumber":257,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":258,"author":{"gitId":"CedricPei"},"content":"        if (feedback.equals(ViewCommand.MESSAGE_VIEW_PERSON_SUCCESS)) {","lastModifiedDate":"2023-03-30"},{"lineNumber":259,"author":{"gitId":"CedricPei"},"content":"            personListPanel \u003d new PersonListPanel(logic.getAddressBook().getPersonList(), this);","lastModifiedDate":"2023-04-01"},{"lineNumber":260,"author":{"gitId":"CedricPei"},"content":"            personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-04-01"},{"lineNumber":261,"author":{"gitId":"CedricPei"},"content":"            viewPane \u003d new ViewPane(logic.getFilteredPersonList().get(0));","lastModifiedDate":"2023-04-01"},{"lineNumber":262,"author":{"gitId":"CedricPei"},"content":"            viewPanePlaceHolder.getChildren().add(viewPane.getRoot());","lastModifiedDate":"2023-04-01"},{"lineNumber":263,"author":{"gitId":"dawg420"},"content":"            logic.updateFilteredPersonList(x -\u003e true);","lastModifiedDate":"2023-04-10"},{"lineNumber":264,"author":{"gitId":"CedricPei"},"content":"        } else if (feedback.startsWith(\"Edited Person:\")) {","lastModifiedDate":"2023-04-01"},{"lineNumber":265,"author":{"gitId":"CedricPei"},"content":"            int index \u003d Character.getNumericValue(commandText.charAt(5));","lastModifiedDate":"2023-04-01"},{"lineNumber":266,"author":{"gitId":"CedricPei"},"content":"            viewPane \u003d new ViewPane(logic.getAddressBook().getPersonList().get(index - 1));","lastModifiedDate":"2023-04-01"},{"lineNumber":267,"author":{"gitId":"CedricPei"},"content":"            viewPanePlaceHolder.getChildren().add(viewPane.getRoot());","lastModifiedDate":"2023-04-01"},{"lineNumber":268,"author":{"gitId":"CedricPei"},"content":"        } else if (feedback.startsWith(\"New person\")) {","lastModifiedDate":"2023-04-01"},{"lineNumber":269,"author":{"gitId":"CedricPei"},"content":"            int len \u003d logic.getAddressBook().getPersonList().size();","lastModifiedDate":"2023-04-01"},{"lineNumber":270,"author":{"gitId":"CedricPei"},"content":"            viewPane \u003d new ViewPane(logic.getAddressBook().getPersonList().get(len - 1));","lastModifiedDate":"2023-04-01"},{"lineNumber":271,"author":{"gitId":"CedricPei"},"content":"            viewPanePlaceHolder.getChildren().add(viewPane.getRoot());","lastModifiedDate":"2023-04-01"},{"lineNumber":272,"author":{"gitId":"CedricPei"},"content":"        } else if (logic.getAddressBook().getPersonList().size() \u003e 0) {","lastModifiedDate":"2023-04-01"},{"lineNumber":273,"author":{"gitId":"CedricPei"},"content":"            viewPane \u003d new ViewPane(logic.getAddressBook().getPersonList().get(0));","lastModifiedDate":"2023-03-30"},{"lineNumber":274,"author":{"gitId":"CedricPei"},"content":"            viewPanePlaceHolder.getChildren().add(viewPane.getRoot());","lastModifiedDate":"2023-03-30"},{"lineNumber":275,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-30"},{"lineNumber":276,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":277,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":278,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-04-01"},{"lineNumber":279,"author":{"gitId":"CedricPei"},"content":"     * Updates the person list panel after the action \u0027undo\u0027 or \u0027redo\u0027","lastModifiedDate":"2023-04-01"},{"lineNumber":280,"author":{"gitId":"dawg420"},"content":"     *","lastModifiedDate":"2023-04-10"},{"lineNumber":281,"author":{"gitId":"CedricPei"},"content":"     * @param feedback","lastModifiedDate":"2023-04-01"},{"lineNumber":282,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-04-01"},{"lineNumber":283,"author":{"gitId":"CedricPei"},"content":"    public void handleUndoRedo(String feedback) {","lastModifiedDate":"2023-04-01"},{"lineNumber":284,"author":{"gitId":"CedricPei"},"content":"        if (feedback.startsWith(\"Undo\") || feedback.startsWith(\"Redo\")) {","lastModifiedDate":"2023-04-01"},{"lineNumber":285,"author":{"gitId":"CedricPei"},"content":"            personListPanel \u003d new PersonListPanel(logic.getAddressBook().getPersonList(), this);","lastModifiedDate":"2023-04-01"},{"lineNumber":286,"author":{"gitId":"CedricPei"},"content":"            personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-04-01"},{"lineNumber":287,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-04-01"},{"lineNumber":288,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-04-01"},{"lineNumber":289,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":290,"author":{"gitId":"CedricPei"},"content":"    private void applyTheme(Theme newTheme) {","lastModifiedDate":"2023-03-19"},{"lineNumber":291,"author":{"gitId":"CedricPei"},"content":"        ObservableList\u003cString\u003e uiTheme \u003d primaryStage.getScene().getStylesheets();","lastModifiedDate":"2023-03-19"},{"lineNumber":292,"author":{"gitId":"CedricPei"},"content":"        uiTheme.clear();","lastModifiedDate":"2023-03-19"},{"lineNumber":293,"author":{"gitId":"CedricPei"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":294,"author":{"gitId":"CedricPei"},"content":"            String switchedTheme \u003d newTheme.getTheme();","lastModifiedDate":"2023-03-19"},{"lineNumber":295,"author":{"gitId":"CedricPei"},"content":"            uiTheme.add(switchedTheme);","lastModifiedDate":"2023-03-19"},{"lineNumber":296,"author":{"gitId":"CedricPei"},"content":"            uiTheme.add(Theme.EXTENSION.getTheme());","lastModifiedDate":"2023-03-19"},{"lineNumber":297,"author":{"gitId":"CedricPei"},"content":"            theme \u003d newTheme;","lastModifiedDate":"2023-03-19"},{"lineNumber":298,"author":{"gitId":"CedricPei"},"content":"            logger.info(String.format(Theme.SUCCESS_MESSAGE, theme));","lastModifiedDate":"2023-03-19"},{"lineNumber":299,"author":{"gitId":"CedricPei"},"content":"        } catch (ThemeException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":300,"author":{"gitId":"CedricPei"},"content":"            logger.info(e.getMessage());","lastModifiedDate":"2023-03-19"},{"lineNumber":301,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":302,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":303,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":304,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":305,"author":{"gitId":"dawg420"},"content":"     * Sets theme to Light Theme.","lastModifiedDate":"2023-03-25"},{"lineNumber":306,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":307,"author":{"gitId":"CedricPei"},"content":"    @FXML","lastModifiedDate":"2023-03-19"},{"lineNumber":308,"author":{"gitId":"CedricPei"},"content":"    public void applyLightTheme() {","lastModifiedDate":"2023-03-19"},{"lineNumber":309,"author":{"gitId":"CedricPei"},"content":"        applyTheme(Theme.LIGHT);","lastModifiedDate":"2023-03-19"},{"lineNumber":310,"author":{"gitId":"CedricPei"},"content":"        resultDisplay.setFeedbackToUser(\"Switched to light mode!\");","lastModifiedDate":"2023-03-19"},{"lineNumber":311,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":312,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":313,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":314,"author":{"gitId":"dawg420"},"content":"     * Sets theme to Dark Theme.","lastModifiedDate":"2023-03-25"},{"lineNumber":315,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":316,"author":{"gitId":"CedricPei"},"content":"    @FXML","lastModifiedDate":"2023-03-19"},{"lineNumber":317,"author":{"gitId":"CedricPei"},"content":"    public void applyDarkTheme() {","lastModifiedDate":"2023-03-19"},{"lineNumber":318,"author":{"gitId":"CedricPei"},"content":"        applyTheme(Theme.DARK);","lastModifiedDate":"2023-03-19"},{"lineNumber":319,"author":{"gitId":"CedricPei"},"content":"        resultDisplay.setFeedbackToUser(\"Switched to dark mode!\");","lastModifiedDate":"2023-03-19"},{"lineNumber":320,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":321,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"CedricPei":104,"dawg420":30,"-":188}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":"import javafx.scene.input.MouseEvent;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"CedricPei"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":31,"author":{"gitId":"CedricPei"},"content":"    public final MainWindow mainWindow;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"    private final String attendingDoctor \u003d \"Attending Doctor: \";","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"    private Label nric;","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"ongweijie7"},"content":"    private Label gender;","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"ongweijie7"},"content":"    @FXML","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"Creationsv2"},"content":"    private Label doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":56,"author":{"gitId":"CedricPei"},"content":"    public PersonCard(Person person, int displayedIndex, MainWindow mainWindow) {","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":59,"author":{"gitId":"CedricPei"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"CedricPei"},"content":"        cardPane.addEventHandler(MouseEvent.MOUSE_CLICKED, viewPerson());","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"Creationsv2"},"content":"        nric.setText(person.getNric().fullNric);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"ongweijie7"},"content":"        gender.setText(person.getGender().gender);","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"Creationsv2"},"content":"        doctor.setText(attendingDoctor + person.getDoctor().doctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"CedricPei"},"content":"    private EventHandler\u003cMouseEvent\u003e viewPerson() {","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"CedricPei"},"content":"        return new EventHandler\u003cMouseEvent\u003e() {","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"CedricPei"},"content":"            @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"CedricPei"},"content":"            public void handle(MouseEvent clickEvent) {","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"CedricPei"},"content":"                try {","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"CedricPei"},"content":"                    mainWindow.execute(\"view i/\" + person.getNric().fullNric);","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"CedricPei"},"content":"                } catch (CommandException | IllegalValueException e) {","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"CedricPei"},"content":"                    e.printStackTrace();","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"CedricPei"},"content":"                }","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"CedricPei"},"content":"            };","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"CedricPei"},"content":"        };","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"CedricPei"},"content":"    };","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"CedricPei":21,"ongweijie7":3,"Creationsv2":7,"-":73}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"    private final MainWindow mainWindow;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"CedricPei"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList, MainWindow mainWindow) {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"CedricPei"},"content":"        this.mainWindow \u003d mainWindow;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"CedricPei"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1, mainWindow).getRoot());","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"CedricPei":5,"-":47}},{"path":"src/main/java/seedu/address/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"     * Make the ResultDisplay break lines automatically.","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"CedricPei"},"content":"        resultDisplay.setWrapText(true);","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"CedricPei"},"content":"        resultDisplay.setEditable(false);","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"CedricPei":5,"-":28}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/hospisearch_32.png\";","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"SeanChinJunKai":1,"-":87}},{"path":"src/main/java/seedu/address/ui/ViewPane.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricPei"},"content":"package seedu.address.ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"CedricPei"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"CedricPei"},"content":"/**","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"CedricPei"},"content":" */","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"CedricPei"},"content":"public class ViewPane extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"    private static final String FXML \u003d \"ViewPane.fxml\";","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"CedricPei"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"CedricPei"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"CedricPei"},"content":"     *","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"CedricPei"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"CedricPei"},"content":"    public final Person person;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"CedricPei"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"CedricPei"},"content":"    private HBox viewPane;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"CedricPei"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"CedricPei"},"content":"    private Label nric;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"CedricPei"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"CedricPei"},"content":"    private Label name;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"CedricPei"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"ongweijie7"},"content":"    private Label date;","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"ongweijie7"},"content":"    @FXML","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"CedricPei"},"content":"    private Label doctor;","lastModifiedDate":"2023-03-30"},{"lineNumber":39,"author":{"gitId":"CedricPei"},"content":"    @FXML","lastModifiedDate":"2023-03-30"},{"lineNumber":40,"author":{"gitId":"CedricPei"},"content":"    private Label phone;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"CedricPei"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"CedricPei"},"content":"    private Label address;","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"CedricPei"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"CedricPei"},"content":"    private Label email;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"CedricPei"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"CedricPei"},"content":"    private Label gender;","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"CedricPei"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"CedricPei"},"content":"    private Label drugAllergy;","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"CedricPei"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"CedricPei"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"CedricPei"},"content":"    @FXML","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"CedricPei"},"content":"    private FlowPane medicines;","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"CedricPei"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"CedricPei"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"CedricPei"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"CedricPei"},"content":"    public ViewPane(Person person) {","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"CedricPei"},"content":"        super(FXML);","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"CedricPei"},"content":"        this.person \u003d person;","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"CedricPei"},"content":"        nric.setText(\"Nric: \" + person.getNric().fullNric);","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"CedricPei"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"CedricPei"},"content":"        date.setText(\"Birth Date: \" + person.getDate().dateOfBirth);","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"CedricPei"},"content":"        doctor.setText(\"Attending Doctor: \" + person.getDoctor());","lastModifiedDate":"2023-03-30"},{"lineNumber":64,"author":{"gitId":"CedricPei"},"content":"        phone.setText(\"Phone Number: \" + person.getPhone().value);","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"CedricPei"},"content":"        address.setText(\"Address: \" + person.getAddress().value);","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"CedricPei"},"content":"        gender.setText(\"Gender: \" + person.getGender().gender);","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"CedricPei"},"content":"        drugAllergy.setText(\"Drug Allergy: \" + person.getDrugAllergy().value);","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"CedricPei"},"content":"        email.setText(\"Email: \" + person.getEmail().value);","lastModifiedDate":"2023-03-27"},{"lineNumber":69,"author":{"gitId":"CedricPei"},"content":"        address.setWrapText(true);","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"CedricPei"},"content":"        person.getTags().stream()","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"CedricPei"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"CedricPei"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"CedricPei"},"content":"        person.getMedicines().stream()","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"CedricPei"},"content":"                .sorted(Comparator.comparing(medicine -\u003e medicine.medicineName))","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"CedricPei"},"content":"                .forEach(medicine -\u003e medicines.getChildren().add(new Label(medicine.medicineName)));","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"CedricPei"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"CedricPei"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"CedricPei"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"CedricPei"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"CedricPei"},"content":"            return true;","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"CedricPei"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"CedricPei"},"content":"        if (!(other instanceof ViewPane)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"CedricPei"},"content":"            return false;","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"CedricPei"},"content":"        // state check","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"CedricPei"},"content":"        ViewPane viewPane \u003d (ViewPane) other;","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"CedricPei"},"content":"        return person.equals(viewPane.person);","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":94,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"CedricPei":92,"ongweijie7":2}},{"path":"src/main/java/seedu/address/ui/theme/Theme.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricPei"},"content":"package seedu.address.ui.theme;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":" * Theme represents the stylesheet being used for the GUI.","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"// @@author junlong4321-reused","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"// Reused from https://github.com/junlong4321/tp/blob/master/src/main/java/tutorspet/ui/stylesheet/Stylesheet.java","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"// with modifications","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public enum Theme {","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    LIGHT(\"LightTheme.css\"),","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    DARK(\"DarkTheme.css\"),","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    EXTENSION(\"Extensions.css\");","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String SUCCESS_MESSAGE \u003d \"Theme switched to: %1$s.\";","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String ERROR_MESSAGE \u003d \"Theme cannot be found: %1$s.\";","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Theme DEFAULT_THEME \u003d LIGHT;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String DIRECTORY \u003d \"/view/\";","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final String path;","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    Theme(String path) {","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.path \u003d path;","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code Theme} object given a {@code String}.","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * If given {@code String} does not match any of the themes,","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * default will be used.","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static Theme constructTheme(String themeSupplied) {","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Theme[] themes \u003d Theme.values();","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        for (Theme theme: themes) {","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            if (themeSupplied.equals(theme.path)) {","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                return theme;","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return DEFAULT_THEME;","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String getTheme() throws ThemeException {","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            return getClass().getResource(DIRECTORY + path).toExternalForm();","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        } catch (NullPointerException e) {","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new ThemeException(String.format(ERROR_MESSAGE, path));","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return path;","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"CedricPei":5,"-":48}},{"path":"src/main/java/seedu/address/ui/theme/ThemeException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricPei"},"content":"package seedu.address.ui.theme;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":" * Throws an error when a css theme does not exist.","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":"public class ThemeException extends Exception {","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"    public ThemeException(String message) {","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":"        super(message);","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"CedricPei":10}},{"path":"src/main/resources/view/BackupCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"    \u003cGridPane prefHeight\u003d\"106.0\" prefWidth\u003d\"346.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"86.0\" prefHeight\u003d\"106.0\" prefWidth\u003d\"243.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"         \u003cHBox prefHeight\u003d\"20.0\" prefWidth\u003d\"326.0\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"                   \u003cLabel fx:id\u003d\"index\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"                       \u003cminWidth\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"                           \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"                           \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"                       \u003c/minWidth\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"                   \u003c/Label\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"                \u003cLabel fx:id\u003d\"description\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$desc\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"         \u003cHBox prefHeight\u003d\"23.0\" prefWidth\u003d\"326.0\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"                   \u003cLabel fx:id\u003d\"backupTime\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$time\" /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"         \u003c/HBox\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"dawg420":44}},{"path":"src/main/resources/view/BackupListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"    \u003cListView fx:id\u003d\"backupListView\" prefHeight\u003d\"427.0\" prefWidth\u003d\"248.0\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"dawg420":8}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":"\u003cStackPane prefHeight\u003d\"26.0\" prefWidth\u003d\"322.0\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" prefHeight\u003d\"26.0\" prefWidth\u003d\"239.0\" promptText\u003d\"Enter command here...\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"CedricPei":2,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-26"},{"lineNumber":125,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-03-27"},{"lineNumber":132,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-26"},{"lineNumber":152,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 11.5pt;","lastModifiedDate":"2023-03-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-19"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-03-19"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-19"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-03-19"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-19"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"dawg420"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-03-26"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2023-03-19"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-19"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-19"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2023-03-19"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2023-03-19"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2023-03-19"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2023-03-19"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"dawg420"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-03-26"},{"lineNumber":327,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-20"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2023-03-19"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-03-20"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":354,"author":{"gitId":"CedricPei"},"content":"#viewPane {","lastModifiedDate":"2023-03-27"},{"lineNumber":355,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-27"},{"lineNumber":356,"author":{"gitId":"CedricPei"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":357,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":358,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":359,"author":{"gitId":"dawg420"},"content":"#medicines {","lastModifiedDate":"2023-03-26"},{"lineNumber":360,"author":{"gitId":"dawg420"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-26"},{"lineNumber":361,"author":{"gitId":"dawg420"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-26"},{"lineNumber":362,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-26"},{"lineNumber":363,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":364,"author":{"gitId":"dawg420"},"content":"#medicines .label {","lastModifiedDate":"2023-03-26"},{"lineNumber":365,"author":{"gitId":"dawg420"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-26"},{"lineNumber":366,"author":{"gitId":"dawg420"},"content":"    -fx-background-color: #92572b;","lastModifiedDate":"2023-03-26"},{"lineNumber":367,"author":{"gitId":"dawg420"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-26"},{"lineNumber":368,"author":{"gitId":"dawg420"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-26"},{"lineNumber":369,"author":{"gitId":"dawg420"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-26"},{"lineNumber":370,"author":{"gitId":"dawg420"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-03-26"},{"lineNumber":371,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"CedricPei":14,"dawg420":14,"-":343}},{"path":"src/main/resources/view/HelpWindow.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ongweijie7"},"content":"#undoMessage, #redoMessage, #addMessage, #editMessage, #deleteMessage, #listMessage, #viewMessage,","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"ongweijie7"},"content":"#findMessage, #backupMessage, #loadBackupMessage, #viewBackupMessage, #deleteBackupMessage,","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"ongweijie7"},"content":"#clearMessage, #lightModeMessage, #darkModeMessage, #noteMessage, #helpMessage {","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2022-01-02"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"    -fx-padding: 10 0 0 0;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"#noteMessage {","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"    -fx-text-fill:red;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":12,"author":{"gitId":"-"},"content":"#copyButton {","lastModifiedDate":"2022-01-02"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-background-color: dimgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"#copyButton:hover {","lastModifiedDate":"2022-01-02"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    -fx-background-color: gray;","lastModifiedDate":"2022-01-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"#copyButton:armed {","lastModifiedDate":"2022-01-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-background-color: darkgray;","lastModifiedDate":"2022-01-02"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2022-01-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2022-01-02"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"#commandListContainer {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2022-01-02"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-08-28"}],"authorContributionMap":{"SeanChinJunKai":7,"ongweijie7":3,"-":17}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"      \u003cHBox alignment\u003d\"BOTTOM_RIGHT\" fx:id\u003d\"commandListContainer\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"        \u003cVBox\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"ongweijie7"},"content":"          \u003cLabel fx:id\u003d\"undoMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"ongweijie7"},"content":"          \u003cLabel fx:id\u003d\"redoMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"ongweijie7"},"content":"          \u003cLabel fx:id\u003d\"addMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"          \u003cLabel fx:id\u003d\"editMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"          \u003cLabel fx:id\u003d\"deleteMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"ongweijie7"},"content":"          \u003cLabel fx:id\u003d\"listMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"ongweijie7"},"content":"          \u003cLabel fx:id\u003d\"viewMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"ongweijie7"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"ongweijie7"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"ongweijie7"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"ongweijie7"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"ongweijie7"},"content":"          \u003cLabel fx:id\u003d\"findMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"ongweijie7"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"ongweijie7"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"ongweijie7"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"ongweijie7"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"ongweijie7"},"content":"          \u003cLabel fx:id\u003d\"backupMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"SeanChinJunKai"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"SeanChinJunKai"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"SeanChinJunKai"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"ongweijie7"},"content":"          \u003cLabel fx:id\u003d\"loadBackupMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"ongweijie7"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"ongweijie7"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"ongweijie7"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"ongweijie7"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"ongweijie7"},"content":"          \u003cLabel fx:id\u003d\"viewBackupMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"ongweijie7"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"ongweijie7"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"ongweijie7"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"ongweijie7"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"ongweijie7"},"content":"          \u003cLabel fx:id\u003d\"deleteBackupMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"SeanChinJunKai"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"SeanChinJunKai"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"SeanChinJunKai"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":83,"author":{"gitId":"SeanChinJunKai"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":84,"author":{"gitId":"SeanChinJunKai"},"content":"          \u003cLabel fx:id\u003d\"clearMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":85,"author":{"gitId":"SeanChinJunKai"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":86,"author":{"gitId":"SeanChinJunKai"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"SeanChinJunKai"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"SeanChinJunKai"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"ongweijie7"},"content":"          \u003cLabel fx:id\u003d\"lightModeMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"ongweijie7"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"ongweijie7"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"ongweijie7"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"ongweijie7"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"ongweijie7"},"content":"          \u003cLabel fx:id\u003d\"darkModeMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"ongweijie7"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"ongweijie7"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"ongweijie7"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"ongweijie7"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"SeanChinJunKai"},"content":"          \u003cLabel fx:id\u003d\"noteMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"SeanChinJunKai"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"SeanChinJunKai"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"SeanChinJunKai"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"SeanChinJunKai"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":109,"author":{"gitId":"SeanChinJunKai"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"          \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"          \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":116,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":123,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"CedricPei":1,"SeanChinJunKai":42,"ongweijie7":36,"-":45}},{"path":"src/main/resources/view/LightTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricPei"},"content":".background {","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: derive(white, 20%);","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"    background-color: white; /* Used in the default.html file */","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":".label {","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"    -fx-opacity: 0.7;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":".label-bright {","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"CedricPei"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":".label-header {","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"CedricPei"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"CedricPei"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"CedricPei"},"content":".text-field {","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"CedricPei"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"CedricPei"},"content":".tab-pane {","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"CedricPei"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"CedricPei"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"CedricPei"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"CedricPei"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"CedricPei"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"CedricPei"},"content":".table-view {","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"CedricPei"},"content":"    -fx-base: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"CedricPei"},"content":"    -fx-control-inner-background: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"CedricPei"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"CedricPei"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2023-03-19"},{"lineNumber":48,"author":{"gitId":"CedricPei"},"content":"    -fx-padding: 5;","lastModifiedDate":"2023-03-19"},{"lineNumber":49,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":50,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":51,"author":{"gitId":"CedricPei"},"content":".table-view .column-header-background {","lastModifiedDate":"2023-03-19"},{"lineNumber":52,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-19"},{"lineNumber":53,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":55,"author":{"gitId":"CedricPei"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"CedricPei"},"content":"    -fx-size: 35;","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"CedricPei"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":58,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"CedricPei"},"content":"    -fx-border-color:","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"CedricPei"},"content":"        transparent","lastModifiedDate":"2023-03-19"},{"lineNumber":61,"author":{"gitId":"CedricPei"},"content":"        transparent","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"CedricPei"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"CedricPei"},"content":"        transparent;","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"CedricPei"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"CedricPei"},"content":".table-view .column-header .label {","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"CedricPei"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-19"},{"lineNumber":70,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":71,"author":{"gitId":"CedricPei"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2023-03-19"},{"lineNumber":72,"author":{"gitId":"CedricPei"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2023-03-19"},{"lineNumber":73,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":74,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":75,"author":{"gitId":"CedricPei"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2023-03-19"},{"lineNumber":76,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"CedricPei"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: derive(white, 20%);","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"CedricPei"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"CedricPei"},"content":".split-pane {","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"CedricPei"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"CedricPei"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-19"},{"lineNumber":87,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: derive(white, 20%);","lastModifiedDate":"2023-03-19"},{"lineNumber":88,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":89,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"CedricPei"},"content":".list-view {","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"CedricPei"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"CedricPei"},"content":"    -fx-padding: 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: #C5CDCB;","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"CedricPei"},"content":".list-cell {","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"CedricPei"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"CedricPei"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"CedricPei"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: #DDD7D5;","lastModifiedDate":"2023-03-19"},{"lineNumber":101,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":102,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":103,"author":{"gitId":"CedricPei"},"content":".list-cell:filled:even {","lastModifiedDate":"2023-03-19"},{"lineNumber":104,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: #DEFCF9;","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":106,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":107,"author":{"gitId":"CedricPei"},"content":".list-cell:filled:odd {","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: #AAE3E2;","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":110,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":111,"author":{"gitId":"CedricPei"},"content":".list-cell:filled:selected {","lastModifiedDate":"2023-03-19"},{"lineNumber":112,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: #F5ECD3;","lastModifiedDate":"2023-03-19"},{"lineNumber":113,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":114,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":115,"author":{"gitId":"CedricPei"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2023-03-19"},{"lineNumber":116,"author":{"gitId":"CedricPei"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2023-03-19"},{"lineNumber":117,"author":{"gitId":"CedricPei"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-19"},{"lineNumber":118,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":120,"author":{"gitId":"CedricPei"},"content":".list-cell .label {","lastModifiedDate":"2023-03-19"},{"lineNumber":121,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-19"},{"lineNumber":122,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"CedricPei"},"content":".cell_big_label {","lastModifiedDate":"2023-03-19"},{"lineNumber":125,"author":{"gitId":"dawg420"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2023-03-26"},{"lineNumber":126,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-03-19"},{"lineNumber":127,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-03-19"},{"lineNumber":128,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":129,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":130,"author":{"gitId":"CedricPei"},"content":".cell_small_label {","lastModifiedDate":"2023-03-19"},{"lineNumber":131,"author":{"gitId":"CedricPei"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-03-19"},{"lineNumber":132,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 15px;","lastModifiedDate":"2023-03-27"},{"lineNumber":133,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2023-03-19"},{"lineNumber":134,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"CedricPei"},"content":".stack-pane {","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"CedricPei"},"content":"     -fx-background-color: derive(#DCE5E6, 20%);","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"CedricPei"},"content":".pane-with-border {","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"CedricPei"},"content":"     -fx-background-color: derive(white, 20%);","lastModifiedDate":"2023-03-19"},{"lineNumber":142,"author":{"gitId":"CedricPei"},"content":"     -fx-border-color: derive(black, 40%);","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"CedricPei"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2023-03-19"},{"lineNumber":144,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":145,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":146,"author":{"gitId":"CedricPei"},"content":".status-bar {","lastModifiedDate":"2023-03-19"},{"lineNumber":147,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2023-03-19"},{"lineNumber":148,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":149,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":150,"author":{"gitId":"CedricPei"},"content":".result-display {","lastModifiedDate":"2023-03-19"},{"lineNumber":151,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: #DDF0DA;","lastModifiedDate":"2023-03-19"},{"lineNumber":152,"author":{"gitId":"dawg420"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-26"},{"lineNumber":153,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 11.5pt;","lastModifiedDate":"2023-03-19"},{"lineNumber":154,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: #820000;","lastModifiedDate":"2023-03-19"},{"lineNumber":155,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":156,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":157,"author":{"gitId":"CedricPei"},"content":".result-display .label {","lastModifiedDate":"2023-03-19"},{"lineNumber":158,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2023-03-19"},{"lineNumber":159,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":160,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":161,"author":{"gitId":"CedricPei"},"content":".status-bar .label {","lastModifiedDate":"2023-03-19"},{"lineNumber":162,"author":{"gitId":"CedricPei"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2023-03-19"},{"lineNumber":163,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":164,"author":{"gitId":"CedricPei"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2023-03-19"},{"lineNumber":165,"author":{"gitId":"CedricPei"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2023-03-19"},{"lineNumber":166,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":167,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":168,"author":{"gitId":"CedricPei"},"content":".status-bar-with-border {","lastModifiedDate":"2023-03-19"},{"lineNumber":169,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: derive(white, 30%);","lastModifiedDate":"2023-03-19"},{"lineNumber":170,"author":{"gitId":"CedricPei"},"content":"    -fx-border-color: derive(white, 25%);","lastModifiedDate":"2023-03-19"},{"lineNumber":171,"author":{"gitId":"CedricPei"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-19"},{"lineNumber":172,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":173,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":174,"author":{"gitId":"CedricPei"},"content":".status-bar-with-border .label {","lastModifiedDate":"2023-03-19"},{"lineNumber":175,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":176,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":177,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":178,"author":{"gitId":"CedricPei"},"content":".grid-pane {","lastModifiedDate":"2023-03-19"},{"lineNumber":179,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: derive(white, 30%);","lastModifiedDate":"2023-03-19"},{"lineNumber":180,"author":{"gitId":"CedricPei"},"content":"    -fx-border-color: derive(white, 30%);","lastModifiedDate":"2023-03-19"},{"lineNumber":181,"author":{"gitId":"CedricPei"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2023-03-19"},{"lineNumber":182,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":183,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":184,"author":{"gitId":"CedricPei"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2023-03-19"},{"lineNumber":185,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: derive(white, 30%);","lastModifiedDate":"2023-03-19"},{"lineNumber":186,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":187,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":188,"author":{"gitId":"CedricPei"},"content":".context-menu {","lastModifiedDate":"2023-03-19"},{"lineNumber":189,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: derive(black, 50%);","lastModifiedDate":"2023-03-19"},{"lineNumber":190,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":191,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":192,"author":{"gitId":"CedricPei"},"content":".context-menu .label {","lastModifiedDate":"2023-03-19"},{"lineNumber":193,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":194,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":195,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":196,"author":{"gitId":"CedricPei"},"content":".menu-bar {","lastModifiedDate":"2023-03-19"},{"lineNumber":197,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: derive(#1d1d1d, 20%); /* NO CHANGE */","lastModifiedDate":"2023-03-19"},{"lineNumber":198,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":199,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":200,"author":{"gitId":"CedricPei"},"content":".menu-bar .label {","lastModifiedDate":"2023-03-19"},{"lineNumber":201,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2023-03-19"},{"lineNumber":202,"author":{"gitId":"dawg420"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-03-26"},{"lineNumber":203,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":204,"author":{"gitId":"CedricPei"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-19"},{"lineNumber":205,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":206,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":207,"author":{"gitId":"CedricPei"},"content":".menu .left-container {","lastModifiedDate":"2023-03-19"},{"lineNumber":208,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":209,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":210,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":211,"author":{"gitId":"CedricPei"},"content":"/*","lastModifiedDate":"2023-03-19"},{"lineNumber":212,"author":{"gitId":"CedricPei"},"content":" * Metro style Push Button","lastModifiedDate":"2023-03-19"},{"lineNumber":213,"author":{"gitId":"CedricPei"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2023-03-19"},{"lineNumber":214,"author":{"gitId":"CedricPei"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2023-03-19"},{"lineNumber":215,"author":{"gitId":"CedricPei"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":216,"author":{"gitId":"CedricPei"},"content":".button {","lastModifiedDate":"2023-03-19"},{"lineNumber":217,"author":{"gitId":"CedricPei"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2023-03-19"},{"lineNumber":218,"author":{"gitId":"CedricPei"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2023-03-19"},{"lineNumber":219,"author":{"gitId":"CedricPei"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2023-03-19"},{"lineNumber":220,"author":{"gitId":"CedricPei"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":221,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-19"},{"lineNumber":222,"author":{"gitId":"CedricPei"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-03-19"},{"lineNumber":223,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2023-03-19"},{"lineNumber":224,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2023-03-19"},{"lineNumber":225,"author":{"gitId":"CedricPei"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2023-03-19"},{"lineNumber":226,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":227,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":228,"author":{"gitId":"CedricPei"},"content":".button:hover {","lastModifiedDate":"2023-03-19"},{"lineNumber":229,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2023-03-19"},{"lineNumber":230,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":231,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":232,"author":{"gitId":"CedricPei"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2023-03-19"},{"lineNumber":233,"author":{"gitId":"CedricPei"},"content":"  -fx-background-color: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":234,"author":{"gitId":"CedricPei"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2023-03-19"},{"lineNumber":235,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":236,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":237,"author":{"gitId":"CedricPei"},"content":".button:focused {","lastModifiedDate":"2023-03-19"},{"lineNumber":238,"author":{"gitId":"CedricPei"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2023-03-19"},{"lineNumber":239,"author":{"gitId":"CedricPei"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2023-03-19"},{"lineNumber":240,"author":{"gitId":"CedricPei"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2023-03-19"},{"lineNumber":241,"author":{"gitId":"CedricPei"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":242,"author":{"gitId":"CedricPei"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":243,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":244,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":245,"author":{"gitId":"CedricPei"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2023-03-19"},{"lineNumber":246,"author":{"gitId":"CedricPei"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2023-03-19"},{"lineNumber":247,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-19"},{"lineNumber":248,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":249,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":250,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":251,"author":{"gitId":"CedricPei"},"content":".button:default {","lastModifiedDate":"2023-03-19"},{"lineNumber":252,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2023-03-19"},{"lineNumber":253,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2023-03-19"},{"lineNumber":254,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":255,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":256,"author":{"gitId":"CedricPei"},"content":".button:default:hover {","lastModifiedDate":"2023-03-19"},{"lineNumber":257,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2023-03-19"},{"lineNumber":258,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":259,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":260,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":261,"author":{"gitId":"CedricPei"},"content":".dialog-pane {","lastModifiedDate":"2023-03-19"},{"lineNumber":262,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":263,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":264,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":265,"author":{"gitId":"CedricPei"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2023-03-19"},{"lineNumber":266,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":267,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":268,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":269,"author":{"gitId":"CedricPei"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2023-03-19"},{"lineNumber":270,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2023-03-19"},{"lineNumber":271,"author":{"gitId":"CedricPei"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-19"},{"lineNumber":272,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":273,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":274,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":275,"author":{"gitId":"CedricPei"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2023-03-19"},{"lineNumber":276,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: derive(white, 25%);","lastModifiedDate":"2023-03-19"},{"lineNumber":277,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":278,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":279,"author":{"gitId":"CedricPei"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2023-03-19"},{"lineNumber":280,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2023-03-19"},{"lineNumber":281,"author":{"gitId":"CedricPei"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2023-03-19"},{"lineNumber":282,"author":{"gitId":"CedricPei"},"content":"    -fx-fill: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":283,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":284,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":285,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":286,"author":{"gitId":"CedricPei"},"content":".scroll-bar {","lastModifiedDate":"2023-03-19"},{"lineNumber":287,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: derive(#F5FCDC, 20%);","lastModifiedDate":"2023-03-19"},{"lineNumber":288,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":289,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":290,"author":{"gitId":"CedricPei"},"content":".scroll-bar .thumb {","lastModifiedDate":"2023-03-19"},{"lineNumber":291,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: derive(#83B3E0, 50%);","lastModifiedDate":"2023-03-19"},{"lineNumber":292,"author":{"gitId":"CedricPei"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2023-03-19"},{"lineNumber":293,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":294,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":295,"author":{"gitId":"CedricPei"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2023-03-19"},{"lineNumber":296,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-19"},{"lineNumber":297,"author":{"gitId":"CedricPei"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":298,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":299,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":300,"author":{"gitId":"CedricPei"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2023-03-19"},{"lineNumber":301,"author":{"gitId":"CedricPei"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2023-03-19"},{"lineNumber":302,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":303,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":304,"author":{"gitId":"CedricPei"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2023-03-19"},{"lineNumber":305,"author":{"gitId":"CedricPei"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2023-03-19"},{"lineNumber":306,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":307,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":308,"author":{"gitId":"CedricPei"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2023-03-19"},{"lineNumber":309,"author":{"gitId":"CedricPei"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2023-03-19"},{"lineNumber":310,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":311,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":312,"author":{"gitId":"CedricPei"},"content":"#cardPane {","lastModifiedDate":"2023-03-19"},{"lineNumber":313,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2023-03-19"},{"lineNumber":314,"author":{"gitId":"CedricPei"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":315,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":316,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":317,"author":{"gitId":"CedricPei"},"content":"#commandTypeLabel {","lastModifiedDate":"2023-03-19"},{"lineNumber":318,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2023-03-19"},{"lineNumber":319,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2023-03-19"},{"lineNumber":320,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":321,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":322,"author":{"gitId":"CedricPei"},"content":"#commandTextField {","lastModifiedDate":"2023-03-19"},{"lineNumber":323,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2023-03-19"},{"lineNumber":324,"author":{"gitId":"CedricPei"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":325,"author":{"gitId":"CedricPei"},"content":"    -fx-border-color: #383838 #383838 #383838 #383838;","lastModifiedDate":"2023-03-19"},{"lineNumber":326,"author":{"gitId":"CedricPei"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2023-03-19"},{"lineNumber":327,"author":{"gitId":"CedricPei"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-19"},{"lineNumber":328,"author":{"gitId":"dawg420"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2023-03-26"},{"lineNumber":329,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2023-03-19"},{"lineNumber":330,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-19"},{"lineNumber":331,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":332,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":333,"author":{"gitId":"CedricPei"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2023-03-19"},{"lineNumber":334,"author":{"gitId":"CedricPei"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2023-03-19"},{"lineNumber":335,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":336,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":337,"author":{"gitId":"CedricPei"},"content":"#resultDisplay .content {","lastModifiedDate":"2023-03-19"},{"lineNumber":338,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: #EEEEEE;","lastModifiedDate":"2023-03-19"},{"lineNumber":339,"author":{"gitId":"CedricPei"},"content":"    -fx-background-radius: 1;","lastModifiedDate":"2023-03-19"},{"lineNumber":340,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":341,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":342,"author":{"gitId":"CedricPei"},"content":"#tags {","lastModifiedDate":"2023-03-19"},{"lineNumber":343,"author":{"gitId":"CedricPei"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-19"},{"lineNumber":344,"author":{"gitId":"CedricPei"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-19"},{"lineNumber":345,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":346,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":347,"author":{"gitId":"CedricPei"},"content":"#tags .label {","lastModifiedDate":"2023-03-19"},{"lineNumber":348,"author":{"gitId":"CedricPei"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-19"},{"lineNumber":349,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2023-03-19"},{"lineNumber":350,"author":{"gitId":"CedricPei"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-19"},{"lineNumber":351,"author":{"gitId":"CedricPei"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-19"},{"lineNumber":352,"author":{"gitId":"CedricPei"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-19"},{"lineNumber":353,"author":{"gitId":"CedricPei"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-03-19"},{"lineNumber":354,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":355,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":356,"author":{"gitId":"CedricPei"},"content":"#viewPane {","lastModifiedDate":"2023-03-27"},{"lineNumber":357,"author":{"gitId":"CedricPei"},"content":"    -fx-background-color: #F5ECD3;","lastModifiedDate":"2023-03-27"},{"lineNumber":358,"author":{"gitId":"CedricPei"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":359,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":360,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":361,"author":{"gitId":"dawg420"},"content":"#medicines {","lastModifiedDate":"2023-03-26"},{"lineNumber":362,"author":{"gitId":"dawg420"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2023-03-26"},{"lineNumber":363,"author":{"gitId":"dawg420"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2023-03-26"},{"lineNumber":364,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-26"},{"lineNumber":365,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":366,"author":{"gitId":"dawg420"},"content":"#medicines .label {","lastModifiedDate":"2023-03-26"},{"lineNumber":367,"author":{"gitId":"dawg420"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2023-03-26"},{"lineNumber":368,"author":{"gitId":"dawg420"},"content":"    -fx-background-color: #92572b;","lastModifiedDate":"2023-03-26"},{"lineNumber":369,"author":{"gitId":"dawg420"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-26"},{"lineNumber":370,"author":{"gitId":"dawg420"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-26"},{"lineNumber":371,"author":{"gitId":"dawg420"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-26"},{"lineNumber":372,"author":{"gitId":"dawg420"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2023-03-26"},{"lineNumber":373,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-26"},{"lineNumber":374,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":375,"author":{"gitId":"dawg420"},"content":"#gender .label {","lastModifiedDate":"2023-03-30"},{"lineNumber":376,"author":{"gitId":"dawg420"},"content":"     -fx-background-color: #C4AE78;","lastModifiedDate":"2023-03-27"},{"lineNumber":377,"author":{"gitId":"dawg420"},"content":"     -fx-padding: 1 2 1 2;","lastModifiedDate":"2023-03-27"},{"lineNumber":378,"author":{"gitId":"dawg420"},"content":"     -fx-border-radius: 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":379,"author":{"gitId":"dawg420"},"content":"     -fx-background-radius: 1;","lastModifiedDate":"2023-03-27"},{"lineNumber":380,"author":{"gitId":"dawg420"},"content":"     -fx-font-size: 13;","lastModifiedDate":"2023-03-27"},{"lineNumber":381,"author":{"gitId":"dawg420"},"content":" }","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"CedricPei":356,"dawg420":25}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"CedricPei"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"900.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"HospiSearch\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"    \u003cImage url\u003d\"@/images/hospisearch_32.png\" /\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"    \u003cScene fill\u003d\"#8fd6e8\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"CedricPei"},"content":"        \u003cURL value\u003d\"@LightTheme.css\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"CedricPei"},"content":"      \u003cVBox prefHeight\u003d\"400.0\" prefWidth\u003d\"541.0\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"CedricPei"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" prefHeight\u003d\"24.0\" prefWidth\u003d\"769.0\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"CedricPei"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Theme\"\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"CedricPei"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#applyLightTheme\" text\u003d\"Light\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"CedricPei"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#applyDarkTheme\" text\u003d\"Dark\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"CedricPei"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"CedricPei"},"content":"        \u003cVBox fx:id\u003d\"personList\" prefHeight\u003d\"269.0\" prefWidth\u003d\"491.0\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":43,"author":{"gitId":"CedricPei"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"CedricPei"},"content":"               \u003cHBox prefHeight\u003d\"259.0\" prefWidth\u003d\"448.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"CedricPei"},"content":"                  \u003cchildren\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"CedricPei"},"content":"                     \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" prefHeight\u003d\"238.0\" prefWidth\u003d\"199.0\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"CedricPei"},"content":"                     \u003cStackPane fx:id\u003d\"viewPanePlaceHolder\" prefHeight\u003d\"238.0\" prefWidth\u003d\"362.0\" HBox.hgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"CedricPei"},"content":"                  \u003c/children\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"CedricPei"},"content":"               \u003c/HBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"CedricPei"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"CedricPei"},"content":"           \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" prefHeight\u003d\"88.0\" prefWidth\u003d\"600.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"CedricPei"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"CedricPei"},"content":"           \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" prefHeight\u003d\"40.0\" prefWidth\u003d\"269.0\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"CedricPei"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"CedricPei"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"CedricPei":25,"SeanChinJunKai":1,"-":39}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"  \u003cGridPane prefHeight\u003d\"115.0\" prefWidth\u003d\"346.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"85.0\" prefHeight\u003d\"85.0\" prefWidth\u003d\"336.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"CedricPei"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"\t    \u003cLabel fx:id\u003d\"nric\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$nric\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"CedricPei"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"        \u003cLabel fx:id\u003d\"gender\" style\u003d\"-fx-background-color: #AC8E60; -fx-padding: 1 2 1 2; -fx-border-radius: 1; -fx-background-radius: 1; -fx-font-size: 13;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$gender\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"        \u003cLabel fx:id\u003d\"doctor\" styleClass\u003d\"doctor\" text\u003d\"\\$doctor\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"      \u003cFlowPane fx:id\u003d\"tags\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"CedricPei"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"CedricPei"},"content":"               \u003cInsets bottom\u003d\"2.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"CedricPei"},"content":"            \u003c/padding\u003e\u003c/FlowPane\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"CedricPei"},"content":"      \u003cLabel fx:id\u003d\"phone\" prefHeight\u003d\"17.0\" prefWidth\u003d\"329.0\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"CedricPei"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"CedricPei"},"content":"               \u003cInsets top\u003d\"3.0\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"CedricPei"},"content":"            \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"CedricPei"},"content":"      \u003cLabel fx:id\u003d\"address\" prefHeight\u003d\"17.0\" prefWidth\u003d\"333.0\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\"\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"CedricPei"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"CedricPei"},"content":"               \u003cInsets top\u003d\"3.0\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"      \u003c/Label\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"         \u003cGridPane.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"dawg420"},"content":"         \u003c/GridPane.margin\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"CedricPei"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"CedricPei"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"CedricPei"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"CedricPei":18,"dawg420":9,"Creationsv2":2,"-":26}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"\u003cVBox minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":"  \u003cListView fx:id\u003d\"personListView\" prefHeight\u003d\"259.0\" prefWidth\u003d\"382.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"CedricPei"},"content":"      \u003copaqueInsets\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"         \u003cInsets bottom\u003d\"2.0\" top\u003d\"2.0\" /\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"CedricPei"},"content":"      \u003c/opaqueInsets\u003e\u003c/ListView\u003e","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"CedricPei":6,"-":6}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" maxWidth\u003d\"1.7976931348623157E308\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" nodeOrientation\u003d\"LEFT_TO_RIGHT\" prefHeight\u003d\"131.0\" prefWidth\u003d\"512.0\" styleClass\u003d\"result-display\"\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"CedricPei"},"content":"      \u003cfont\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"         \u003cFont name\u003d\"System Bold Italic\" size\u003d\"49.0\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"CedricPei"},"content":"      \u003c/font\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"CedricPei"},"content":"   \u003c/TextArea\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"CedricPei":7,"-":6}},{"path":"src/main/resources/view/ViewPane.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricPei"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"CedricPei"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"CedricPei"},"content":"\u003c?import javafx.scene.text.Font?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":"\u003cHBox fx:id\u003d\"viewPane\" prefHeight\u003d\"399.0\" prefWidth\u003d\"346.0\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"CedricPei"},"content":"    \u003cGridPane prefHeight\u003d\"115.0\" prefWidth\u003d\"346.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"CedricPei"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"CedricPei"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":"        \u003cVBox minHeight\u003d\"130.0\" prefHeight\u003d\"399.0\" prefWidth\u003d\"336.0\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"CedricPei"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"CedricPei"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"CedricPei"},"content":"            \u003cLabel fx:id\u003d\"name\" prefHeight\u003d\"39.0\" prefWidth\u003d\"305.0\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"CedricPei"},"content":"                \u003cfont\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"CedricPei"},"content":"                    \u003cFont size\u003d\"18.0\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"CedricPei"},"content":"                \u003c/font\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"CedricPei"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"CedricPei"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" prefHeight\u003d\"23.0\" prefWidth\u003d\"316.0\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"CedricPei"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"CedricPei"},"content":"                    \u003cInsets bottom\u003d\"2.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"CedricPei"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"CedricPei"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"CedricPei"},"content":"            \u003cLabel fx:id\u003d\"nric\" prefHeight\u003d\"36.0\" prefWidth\u003d\"304.0\" styleClass\u003d\"cell_small_label\" text\u003d\"Label[id\u003dnric, styleClass\u003dlabel cell_small_label]\u0027\u0027\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"CedricPei"},"content":"            \u003cLabel fx:id\u003d\"gender\" prefHeight\u003d\"34.0\" prefWidth\u003d\"275.0\" styleClass\u003d\"cell_small_label\" text\u003d\"$gender\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"ongweijie7"},"content":"            \u003cLabel fx:id\u003d\"date\" prefHeight\u003d\"31.0\" prefWidth\u003d\"316.0\" styleClass\u003d\"cell_small_label\" text\u003d\"$date\" /\u003e","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"CedricPei"},"content":"            \u003cLabel fx:id\u003d\"doctor\" prefHeight\u003d\"31.0\" prefWidth\u003d\"316.0\" styleClass\u003d\"cell_small_label\" text\u003d\"$date\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":36,"author":{"gitId":"CedricPei"},"content":"            \u003cLabel fx:id\u003d\"phone\" prefHeight\u003d\"31.0\" prefWidth\u003d\"316.0\" styleClass\u003d\"cell_small_label\" text\u003d\"$phone\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"CedricPei"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"CedricPei"},"content":"                    \u003cInsets top\u003d\"3.0\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"CedricPei"},"content":"                \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"CedricPei"},"content":"            \u003cLabel fx:id\u003d\"email\" prefHeight\u003d\"40.0\" prefWidth\u003d\"316.0\" styleClass\u003d\"cell_small_label\" text\u003d\"$email\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"CedricPei"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"CedricPei"},"content":"                    \u003cInsets top\u003d\"3.0\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"CedricPei"},"content":"                \u003c/padding\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"CedricPei"},"content":"            \u003cLabel fx:id\u003d\"address\" alignment\u003d\"TOP_LEFT\" prefHeight\u003d\"74.0\" prefWidth\u003d\"311.0\" styleClass\u003d\"cell_small_label\" text\u003d\"Label[id\u003daddress, styleClass\u003dlabel cell_small_label]\u0027\u0027\"\u003e","lastModifiedDate":"2023-04-01"},{"lineNumber":45,"author":{"gitId":"CedricPei"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"CedricPei"},"content":"                    \u003cInsets top\u003d\"3.0\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"CedricPei"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"CedricPei"},"content":"            \u003c/Label\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"CedricPei"},"content":"            \u003cLabel fx:id\u003d\"drugAllergy\" prefHeight\u003d\"37.0\" prefWidth\u003d\"316.0\" styleClass\u003d\"cell_small_label\" text\u003d\"$drugAllergy\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"CedricPei"},"content":"            \u003cFlowPane fx:id\u003d\"medicines\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"CedricPei"},"content":"                \u003cpadding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"CedricPei"},"content":"                    \u003cInsets bottom\u003d\"2.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"CedricPei"},"content":"                \u003c/padding\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"CedricPei"},"content":"            \u003c/FlowPane\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"CedricPei"},"content":"            \u003cGridPane.margin\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"CedricPei"},"content":"                \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"CedricPei"},"content":"            \u003c/GridPane.margin\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"CedricPei"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"CedricPei"},"content":"        \u003crowConstraints\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"CedricPei"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"CedricPei"},"content":"        \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"CedricPei"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"CedricPei"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"CedricPei":62,"ongweijie7":1}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"        assertNotNull(AppUtil.getImage(\"/images/hospisearch_32.png\"));","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"SeanChinJunKai":1,"-":35}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_NRIC_DOES_NOT_EXIST;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOCTOR_DESC_AMY;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DRUG_ALLERGY_DESC_AMY;","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"        String deleteCommand \u003d \"delete i/S1111111B\";","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"SeanChinJunKai"},"content":"        assertCommandException(deleteCommand, String.format(MESSAGE_NRIC_DOES_NOT_EXIST, \"S1111111B\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"ongweijie7"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookIoExceptionThrowingStub(","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"ongweijie7"},"content":"                temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"ongweijie7"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NRIC_DESC_AMY + DATE_DESC_AMY","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"ongweijie7"},"content":"                + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"Creationsv2"},"content":"                + ADDRESS_DESC_AMY + DRUG_ALLERGY_DESC_AMY + GENDER_DESC_AMY + DOCTOR_DESC_AMY;","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"SeanChinJunKai":3,"ongweijie7":8,"Creationsv2":2,"-":155}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.BackupData;","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.backup.Backup;","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.BackupDataStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"dawg420"},"content":"        public UserPrefsStorage getUserPrefsStorage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":122,"author":{"gitId":"dawg420"},"content":"        public void setBackupData(BackupData backupData) {","lastModifiedDate":"2023-03-25"},{"lineNumber":123,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-25"},{"lineNumber":124,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":125,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":126,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":127,"author":{"gitId":"dawg420"},"content":"        public void addBackupToBackupData(Backup backup) {","lastModifiedDate":"2023-03-25"},{"lineNumber":128,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-25"},{"lineNumber":129,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":130,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":131,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":132,"author":{"gitId":"dawg420"},"content":"        public void removeBackupFromBackupData(String index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-03-25"},{"lineNumber":133,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-25"},{"lineNumber":134,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":135,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":136,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":137,"author":{"gitId":"dawg420"},"content":"        public BackupData getBackupData() {","lastModifiedDate":"2023-03-25"},{"lineNumber":138,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-25"},{"lineNumber":139,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":140,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":141,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"dawg420"},"content":"        public BackupDataStorage getBackupDataStorage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":186,"author":{"gitId":"CedricPei"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":187,"author":{"gitId":"CedricPei"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2023-03-20"},{"lineNumber":188,"author":{"gitId":"CedricPei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":189,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":190,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":191,"author":{"gitId":"CedricPei"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":192,"author":{"gitId":"CedricPei"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2023-03-20"},{"lineNumber":193,"author":{"gitId":"CedricPei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":194,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":195,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":196,"author":{"gitId":"CedricPei"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":197,"author":{"gitId":"CedricPei"},"content":"        public void redoAddressBook() {","lastModifiedDate":"2023-03-20"},{"lineNumber":198,"author":{"gitId":"CedricPei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":199,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":200,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":201,"author":{"gitId":"CedricPei"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":202,"author":{"gitId":"CedricPei"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2023-03-20"},{"lineNumber":203,"author":{"gitId":"CedricPei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":204,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":205,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":206,"author":{"gitId":"CedricPei"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":207,"author":{"gitId":"CedricPei"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2023-03-20"},{"lineNumber":208,"author":{"gitId":"CedricPei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":209,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":210,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":211,"author":{"gitId":"SeanChinJunKai"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":212,"author":{"gitId":"SeanChinJunKai"},"content":"        public Person findPersonByNric(Nric nric) {","lastModifiedDate":"2023-03-17"},{"lineNumber":213,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":214,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":215,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":216,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":217,"author":{"gitId":"dawg420"},"content":"        public ObservableList\u003cBackup\u003e getBackupList() {","lastModifiedDate":"2023-03-25"},{"lineNumber":218,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-25"},{"lineNumber":219,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"CedricPei":26,"SeanChinJunKai":5,"dawg420":39,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/BackupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import java.io.File;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.BackupData;","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.ReadOnlyBackupData;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.backup.Backup;","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.BackupDataStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"public class BackupCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"    public void constructor_noIndex_throwsCommandException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"        assertThrows(NullPointerException.class, () -\u003e new BackupCommand(null, null));","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"    public void constructor_invalidIndex_throwsIllegalArgumentException() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"        Index invalidIndex \u003d Index.fromOneBased(11);","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"        ModelStub modelStub \u003d new ModelStubWithBackupFunctionalities();","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"dawg420"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new BackupCommand(invalidIndex, null));","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"dawg420"},"content":"    public void execute_backupSuccessful() throws CommandException {","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"dawg420"},"content":"        Index validIndex \u003d Index.fromOneBased(10);","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"dawg420"},"content":"        String validDesc \u003d \"test\";","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"dawg420"},"content":"        String filePath \u003d \"data/backup/addressbookBackup10.json\";","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"dawg420"},"content":"        ModelStub modelStub \u003d new ModelStubWithBackupFunctionalities();","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"dawg420"},"content":"        CommandResult commandResult \u003d new BackupCommand(validIndex, validDesc).execute(modelStub);","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"dawg420"},"content":"        assertEquals(String.format(BackupCommand.MESSAGE_SUCCESS, validIndex.getOneBased()),","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"dawg420"},"content":"            commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"dawg420"},"content":"        cleanUp(filePath);","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"dawg420"},"content":"    public void equals() {","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"dawg420"},"content":"        Index one \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"dawg420"},"content":"        Index two \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"dawg420"},"content":"        BackupCommand backupCommandOne \u003d new BackupCommand(one, null);","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"dawg420"},"content":"        BackupCommand backupCommandOneCopy \u003d new BackupCommand(one, null);","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"dawg420"},"content":"        BackupCommand backupCommandTwo \u003d new BackupCommand(two, null);","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"dawg420"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"dawg420"},"content":"        assertTrue(backupCommandOne.equals(backupCommandOne));","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"dawg420"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"dawg420"},"content":"        assertTrue(backupCommandOne.equals(backupCommandOneCopy));","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"dawg420"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"dawg420"},"content":"        assertFalse(backupCommandOne.equals(1));","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"dawg420"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"dawg420"},"content":"        assertFalse(backupCommandOne.equals(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"dawg420"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"dawg420"},"content":"        assertFalse(backupCommandOne.equals(backupCommandTwo));","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"dawg420"},"content":"    private void cleanUp(String path) {","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"dawg420"},"content":"        File toCleanup \u003d new File(path);","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"dawg420"},"content":"        toCleanup.delete();","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"dawg420"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"dawg420"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"dawg420"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"dawg420"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"dawg420"},"content":"        public UserPrefsStorage getUserPrefsStorage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"dawg420"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"dawg420"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"dawg420"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"dawg420"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":135,"author":{"gitId":"dawg420"},"content":"        public void setBackupData(BackupData backupData) {","lastModifiedDate":"2023-03-25"},{"lineNumber":136,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-25"},{"lineNumber":137,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":138,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":139,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":140,"author":{"gitId":"dawg420"},"content":"        public void addBackupToBackupData(Backup backup) {","lastModifiedDate":"2023-03-25"},{"lineNumber":141,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-25"},{"lineNumber":142,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":143,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":144,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":145,"author":{"gitId":"dawg420"},"content":"        public void removeBackupFromBackupData(String index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-03-25"},{"lineNumber":146,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-25"},{"lineNumber":147,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":148,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":149,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":150,"author":{"gitId":"dawg420"},"content":"        public BackupData getBackupData() {","lastModifiedDate":"2023-03-25"},{"lineNumber":151,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-25"},{"lineNumber":152,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":153,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":154,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"dawg420"},"content":"        public BackupDataStorage getBackupDataStorage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"dawg420"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":162,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":163,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":164,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":165,"author":{"gitId":"dawg420"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-15"},{"lineNumber":166,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":167,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":168,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":169,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":170,"author":{"gitId":"dawg420"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-15"},{"lineNumber":171,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":172,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":173,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":174,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":175,"author":{"gitId":"dawg420"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-15"},{"lineNumber":176,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":177,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":178,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":179,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":180,"author":{"gitId":"dawg420"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-03-15"},{"lineNumber":181,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":182,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":183,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":184,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":185,"author":{"gitId":"dawg420"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-15"},{"lineNumber":186,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":187,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":189,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":190,"author":{"gitId":"dawg420"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-15"},{"lineNumber":191,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":192,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":195,"author":{"gitId":"dawg420"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-15"},{"lineNumber":196,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":199,"author":{"gitId":"CedricPei"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":200,"author":{"gitId":"CedricPei"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2023-03-20"},{"lineNumber":201,"author":{"gitId":"CedricPei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":202,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":203,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":204,"author":{"gitId":"CedricPei"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":205,"author":{"gitId":"CedricPei"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2023-03-20"},{"lineNumber":206,"author":{"gitId":"CedricPei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":207,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":208,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":209,"author":{"gitId":"CedricPei"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":210,"author":{"gitId":"CedricPei"},"content":"        public void redoAddressBook() {","lastModifiedDate":"2023-03-20"},{"lineNumber":211,"author":{"gitId":"CedricPei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":212,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":213,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":214,"author":{"gitId":"CedricPei"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":215,"author":{"gitId":"CedricPei"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2023-03-20"},{"lineNumber":216,"author":{"gitId":"CedricPei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":217,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":218,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":219,"author":{"gitId":"CedricPei"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":220,"author":{"gitId":"CedricPei"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2023-03-20"},{"lineNumber":221,"author":{"gitId":"CedricPei"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":222,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":223,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":224,"author":{"gitId":"SeanChinJunKai"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":225,"author":{"gitId":"SeanChinJunKai"},"content":"        public Person findPersonByNric(Nric nric) {","lastModifiedDate":"2023-03-17"},{"lineNumber":226,"author":{"gitId":"SeanChinJunKai"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":227,"author":{"gitId":"SeanChinJunKai"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":228,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":229,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":230,"author":{"gitId":"dawg420"},"content":"        public ObservableList\u003cBackup\u003e getBackupList() throws IllegalValueException {","lastModifiedDate":"2023-03-25"},{"lineNumber":231,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-25"},{"lineNumber":232,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-25"},{"lineNumber":233,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":234,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":235,"author":{"gitId":"dawg420"},"content":"    private class ModelStubWithBackupFunctionalities extends ModelStub {","lastModifiedDate":"2023-03-28"},{"lineNumber":236,"author":{"gitId":"dawg420"},"content":"        private final AddressBook addressBook \u003d new AddressBookBuilder().build();","lastModifiedDate":"2023-03-15"},{"lineNumber":237,"author":{"gitId":"dawg420"},"content":"        private final Path userPrefsPath \u003d Path.of(\"preferences.json\");","lastModifiedDate":"2023-03-28"},{"lineNumber":238,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":239,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":240,"author":{"gitId":"dawg420"},"content":"        public AddressBook getAddressBook() {","lastModifiedDate":"2023-03-15"},{"lineNumber":241,"author":{"gitId":"dawg420"},"content":"            return addressBook;","lastModifiedDate":"2023-03-15"},{"lineNumber":242,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":243,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":244,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":245,"author":{"gitId":"dawg420"},"content":"        public void addBackupToBackupData(Backup backup) {","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":247,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":248,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":249,"author":{"gitId":"dawg420"},"content":"        public BackupData getBackupData() {","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"dawg420"},"content":"            return null;","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":254,"author":{"gitId":"dawg420"},"content":"        public UserPrefsStorage getUserPrefsStorage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":255,"author":{"gitId":"dawg420"},"content":"            return new JsonUserPrefsStorage(userPrefsPath);","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":257,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":258,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":259,"author":{"gitId":"dawg420"},"content":"        public BackupDataStorage getBackupDataStorage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":260,"author":{"gitId":"dawg420"},"content":"            return new BackupDataStorageStub();","lastModifiedDate":"2023-03-28"},{"lineNumber":261,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":262,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":263,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":264,"author":{"gitId":"dawg420"},"content":"    private class BackupDataStorageStub implements BackupDataStorage {","lastModifiedDate":"2023-03-28"},{"lineNumber":265,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":266,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":267,"author":{"gitId":"dawg420"},"content":"        public Path getBackupDataFilePath() {","lastModifiedDate":"2023-03-28"},{"lineNumber":268,"author":{"gitId":"dawg420"},"content":"            return null;","lastModifiedDate":"2023-03-28"},{"lineNumber":269,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":270,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":271,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":272,"author":{"gitId":"dawg420"},"content":"        public Optional\u003cBackupData\u003e readBackupData() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-28"},{"lineNumber":273,"author":{"gitId":"dawg420"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":274,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":275,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":276,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":277,"author":{"gitId":"dawg420"},"content":"        public void saveBackupData(ReadOnlyBackupData backupData) throws IOException {","lastModifiedDate":"2023-03-28"},{"lineNumber":278,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":279,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":280,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":281,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"CedricPei":25,"SeanChinJunKai":6,"dawg420":250}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false)));","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"CedricPei"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false, false)));","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"CedricPei"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false, false)));","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"CedricPei"},"content":"        //different showLight value -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"CedricPei"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, true, false)));","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"CedricPei"},"content":"        //different showDark value -\u003e returns false","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"CedricPei"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false, true)));","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"CedricPei"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false, false, false).hashCode());","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"CedricPei"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true, false, false).hashCode());","lastModifiedDate":"2023-03-19"},{"lineNumber":59,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"CedricPei"},"content":"        // different showLight value -\u003e returns different hashcode","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"CedricPei"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false, true, false).hashCode());","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"CedricPei"},"content":"        // different showDark value -\u003e returns different hashcode","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"CedricPei"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false, false, true).hashCode());","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"CedricPei":17,"-":49}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_OF_BIRTH;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_MEDICINE;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.VersionedAddressBook;","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"    public static final String VALID_NRIC_AMY \u003d \"S0000000A\";","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"    public static final String VALID_NRIC_BOB \u003d \"T1111111B\";","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"ongweijie7"},"content":"    public static final String VALID_DATE_AMY \u003d \"28/12/2000\";","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"ongweijie7"},"content":"    public static final String VALID_DATE_BOB \u003d \"20/09/2005\";","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"    public static final String VALID_DRUG_ALLERGY_AMY \u003d \"NKDA\";","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"    public static final String VALID_DRUG_ALLERGY_BOB \u003d \"Panadol\";","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"    public static final String VALID_MEDICINE_PANADOL \u003d \"Panadol\";","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"ongweijie7"},"content":"    public static final String VALID_GENDER_AMY \u003d \"female\";","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"ongweijie7"},"content":"    public static final String VALID_GENDER_BOB \u003d \"male\";","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"Creationsv2"},"content":"    public static final String VALID_TAG_DIABETIC \u003d \"Diabetic\";","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"Creationsv2"},"content":"    public static final String VALID_TAG_OSTEOPOROTIC \u003d \"Osteoporotic\";","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"Creationsv2"},"content":"    public static final String VALID_DOCTOR_AMY \u003d \"Shannon\";","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Creationsv2"},"content":"    public static final String VALID_DOCTOR_BOB \u003d \"Ben\";","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"Creationsv2"},"content":"    public static final String NRIC_DESC_AMY \u003d \" \" + PREFIX_NRIC + VALID_NRIC_AMY;","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"Creationsv2"},"content":"    public static final String NRIC_DESC_BOB \u003d \" \" + PREFIX_NRIC + VALID_NRIC_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"ongweijie7"},"content":"    public static final String DATE_DESC_AMY \u003d \" \" + PREFIX_DATE_OF_BIRTH + VALID_DATE_AMY;","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"ongweijie7"},"content":"    public static final String DATE_DESC_BOB \u003d \" \" + PREFIX_DATE_OF_BIRTH + VALID_DATE_BOB;","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"SeanChinJunKai"},"content":"    public static final String DRUG_ALLERGY_DESC_AMY \u003d \" \" + PREFIX_DRUG_ALLERGY + VALID_DRUG_ALLERGY_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"SeanChinJunKai"},"content":"    public static final String DRUG_ALLERGY_DESC_BOB \u003d \" \" + PREFIX_DRUG_ALLERGY + VALID_DRUG_ALLERGY_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"dawg420"},"content":"    public static final String MEDICINE_DESC_PANADOL \u003d \" \" + PREFIX_MEDICINE + VALID_MEDICINE_PANADOL;","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"ongweijie7"},"content":"    public static final String GENDER_DESC_AMY \u003d \" \" + PREFIX_GENDER + VALID_GENDER_AMY;","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"ongweijie7"},"content":"    public static final String GENDER_DESC_BOB \u003d \" \" + PREFIX_GENDER + VALID_GENDER_BOB;","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"Creationsv2"},"content":"    public static final String DOCTOR_DESC_AMY \u003d \" \" + PREFIX_DOCTOR + VALID_DOCTOR_AMY;","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Creationsv2"},"content":"    public static final String DOCTOR_DESC_BOB \u003d \" \" + PREFIX_DOCTOR + VALID_DOCTOR_BOB;","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Creationsv2"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_DIABETIC;","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"Creationsv2"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_OSTEOPOROTIC;","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"Creationsv2"},"content":"    public static final String INVALID_NRIC_DESC \u003d \" \" + PREFIX_NRIC + \"Z0000000A\"; // \u0027Z\u0027 not allowed for NRIC start","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"ongweijie7"},"content":"    public static final String INVALID_DATE_DESC \u003d \" \" + PREFIX_DATE_OF_BIRTH + \"691/12/2000\";","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"SeanChinJunKai"},"content":"    public static final String INVALID_DRUG_ALLERGY_DESC \u003d \" \"","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"SeanChinJunKai"},"content":"        + PREFIX_DRUG_ALLERGY; // empty string not allowed for drug allergies","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"ongweijie7"},"content":"    public static final String INVALID_GENDER_DESC \u003d \" \" + PREFIX_GENDER + \"M\"; // missing full spelling","lastModifiedDate":"2023-03-26"},{"lineNumber":92,"author":{"gitId":"dawg420"},"content":"    public static final String INVALID_GENDER_DESC_2 \u003d \" \" + PREFIX_GENDER + \"Male Female\"; // missing full spelling","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"Creationsv2"},"content":"    public static final String INVALID_DOCTOR_DESC \u003d \" \" + PREFIX_DOCTOR + \"Alex\u0026\"; // \u0027\u0026\u0027 not allowed in doctor names","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":95,"author":{"gitId":"dawg420"},"content":"    public static final String INVALID_MEDICINE_DESC \u003d \" \" + PREFIX_MEDICINE + \"$$\"; // \u0027$\u0027 not allowed in medicine","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"ongweijie7"},"content":"    public static final String NULL_EMAIL \u003d \" \" + PREFIX_EMAIL + \"null\";","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"ongweijie7"},"content":"    public static final String NULL_STRING \u003d \" \" + \"null\";","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":108,"author":{"gitId":"Creationsv2"},"content":"            .withDrugAllergy(VALID_DRUG_ALLERGY_AMY).withGender(VALID_GENDER_AMY).withDoctor(VALID_DOCTOR_AMY)","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"ongweijie7"},"content":"            .withTags(VALID_TAG_DIABETIC).build();","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"Creationsv2"},"content":"            .withDrugAllergy(VALID_DRUG_ALLERGY_BOB).withGender(VALID_GENDER_BOB).withDoctor(VALID_DOCTOR_BOB)","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"Creationsv2"},"content":"                .withTags(VALID_TAG_DIABETIC, VALID_TAG_OSTEOPOROTIC).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"CedricPei"},"content":"        AddressBook expectedAddressBook \u003d new VersionedAddressBook(actualModel.getAddressBook());","lastModifiedDate":"2023-03-20"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":159,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"CedricPei":2,"SeanChinJunKai":6,"dawg420":5,"ongweijie7":22,"Creationsv2":17,"-":122}},{"path":"src/test/java/seedu/address/logic/commands/DarkModeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricPei"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":"import static seedu.address.logic.commands.DarkModeCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"CedricPei"},"content":"public class DarkModeCommandTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"CedricPei"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"CedricPei"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":"                new CommandResult(MESSAGE_SUCCESS, false, false, false, true);","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"CedricPei"},"content":"        assertCommandSuccess(new DarkModeCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"CedricPei":22}},{"path":"src/test/java/seedu/address/logic/commands/DeleteBackupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.BackupData;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.ReadOnlyBackupData;","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.backup.Backup;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.BackupDataStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"public class DeleteBackupCommandTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"    public void constructor_noIndex_throwsCommandException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DeleteBackupCommand(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"        Index invalidIndex \u003d Index.fromOneBased(11);","lastModifiedDate":"2023-03-28"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"        DeleteBackupCommand deleteBackupCommand \u003d new DeleteBackupCommand(invalidIndex);","lastModifiedDate":"2023-03-28"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"        ModelStub modelStub \u003d new ModelStubWithBackupFunctionalities();","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-03-28"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"            DeleteBackupCommand.DELETE_ERROR, () -\u003e deleteBackupCommand.execute(modelStub));","lastModifiedDate":"2023-03-28"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":49,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-03-28"},{"lineNumber":51,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":52,"author":{"gitId":"dawg420"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"dawg420"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-28"},{"lineNumber":55,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":58,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":59,"author":{"gitId":"dawg420"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":61,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":62,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":63,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":64,"author":{"gitId":"dawg420"},"content":"        public UserPrefsStorage getUserPrefsStorage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":66,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":67,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":69,"author":{"gitId":"dawg420"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-28"},{"lineNumber":70,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":71,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":72,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"dawg420"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-28"},{"lineNumber":75,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":76,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":77,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":79,"author":{"gitId":"dawg420"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-28"},{"lineNumber":80,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":82,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"dawg420"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":88,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":89,"author":{"gitId":"dawg420"},"content":"        public void setBackupData(BackupData backupData) {","lastModifiedDate":"2023-03-28"},{"lineNumber":90,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":91,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":93,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":94,"author":{"gitId":"dawg420"},"content":"        public void addBackupToBackupData(Backup backup) {","lastModifiedDate":"2023-03-28"},{"lineNumber":95,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":96,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":97,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":98,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":99,"author":{"gitId":"dawg420"},"content":"        public void removeBackupFromBackupData(String index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-03-28"},{"lineNumber":100,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":101,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":102,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":103,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":104,"author":{"gitId":"dawg420"},"content":"        public BackupData getBackupData() {","lastModifiedDate":"2023-03-28"},{"lineNumber":105,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":106,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":107,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":108,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":109,"author":{"gitId":"dawg420"},"content":"        public BackupDataStorage getBackupDataStorage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":110,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":111,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":112,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":113,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":114,"author":{"gitId":"dawg420"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-03-28"},{"lineNumber":115,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":116,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":117,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":118,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":119,"author":{"gitId":"dawg420"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-28"},{"lineNumber":120,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":121,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":122,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":123,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":124,"author":{"gitId":"dawg420"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-28"},{"lineNumber":125,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":126,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":127,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"dawg420"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":134,"author":{"gitId":"dawg420"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-03-28"},{"lineNumber":135,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":136,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":137,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":138,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":139,"author":{"gitId":"dawg420"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-28"},{"lineNumber":140,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":141,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":142,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":143,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":144,"author":{"gitId":"dawg420"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-28"},{"lineNumber":145,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":146,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":147,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":148,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":149,"author":{"gitId":"dawg420"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-28"},{"lineNumber":150,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":151,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":152,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":153,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":154,"author":{"gitId":"dawg420"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2023-03-28"},{"lineNumber":155,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":156,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"dawg420"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2023-03-28"},{"lineNumber":160,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"dawg420"},"content":"        public void redoAddressBook() {","lastModifiedDate":"2023-03-28"},{"lineNumber":165,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":167,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"dawg420"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2023-03-28"},{"lineNumber":170,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":171,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":172,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":173,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"dawg420"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":176,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"dawg420"},"content":"        public Person findPersonByNric(Nric nric) {","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"dawg420"},"content":"        public ObservableList\u003cBackup\u003e getBackupList() throws IllegalValueException {","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"dawg420"},"content":"    private class ModelStubWithBackupFunctionalities extends ModelStub {","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"dawg420"},"content":"        private final AddressBook addressBook \u003d new AddressBookBuilder().build();","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"dawg420"},"content":"        private final Path userPrefsPath \u003d Path.of(\"preferences.json\");","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":194,"author":{"gitId":"dawg420"},"content":"        public AddressBook getAddressBook() {","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"dawg420"},"content":"            return addressBook;","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":198,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":199,"author":{"gitId":"dawg420"},"content":"        public void addBackupToBackupData(Backup backup) {","lastModifiedDate":"2023-03-28"},{"lineNumber":200,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":202,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"dawg420"},"content":"        public BackupData getBackupData() {","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"dawg420"},"content":"            return null;","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":208,"author":{"gitId":"dawg420"},"content":"        public UserPrefsStorage getUserPrefsStorage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"dawg420"},"content":"            return new JsonUserPrefsStorage(userPrefsPath);","lastModifiedDate":"2023-03-28"},{"lineNumber":210,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":211,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":212,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":213,"author":{"gitId":"dawg420"},"content":"        public BackupDataStorage getBackupDataStorage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":214,"author":{"gitId":"dawg420"},"content":"            return new BackupDataStorageStub();","lastModifiedDate":"2023-03-28"},{"lineNumber":215,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":216,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":217,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":218,"author":{"gitId":"dawg420"},"content":"        public void removeBackupFromBackupData(String index) {","lastModifiedDate":"2023-03-28"},{"lineNumber":219,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":220,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":221,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":222,"author":{"gitId":"dawg420"},"content":"    private class BackupDataStorageStub implements BackupDataStorage {","lastModifiedDate":"2023-03-28"},{"lineNumber":223,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":224,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":225,"author":{"gitId":"dawg420"},"content":"        public Path getBackupDataFilePath() {","lastModifiedDate":"2023-03-28"},{"lineNumber":226,"author":{"gitId":"dawg420"},"content":"            return null;","lastModifiedDate":"2023-03-28"},{"lineNumber":227,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":228,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":229,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":230,"author":{"gitId":"dawg420"},"content":"        public Optional\u003cBackupData\u003e readBackupData() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-28"},{"lineNumber":231,"author":{"gitId":"dawg420"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-28"},{"lineNumber":232,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":233,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":234,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":235,"author":{"gitId":"dawg420"},"content":"        public void saveBackupData(ReadOnlyBackupData backupData) throws IOException {","lastModifiedDate":"2023-03-28"},{"lineNumber":236,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":237,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":238,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":239,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"dawg420":239}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"    public void execute_nricDoesNotExist_throwsCommandException() {","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"        Set\u003cNric\u003e nricList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"        Nric nric \u003d new Nric(\"T0000000A\");","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"        nricList.add(nric);","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(nricList);","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"        assertCommandFailure(deleteCommand, model, String.format(Messages.MESSAGE_NRIC_DOES_NOT_EXIST, \"T0000000A\"));","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"    public void execute_nricExist_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"        Set\u003cNric\u003e nricList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"        Nric nric \u003d new Nric(\"S1234567A\");","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"        nricList.add(nric);","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(nricList);","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"        String expectedMessage \u003d DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS + \"S1234567A\\n\";","lastModifiedDate":"2023-03-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"        expectedModel.deletePerson(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"        Set\u003cNric\u003e nricListOne \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"        nricListOne.add(new Nric(\"T0123456A\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"        Set\u003cNric\u003e nricListTwo \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"        nricListTwo.add(new Nric(\"T0654321Z\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(nricListOne);","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(nricListTwo);","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"SeanChinJunKai"},"content":"        Set\u003cNric\u003e nricListOneCopy \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":65,"author":{"gitId":"SeanChinJunKai"},"content":"        nricListOneCopy.add(new Nric(\"T0123456A\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(nricListOneCopy);","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"SeanChinJunKai":28,"-":59}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_OSTEOPOROTIC;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"                .withTags(VALID_TAG_OSTEOPOROTIC).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"Creationsv2"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_OSTEOPOROTIC).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Creationsv2":3,"-":170}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DRUG_ALLERGY_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICINE_PANADOL;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_OSTEOPOROTIC;","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"        // different drug allergy -\u003e returns false","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_DRUG_ALLERGY_BOB).build();","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":61,"author":{"gitId":"Creationsv2"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_OSTEOPOROTIC).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"dawg420"},"content":"        // different medicines -\u003e returns false","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"dawg420"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withMedicines(VALID_MEDICINE_PANADOL).build();","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"SeanChinJunKai":5,"dawg420":4,"Creationsv2":2,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":"                new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"CedricPei":2,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.MedicineContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.NricContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"ongweijie7"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"James\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"ongweijie7"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"Bob\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"ongweijie7"},"content":"        NricContainsKeywordsPredicate firstNricPredicate \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"ongweijie7"},"content":"                new NricContainsKeywordsPredicate(Collections.singletonList(\"T0012135T\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"ongweijie7"},"content":"        NricContainsKeywordsPredicate secondNricPredicate \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"ongweijie7"},"content":"                new NricContainsKeywordsPredicate(Collections.singletonList(\"S0012135T\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"ongweijie7"},"content":"        TagContainsKeywordsPredicate firstTagPredicate \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"ongweijie7"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"Asthmatic\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"ongweijie7"},"content":"        TagContainsKeywordsPredicate secondTagPredicate \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"ongweijie7"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"Diabetic\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"ongweijie7"},"content":"        FindCommand findNricFirstCommand \u003d new FindCommand(firstNricPredicate);","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"ongweijie7"},"content":"        FindCommand findNricSecondCommand \u003d new FindCommand(secondNricPredicate);","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"ongweijie7"},"content":"        FindCommand findTagFirstCommand \u003d new FindCommand(firstTagPredicate);","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"ongweijie7"},"content":"        FindCommand findTagSecondCommand \u003d new FindCommand(secondTagPredicate);","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(findNricFirstCommand.equals(findNricFirstCommand));","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(findTagFirstCommand.equals(findTagFirstCommand));","lastModifiedDate":"2023-03-27"},{"lineNumber":66,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"ongweijie7"},"content":"        FindCommand findNricFirstCommandCopy \u003d new FindCommand(firstNricPredicate);","lastModifiedDate":"2023-03-27"},{"lineNumber":71,"author":{"gitId":"ongweijie7"},"content":"        FindCommand findTagFirstCommandCopy \u003d new FindCommand(firstTagPredicate);","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(findNricFirstCommand.equals(findNricFirstCommandCopy));","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(findTagFirstCommand.equals(findTagFirstCommandCopy));","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(findNricFirstCommand.equals(1));","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(findTagFirstCommand.equals(1));","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(findNricFirstCommand.equals(null));","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(findTagFirstCommand.equals(null));","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(findNricFirstCommand.equals(findNricSecondCommand));","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(findTagFirstCommand.equals(findTagSecondCommand));","lastModifiedDate":"2023-03-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":97,"author":{"gitId":"ongweijie7"},"content":"        NameContainsKeywordsPredicate predicate \u003d prepareNamePredicate(\" \");","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"ongweijie7"},"content":"        MedicineContainsKeywordsPredicate predicate2 \u003d prepareAddressPredicate(\" \");","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"ongweijie7"},"content":"        FindCommand command2 \u003d new FindCommand(predicate2);","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"ongweijie7"},"content":"        expectedModel.updateFilteredPersonList(predicate2);","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"ongweijie7"},"content":"        assertCommandSuccess(command2, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"ongweijie7"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"ongweijie7"},"content":"        NricContainsKeywordsPredicate predicate3 \u003d prepareNricPredicate(\" \");","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"ongweijie7"},"content":"        FindCommand command3 \u003d new FindCommand(predicate3);","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"ongweijie7"},"content":"        expectedModel.updateFilteredPersonList(predicate3);","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"ongweijie7"},"content":"        assertCommandSuccess(command3, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"ongweijie7"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"ongweijie7"},"content":"        TagContainsKeywordsPredicate predicate4 \u003d prepareTagPredicate(\" \");","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"ongweijie7"},"content":"        FindCommand command4 \u003d new FindCommand(predicate4);","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"ongweijie7"},"content":"        expectedModel.updateFilteredPersonList(predicate4);","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"ongweijie7"},"content":"        assertCommandSuccess(command4, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"ongweijie7"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"ongweijie7"},"content":"        String expectedMessage1 \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"ongweijie7"},"content":"        NameContainsKeywordsPredicate predicate1 \u003d prepareNamePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"ongweijie7"},"content":"        FindCommand command \u003d new FindCommand(predicate1);","lastModifiedDate":"2023-03-09"},{"lineNumber":128,"author":{"gitId":"ongweijie7"},"content":"        expectedModel.updateFilteredPersonList(predicate1);","lastModifiedDate":"2023-03-09"},{"lineNumber":129,"author":{"gitId":"ongweijie7"},"content":"        assertCommandSuccess(command, model, expectedMessage1, expectedModel);","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"ongweijie7"},"content":"        String expectedMessage2 \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"ongweijie7"},"content":"        MedicineContainsKeywordsPredicate predicate2 \u003d prepareAddressPredicate(\"Aspirin\");","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"ongweijie7"},"content":"        FindCommand command2 \u003d new FindCommand(predicate2);","lastModifiedDate":"2023-03-09"},{"lineNumber":135,"author":{"gitId":"ongweijie7"},"content":"        expectedModel.updateFilteredPersonList(predicate2);","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"ongweijie7"},"content":"        assertCommandSuccess(command2, model, expectedMessage2, expectedModel);","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"ongweijie7"},"content":"        assertEquals(Arrays.asList(FIONA), model.getFilteredPersonList());","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"ongweijie7"},"content":"        String expectedMessage3 \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"ongweijie7"},"content":"        TagContainsKeywordsPredicate predicate3 \u003d prepareTagPredicate(\"Epileptic\");","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"ongweijie7"},"content":"        FindCommand command3 \u003d new FindCommand(predicate3);","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"ongweijie7"},"content":"        expectedModel.updateFilteredPersonList(predicate3);","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"ongweijie7"},"content":"        assertCommandSuccess(command3, model, expectedMessage3, expectedModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":144,"author":{"gitId":"ongweijie7"},"content":"        assertEquals(Arrays.asList(DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":146,"author":{"gitId":"ongweijie7"},"content":"        String expectedMessage4 \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 1);","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"ongweijie7"},"content":"        NricContainsKeywordsPredicate predicate4 \u003d prepareNricPredicate(\"S0123456D\");","lastModifiedDate":"2023-03-27"},{"lineNumber":148,"author":{"gitId":"ongweijie7"},"content":"        FindCommand command4 \u003d new FindCommand(predicate4);","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"ongweijie7"},"content":"        expectedModel.updateFilteredPersonList(predicate4);","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"ongweijie7"},"content":"        assertCommandSuccess(command4, model, expectedMessage4, expectedModel);","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"ongweijie7"},"content":"        assertEquals(Arrays.asList(DANIEL), model.getFilteredPersonList());","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":154,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":158,"author":{"gitId":"ongweijie7"},"content":"    private NameContainsKeywordsPredicate prepareNamePredicate(String userInput) {","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":161,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"ongweijie7"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"ongweijie7"},"content":"     * Parses {@code userInput} into a {@code AddressContainsKeywordsPredicate}.","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"ongweijie7"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":165,"author":{"gitId":"ongweijie7"},"content":"    private MedicineContainsKeywordsPredicate prepareAddressPredicate(String userInput) {","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"ongweijie7"},"content":"        return new MedicineContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":168,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"ongweijie7"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"ongweijie7"},"content":"     * Parses {@code userInput} into a {@code NricContainsKeywordsPredicate}.","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"ongweijie7"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"ongweijie7"},"content":"    private NricContainsKeywordsPredicate prepareNricPredicate(String userInput) {","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"ongweijie7"},"content":"        return new NricContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"ongweijie7"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":177,"author":{"gitId":"ongweijie7"},"content":"     * Parses {@code userInput} into a {@code TagContainsKeywordsPredicate}.","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"ongweijie7"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"ongweijie7"},"content":"    private TagContainsKeywordsPredicate prepareTagPredicate(String userInput) {","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"ongweijie7"},"content":"        return new TagContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"ongweijie7":108,"-":74}},{"path":"src/test/java/seedu/address/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2017-06-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false, false, false);","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"CedricPei":1,"-":19}},{"path":"src/test/java/seedu/address/logic/commands/LightModeCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricPei"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":"import static seedu.address.logic.commands.LightModeCommand.MESSAGE_SUCCESS;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"CedricPei"},"content":"public class LightModeCommandTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"CedricPei"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"CedricPei"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":"                new CommandResult(MESSAGE_SUCCESS, false, false, true, false);","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"CedricPei"},"content":"        assertCommandSuccess(new LightModeCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"CedricPei":21}},{"path":"src/test/java/seedu/address/logic/commands/LoadCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.BackupData;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.backup.Backup;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.BackupDataStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"public class LoadCommandTest {","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"    public void constructor_noIndex_throwsCommandException() {","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"dawg420"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LoadCommand(null));","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"    public void constructor_invalidIndex_throwsIllegalArgumentException() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"dawg420"},"content":"        Index invalidIndex \u003d Index.fromOneBased(11);","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"dawg420"},"content":"        ModelStub modelStub \u003d new ModelStubWithGetAddressBook();","lastModifiedDate":"2023-03-26"},{"lineNumber":40,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"dawg420"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new LoadCommand(invalidIndex));","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"    public void equals() {","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"dawg420"},"content":"        Index one \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"dawg420"},"content":"        Index two \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"dawg420"},"content":"        LoadCommand loadCommandOne \u003d new LoadCommand(one);","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"dawg420"},"content":"        LoadCommand loadCommandOneCopy \u003d new LoadCommand(one);","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"dawg420"},"content":"        LoadCommand loadCommandTwo \u003d new LoadCommand(two);","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"dawg420"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"dawg420"},"content":"        assertTrue(loadCommandOne.equals(loadCommandOne));","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"dawg420"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"dawg420"},"content":"        assertTrue(loadCommandOne.equals(loadCommandOneCopy));","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"dawg420"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"dawg420"},"content":"        assertFalse(loadCommandOne.equals(1));","lastModifiedDate":"2023-03-26"},{"lineNumber":60,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"dawg420"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"dawg420"},"content":"        assertFalse(loadCommandOne.equals(null));","lastModifiedDate":"2023-03-26"},{"lineNumber":63,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"dawg420"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"dawg420"},"content":"        assertFalse(loadCommandOne.equals(loadCommandTwo));","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":68,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":69,"author":{"gitId":"dawg420"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2023-03-26"},{"lineNumber":70,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":71,"author":{"gitId":"dawg420"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-26"},{"lineNumber":72,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":73,"author":{"gitId":"dawg420"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-26"},{"lineNumber":74,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":75,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":77,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":78,"author":{"gitId":"dawg420"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":80,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":81,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":83,"author":{"gitId":"dawg420"},"content":"        public UserPrefsStorage getUserPrefsStorage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":84,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":85,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":86,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":87,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":88,"author":{"gitId":"dawg420"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-26"},{"lineNumber":89,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":90,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":91,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":92,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"dawg420"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":97,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":98,"author":{"gitId":"dawg420"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-26"},{"lineNumber":99,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":100,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":101,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":102,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"dawg420"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"dawg420"},"content":"        public void setBackupData(BackupData backupData) {","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":110,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":111,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":112,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":113,"author":{"gitId":"dawg420"},"content":"        public void addBackupToBackupData(Backup backup) {","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"dawg420"},"content":"        public void removeBackupFromBackupData(String index) throws IndexOutOfBoundsException {","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"dawg420"},"content":"        public BackupData getBackupData() {","lastModifiedDate":"2023-03-27"},{"lineNumber":124,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":125,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":126,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":127,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":128,"author":{"gitId":"dawg420"},"content":"        public BackupDataStorage getBackupDataStorage() {","lastModifiedDate":"2023-03-28"},{"lineNumber":129,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-28"},{"lineNumber":130,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":131,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":132,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":133,"author":{"gitId":"dawg420"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":135,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":136,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":137,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":138,"author":{"gitId":"dawg420"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-26"},{"lineNumber":139,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":140,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":142,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":143,"author":{"gitId":"dawg420"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-26"},{"lineNumber":144,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":145,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":146,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":147,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":148,"author":{"gitId":"dawg420"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-26"},{"lineNumber":149,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":150,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":151,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":152,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":153,"author":{"gitId":"dawg420"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-03-26"},{"lineNumber":154,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":155,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":156,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":157,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":158,"author":{"gitId":"dawg420"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-26"},{"lineNumber":159,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":160,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":161,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":162,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":163,"author":{"gitId":"dawg420"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-26"},{"lineNumber":164,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":165,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":166,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":167,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":168,"author":{"gitId":"dawg420"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-26"},{"lineNumber":169,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":170,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":171,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":172,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":173,"author":{"gitId":"dawg420"},"content":"        public void commitAddressBook() {","lastModifiedDate":"2023-03-26"},{"lineNumber":174,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":175,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":176,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":177,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":178,"author":{"gitId":"dawg420"},"content":"        public void undoAddressBook() {","lastModifiedDate":"2023-03-26"},{"lineNumber":179,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":180,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":181,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":182,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":183,"author":{"gitId":"dawg420"},"content":"        public void redoAddressBook() {","lastModifiedDate":"2023-03-26"},{"lineNumber":184,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":185,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":186,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":187,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":188,"author":{"gitId":"dawg420"},"content":"        public boolean canUndoAddressBook() {","lastModifiedDate":"2023-03-26"},{"lineNumber":189,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":190,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":191,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":192,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":193,"author":{"gitId":"dawg420"},"content":"        public boolean canRedoAddressBook() {","lastModifiedDate":"2023-03-26"},{"lineNumber":194,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":195,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":196,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":197,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":198,"author":{"gitId":"dawg420"},"content":"        public Person findPersonByNric(Nric nric) {","lastModifiedDate":"2023-03-26"},{"lineNumber":199,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-26"},{"lineNumber":200,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":201,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":202,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"dawg420"},"content":"        public ObservableList\u003cBackup\u003e getBackupList() throws IllegalValueException {","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"dawg420"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":206,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":207,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":208,"author":{"gitId":"dawg420"},"content":"    private class ModelStubWithGetAddressBook extends ModelStub {","lastModifiedDate":"2023-03-26"},{"lineNumber":209,"author":{"gitId":"dawg420"},"content":"        private final AddressBook addressBook \u003d new AddressBookBuilder().build();","lastModifiedDate":"2023-03-26"},{"lineNumber":210,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":211,"author":{"gitId":"dawg420"},"content":"        @Override","lastModifiedDate":"2023-03-26"},{"lineNumber":212,"author":{"gitId":"dawg420"},"content":"        public AddressBook getAddressBook() {","lastModifiedDate":"2023-03-26"},{"lineNumber":213,"author":{"gitId":"dawg420"},"content":"            return addressBook;","lastModifiedDate":"2023-03-26"},{"lineNumber":214,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-26"},{"lineNumber":215,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":216,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-26"},{"lineNumber":217,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"dawg420":217}},{"path":"src/test/java/seedu/address/logic/commands/RedoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricPei"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_CANNOT_REDO;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"CedricPei"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":"class RedoCommandTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"    private static final String NAME_STUB \u003d \"nameStub\";","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"CedricPei"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"CedricPei"},"content":"    private final Person personStub \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"CedricPei"},"content":"    void execute_initialState_failure() {","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"CedricPei"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"CedricPei"},"content":"        assertCommandFailure(redoCommand, model, MESSAGE_CANNOT_REDO);","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"CedricPei"},"content":"    void execute_redoAddCommand_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"CedricPei"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"CedricPei"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"CedricPei"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"CedricPei"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"CedricPei"},"content":"        expectedModel.addPerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"CedricPei"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"CedricPei"},"content":"    void execute_noNewState_failure() {","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"CedricPei"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"CedricPei"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"CedricPei"},"content":"        assertCommandFailure(redoCommand, model, MESSAGE_CANNOT_REDO);","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"CedricPei"},"content":"    void execute_redoDeleteCommand_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"CedricPei"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"CedricPei"},"content":"        model.deletePerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"CedricPei"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"CedricPei"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"CedricPei"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"CedricPei"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"CedricPei"},"content":"    void execute_redoEditCommand_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"CedricPei"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"CedricPei"},"content":"        Person editedPersonStub \u003d new PersonBuilder(personStub).withName(NAME_STUB).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"CedricPei"},"content":"        model.setPerson(personStub, editedPersonStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"CedricPei"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"CedricPei"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"CedricPei"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"CedricPei"},"content":"        expectedModel.addPerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"CedricPei"},"content":"        expectedModel.setPerson(personStub, editedPersonStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"CedricPei"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"CedricPei"},"content":"    void execute_redoClearCommand_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"CedricPei"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"CedricPei"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"CedricPei"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"CedricPei"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"CedricPei"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"CedricPei"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"CedricPei"},"content":"    void execute_redundantStatesPurged_failure() {","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"CedricPei"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"CedricPei"},"content":"        model.deletePerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"CedricPei"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"CedricPei"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"CedricPei"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"CedricPei"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"CedricPei"},"content":"        assertCommandFailure(redoCommand, model, MESSAGE_CANNOT_REDO);","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":93,"author":{"gitId":"CedricPei"},"content":"    void execute_redoMultipleCommands_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"CedricPei"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"CedricPei"},"content":"        model.deletePerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"CedricPei"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"CedricPei"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"CedricPei"},"content":"        RedoCommand redoCommand \u003d new RedoCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"CedricPei"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"CedricPei"},"content":"            redoCommand.execute(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"CedricPei"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"CedricPei"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"CedricPei"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"CedricPei"},"content":"        assertCommandSuccess(redoCommand, model, RedoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"CedricPei":107}},{"path":"src/test/java/seedu/address/logic/commands/UndoCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricPei"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_CANNOT_UNDO;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"CedricPei"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"CedricPei"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":"class UndoCommandTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"    private static final String NAME_STUB \u003d \"nameStub\";","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"CedricPei"},"content":"    private final Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"CedricPei"},"content":"    private final Person personStub \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"CedricPei"},"content":"    void execute_initialState_failure() {","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"CedricPei"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"CedricPei"},"content":"        assertCommandFailure(undoCommand, model, MESSAGE_CANNOT_UNDO);","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"CedricPei"},"content":"    void execute_undoAddCommand_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"CedricPei"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"CedricPei"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"CedricPei"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"CedricPei"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"CedricPei"},"content":"    void execute_noNewState_failure() {","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"CedricPei"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"CedricPei"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"CedricPei"},"content":"        model.undoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"CedricPei"},"content":"        assertCommandFailure(undoCommand, model, MESSAGE_CANNOT_UNDO);","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"CedricPei"},"content":"    void execute_undoDeleteCommand_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"CedricPei"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"CedricPei"},"content":"        model.deletePerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"CedricPei"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"CedricPei"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"CedricPei"},"content":"        expectedModel.addPerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"CedricPei"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"CedricPei"},"content":"    void execute_undoEditCommand_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"CedricPei"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"CedricPei"},"content":"        Person editedPersonStub \u003d new PersonBuilder(personStub).withName(NAME_STUB).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"CedricPei"},"content":"        model.setPerson(personStub, editedPersonStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"CedricPei"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"CedricPei"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"CedricPei"},"content":"        expectedModel.addPerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"CedricPei"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"CedricPei"},"content":"    void execute_undoClearCommand_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"CedricPei"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"CedricPei"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"CedricPei"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"CedricPei"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"CedricPei"},"content":"        expectedModel.addPerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"CedricPei"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"CedricPei"},"content":"    void execute_undoTwice_success() {","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"CedricPei"},"content":"        model.addPerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"CedricPei"},"content":"        model.deletePerson(personStub);","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"CedricPei"},"content":"        UndoCommand undoCommand \u003d new UndoCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"CedricPei"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"CedricPei"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"CedricPei"},"content":"            undoCommand.execute(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"CedricPei"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2023-03-20"},{"lineNumber":87,"author":{"gitId":"CedricPei"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", e);","lastModifiedDate":"2023-03-20"},{"lineNumber":88,"author":{"gitId":"CedricPei"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"CedricPei"},"content":"        assertCommandSuccess(undoCommand, model, UndoCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":90,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":91,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"CedricPei":91}},{"path":"src/test/java/seedu/address/logic/commands/ViewBackupsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import static seedu.address.testutil.TypicalBackups.getTypicalBackData;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"public class ViewBackupsCommandTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"    private Model model;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"        model \u003d new ModelManager(new AddressBook(), new UserPrefs(),","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"            getTypicalBackData());","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"        expectedModel \u003d new ModelManager(new AddressBook(), new UserPrefs(),","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"            model.getBackupData());","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"    public void execute_success() {","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"        ViewBackupsCommand toTest \u003d new ViewBackupsCommand();","lastModifiedDate":"2023-03-30"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"        assertCommandSuccess(toTest, model, toTest.execute(model), expectedModel);","lastModifiedDate":"2023-03-30"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"dawg420":32}},{"path":"src/test/java/seedu/address/logic/commands/ViewCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.NricContainsKeywordsPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":" * {@code ViewCommand}.","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"public class ViewCommandTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"    public void execute_nricDoesNotExist_throwsCommandException() {","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(new Nric(\"T0000000A\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"        assertCommandFailure(viewCommand, model, Messages.MESSAGE_NRIC_DOES_NOT_EXIST);","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"    public void execute_nricExist_success() {","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"        ViewCommand viewCommand \u003d new ViewCommand(new Nric(\"S1234567A\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"        expectedModel.updateFilteredPersonList(new NricContainsKeywordsPredicate(Arrays.asList(\"S1234567A\")));","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"        assertCommandSuccess(viewCommand, model, ViewCommand.MESSAGE_VIEW_PERSON_SUCCESS, expectedModel);","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"SeanChinJunKai"},"content":"    public void equals() {","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"        ViewCommand viewFirstCommand \u003d new ViewCommand(new Nric(\"T0654321Z\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"        ViewCommand viewSecondCommand \u003d new ViewCommand(new Nric(\"T0123456A\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"SeanChinJunKai"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"        ViewCommand viewFirstCommandCopy \u003d new ViewCommand(new Nric(\"T0654321Z\"));","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2023-03-25"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":60,"author":{"gitId":"SeanChinJunKai"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-25"},{"lineNumber":61,"author":{"gitId":"SeanChinJunKai"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2023-03-25"},{"lineNumber":62,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":63,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"SeanChinJunKai":63}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_DESC_BOB;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOCTOR_DESC_AMY;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DOCTOR_DESC_BOB;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DRUG_ALLERGY_DESC_AMY;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DRUG_ALLERGY_DESC_BOB;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_AMY;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GENDER_DESC_BOB;","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_DESC;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DOCTOR_DESC;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DRUG_ALLERGY_DESC;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC;","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GENDER_DESC_2;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_AMY;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NULL_EMAIL;","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NULL_STRING;","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DRUG_ALLERGY_BOB;","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2023-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DIABETIC;","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_OSTEOPOROTIC;","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":57,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"Creationsv2"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_DIABETIC).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"ongweijie7"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NRIC_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"SeanChinJunKai"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"Creationsv2"},"content":"                + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB + DOCTOR_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"ongweijie7"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"ongweijie7"},"content":"        assertParseSuccess(parser, NRIC_DESC_BOB + NAME_DESC_AMY + NAME_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":85,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"ongweijie7"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"ongweijie7"},"content":"                + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB + DOCTOR_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"ongweijie7"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"ongweijie7"},"content":"        // multiple dates of birth - last date accepted","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"ongweijie7"},"content":"        assertParseSuccess(parser, NRIC_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_AMY","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_AMY + DATE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"SeanChinJunKai"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"Creationsv2"},"content":"                + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB + DOCTOR_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"ongweijie7"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"ongweijie7"},"content":"        assertParseSuccess(parser, NRIC_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_AMY","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"SeanChinJunKai"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"Creationsv2"},"content":"                + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB + DOCTOR_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"ongweijie7"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"ongweijie7"},"content":"        assertParseSuccess(parser, NRIC_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_BOB + EMAIL_DESC_AMY","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"SeanChinJunKai"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"Creationsv2"},"content":"                + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB + DOCTOR_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"ongweijie7"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"ongweijie7"},"content":"        assertParseSuccess(parser, NRIC_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"SeanChinJunKai"},"content":"                + ADDRESS_DESC_AMY + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"Creationsv2"},"content":"                + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB + DOCTOR_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"Creationsv2"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"Creationsv2"},"content":"        // multiple Doctors - last doctor accepted","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"ongweijie7"},"content":"        assertParseSuccess(parser, NRIC_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"ongweijie7"},"content":"                + ADDRESS_DESC_BOB + DRUG_ALLERGY_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"ongweijie7"},"content":"                + GENDER_DESC_BOB + DOCTOR_DESC_AMY + DOCTOR_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"ongweijie7"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"Creationsv2"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_DIABETIC, VALID_TAG_OSTEOPOROTIC)","lastModifiedDate":"2023-03-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":128,"author":{"gitId":"ongweijie7"},"content":"        assertParseSuccess(parser, NRIC_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":130,"author":{"gitId":"ongweijie7"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":131,"author":{"gitId":"ongweijie7"},"content":"                + DRUG_ALLERGY_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-29"},{"lineNumber":132,"author":{"gitId":"ongweijie7"},"content":"                + GENDER_DESC_BOB + DOCTOR_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":133,"author":{"gitId":"ongweijie7"},"content":"                + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":136,"author":{"gitId":"ongweijie7"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"ongweijie7"},"content":"    public void nullStringEmail_failure() {","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"ongweijie7"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":140,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + NULL_EMAIL + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":141,"author":{"gitId":"ongweijie7"},"content":"                + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-29"},{"lineNumber":142,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":143,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + NULL_STRING + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":144,"author":{"gitId":"ongweijie7"},"content":"                + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":151,"author":{"gitId":"ongweijie7"},"content":"        assertParseSuccess(parser, NRIC_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2023-03-29"},{"lineNumber":152,"author":{"gitId":"ongweijie7"},"content":"                        + DATE_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-03-29"},{"lineNumber":153,"author":{"gitId":"ongweijie7"},"content":"                        + EMAIL_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-29"},{"lineNumber":154,"author":{"gitId":"ongweijie7"},"content":"                        + DRUG_ALLERGY_DESC_AMY + GENDER_DESC_AMY + DOCTOR_DESC_AMY,","lastModifiedDate":"2023-03-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":163,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":164,"author":{"gitId":"ongweijie7"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":165,"author":{"gitId":"ongweijie7"},"content":"                + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"ongweijie7"},"content":"        // missing DOB prefix","lastModifiedDate":"2023-03-29"},{"lineNumber":168,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_DATE_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":169,"author":{"gitId":"ongweijie7"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"ongweijie7"},"content":"                + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-26"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":173,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + DATE_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"ongweijie7"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"ongweijie7"},"content":"                + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":178,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":179,"author":{"gitId":"ongweijie7"},"content":"                + VALID_EMAIL_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":180,"author":{"gitId":"ongweijie7"},"content":"                + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":183,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"ongweijie7"},"content":"                + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"ongweijie7"},"content":"                + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-26"},{"lineNumber":186,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":187,"author":{"gitId":"ongweijie7"},"content":"        //missing drug allergy prefix","lastModifiedDate":"2023-03-26"},{"lineNumber":188,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"ongweijie7"},"content":"                + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":190,"author":{"gitId":"ongweijie7"},"content":"                + VALID_DRUG_ALLERGY_BOB + GENDER_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-26"},{"lineNumber":191,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":192,"author":{"gitId":"ongweijie7"},"content":"        //missing gender prefix","lastModifiedDate":"2023-03-26"},{"lineNumber":193,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + DATE_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":194,"author":{"gitId":"ongweijie7"},"content":"                + EMAIL_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"ongweijie7"},"content":"                + DRUG_ALLERGY_DESC_BOB + VALID_GENDER_BOB, expectedMessage);","lastModifiedDate":"2023-03-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":198,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + DATE_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"ongweijie7"},"content":"                        + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":205,"author":{"gitId":"Creationsv2"},"content":"        // invalid nric","lastModifiedDate":"2023-03-12"},{"lineNumber":206,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC + NAME_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":207,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":208,"author":{"gitId":"Creationsv2"},"content":"                + ADDRESS_DESC_BOB + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB + DOCTOR_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-29"},{"lineNumber":209,"author":{"gitId":"SeanChinJunKai"},"content":"                + TAG_DESC_FRIEND, Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":210,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":212,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + INVALID_NAME_DESC","lastModifiedDate":"2023-03-29"},{"lineNumber":213,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":214,"author":{"gitId":"Creationsv2"},"content":"                + ADDRESS_DESC_BOB + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB + DOCTOR_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-29"},{"lineNumber":215,"author":{"gitId":"SeanChinJunKai"},"content":"                + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":217,"author":{"gitId":"ongweijie7"},"content":"        // invalid name","lastModifiedDate":"2023-03-29"},{"lineNumber":218,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":219,"author":{"gitId":"ongweijie7"},"content":"                + INVALID_DATE_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":220,"author":{"gitId":"ongweijie7"},"content":"                + ADDRESS_DESC_BOB + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB + DOCTOR_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-29"},{"lineNumber":221,"author":{"gitId":"ongweijie7"},"content":"                + TAG_DESC_FRIEND, DateOfBirth.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":224,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":225,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":226,"author":{"gitId":"Creationsv2"},"content":"                + ADDRESS_DESC_BOB + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB + DOCTOR_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-29"},{"lineNumber":227,"author":{"gitId":"SeanChinJunKai"},"content":"                + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":230,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":231,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC","lastModifiedDate":"2023-03-29"},{"lineNumber":232,"author":{"gitId":"Creationsv2"},"content":"                + ADDRESS_DESC_BOB + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB + DOCTOR_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-29"},{"lineNumber":233,"author":{"gitId":"SeanChinJunKai"},"content":"                + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":236,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":237,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":238,"author":{"gitId":"Creationsv2"},"content":"                + INVALID_ADDRESS_DESC + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB + DOCTOR_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-29"},{"lineNumber":239,"author":{"gitId":"SeanChinJunKai"},"content":"                + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":240,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":241,"author":{"gitId":"SeanChinJunKai"},"content":"        // invalid drug allergy","lastModifiedDate":"2023-03-22"},{"lineNumber":242,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":243,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":244,"author":{"gitId":"Creationsv2"},"content":"                + ADDRESS_DESC_BOB + INVALID_DRUG_ALLERGY_DESC + GENDER_DESC_BOB + DOCTOR_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-29"},{"lineNumber":245,"author":{"gitId":"SeanChinJunKai"},"content":"                + TAG_DESC_FRIEND, DrugAllergy.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":247,"author":{"gitId":"ongweijie7"},"content":"        // invalid gender","lastModifiedDate":"2023-03-26"},{"lineNumber":248,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":249,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":250,"author":{"gitId":"Creationsv2"},"content":"                + ADDRESS_DESC_BOB + DRUG_ALLERGY_DESC_BOB + INVALID_GENDER_DESC + DOCTOR_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-29"},{"lineNumber":251,"author":{"gitId":"ongweijie7"},"content":"                + TAG_DESC_FRIEND, Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-26"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":253,"author":{"gitId":"dawg420"},"content":"        // multiple gender","lastModifiedDate":"2023-03-27"},{"lineNumber":254,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":255,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":256,"author":{"gitId":"dawg420"},"content":"                + ADDRESS_DESC_BOB + DRUG_ALLERGY_DESC_BOB + INVALID_GENDER_DESC_2 + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-27"},{"lineNumber":257,"author":{"gitId":"dawg420"},"content":"                + TAG_DESC_FRIEND, Gender.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":258,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":259,"author":{"gitId":"Creationsv2"},"content":"        // invalid doctor","lastModifiedDate":"2023-03-29"},{"lineNumber":260,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":261,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":262,"author":{"gitId":"Creationsv2"},"content":"                + ADDRESS_DESC_BOB + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB + INVALID_DOCTOR_DESC + TAG_DESC_HUSBAND","lastModifiedDate":"2023-03-29"},{"lineNumber":263,"author":{"gitId":"Creationsv2"},"content":"                + TAG_DESC_FRIEND, Doctor.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":266,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + NAME_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":267,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":268,"author":{"gitId":"Creationsv2"},"content":"                + ADDRESS_DESC_BOB + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB + DOCTOR_DESC_BOB + INVALID_TAG_DESC","lastModifiedDate":"2023-03-29"},{"lineNumber":269,"author":{"gitId":"Creationsv2"},"content":"                + VALID_TAG_DIABETIC, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":273,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, NRIC_DESC_BOB + INVALID_NAME_DESC","lastModifiedDate":"2023-03-29"},{"lineNumber":274,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":275,"author":{"gitId":"Creationsv2"},"content":"                + INVALID_ADDRESS_DESC + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB + DOCTOR_DESC_BOB,","lastModifiedDate":"2023-03-29"},{"lineNumber":276,"author":{"gitId":"Creationsv2"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":279,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NRIC_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":280,"author":{"gitId":"ongweijie7"},"content":"                + DATE_DESC_BOB + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":281,"author":{"gitId":"SeanChinJunKai"},"content":"                + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-22"},{"lineNumber":282,"author":{"gitId":"Creationsv2"},"content":"                + DRUG_ALLERGY_DESC_BOB + GENDER_DESC_BOB + DOCTOR_DESC_BOB","lastModifiedDate":"2023-03-29"},{"lineNumber":283,"author":{"gitId":"ongweijie7"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-26"},{"lineNumber":284,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"SeanChinJunKai":18,"dawg420":5,"ongweijie7":119,"Creationsv2":37,"-":107}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"CedricPei"},"content":"import seedu.address.logic.commands.RedoCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"CedricPei"},"content":"import seedu.address.logic.commands.UndoCommand;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.NricContainsKeywordsPredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + \"i/T0123456A\");","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"        Set\u003cNric\u003e nricList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"SeanChinJunKai"},"content":"        nricList.add(new Nric(\"T0123456A\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"SeanChinJunKai"},"content":"        assertEquals(new DeleteCommand(nricList), command);","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"Creationsv2"},"content":"        System.out.println(PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"ongweijie7"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"n/\", \"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"ongweijie7"},"content":"        List\u003cString\u003e keywords2 \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"ongweijie7"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords2)), command);","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"ongweijie7"},"content":"        keywords \u003d Arrays.asList(\"i/\", \"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-03-20"},{"lineNumber":89,"author":{"gitId":"ongweijie7"},"content":"        keywords2 \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"ongweijie7"},"content":"        command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"ongweijie7"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"ongweijie7"},"content":"        assertEquals(new FindCommand(new NricContainsKeywordsPredicate(keywords2)), command);","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"CedricPei"},"content":"    public void parseCommand_undo() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"CedricPei"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD) instanceof UndoCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"CedricPei"},"content":"        assertTrue(parser.parseCommand(UndoCommand.COMMAND_WORD + \" 3\") instanceof UndoCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"CedricPei"},"content":"    public void parseCommand_redo() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"CedricPei"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD) instanceof RedoCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"CedricPei"},"content":"        assertTrue(parser.parseCommand(RedoCommand.COMMAND_WORD + \" 3\") instanceof RedoCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"CedricPei":14,"SeanChinJunKai":7,"ongweijie7":10,"Creationsv2":1,"-":97}},{"path":"src/test/java/seedu/address/logic/parser/BackupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import seedu.address.logic.commands.BackupCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"public class BackupCommandParserTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"    public void parser_indexOutOfRange_throwsParseException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"        String invalidArgs11 \u003d \"backup 11\";","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"        String invalidArgs0 \u003d \"backup 0\";","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"                        BackupCommand.MESSAGE_USAGE), () -\u003e new BackupCommandParser().parse(invalidArgs11));","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"        assertThrows(ParseException.class,","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"                        BackupCommand.MESSAGE_USAGE), () -\u003e new BackupCommandParser().parse(invalidArgs0));","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"dawg420":26}},{"path":"src/test/java/seedu/address/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parse_nricFieldPresent_success() {","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"        Set\u003cNric\u003e nricList \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"        nricList.add(new Nric(VALID_NRIC_BOB));","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NRIC_DESC_BOB, new DeleteCommand(nricList));","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":38,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parse_nricFieldMissing_failure() {","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"SeanChinJunKai"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"SeanChinJunKai"},"content":"        assertParseFailure(parser, VALID_NRIC_BOB, expectedMessage);","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC , Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"SeanChinJunKai":16,"-":31}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_MEDICINE_DESC;","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.MEDICINE_DESC_PANADOL;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MEDICINE_PANADOL;","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DIABETIC;","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_OSTEOPOROTIC;","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.medicine.Medicine;","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"Creationsv2"},"content":"        assertParseFailure(parser, \"1 z/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"dawg420"},"content":"        assertParseFailure(parser, \"1\" + INVALID_MEDICINE_DESC, Medicine.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":117,"author":{"gitId":"dawg420"},"content":"            + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND + MEDICINE_DESC_PANADOL;","lastModifiedDate":"2023-03-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"dawg420"},"content":"            .withTags(VALID_TAG_DIABETIC, VALID_TAG_OSTEOPOROTIC).withMedicines(VALID_MEDICINE_PANADOL).build();","lastModifiedDate":"2023-03-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"Creationsv2"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_DIABETIC).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"Creationsv2"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-24"},{"lineNumber":182,"author":{"gitId":"Creationsv2"},"content":"            .withTags(VALID_TAG_DIABETIC, VALID_TAG_OSTEOPOROTIC)","lastModifiedDate":"2023-03-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"dawg420":7,"Creationsv2":6,"-":204}},{"path":"src/test/java/seedu/address/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.model.person.DoctorContainsKeywordsPredicate;","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.MedicineContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.NricContainsKeywordsPredicate;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.model.person.TagContainsKeywordsPredicate;","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"ongweijie7"},"content":"    public void parse_multiplePrefixes_throwsParseException() {","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, \" n/ m/ Bob\",","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MULTIPLE_PREFIX_MESSAGE));","lastModifiedDate":"2023-04-06"},{"lineNumber":32,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, \" n/ i/ Bob\",","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MULTIPLE_PREFIX_MESSAGE));","lastModifiedDate":"2023-04-06"},{"lineNumber":34,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, \" n/ i/ m/ t/ tokyo\",","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MULTIPLE_PREFIX_MESSAGE));","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, \" n/ i/ m/ Bob\",","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MULTIPLE_PREFIX_MESSAGE));","lastModifiedDate":"2023-04-06"},{"lineNumber":38,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"ongweijie7"},"content":"    public void parse_validArgs_returnsFindNameCommand() {","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"ongweijie7"},"content":"        assertParseSuccess(parser, \" n/Alice Bob\", expectedFindCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"ongweijie7"},"content":"        assertParseSuccess(parser, \"\\n n/Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"ongweijie7"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"ongweijie7"},"content":"    public void parse_validArgs_returnsFindAddressCommand() throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"ongweijie7"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"ongweijie7"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"ongweijie7"},"content":"                new FindCommand(new MedicineContainsKeywordsPredicate(Arrays.asList(\"Aspirin\")));","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"ongweijie7"},"content":"        assertParseSuccess(parser, \" m/Aspirin\", expectedFindCommand);","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"ongweijie7"},"content":"        assertParseSuccess(parser, \"\\n m/Aspirin \\n \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"ongweijie7"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"ongweijie7"},"content":"    public void parse_validArgs_returnsFindNricCommand() {","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"ongweijie7"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"ongweijie7"},"content":"        FindCommand nricFindCommand \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":68,"author":{"gitId":"ongweijie7"},"content":"                new FindCommand(new NricContainsKeywordsPredicate(Arrays.asList(\"S0123456D\")));","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"ongweijie7"},"content":"        assertParseSuccess(parser, \" i/S0123456D\", nricFindCommand);","lastModifiedDate":"2023-03-27"},{"lineNumber":70,"author":{"gitId":"ongweijie7"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"ongweijie7"},"content":"        assertParseSuccess(parser, \"\\n i/S0123456D \\n \\t\", nricFindCommand);","lastModifiedDate":"2023-03-27"},{"lineNumber":72,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"Creationsv2"},"content":"    public void parse_validArgs_returnsFindTagCommand() {","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"Creationsv2"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"Creationsv2"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"Creationsv2"},"content":"                new FindCommand(new TagContainsKeywordsPredicate(Arrays.asList(\"Diabetic\")));","lastModifiedDate":"2023-03-24"},{"lineNumber":79,"author":{"gitId":"Creationsv2"},"content":"        assertParseSuccess(parser, \" t/Diabetic\", expectedFindCommand);","lastModifiedDate":"2023-03-24"},{"lineNumber":80,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":81,"author":{"gitId":"Creationsv2"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-24"},{"lineNumber":82,"author":{"gitId":"Creationsv2"},"content":"        assertParseSuccess(parser, \"\\n t/Diabetic \\n \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-24"},{"lineNumber":83,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":84,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":85,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"Creationsv2"},"content":"    public void parse_validArgs_returnsFindDoctorCommand() {","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"Creationsv2"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"Creationsv2"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"Creationsv2"},"content":"                new FindCommand(new DoctorContainsKeywordsPredicate(Arrays.asList(\"Alex\", \"Ben\")));","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"Creationsv2"},"content":"        assertParseSuccess(parser, \" ad/Alex Ben\", expectedFindCommand);","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":92,"author":{"gitId":"Creationsv2"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2023-03-29"},{"lineNumber":93,"author":{"gitId":"Creationsv2"},"content":"        assertParseSuccess(parser, \"\\n ad/Alex \\n \\t Ben  \\t\", expectedFindCommand);","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":95,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"ongweijie7"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"ongweijie7"},"content":"    public void parse_invalidCommand_throwsParseException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"ongweijie7"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, \" a/     \",","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"ongweijie7"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, \" a/    \",","lastModifiedDate":"2023-03-27"},{"lineNumber":102,"author":{"gitId":"ongweijie7"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, \" t/    \",","lastModifiedDate":"2023-03-27"},{"lineNumber":104,"author":{"gitId":"ongweijie7"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"ongweijie7"},"content":"        assertParseFailure(parser, \" i/    \",","lastModifiedDate":"2023-03-27"},{"lineNumber":106,"author":{"gitId":"ongweijie7"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"ongweijie7":45,"Creationsv2":28,"-":36}},{"path":"src/test/java/seedu/address/logic/parser/LoadCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import seedu.address.logic.commands.LoadCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"public class LoadCommandParserTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"    public void constructor_noIndex_throwsCommandException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"        assertThrows(NullPointerException.class, () -\u003e new LoadCommand(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"dawg420":16}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"ongweijie7"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"    private static final String INVALID_NRIC \u003d \"A0123456A\";","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"    private static final String INVALID_DRUG_ALLERGY \u003d \" \";","lastModifiedDate":"2023-03-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"    private static final String INVALID_TAG \u003d \"#Diabetic\";","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":36,"author":{"gitId":"SeanChinJunKai"},"content":"    private static final String VALID_NRIC_1 \u003d \"T0123456A\";","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"SeanChinJunKai"},"content":"    private static final String VALID_NRIC_2 \u003d \"S2345678B\";","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"    private static final String VALID_DRUG_ALLERGY \u003d \"NKDA\";","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"    private static final String VALID_TAG_1 \u003d \"Diabetic\";","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"Creationsv2"},"content":"    private static final String VALID_TAG_2 \u003d \"Osteoporotic\";","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parseNric_invalidFormat_throwsParseException() {","lastModifiedDate":"2023-03-26"},{"lineNumber":50,"author":{"gitId":"SeanChinJunKai"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNric(INVALID_NRIC));","lastModifiedDate":"2023-03-26"},{"lineNumber":51,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parseNric_validNric_success() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"SeanChinJunKai"},"content":"        // No whitespaces","lastModifiedDate":"2023-03-26"},{"lineNumber":56,"author":{"gitId":"SeanChinJunKai"},"content":"        assertEquals(new Nric(VALID_NRIC_1), ParserUtil.parseNric(VALID_NRIC_1));","lastModifiedDate":"2023-03-28"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":58,"author":{"gitId":"SeanChinJunKai"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"SeanChinJunKai"},"content":"        assertEquals(new Nric(VALID_NRIC_1), ParserUtil.parseNric(\"  \" + VALID_NRIC_1 + \"  \"));","lastModifiedDate":"2023-03-28"},{"lineNumber":60,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":61,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":129,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parseDrugAllergy_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-26"},{"lineNumber":130,"author":{"gitId":"SeanChinJunKai"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseDrugAllergy((String) null));","lastModifiedDate":"2023-03-26"},{"lineNumber":131,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":132,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":133,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parseDrugAllergy_invalidValue_throwsNullPointerException() {","lastModifiedDate":"2023-03-26"},{"lineNumber":135,"author":{"gitId":"SeanChinJunKai"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDrugAllergy(INVALID_DRUG_ALLERGY));","lastModifiedDate":"2023-03-26"},{"lineNumber":136,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":137,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":138,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":139,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parseDrugAllergy_validValueWithoutWhitespace_returnsDrugAllergy() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":140,"author":{"gitId":"SeanChinJunKai"},"content":"        DrugAllergy expectedDrugAllergy \u003d new DrugAllergy(VALID_DRUG_ALLERGY);","lastModifiedDate":"2023-03-26"},{"lineNumber":141,"author":{"gitId":"SeanChinJunKai"},"content":"        assertEquals(expectedDrugAllergy, ParserUtil.parseDrugAllergy(VALID_DRUG_ALLERGY));","lastModifiedDate":"2023-03-26"},{"lineNumber":142,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":143,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":144,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":145,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parseDrugAllergy_validValueWithWhitespace_returnsTrimmedDrugAllergy() throws Exception {","lastModifiedDate":"2023-03-26"},{"lineNumber":146,"author":{"gitId":"SeanChinJunKai"},"content":"        String drugAllergyWithWhitespace \u003d WHITESPACE + VALID_DRUG_ALLERGY + WHITESPACE;","lastModifiedDate":"2023-03-26"},{"lineNumber":147,"author":{"gitId":"SeanChinJunKai"},"content":"        DrugAllergy expectedDrugAllergy \u003d new DrugAllergy(VALID_DRUG_ALLERGY);","lastModifiedDate":"2023-03-26"},{"lineNumber":148,"author":{"gitId":"SeanChinJunKai"},"content":"        assertEquals(expectedDrugAllergy, ParserUtil.parseDrugAllergy(drugAllergyWithWhitespace));","lastModifiedDate":"2023-03-26"},{"lineNumber":149,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":150,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"ongweijie7"},"content":"    public void parseEmail_null_doesNotThrowNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"ongweijie7"},"content":"        assertDoesNotThrow(() -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2023-03-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":242,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":243,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parseNrics_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":244,"author":{"gitId":"SeanChinJunKai"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseNrics(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":245,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":246,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":247,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":248,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parseNrics_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":249,"author":{"gitId":"SeanChinJunKai"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseNrics(Arrays.asList(VALID_NRIC_1, INVALID_NRIC)));","lastModifiedDate":"2023-03-28"},{"lineNumber":250,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":251,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":252,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":253,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parseNrics_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":254,"author":{"gitId":"SeanChinJunKai"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2023-03-28"},{"lineNumber":255,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":257,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":258,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parseNrics_collectionWithValidNrics_returnsNricSet() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":259,"author":{"gitId":"SeanChinJunKai"},"content":"        Set\u003cNric\u003e actualNricSet \u003d ParserUtil.parseNrics(Arrays.asList(VALID_NRIC_1, VALID_NRIC_2));","lastModifiedDate":"2023-03-28"},{"lineNumber":260,"author":{"gitId":"SeanChinJunKai"},"content":"        Set\u003cNric\u003e expectedNricSet \u003d new HashSet\u003cNric\u003e(Arrays.asList(new Nric(VALID_NRIC_1), new Nric(VALID_NRIC_2)));","lastModifiedDate":"2023-03-28"},{"lineNumber":261,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":262,"author":{"gitId":"SeanChinJunKai"},"content":"        assertEquals(expectedNricSet, actualNricSet);","lastModifiedDate":"2023-03-28"},{"lineNumber":263,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"SeanChinJunKai":67,"ongweijie7":3,"Creationsv2":3,"-":191}},{"path":"src/test/java/seedu/address/logic/parser/ViewCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NRIC_DESC;","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NRIC_DESC_BOB;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.logic.commands.ViewCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"public class ViewCommandParserTest {","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"    private ViewCommandParser parser \u003d new ViewCommandParser();","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parse_nricFieldPresent_success() {","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NRIC_DESC_BOB, new ViewCommand(new Nric(VALID_NRIC_BOB)));","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parse_nricFieldMissing_failure() {","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, ViewCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"        assertParseFailure(parser, VALID_NRIC_BOB, expectedMessage);","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"        assertParseFailure(parser, INVALID_NRIC_DESC , Nric.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"SeanChinJunKai":35}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_OSTEOPOROTIC;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"Creationsv2"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_OSTEOPOROTIC)","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"Creationsv2"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_OSTEOPOROTIC)","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Creationsv2":3,"-":99}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"import static seedu.address.ui.theme.Theme.DEFAULT_THEME;","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"CedricPei"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4, DEFAULT_THEME.toString()));","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"CedricPei"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4, DEFAULT_THEME.toString());","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":98,"author":{"gitId":"CedricPei"},"content":"    public void commitAddressBook_addPerson_returnsTrue() {","lastModifiedDate":"2023-03-20"},{"lineNumber":99,"author":{"gitId":"CedricPei"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":100,"author":{"gitId":"CedricPei"},"content":"        ModelManager editableModelManager \u003d new ModelManager(addressBook, new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":101,"author":{"gitId":"CedricPei"},"content":"        editableModelManager.commitAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"CedricPei"},"content":"        assertTrue(editableModelManager.canUndoAddressBook());","lastModifiedDate":"2023-03-20"},{"lineNumber":103,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"CedricPei"},"content":"    public void undoAddressBook_addPerson_returnsFalse() {","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"CedricPei"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"CedricPei"},"content":"        ModelManager editableModelManager \u003d new ModelManager(addressBook, new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"CedricPei"},"content":"        editableModelManager.commitAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":110,"author":{"gitId":"CedricPei"},"content":"        editableModelManager.undoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"CedricPei"},"content":"        assertFalse(editableModelManager.canUndoAddressBook());","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"CedricPei"},"content":"    public void undoAddressBook_initialAddressBook_noChange() {","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"CedricPei"},"content":"        ModelManager actualModelManager \u003d new ModelManager();","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"CedricPei"},"content":"        actualModelManager.undoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"CedricPei"},"content":"        assertEquals(new AddressBook(), actualModelManager.getAddressBook());","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"CedricPei"},"content":"    public void redoAddressBook_addPerson_returnsFalse() {","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"CedricPei"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).build();","lastModifiedDate":"2023-03-20"},{"lineNumber":124,"author":{"gitId":"CedricPei"},"content":"        ModelManager editableModelManager \u003d new ModelManager(addressBook, new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"CedricPei"},"content":"        editableModelManager.commitAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":126,"author":{"gitId":"CedricPei"},"content":"        editableModelManager.undoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"CedricPei"},"content":"        editableModelManager.redoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"CedricPei"},"content":"        assertFalse(editableModelManager.canRedoAddressBook());","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":131,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":132,"author":{"gitId":"CedricPei"},"content":"    public void redoAddressBook_initialAddressBook_noChange() {","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"CedricPei"},"content":"        ModelManager actualModelManager \u003d new ModelManager();","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"CedricPei"},"content":"        actualModelManager.redoAddressBook();","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"CedricPei"},"content":"        assertEquals(new AddressBook(), actualModelManager.getAddressBook());","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"CedricPei":44,"-":130}},{"path":"src/test/java/seedu/address/model/VersionedAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"CedricPei"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"CedricPei"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"CedricPei"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"CedricPei"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"CedricPei"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"CedricPei"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"CedricPei"},"content":"import seedu.address.commons.exceptions.CannotRedoAddressBookException;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"CedricPei"},"content":"import seedu.address.commons.exceptions.CannotUndoAddressBookException;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"CedricPei"},"content":"class VersionedAddressBookTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"CedricPei"},"content":"    private final VersionedAddressBook addressBook \u003d new VersionedAddressBook(new AddressBook());","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"CedricPei"},"content":"    public void constructor() {","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"CedricPei"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"CedricPei"},"content":"    public void constructor_withNonEmptyAddressBookAndEmptyStateList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"CedricPei"},"content":"        VersionedAddressBook versionedAddressBook \u003d new VersionedAddressBook(getTypicalAddressBook(),","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"CedricPei"},"content":"                Collections.emptyList());","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"CedricPei"},"content":"        assertEquals(versionedAddressBook.getPersonList(), getTypicalAddressBook().getPersonList());","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"CedricPei"},"content":"    public void constructor_withEmptyStateList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"CedricPei"},"content":"        VersionedAddressBook versionedAddressBook \u003d new VersionedAddressBook(Collections.emptyList());","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"CedricPei"},"content":"        assertEquals(Collections.emptyList(), versionedAddressBook.getPersonList());","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"CedricPei"},"content":"    void commit_newAddressBook_noStatesRemovedCurrentStateSaved() {","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"CedricPei"},"content":"        addressBook.commit();","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"CedricPei"},"content":"        assertEquals(addressBook.getAddressBookStateList().size(), 2);","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"CedricPei"},"content":"    void undo_initialState_throwsCannotUndoAddressBookException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"CedricPei"},"content":"        assertThrows(CannotUndoAddressBookException.class, () -\u003e addressBook.undo());","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"CedricPei"},"content":"    void redo_initialState_throwsCannotRedoAddressBookException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"CedricPei"},"content":"        assertThrows(CannotRedoAddressBookException.class, () -\u003e addressBook.redo());","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"CedricPei"},"content":"    void canUndo_initialState_returnsFalse() {","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"CedricPei"},"content":"        assertEquals(addressBook.canUndo(), false);","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"CedricPei"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"CedricPei"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"CedricPei"},"content":"    void canRedo_initialState_returnsFalse() {","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"CedricPei"},"content":"        assertEquals(addressBook.canRedo(), false);","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"CedricPei"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"CedricPei"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"CedricPei":61}},{"path":"src/test/java/seedu/address/model/medicine/MedicineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.model.medicine;","lastModifiedDate":"2023-03-26"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-26"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-26"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"public class MedicineTest {","lastModifiedDate":"2023-03-26"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Medicine(null));","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"    public void constructor_invalidMedicineName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"        String invalidMedicineName \u003d \"\";","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Medicine(invalidMedicineName));","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"    public void isValidMedicineName() {","lastModifiedDate":"2023-03-26"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"        // null medicine name","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"        assertThrows(NullPointerException.class, () -\u003e Medicine.isValidMedicineName(null));","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"dawg420":26}},{"path":"src/test/java/seedu/address/model/person/DateOfBirthTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ongweijie7"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"ongweijie7"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"ongweijie7"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"ongweijie7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"ongweijie7"},"content":"public class DateOfBirthTest {","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"ongweijie7"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"ongweijie7"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"ongweijie7"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"ongweijie7"},"content":"    @Test","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"ongweijie7"},"content":"    public void isValidDateOfBirth() {","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"ongweijie7"},"content":"        // null dates","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"ongweijie7"},"content":"        assertThrows(NullPointerException.class, () -\u003e DateOfBirth.isValidDate(null));","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"ongweijie7"},"content":"        // empty string for dates","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(DateOfBirth.isValidDate(\"\")); // empty string","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(DateOfBirth.isValidDate(\" \")); // spaces only","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"ongweijie7"},"content":"        // invalid format","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(DateOfBirth.isValidDate(\"29/02/2001321\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(DateOfBirth.isValidDate(\"29/0232/2001\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(DateOfBirth.isValidDate(\"291/02/2001\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(DateOfBirth.isValidDate(\"29/022001\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(DateOfBirth.isValidDate(\"2902/2001\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"ongweijie7"},"content":"        // invalid months with 31 days","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(DateOfBirth.isValidDate(\"29/02/2001\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(DateOfBirth.isValidDate(\"30/02/2001\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(DateOfBirth.isValidDate(\"31/02/2001\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(DateOfBirth.isValidDate(\"31/04/2001\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(DateOfBirth.isValidDate(\"31/06/2001\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(DateOfBirth.isValidDate(\"31/09/2001\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(DateOfBirth.isValidDate(\"31/11/2001\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"ongweijie7"},"content":"        //invalid months","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(DateOfBirth.isValidDate(\"15/15/2001\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(DateOfBirth.isValidDate(\"15/00/2001\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"ongweijie7"},"content":"        // valid february dates","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"28/02/2001\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"29/02/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"ongweijie7"},"content":"        // valid months with 31 days","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"31/01/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"31/03/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"31/05/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"31/07/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"31/08/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"31/10/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"31/12/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"ongweijie7"},"content":"        // valid months with 30 days","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"30/01/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"31/03/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"30/04/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"30/05/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"30/06/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"30/07/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"30/08/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"30/09/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"30/09/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"30/10/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"30/11/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(DateOfBirth.isValidDate(\"30/12/2000\"));","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"ongweijie7"},"content":"}","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"ongweijie7":72}},{"path":"src/test/java/seedu/address/model/person/DoctorContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"import java.util.List;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"public class DoctorContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"    public void equals() {","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"        DoctorContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"                new DoctorContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"        DoctorContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"                new DoctorContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"        DoctorContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"                new DoctorContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":45,"author":{"gitId":"Creationsv2"},"content":"    public void test_doctorContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"        // One keyword","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"        DoctorContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"Creationsv2"},"content":"                new DoctorContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(predicate.test(new PersonBuilder().withDoctor(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":51,"author":{"gitId":"Creationsv2"},"content":"        // Multiple keywords","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"Creationsv2"},"content":"        predicate \u003d new DoctorContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":53,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(predicate.test(new PersonBuilder().withDoctor(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":55,"author":{"gitId":"Creationsv2"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"Creationsv2"},"content":"        predicate \u003d new DoctorContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":57,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(predicate.test(new PersonBuilder().withDoctor(\"Alice Carol\").build()));","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"Creationsv2"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"Creationsv2"},"content":"        predicate \u003d new DoctorContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(predicate.test(new PersonBuilder().withDoctor(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"Creationsv2"},"content":"    public void test_doctorDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"Creationsv2"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"Creationsv2"},"content":"        DoctorContainsKeywordsPredicate predicate \u003d new DoctorContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(predicate.test(new PersonBuilder().withDoctor(\"Alice\").build()));","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"Creationsv2"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"Creationsv2"},"content":"        predicate \u003d new DoctorContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(predicate.test(new PersonBuilder().withDoctor(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"Creationsv2"},"content":"        // Keywords match phone, email and address, but does not match doctor","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Creationsv2"},"content":"        predicate \u003d new DoctorContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(predicate.test(new PersonBuilder().withDoctor(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"Creationsv2"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Creationsv2":79}},{"path":"src/test/java/seedu/address/model/person/DoctorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-29"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"public class DoctorTest {","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"    public void constructor_invalidDoctor_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Doctor(invalidName));","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"    public void isValidDoctor() {","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"        // null name","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"        assertThrows(NullPointerException.class, () -\u003e Doctor.isValidDoctor(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"        // invalid name","lastModifiedDate":"2023-03-29"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(Doctor.isValidDoctor(\"\")); // empty string","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(Doctor.isValidDoctor(\" \")); // spaces only","lastModifiedDate":"2023-03-29"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(Doctor.isValidDoctor(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(Doctor.isValidDoctor(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-29"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"        // valid name","lastModifiedDate":"2023-03-29"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(Doctor.isValidDoctor(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-03-29"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(Doctor.isValidDoctor(\"12345\")); // numbers only","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(Doctor.isValidDoctor(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-03-29"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(Doctor.isValidDoctor(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-03-29"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(Doctor.isValidDoctor(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-03-29"}],"authorContributionMap":{"Creationsv2":39}},{"path":"src/test/java/seedu/address/model/person/DrugAllergyTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"SeanChinJunKai"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"SeanChinJunKai"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"SeanChinJunKai"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"SeanChinJunKai"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"SeanChinJunKai"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"SeanChinJunKai"},"content":"public class DrugAllergyTest {","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"SeanChinJunKai"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"        assertThrows(NullPointerException.class, () -\u003e new DrugAllergy(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"SeanChinJunKai"},"content":"    public void constructor_invalidDrugAllergy_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"SeanChinJunKai"},"content":"        String invalidDrugAllergy \u003d \"\";","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"SeanChinJunKai"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new DrugAllergy(invalidDrugAllergy));","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"SeanChinJunKai"},"content":"    public void isValidAddress() {","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"SeanChinJunKai"},"content":"        // null address","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"SeanChinJunKai"},"content":"        assertThrows(NullPointerException.class, () -\u003e DrugAllergy.isValidDrugAllergy(null));","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"SeanChinJunKai"},"content":"        // invalid addresses","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"SeanChinJunKai"},"content":"        assertFalse(DrugAllergy.isValidDrugAllergy(\"\")); // empty string","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"SeanChinJunKai"},"content":"        assertFalse(DrugAllergy.isValidDrugAllergy(\" \")); // spaces only","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"SeanChinJunKai"},"content":"        // valid addresses","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"SeanChinJunKai"},"content":"        assertTrue(DrugAllergy.isValidDrugAllergy(\"Panadol\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"        assertTrue(DrugAllergy.isValidDrugAllergy(\"X\")); // one character trade name for the drug, Xenazine","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"SeanChinJunKai"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"SeanChinJunKai":34}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(Email.isValidEmail(\"----\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(Email.isValidEmail(\"   ----   \"));","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(Email.isValidEmail(\"-  -\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(Email.isValidEmail(\"   -  -   \"));","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(Email.isValidEmail(\"     -    \"));","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(Email.isValidEmail(\"-            \"));","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(Email.isValidEmail(\"            -\"));","lastModifiedDate":"2023-03-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"ongweijie7":7,"-":68}},{"path":"src/test/java/seedu/address/model/person/MedicineContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ongweijie7"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"ongweijie7"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ongweijie7"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"ongweijie7"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"ongweijie7"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"ongweijie7"},"content":"import java.util.List;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"ongweijie7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"ongweijie7"},"content":"public class MedicineContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"ongweijie7"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"ongweijie7"},"content":"    public void equals() {","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"ongweijie7"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"ongweijie7"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"ongweijie7"},"content":"        MedicineContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"ongweijie7"},"content":"                new MedicineContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"ongweijie7"},"content":"        MedicineContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"ongweijie7"},"content":"                new MedicineContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"ongweijie7"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"ongweijie7"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"ongweijie7"},"content":"        MedicineContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"ongweijie7"},"content":"                new MedicineContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"ongweijie7"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"ongweijie7"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"ongweijie7"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"ongweijie7"},"content":"    @Test","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"ongweijie7"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"ongweijie7"},"content":"        // One keyword","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"ongweijie7"},"content":"        MedicineContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"ongweijie7"},"content":"                new MedicineContainsKeywordsPredicate(Collections.singletonList(\"Aspirin\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMedicines(\"Aspirin\").build()));","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"ongweijie7"},"content":"        // Multiple keywords","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"ongweijie7"},"content":"        predicate \u003d new MedicineContainsKeywordsPredicate(Arrays.asList(\"Aspirin\", \"Paracetamol\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMedicines(\"Aspirin\", \"Paracetamol\").build()));","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"ongweijie7"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"ongweijie7"},"content":"        predicate \u003d new MedicineContainsKeywordsPredicate(Arrays.asList(\"Aspirin\", \"Paracetamol\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMedicines(\"Aspirin\").build()));","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"ongweijie7"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"ongweijie7"},"content":"        predicate \u003d new MedicineContainsKeywordsPredicate(Arrays.asList(\"AspiRIN\", \"ParacetAMOL\"));","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(predicate.test(new PersonBuilder().withMedicines(\"AspiRIN\", \"ParacetAMOL\").build()));","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"ongweijie7"},"content":"}","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"ongweijie7":64}},{"path":"src/test/java/seedu/address/model/person/NricContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ongweijie7"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-15"},{"lineNumber":2,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"ongweijie7"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"ongweijie7"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"ongweijie7"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"ongweijie7"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"ongweijie7"},"content":"import java.util.List;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"ongweijie7"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"ongweijie7"},"content":"public class NricContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"ongweijie7"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"ongweijie7"},"content":"    public void equals() {","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"ongweijie7"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"ongweijie7"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"ongweijie7"},"content":"        NricContainsKeywordsPredicate firstPredicate \u003d new NricContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"ongweijie7"},"content":"        NricContainsKeywordsPredicate secondPredicate \u003d new NricContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"ongweijie7"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"ongweijie7"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"ongweijie7"},"content":"        NricContainsKeywordsPredicate firstPredicateCopy \u003d new NricContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"ongweijie7"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"ongweijie7"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"ongweijie7"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"ongweijie7"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"ongweijie7"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"ongweijie7"},"content":"        // One keyword","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"ongweijie7"},"content":"        NricContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"ongweijie7"},"content":"                new NricContainsKeywordsPredicate(Collections.singletonList(\"T0046785I\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(predicate.test(new PersonBuilder().withNric(\"T0046785I\").build()));","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"ongweijie7"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"ongweijie7"},"content":"        predicate \u003d new NricContainsKeywordsPredicate(Arrays.asList(\"S0056789G\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"ongweijie7"},"content":"        assertTrue(predicate.test(new PersonBuilder().withNric(\"S0056789G\").build()));","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"ongweijie7"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"ongweijie7"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"ongweijie7"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"ongweijie7"},"content":"        NameContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"ongweijie7"},"content":"                new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"ongweijie7"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"ongweijie7"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"S0056789G\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"T0068975L\").build()));","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"ongweijie7"},"content":"        // Keywords match phone, email and address, but does not match NRIC","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"ongweijie7"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\",","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"ongweijie7"},"content":"                    \"alice@email.com\", \"Main\", \"Street\", \"S0056789G\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"ongweijie7"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"ongweijie7"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withNric(\"S0056789G\").build()));","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"ongweijie7"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"ongweijie7":70}},{"path":"src/test/java/seedu/address/model/person/NricTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"public class NricTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Nric(null));","lastModifiedDate":"2023-03-19"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"    public void constructor_invalidNric_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"        String invalidNric \u003d \"\";","lastModifiedDate":"2023-03-19"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Nric(invalidNric));","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-19"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"    public void isValidNric() {","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"        // null nric","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"        assertThrows(NullPointerException.class, () -\u003e Nric.isValidNric(null));","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"        // invalid nric","lastModifiedDate":"2023-03-19"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(Nric.isValidNric(\"\")); // empty string","lastModifiedDate":"2023-03-19"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(Nric.isValidNric(\" \")); // spaces only","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(Nric.isValidNric(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-19"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(Nric.isValidNric(\"*1234567A\")); // first letter contains non-alphanumeric characters","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(Nric.isValidNric(\"T1234567*\")); // last letter contains non-alphanumeric characters","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(Nric.isValidNric(\"A1234567A\")); // first letter not S, T, F, G, M","lastModifiedDate":"2023-03-19"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(Nric.isValidNric(\"01234567A\")); // first letter is a number","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(Nric.isValidNric(\"A12345678\")); // last letter is a number","lastModifiedDate":"2023-03-19"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(Nric.isValidNric(\"t1234567A\")); // with lowercase letter as first letter","lastModifiedDate":"2023-03-19"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(Nric.isValidNric(\"T1234567a\")); // with lowercase letter as second letter","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"        // valid name","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(Nric.isValidNric(\"S1234567A\")); // First letter S","lastModifiedDate":"2023-03-19"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(Nric.isValidNric(\"T1234567A\")); // First letter T","lastModifiedDate":"2023-03-19"},{"lineNumber":42,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(Nric.isValidNric(\"F1234567A\")); // First letter F","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(Nric.isValidNric(\"G1234567A\")); // First letter G","lastModifiedDate":"2023-03-19"},{"lineNumber":44,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(Nric.isValidNric(\"M1234567A\")); // First letter M","lastModifiedDate":"2023-03-19"},{"lineNumber":45,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(Nric.isValidNric(\"T1234567A\")); // with capital letters","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"Creationsv2":47}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_OSTEOPOROTIC;","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"        // same nric, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_OSTEOPOROTIC).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"        // different nric, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withNric(\"S0000000A\").build();","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"Creationsv2"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_OSTEOPOROTIC).build();","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Creationsv2":10,"-":81}},{"path":"src/test/java/seedu/address/model/person/TagContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"import java.util.List;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"public class TagContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"    public void equals() {","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"        TagContainsKeywordsPredicate firstPredicate \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"        TagContainsKeywordsPredicate secondPredicate \u003d new TagContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"        TagContainsKeywordsPredicate firstPredicateCopy \u003d new TagContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":42,"author":{"gitId":"Creationsv2"},"content":"    public void test_tagContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-24"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"        // One keyword","lastModifiedDate":"2023-03-24"},{"lineNumber":44,"author":{"gitId":"Creationsv2"},"content":"        TagContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":45,"author":{"gitId":"Creationsv2"},"content":"                new TagContainsKeywordsPredicate(Collections.singletonList(\"Dyslexic\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Dyslexic\").build()));","lastModifiedDate":"2023-03-24"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":48,"author":{"gitId":"Creationsv2"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-24"},{"lineNumber":49,"author":{"gitId":"Creationsv2"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"dYsLexIc\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":50,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Dyslexic\").build()));","lastModifiedDate":"2023-03-24"},{"lineNumber":51,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":52,"author":{"gitId":"Creationsv2"},"content":"        // One keyword, person with multiple tags, one of which matches","lastModifiedDate":"2023-03-24"},{"lineNumber":53,"author":{"gitId":"Creationsv2"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Dyslexic\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":54,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Dyslexic\", \"Diabetic\").build()));","lastModifiedDate":"2023-03-24"},{"lineNumber":55,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":56,"author":{"gitId":"Creationsv2"},"content":"        // Multiple keywords, one of which matches a tag","lastModifiedDate":"2023-03-24"},{"lineNumber":57,"author":{"gitId":"Creationsv2"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Dyslexic\", \"Osteoporotic\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"        assertTrue(predicate.test(new PersonBuilder().withTags(\"Dyslexic\").build()));","lastModifiedDate":"2023-03-24"},{"lineNumber":59,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":60,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":61,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":62,"author":{"gitId":"Creationsv2"},"content":"    public void test_tagDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-24"},{"lineNumber":63,"author":{"gitId":"Creationsv2"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-24"},{"lineNumber":64,"author":{"gitId":"Creationsv2"},"content":"        TagContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2023-03-24"},{"lineNumber":65,"author":{"gitId":"Creationsv2"},"content":"                new TagContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-24"},{"lineNumber":66,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"Dyslexic\", \"Diabetic\").build()));","lastModifiedDate":"2023-03-24"},{"lineNumber":67,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":68,"author":{"gitId":"Creationsv2"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-24"},{"lineNumber":69,"author":{"gitId":"Creationsv2"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"Dyslexic\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":70,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(predicate.test(new PersonBuilder().withTags(\"Diabetic\", \"Osteoporotic\").build()));","lastModifiedDate":"2023-03-24"},{"lineNumber":71,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":72,"author":{"gitId":"Creationsv2"},"content":"        // Keywords match phone, email and address, but does not match Tag","lastModifiedDate":"2023-03-24"},{"lineNumber":73,"author":{"gitId":"Creationsv2"},"content":"        predicate \u003d new TagContainsKeywordsPredicate(Arrays.asList(\"12345\",","lastModifiedDate":"2023-03-24"},{"lineNumber":74,"author":{"gitId":"Creationsv2"},"content":"                    \"alice@email.com\", \"Main\", \"Street\", \"Diabetic\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":75,"author":{"gitId":"Creationsv2"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-03-24"},{"lineNumber":76,"author":{"gitId":"Creationsv2"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").withTags(\"Dyslexic\", \"Osteoporotic\").build()));","lastModifiedDate":"2023-03-24"},{"lineNumber":77,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":78,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Creationsv2":78}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_OSTEOPOROTIC;","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"Creationsv2"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_OSTEOPOROTIC)","lastModifiedDate":"2023-03-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"Creationsv2"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_OSTEOPOROTIC)","lastModifiedDate":"2023-03-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":171,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":172,"author":{"gitId":"SeanChinJunKai"},"content":"    public void findPersonByNric_personNotInList_returnsNull() {","lastModifiedDate":"2023-03-17"},{"lineNumber":173,"author":{"gitId":"SeanChinJunKai"},"content":"        assertEquals(uniquePersonList.findPersonByNric(BOB.getNric()), null);","lastModifiedDate":"2023-03-17"},{"lineNumber":174,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":175,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":176,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":177,"author":{"gitId":"SeanChinJunKai"},"content":"    public void findPersonByNric_personInList_returnsPerson() {","lastModifiedDate":"2023-03-17"},{"lineNumber":178,"author":{"gitId":"SeanChinJunKai"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-17"},{"lineNumber":179,"author":{"gitId":"SeanChinJunKai"},"content":"        assertEquals(uniquePersonList.findPersonByNric(BOB.getNric()), BOB);","lastModifiedDate":"2023-03-17"},{"lineNumber":180,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"SeanChinJunKai":11,"Creationsv2":3,"-":167}},{"path":"src/test/java/seedu/address/model/util/SampleDataUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Creationsv2"},"content":"package seedu.address.model.util;","lastModifiedDate":"2023-03-24"},{"lineNumber":2,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":3,"author":{"gitId":"Creationsv2"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-24"},{"lineNumber":4,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-24"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-24"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-24"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":10,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-24"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-24"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":13,"author":{"gitId":"Creationsv2"},"content":"public class SampleDataUtilTest {","lastModifiedDate":"2023-03-24"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-24"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"    public void getSamplePersons_generatesTagsSuccessfully() {","lastModifiedDate":"2023-03-24"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"        Person[] persons \u003d SampleDataUtil.getSamplePersons();","lastModifiedDate":"2023-03-24"},{"lineNumber":17,"author":{"gitId":"Creationsv2"},"content":"        Set\u003cTag\u003e testSet \u003d new HashSet\u003cTag\u003e();","lastModifiedDate":"2023-03-24"},{"lineNumber":18,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"        // 1 tag","lastModifiedDate":"2023-03-24"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"        testSet.add(new Tag(\"Diabetic\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":21,"author":{"gitId":"Creationsv2"},"content":"        assertEquals(testSet, persons[0].getTags());","lastModifiedDate":"2023-03-24"},{"lineNumber":22,"author":{"gitId":"Creationsv2"},"content":"        assertEquals(testSet, persons[5].getTags());","lastModifiedDate":"2023-03-24"},{"lineNumber":23,"author":{"gitId":"Creationsv2"},"content":"        testSet.clear();","lastModifiedDate":"2023-03-24"},{"lineNumber":24,"author":{"gitId":"Creationsv2"},"content":"        testSet.add(new Tag(\"Asthmatic\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"        assertEquals(testSet, persons[2].getTags());","lastModifiedDate":"2023-03-24"},{"lineNumber":26,"author":{"gitId":"Creationsv2"},"content":"        testSet.clear();","lastModifiedDate":"2023-03-24"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"        testSet.add(new Tag(\"Epileptic\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":28,"author":{"gitId":"Creationsv2"},"content":"        assertEquals(testSet, persons[3].getTags());","lastModifiedDate":"2023-03-24"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"        testSet.clear();","lastModifiedDate":"2023-03-24"},{"lineNumber":30,"author":{"gitId":"Creationsv2"},"content":"        testSet.add(new Tag(\"Arthritic\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"        assertEquals(testSet, persons[4].getTags());","lastModifiedDate":"2023-03-24"},{"lineNumber":32,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":33,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"        // Multiple Tags","lastModifiedDate":"2023-03-24"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"        testSet.clear();","lastModifiedDate":"2023-03-24"},{"lineNumber":37,"author":{"gitId":"Creationsv2"},"content":"        testSet.add(new Tag(\"Osteoporotic\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"        testSet.add(new Tag(\"Diabetic\"));","lastModifiedDate":"2023-03-24"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"        assertEquals(testSet, persons[1].getTags());","lastModifiedDate":"2023-03-24"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-24"},{"lineNumber":41,"author":{"gitId":"Creationsv2"},"content":"}","lastModifiedDate":"2023-03-24"}],"authorContributionMap":{"Creationsv2":41}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedBackupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.backup.Backup;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"public class JsonAdaptedBackupTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"    private static final String INVALID_INDEX \u003d \"12\";","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"    private static final String VALID_INDEX \u003d \"3\";","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"    private static final String VALID_DESC \u003d \"Backup\";","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"    private static final String VALID_BACKUP_TIME \u003d \"2023-03-27T20:05:17.428381800\";","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"    public void toModelType_validBackupDetails_returnsBackup() throws Exception {","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"        Backup backup \u003d new Backup(Index.fromOneBased(Integer.parseInt(VALID_INDEX)), VALID_DESC, VALID_BACKUP_TIME);","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"        JsonAdaptedBackup jsonBackup \u003d new JsonAdaptedBackup(VALID_INDEX, VALID_DESC, VALID_BACKUP_TIME);","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"        assertEquals(backup, jsonBackup.toModelType());","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"    public void toModelType_invalidIndex_throwsIllegalValueException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"        JsonAdaptedBackup jsonBackup \u003d new JsonAdaptedBackup(INVALID_INDEX, VALID_DESC, VALID_BACKUP_TIME);","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"        assertThrows(IllegalValueException.class, Backup.INDEX_CONSTRAINTS, jsonBackup::toModelType);","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"dawg420":31}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-29"},{"lineNumber":22,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Creationsv2"},"content":"    private static final String INVALID_NRIC \u003d \"V1234567@\";","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"ongweijie7"},"content":"    private static final String INVALID_DATE \u003d \"341/01/2000\";","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"    private static final String INVALID_DRUG_ALLERGY \u003d \" \";","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"ongweijie7"},"content":"    private static final String INVALID_GENDER \u003d \" \";","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"Creationsv2"},"content":"    private static final String INVALID_DOCTOR \u003d \"Ben\u0026\";","lastModifiedDate":"2023-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"dawg420"},"content":"    private static final String INVALID_MEDICINE \u003d \"$$\";","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"Creationsv2"},"content":"    private static final String VALID_NRIC \u003d BENSON.getNric().toString();","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"ongweijie7"},"content":"    private static final String VALID_DATE \u003d BENSON.getDate().toString();","lastModifiedDate":"2023-03-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"SeanChinJunKai"},"content":"    private static final String VALID_DRUG_ALLERGY \u003d BENSON.getDrugAllergy().toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"ongweijie7"},"content":"    private static final String VALID_GENDER \u003d BENSON.getGender().toString();","lastModifiedDate":"2023-03-26"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"    private static final String VALID_DOCTOR \u003d BENSON.getDoctor().toString();","lastModifiedDate":"2023-03-29"},{"lineNumber":48,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"dawg420"},"content":"    private static final List\u003cJsonAdaptedMedicine\u003e VALID_MEDICINES \u003d BENSON.getMedicines().stream()","lastModifiedDate":"2023-03-26"},{"lineNumber":53,"author":{"gitId":"dawg420"},"content":"            .map(JsonAdaptedMedicine::new)","lastModifiedDate":"2023-03-26"},{"lineNumber":54,"author":{"gitId":"dawg420"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"Creationsv2"},"content":"    public void toModelType_invalidNric_throwsIllegalValueException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"Creationsv2"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"ongweijie7"},"content":"                new JsonAdaptedPerson(INVALID_NRIC, VALID_NAME, VALID_DATE,","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"ongweijie7"},"content":"                        VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_DRUG_ALLERGY,","lastModifiedDate":"2023-03-29"},{"lineNumber":67,"author":{"gitId":"ongweijie7"},"content":"                        VALID_GENDER, VALID_DOCTOR, VALID_TAGS, VALID_MEDICINES);","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"Creationsv2"},"content":"        String expectedMessage \u003d Nric.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"Creationsv2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"Creationsv2"},"content":"    public void toModelType_nullNric_throwsIllegalValueException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"Creationsv2"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"ongweijie7"},"content":"                new JsonAdaptedPerson(null, VALID_NAME, VALID_DATE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"ongweijie7"},"content":"                        VALID_ADDRESS, VALID_DRUG_ALLERGY, VALID_GENDER,","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"ongweijie7"},"content":"                        VALID_DOCTOR, VALID_TAGS, VALID_MEDICINES);","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"Creationsv2"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Nric.class.getSimpleName());","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"Creationsv2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"ongweijie7"},"content":"                new JsonAdaptedPerson(VALID_NRIC, INVALID_NAME, VALID_DATE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-29"},{"lineNumber":86,"author":{"gitId":"ongweijie7"},"content":"                        VALID_ADDRESS, VALID_DRUG_ALLERGY, VALID_GENDER,","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"ongweijie7"},"content":"                        VALID_DOCTOR, VALID_TAGS, VALID_MEDICINES);","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"Creationsv2"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"ongweijie7"},"content":"                new JsonAdaptedPerson(VALID_NRIC, null, VALID_DATE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-29"},{"lineNumber":96,"author":{"gitId":"ongweijie7"},"content":"                        VALID_ADDRESS, VALID_DRUG_ALLERGY, VALID_GENDER,","lastModifiedDate":"2023-03-29"},{"lineNumber":97,"author":{"gitId":"ongweijie7"},"content":"                        VALID_DOCTOR, VALID_TAGS, VALID_MEDICINES);","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"ongweijie7"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"ongweijie7"},"content":"    public void toModelType_invalidDateOfBirth_throwsIllegalValueException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"ongweijie7"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"ongweijie7"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, INVALID_DATE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"ongweijie7"},"content":"                        VALID_ADDRESS, VALID_DRUG_ALLERGY, VALID_GENDER,","lastModifiedDate":"2023-03-29"},{"lineNumber":107,"author":{"gitId":"ongweijie7"},"content":"                        VALID_DOCTOR, VALID_TAGS, VALID_MEDICINES);","lastModifiedDate":"2023-03-29"},{"lineNumber":108,"author":{"gitId":"ongweijie7"},"content":"        String expectedMessage \u003d DateOfBirth.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"ongweijie7"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"ongweijie7"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"ongweijie7"},"content":"    public void toModelType_nullDateOfBirth_throwsIllegalValueException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"ongweijie7"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"ongweijie7"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, null, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"ongweijie7"},"content":"                        VALID_ADDRESS, VALID_DRUG_ALLERGY, VALID_GENDER,","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"ongweijie7"},"content":"                        VALID_DOCTOR, VALID_TAGS, VALID_MEDICINES);","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"ongweijie7"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, DateOfBirth.class.getSimpleName());","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"ongweijie7"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-29"},{"lineNumber":120,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"ongweijie7"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_DATE,","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"ongweijie7"},"content":"                        INVALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"ongweijie7"},"content":"                        VALID_ADDRESS, VALID_DRUG_ALLERGY, VALID_GENDER,","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"ongweijie7"},"content":"                        VALID_DOCTOR, VALID_TAGS, VALID_MEDICINES);","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"Creationsv2"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"ongweijie7"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_DATE, null, VALID_EMAIL,","lastModifiedDate":"2023-03-29"},{"lineNumber":137,"author":{"gitId":"ongweijie7"},"content":"                        VALID_ADDRESS, VALID_DRUG_ALLERGY, VALID_GENDER,","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"ongweijie7"},"content":"                        VALID_DOCTOR, VALID_TAGS, VALID_MEDICINES);","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"ongweijie7"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_DATE, VALID_PHONE, INVALID_EMAIL,","lastModifiedDate":"2023-03-29"},{"lineNumber":147,"author":{"gitId":"ongweijie7"},"content":"                        VALID_ADDRESS, VALID_DRUG_ALLERGY, VALID_GENDER,","lastModifiedDate":"2023-03-29"},{"lineNumber":148,"author":{"gitId":"ongweijie7"},"content":"                        VALID_DOCTOR, VALID_TAGS, VALID_MEDICINES);","lastModifiedDate":"2023-03-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"Creationsv2"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"ongweijie7"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_DATE, VALID_PHONE, null,","lastModifiedDate":"2023-03-29"},{"lineNumber":157,"author":{"gitId":"Creationsv2"},"content":"                        VALID_ADDRESS, VALID_DRUG_ALLERGY, VALID_GENDER, VALID_DOCTOR, VALID_TAGS, VALID_MEDICINES);","lastModifiedDate":"2023-03-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"ongweijie7"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_DATE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-29"},{"lineNumber":166,"author":{"gitId":"Creationsv2"},"content":"                        INVALID_ADDRESS, VALID_DRUG_ALLERGY, VALID_GENDER, VALID_DOCTOR, VALID_TAGS, VALID_MEDICINES);","lastModifiedDate":"2023-03-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":173,"author":{"gitId":"Creationsv2"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"ongweijie7"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_DATE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"Creationsv2"},"content":"                        null, VALID_DRUG_ALLERGY, VALID_GENDER, VALID_DOCTOR, VALID_TAGS, VALID_MEDICINES);","lastModifiedDate":"2023-03-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":180,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":181,"author":{"gitId":"Creationsv2"},"content":"    public void toModelType_invalidGender_throwsIllegalValueException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":182,"author":{"gitId":"Creationsv2"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":183,"author":{"gitId":"ongweijie7"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_DATE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-29"},{"lineNumber":184,"author":{"gitId":"Creationsv2"},"content":"                        VALID_ADDRESS, VALID_DRUG_ALLERGY, INVALID_GENDER, VALID_DOCTOR, VALID_TAGS, VALID_MEDICINES);","lastModifiedDate":"2023-03-29"},{"lineNumber":185,"author":{"gitId":"Creationsv2"},"content":"        String expectedMessage \u003d Gender.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-29"},{"lineNumber":186,"author":{"gitId":"Creationsv2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-29"},{"lineNumber":187,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":188,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":189,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":190,"author":{"gitId":"Creationsv2"},"content":"    public void toModelType_invalidDoctor_throwsIllegalValueException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":191,"author":{"gitId":"Creationsv2"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":192,"author":{"gitId":"ongweijie7"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_DATE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-29"},{"lineNumber":193,"author":{"gitId":"Creationsv2"},"content":"                        VALID_ADDRESS, VALID_DRUG_ALLERGY, VALID_GENDER, INVALID_DOCTOR, VALID_TAGS, VALID_MEDICINES);","lastModifiedDate":"2023-03-29"},{"lineNumber":194,"author":{"gitId":"Creationsv2"},"content":"        String expectedMessage \u003d Doctor.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-29"},{"lineNumber":195,"author":{"gitId":"Creationsv2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-29"},{"lineNumber":196,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":197,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":198,"author":{"gitId":"Creationsv2"},"content":"    @Test","lastModifiedDate":"2023-03-29"},{"lineNumber":199,"author":{"gitId":"Creationsv2"},"content":"    public void toModelType_nullDoctor_throwsIllegalValueException() {","lastModifiedDate":"2023-03-29"},{"lineNumber":200,"author":{"gitId":"Creationsv2"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-29"},{"lineNumber":201,"author":{"gitId":"ongweijie7"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_DATE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-29"},{"lineNumber":202,"author":{"gitId":"Creationsv2"},"content":"                        VALID_ADDRESS, VALID_DRUG_ALLERGY, VALID_GENDER, null, VALID_TAGS, VALID_MEDICINES);","lastModifiedDate":"2023-03-29"},{"lineNumber":203,"author":{"gitId":"Creationsv2"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Doctor.class.getSimpleName());","lastModifiedDate":"2023-03-29"},{"lineNumber":204,"author":{"gitId":"Creationsv2"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-29"},{"lineNumber":205,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":206,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":207,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":208,"author":{"gitId":"SeanChinJunKai"},"content":"    public void toModelType_invalidDrugAllergy_throwsIllegalValueException() {","lastModifiedDate":"2023-03-22"},{"lineNumber":209,"author":{"gitId":"SeanChinJunKai"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":210,"author":{"gitId":"ongweijie7"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_DATE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-29"},{"lineNumber":211,"author":{"gitId":"Creationsv2"},"content":"                        VALID_ADDRESS, INVALID_DRUG_ALLERGY, VALID_GENDER, VALID_DOCTOR, VALID_TAGS, VALID_MEDICINES);","lastModifiedDate":"2023-03-29"},{"lineNumber":212,"author":{"gitId":"SeanChinJunKai"},"content":"        String expectedMessage \u003d DrugAllergy.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-22"},{"lineNumber":213,"author":{"gitId":"SeanChinJunKai"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-22"},{"lineNumber":214,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":215,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":216,"author":{"gitId":"SeanChinJunKai"},"content":"    @Test","lastModifiedDate":"2023-03-22"},{"lineNumber":217,"author":{"gitId":"SeanChinJunKai"},"content":"    public void toModelType_nullDrugAllergy_throwsIllegalValueException() {","lastModifiedDate":"2023-03-22"},{"lineNumber":218,"author":{"gitId":"ongweijie7"},"content":"        System.out.println(VALID_DATE);","lastModifiedDate":"2023-03-29"},{"lineNumber":219,"author":{"gitId":"SeanChinJunKai"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":220,"author":{"gitId":"ongweijie7"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_DATE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-29"},{"lineNumber":221,"author":{"gitId":"Creationsv2"},"content":"                        VALID_ADDRESS, null, VALID_GENDER, VALID_DOCTOR, VALID_TAGS, VALID_MEDICINES);","lastModifiedDate":"2023-03-29"},{"lineNumber":222,"author":{"gitId":"SeanChinJunKai"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, DrugAllergy.class.getSimpleName());","lastModifiedDate":"2023-03-22"},{"lineNumber":223,"author":{"gitId":"SeanChinJunKai"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-22"},{"lineNumber":224,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":225,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":231,"author":{"gitId":"ongweijie7"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_DATE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-29"},{"lineNumber":232,"author":{"gitId":"Creationsv2"},"content":"                        VALID_ADDRESS, VALID_DRUG_ALLERGY, VALID_GENDER, VALID_DOCTOR, invalidTags, VALID_MEDICINES);","lastModifiedDate":"2023-03-29"},{"lineNumber":233,"author":{"gitId":"dawg420"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-03-26"},{"lineNumber":234,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":235,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":236,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-03-26"},{"lineNumber":237,"author":{"gitId":"dawg420"},"content":"    public void toModelType_invalidMedicines_throwsIllegalValueException() {","lastModifiedDate":"2023-03-26"},{"lineNumber":238,"author":{"gitId":"dawg420"},"content":"        List\u003cJsonAdaptedMedicine\u003e invalidMedicines \u003d new ArrayList\u003c\u003e(VALID_MEDICINES);","lastModifiedDate":"2023-03-26"},{"lineNumber":239,"author":{"gitId":"dawg420"},"content":"        invalidMedicines.add(new JsonAdaptedMedicine(INVALID_MEDICINE));","lastModifiedDate":"2023-03-26"},{"lineNumber":240,"author":{"gitId":"dawg420"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-26"},{"lineNumber":241,"author":{"gitId":"ongweijie7"},"content":"                new JsonAdaptedPerson(VALID_NRIC, VALID_NAME, VALID_DATE, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2023-03-29"},{"lineNumber":242,"author":{"gitId":"Creationsv2"},"content":"                        VALID_ADDRESS, VALID_DRUG_ALLERGY, VALID_GENDER, VALID_DOCTOR, VALID_TAGS, invalidMedicines);","lastModifiedDate":"2023-03-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":246,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"SeanChinJunKai":16,"dawg420":12,"ongweijie7":63,"Creationsv2":53,"-":102}},{"path":"src/test/java/seedu/address/storage/JsonBackupDataStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"public class JsonBackupDataStorageTest {","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"    @Test","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"    public void constructor_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"        assertThrows(NullPointerException.class, () -\u003e new JsonBackupDataStorage(null));","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"dawg420":13}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":"import static seedu.address.ui.theme.Theme.DEFAULT_THEME;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":76,"author":{"gitId":"CedricPei"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100, DEFAULT_THEME.toString()));","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"CedricPei"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2, DEFAULT_THEME.toString()));","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"CedricPei"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5, DEFAULT_THEME.toString()));","lastModifiedDate":"2023-03-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"CedricPei":4,"-":120}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"CedricPei"},"content":"import static seedu.address.ui.theme.Theme.DEFAULT_THEME;","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"CedricPei"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6, DEFAULT_THEME.toString()));","lastModifiedDate":"2023-03-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"CedricPei":2,"-":67}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.medicine.Medicine;","lastModifiedDate":"2023-03-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"Creationsv2"},"content":"        descriptor.setNric(person.getNric());","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"ongweijie7"},"content":"        descriptor.setDate(person.getDate());","lastModifiedDate":"2023-03-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":46,"author":{"gitId":"SeanChinJunKai"},"content":"        descriptor.setDrugAllergy(person.getDrugAllergy());","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"ongweijie7"},"content":"        descriptor.setGender(person.getGender());","lastModifiedDate":"2023-03-26"},{"lineNumber":48,"author":{"gitId":"Creationsv2"},"content":"        descriptor.setDoctor(person.getDoctor());","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"ongweijie7"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"ongweijie7"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"ongweijie7"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"ongweijie7"},"content":"    public EditPersonDescriptorBuilder withDate(String date) {","lastModifiedDate":"2023-03-29"},{"lineNumber":72,"author":{"gitId":"ongweijie7"},"content":"        descriptor.setDate(new DateOfBirth(date));","lastModifiedDate":"2023-03-29"},{"lineNumber":73,"author":{"gitId":"ongweijie7"},"content":"        return this;","lastModifiedDate":"2023-03-29"},{"lineNumber":74,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"SeanChinJunKai"},"content":"     * Sets the {@code Drug Allergy} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"SeanChinJunKai"},"content":"    public EditPersonDescriptorBuilder withDrugAllergy(String drugAllergy) {","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"SeanChinJunKai"},"content":"        descriptor.setDrugAllergy(new DrugAllergy(drugAllergy));","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"SeanChinJunKai"},"content":"        return this;","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"ongweijie7"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":101,"author":{"gitId":"ongweijie7"},"content":"     * Sets the {@code gender} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-26"},{"lineNumber":102,"author":{"gitId":"ongweijie7"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":103,"author":{"gitId":"ongweijie7"},"content":"    public EditPersonDescriptorBuilder withGender(String gender) {","lastModifiedDate":"2023-03-26"},{"lineNumber":104,"author":{"gitId":"ongweijie7"},"content":"        descriptor.setGender(new Gender(gender));","lastModifiedDate":"2023-03-26"},{"lineNumber":105,"author":{"gitId":"ongweijie7"},"content":"        return this;","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":109,"author":{"gitId":"Creationsv2"},"content":"     * Sets the {@code doctor} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-29"},{"lineNumber":110,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":111,"author":{"gitId":"Creationsv2"},"content":"    public EditPersonDescriptorBuilder withDoctor(String doctor) {","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"Creationsv2"},"content":"        descriptor.setDoctor(new Doctor(doctor));","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"Creationsv2"},"content":"        return this;","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":127,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":128,"author":{"gitId":"dawg420"},"content":"     * Parses the {@code medicines} into a {@code Set\u003cMedicine\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2023-03-26"},{"lineNumber":129,"author":{"gitId":"dawg420"},"content":"     * that we are building.","lastModifiedDate":"2023-03-26"},{"lineNumber":130,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":131,"author":{"gitId":"dawg420"},"content":"    public EditPersonDescriptorBuilder withMedicines(String... medicines) {","lastModifiedDate":"2023-03-26"},{"lineNumber":132,"author":{"gitId":"dawg420"},"content":"        Set\u003cMedicine\u003e medicineSet \u003d Stream.of(medicines).map(Medicine::new).collect(Collectors.toSet());","lastModifiedDate":"2023-03-26"},{"lineNumber":133,"author":{"gitId":"dawg420"},"content":"        descriptor.setMedicines(medicineSet);","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"dawg420"},"content":"        return this;","lastModifiedDate":"2023-03-26"},{"lineNumber":135,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":136,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"SeanChinJunKai":10,"dawg420":11,"ongweijie7":21,"Creationsv2":11,"-":87}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.medicine.Medicine;","lastModifiedDate":"2023-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.DateOfBirth;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.model.person.Doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"SeanChinJunKai"},"content":"import seedu.address.model.person.DrugAllergy;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"ongweijie7"},"content":"import seedu.address.model.person.Gender;","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"Creationsv2"},"content":"import seedu.address.model.person.Nric;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"Creationsv2"},"content":"    public static final String DEFAULT_NRIC \u003d \"S0000000Z\";","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":27,"author":{"gitId":"ongweijie7"},"content":"    public static final String DEFAULT_DATE_OF_BIRTH \u003d \"28/11/2000\";","lastModifiedDate":"2023-03-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":30,"author":{"gitId":"ongweijie7"},"content":"    public static final String DEFAULT_GENDER \u003d \"Male\";","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"Creationsv2"},"content":"    public static final String DEFAULT_DOCTOR \u003d \"Ben\";","lastModifiedDate":"2023-03-29"},{"lineNumber":32,"author":{"gitId":"SeanChinJunKai"},"content":"    public static final String DEFAULT_DRUG_ALLERGY \u003d \"NKDA\";","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"    private Nric nric;","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"ongweijie7"},"content":"    private DateOfBirth date;","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"    private DrugAllergy drugAllergy;","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"ongweijie7"},"content":"    private Gender gender;","lastModifiedDate":"2023-03-26"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"    private Doctor doctor;","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"dawg420"},"content":"    private Set\u003cMedicine\u003e medicines;","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"Creationsv2"},"content":"        nric \u003d new Nric(DEFAULT_NRIC);","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"ongweijie7"},"content":"        date \u003d new DateOfBirth(DEFAULT_DATE_OF_BIRTH);","lastModifiedDate":"2023-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"SeanChinJunKai"},"content":"        drugAllergy \u003d new DrugAllergy(DEFAULT_DRUG_ALLERGY);","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"ongweijie7"},"content":"        gender \u003d new Gender(DEFAULT_GENDER);","lastModifiedDate":"2023-03-26"},{"lineNumber":59,"author":{"gitId":"Creationsv2"},"content":"        doctor \u003d new Doctor(DEFAULT_DOCTOR);","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"dawg420"},"content":"        medicines \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"Creationsv2"},"content":"        nric \u003d personToCopy.getNric();","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"ongweijie7"},"content":"        date \u003d personToCopy.getDate();","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"SeanChinJunKai"},"content":"        drugAllergy \u003d personToCopy.getDrugAllergy();","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"ongweijie7"},"content":"        gender \u003d personToCopy.getGender();","lastModifiedDate":"2023-03-26"},{"lineNumber":76,"author":{"gitId":"Creationsv2"},"content":"        doctor \u003d personToCopy.getDoctor();","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"dawg420"},"content":"        medicines \u003d new HashSet\u003c\u003e(personToCopy.getMedicines());","lastModifiedDate":"2023-03-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":81,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"Creationsv2"},"content":"     * Sets the {@code Nric} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"Creationsv2"},"content":"    public PersonBuilder withNric(String nric) {","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"Creationsv2"},"content":"        this.nric \u003d new Nric(nric);","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"Creationsv2"},"content":"        return this;","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"ongweijie7"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":98,"author":{"gitId":"ongweijie7"},"content":"     * Sets the {@code date} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"ongweijie7"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"ongweijie7"},"content":"    public PersonBuilder withDate(String date) {","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"ongweijie7"},"content":"        this.date \u003d new DateOfBirth(date);","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"ongweijie7"},"content":"        return this;","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"ongweijie7"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":104,"author":{"gitId":"ongweijie7"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"dawg420"},"content":"     * Sets the {@code Gender} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-27"},{"lineNumber":115,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"dawg420"},"content":"    public PersonBuilder withGender(String gender) {","lastModifiedDate":"2023-03-27"},{"lineNumber":117,"author":{"gitId":"dawg420"},"content":"        this.gender \u003d new Gender(gender);","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"dawg420"},"content":"        return this;","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"Creationsv2"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"Creationsv2"},"content":"     * Sets the {@code Doctor} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"Creationsv2"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"Creationsv2"},"content":"    public PersonBuilder withDoctor(String doctor) {","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"Creationsv2"},"content":"        this.doctor \u003d new Doctor(doctor);","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"Creationsv2"},"content":"        return this;","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"Creationsv2"},"content":"    }","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":129,"author":{"gitId":"dawg420"},"content":"    /**","lastModifiedDate":"2023-03-26"},{"lineNumber":130,"author":{"gitId":"dawg420"},"content":"     * Parses the {@code medicines} into a {@code Set\u003cMedicine\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-03-26"},{"lineNumber":131,"author":{"gitId":"dawg420"},"content":"     */","lastModifiedDate":"2023-03-26"},{"lineNumber":132,"author":{"gitId":"dawg420"},"content":"    public PersonBuilder withMedicines(String... medicines) {","lastModifiedDate":"2023-03-26"},{"lineNumber":133,"author":{"gitId":"dawg420"},"content":"        this.medicines \u003d SampleDataUtil.getMedicineSet(medicines);","lastModifiedDate":"2023-03-26"},{"lineNumber":134,"author":{"gitId":"dawg420"},"content":"        return this;","lastModifiedDate":"2023-03-26"},{"lineNumber":135,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-26"},{"lineNumber":136,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":145,"author":{"gitId":"SeanChinJunKai"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"SeanChinJunKai"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"SeanChinJunKai"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"SeanChinJunKai"},"content":"    public PersonBuilder withDrugAllergy(String drugAllergy) {","lastModifiedDate":"2023-03-22"},{"lineNumber":149,"author":{"gitId":"SeanChinJunKai"},"content":"        this.drugAllergy \u003d new DrugAllergy(drugAllergy);","lastModifiedDate":"2023-03-22"},{"lineNumber":150,"author":{"gitId":"SeanChinJunKai"},"content":"        return this;","lastModifiedDate":"2023-03-22"},{"lineNumber":151,"author":{"gitId":"SeanChinJunKai"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":152,"author":{"gitId":"SeanChinJunKai"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":169,"author":{"gitId":"ongweijie7"},"content":"    /**","lastModifiedDate":"2023-03-29"},{"lineNumber":170,"author":{"gitId":"ongweijie7"},"content":"     * Builds a person with the given attributes","lastModifiedDate":"2023-03-29"},{"lineNumber":171,"author":{"gitId":"ongweijie7"},"content":"     */","lastModifiedDate":"2023-03-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":173,"author":{"gitId":"ongweijie7"},"content":"        return new Person(nric, name, date, phone, email, address,","lastModifiedDate":"2023-03-29"},{"lineNumber":174,"author":{"gitId":"ongweijie7"},"content":"                        drugAllergy, gender, doctor, tags, medicines);","lastModifiedDate":"2023-03-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"SeanChinJunKai":13,"dawg420":20,"ongweijie7":23,"Creationsv2":24,"-":97}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-29"},{"lineNumber":4,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DATE_OF_BIRTH;","lastModifiedDate":"2023-03-29"},{"lineNumber":5,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DOCTOR;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DRUG_ALLERGY;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-29"},{"lineNumber":8,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GENDER;","lastModifiedDate":"2023-03-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-29"},{"lineNumber":10,"author":{"gitId":"ongweijie7"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NRIC;","lastModifiedDate":"2023-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"Creationsv2"},"content":"        sb.append(PREFIX_NRIC + person.getNric().fullNric + \" \");","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":40,"author":{"gitId":"ongweijie7"},"content":"        sb.append(PREFIX_DATE_OF_BIRTH + person.getDate().toString() + \" \");","lastModifiedDate":"2023-03-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"SeanChinJunKai"},"content":"        sb.append(PREFIX_DRUG_ALLERGY + person.getDrugAllergy().value + \" \");","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"ongweijie7"},"content":"        sb.append(PREFIX_GENDER + person.getGender().gender + \" \");","lastModifiedDate":"2023-03-26"},{"lineNumber":46,"author":{"gitId":"Creationsv2"},"content":"        sb.append(PREFIX_DOCTOR + person.getDoctor().doctor + \" \");","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"Creationsv2"},"content":"        descriptor.getNric().ifPresent(nric -\u003e sb.append(PREFIX_NRIC).append(nric.fullNric).append(\" \"));","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"Creationsv2"},"content":"        descriptor.getGender().ifPresent(gender -\u003e sb.append(PREFIX_GENDER).append(gender.gender).append(\" \"));","lastModifiedDate":"2023-03-29"},{"lineNumber":64,"author":{"gitId":"Creationsv2"},"content":"        descriptor.getDoctor().ifPresent(doctor -\u003e sb.append(PREFIX_DOCTOR).append(doctor.doctor).append(\" \"));","lastModifiedDate":"2023-03-29"},{"lineNumber":65,"author":{"gitId":"SeanChinJunKai"},"content":"        descriptor.getDrugAllergy().ifPresent(allergy -\u003e sb.append(PREFIX_DRUG_ALLERGY)","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"                .append(allergy.value).append(\" \"));","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"SeanChinJunKai":3,"ongweijie7":7,"Creationsv2":5,"-":62}},{"path":"src/test/java/seedu/address/testutil/TypicalBackups.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"dawg420"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"dawg420"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"dawg420"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"dawg420"},"content":"import java.util.List;","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"dawg420"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.BackupData;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"dawg420"},"content":"import seedu.address.model.backup.Backup;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"dawg420"},"content":"import seedu.address.storage.JsonAdaptedBackup;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"dawg420"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"dawg420"},"content":" * A utility class containing a list of {@code Backup} objects to be used in tests.","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"dawg420"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"dawg420"},"content":"public class TypicalBackups {","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"dawg420"},"content":"    public static final Backup BACKUP1 \u003d new Backup(Index.fromOneBased(1), \"Backup 1\");","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"dawg420"},"content":"    public static final Backup BACKUP2 \u003d new Backup(Index.fromOneBased(2), \"Backup 2\");","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"dawg420"},"content":"    public static final Backup BACKUP3 \u003d new Backup(Index.fromOneBased(3), \"Backup 3\");","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"dawg420"},"content":"    public static BackupData getTypicalBackData() {","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"dawg420"},"content":"        BackupData bd \u003d new BackupData();","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"dawg420"},"content":"        for (Backup backup : getTypicalBackups()) {","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"dawg420"},"content":"            bd.addBackup(new JsonAdaptedBackup(backup));","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"dawg420"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"dawg420"},"content":"        return bd;","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"dawg420"},"content":"    public static List\u003cBackup\u003e getTypicalBackups() {","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"dawg420"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(BACKUP1, BACKUP2, BACKUP3));","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"dawg420"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"dawg420"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"dawg420"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"dawg420":32}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOCTOR_AMY;","lastModifiedDate":"2023-03-29"},{"lineNumber":6,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DOCTOR_BOB;","lastModifiedDate":"2023-03-29"},{"lineNumber":7,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DRUG_ALLERGY_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DRUG_ALLERGY_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_AMY;","lastModifiedDate":"2023-03-29"},{"lineNumber":12,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GENDER_BOB;","lastModifiedDate":"2023-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NRIC_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_DIABETIC;","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"Creationsv2"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_OSTEOPOROTIC;","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"Creationsv2"},"content":"","lastModifiedDate":"2023-03-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"Creationsv2"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withNric(\"S1234567A\")","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"Creationsv2"},"content":"            .withName(\"Alice Pauline\")","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"ongweijie7"},"content":"            .withDate(\"11/01/1979\")","lastModifiedDate":"2023-03-29"},{"lineNumber":38,"author":{"gitId":"ongweijie7"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2023-03-29"},{"lineNumber":39,"author":{"gitId":"ongweijie7"},"content":"            .withEmail(\"alice@example.com\")","lastModifiedDate":"2023-03-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"SeanChinJunKai"},"content":"            .withDrugAllergy(\"NKDA\")","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"dawg420"},"content":"            .withGender(\"female\")","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"Creationsv2"},"content":"            .withDoctor(\"Ben\")","lastModifiedDate":"2023-03-29"},{"lineNumber":44,"author":{"gitId":"dawg420"},"content":"            .withTags(\"Diabetic\").build();","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"ongweijie7"},"content":"    public static final Person BENSON \u003d new PersonBuilder()","lastModifiedDate":"2023-03-29"},{"lineNumber":46,"author":{"gitId":"ongweijie7"},"content":"            .withNric(\"S2345678B\")","lastModifiedDate":"2023-03-29"},{"lineNumber":47,"author":{"gitId":"Creationsv2"},"content":"            .withName(\"Benson Meier\")","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"ongweijie7"},"content":"            .withDate(\"11/01/1957\")","lastModifiedDate":"2023-03-29"},{"lineNumber":49,"author":{"gitId":"ongweijie7"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2023-03-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"ongweijie7"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2023-03-29"},{"lineNumber":52,"author":{"gitId":"SeanChinJunKai"},"content":"            .withDrugAllergy(\"NKDA\")","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"dawg420"},"content":"            .withTags(\"Osteoporotic\", \"Diabetic\")","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"dawg420"},"content":"            .withGender(\"male\")","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"Creationsv2"},"content":"            .withDoctor(\"Alex\")","lastModifiedDate":"2023-03-29"},{"lineNumber":56,"author":{"gitId":"dawg420"},"content":"            .withMedicines(\"Paracetamol\").build();","lastModifiedDate":"2023-03-26"},{"lineNumber":57,"author":{"gitId":"ongweijie7"},"content":"    public static final Person CARL \u003d new PersonBuilder()","lastModifiedDate":"2023-03-29"},{"lineNumber":58,"author":{"gitId":"ongweijie7"},"content":"            .withNric(\"S3456789C\")","lastModifiedDate":"2023-03-29"},{"lineNumber":59,"author":{"gitId":"ongweijie7"},"content":"            .withName(\"Carl Kurz\")","lastModifiedDate":"2023-03-29"},{"lineNumber":60,"author":{"gitId":"ongweijie7"},"content":"            .withDate(\"11/01/1958\")","lastModifiedDate":"2023-03-29"},{"lineNumber":61,"author":{"gitId":"ongweijie7"},"content":"            .withPhone(\"95352563\")","lastModifiedDate":"2023-03-29"},{"lineNumber":62,"author":{"gitId":"SeanChinJunKai"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"dawg420"},"content":"            .withGender(\"male\")","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"dawg420"},"content":"            .withTags(\"Asthmatic\")","lastModifiedDate":"2023-03-27"},{"lineNumber":65,"author":{"gitId":"Creationsv2"},"content":"            .withDoctor(\"Shannon\")","lastModifiedDate":"2023-03-29"},{"lineNumber":66,"author":{"gitId":"SeanChinJunKai"},"content":"            .withDrugAllergy(\"Penicilin\").build();","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"ongweijie7"},"content":"    public static final Person DANIEL \u003d new PersonBuilder()","lastModifiedDate":"2023-03-29"},{"lineNumber":68,"author":{"gitId":"ongweijie7"},"content":"            .withNric(\"S0123456D\")","lastModifiedDate":"2023-03-29"},{"lineNumber":69,"author":{"gitId":"ongweijie7"},"content":"            .withName(\"Daniel Meier\")","lastModifiedDate":"2023-03-29"},{"lineNumber":70,"author":{"gitId":"ongweijie7"},"content":"            .withPhone(\"87652533\")","lastModifiedDate":"2023-03-29"},{"lineNumber":71,"author":{"gitId":"SeanChinJunKai"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\")","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"dawg420"},"content":"            .withDrugAllergy(\"Aspirin Panadol\")","lastModifiedDate":"2023-03-27"},{"lineNumber":73,"author":{"gitId":"dawg420"},"content":"            .withTags(\"Epileptic\")","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"Creationsv2"},"content":"            .withGender(\"male\")","lastModifiedDate":"2023-03-29"},{"lineNumber":75,"author":{"gitId":"Creationsv2"},"content":"            .withDoctor(\"None\").build();","lastModifiedDate":"2023-03-29"},{"lineNumber":76,"author":{"gitId":"ongweijie7"},"content":"    public static final Person ELLE \u003d new PersonBuilder()","lastModifiedDate":"2023-03-29"},{"lineNumber":77,"author":{"gitId":"ongweijie7"},"content":"            .withNric(\"S0000000E\")","lastModifiedDate":"2023-03-29"},{"lineNumber":78,"author":{"gitId":"ongweijie7"},"content":"            .withName(\"Elle Meyer\")","lastModifiedDate":"2023-03-29"},{"lineNumber":79,"author":{"gitId":"ongweijie7"},"content":"            .withDate(\"11/01/1999\")","lastModifiedDate":"2023-03-29"},{"lineNumber":80,"author":{"gitId":"ongweijie7"},"content":"            .withPhone(\"9482224\")","lastModifiedDate":"2023-03-29"},{"lineNumber":81,"author":{"gitId":"SeanChinJunKai"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"dawg420"},"content":"            .withGender(\"female\")","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"Creationsv2"},"content":"            .withDoctor(\"Ben\")","lastModifiedDate":"2023-03-29"},{"lineNumber":84,"author":{"gitId":"dawg420"},"content":"            .withTags(\"Arthritic\")","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"SeanChinJunKai"},"content":"            .withDrugAllergy(\"NKDA\").build();","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"ongweijie7"},"content":"    public static final Person FIONA \u003d new PersonBuilder()","lastModifiedDate":"2023-03-29"},{"lineNumber":87,"author":{"gitId":"ongweijie7"},"content":"            .withNric(\"S1111111F\")","lastModifiedDate":"2023-03-29"},{"lineNumber":88,"author":{"gitId":"ongweijie7"},"content":"            .withName(\"Fiona Kunz\")","lastModifiedDate":"2023-03-29"},{"lineNumber":89,"author":{"gitId":"ongweijie7"},"content":"            .withDate(\"11/01/2002\")","lastModifiedDate":"2023-03-29"},{"lineNumber":90,"author":{"gitId":"ongweijie7"},"content":"            .withPhone(\"9482427\")","lastModifiedDate":"2023-03-29"},{"lineNumber":91,"author":{"gitId":"SeanChinJunKai"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"dawg420"},"content":"            .withGender(\"female\")","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"Creationsv2"},"content":"            .withDoctor(\"Shannon\")","lastModifiedDate":"2023-03-29"},{"lineNumber":94,"author":{"gitId":"dawg420"},"content":"            .withTags(\"Diabetic\")","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"ongweijie7"},"content":"            .withDrugAllergy(\"Aspirin Panadol\")","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"ongweijie7"},"content":"            .withMedicines(\"Aspirin\")","lastModifiedDate":"2023-03-27"},{"lineNumber":97,"author":{"gitId":"ongweijie7"},"content":"            .build();","lastModifiedDate":"2023-03-27"},{"lineNumber":98,"author":{"gitId":"ongweijie7"},"content":"    public static final Person GEORGE \u003d new PersonBuilder()","lastModifiedDate":"2023-03-29"},{"lineNumber":99,"author":{"gitId":"ongweijie7"},"content":"            .withNric(\"S2222222G\")","lastModifiedDate":"2023-03-29"},{"lineNumber":100,"author":{"gitId":"ongweijie7"},"content":"            .withName(\"George Best\")","lastModifiedDate":"2023-03-29"},{"lineNumber":101,"author":{"gitId":"ongweijie7"},"content":"            .withDate(\"11/12/2004\")","lastModifiedDate":"2023-03-29"},{"lineNumber":102,"author":{"gitId":"ongweijie7"},"content":"            .withPhone(\"9482442\")","lastModifiedDate":"2023-03-29"},{"lineNumber":103,"author":{"gitId":"SeanChinJunKai"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"dawg420"},"content":"            .withGender(\"male\")","lastModifiedDate":"2023-03-27"},{"lineNumber":105,"author":{"gitId":"Creationsv2"},"content":"            .withDoctor(\"Shafiq\")","lastModifiedDate":"2023-03-29"},{"lineNumber":106,"author":{"gitId":"dawg420"},"content":"            .withTags(\"Diabetic\")","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"SeanChinJunKai"},"content":"            .withDrugAllergy(\"Lidocaine\").build();","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":111,"author":{"gitId":"ongweijie7"},"content":"    public static final Person HOON \u003d new PersonBuilder()","lastModifiedDate":"2023-03-29"},{"lineNumber":112,"author":{"gitId":"ongweijie7"},"content":"            .withNric(\"S3333333H\")","lastModifiedDate":"2023-03-29"},{"lineNumber":113,"author":{"gitId":"ongweijie7"},"content":"            .withName(\"Hoon Meier\")","lastModifiedDate":"2023-03-29"},{"lineNumber":114,"author":{"gitId":"ongweijie7"},"content":"            .withDate(\"14/01/1998\")","lastModifiedDate":"2023-03-29"},{"lineNumber":115,"author":{"gitId":"ongweijie7"},"content":"            .withPhone(\"8482424\")","lastModifiedDate":"2023-03-29"},{"lineNumber":116,"author":{"gitId":"ongweijie7"},"content":"            .withEmail(\"stefan@example.com\")","lastModifiedDate":"2023-03-29"},{"lineNumber":117,"author":{"gitId":"ongweijie7"},"content":"            .withAddress(\"little india\")","lastModifiedDate":"2023-03-29"},{"lineNumber":118,"author":{"gitId":"Creationsv2"},"content":"            .withGender(\"male\").withDoctor(\"Alex\")","lastModifiedDate":"2023-03-29"},{"lineNumber":119,"author":{"gitId":"SeanChinJunKai"},"content":"            .withDrugAllergy(\"Phenytoin Panadol\").build();","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"ongweijie7"},"content":"    public static final Person IDA \u003d new PersonBuilder()","lastModifiedDate":"2023-03-29"},{"lineNumber":121,"author":{"gitId":"ongweijie7"},"content":"            .withNric(\"T4444444I\")","lastModifiedDate":"2023-03-29"},{"lineNumber":122,"author":{"gitId":"ongweijie7"},"content":"            .withName(\"Ida Mueller\")","lastModifiedDate":"2023-03-29"},{"lineNumber":123,"author":{"gitId":"ongweijie7"},"content":"            .withDate(\"09/04/1998\")","lastModifiedDate":"2023-03-29"},{"lineNumber":124,"author":{"gitId":"ongweijie7"},"content":"            .withPhone(\"8482131\")","lastModifiedDate":"2023-03-29"},{"lineNumber":125,"author":{"gitId":"ongweijie7"},"content":"            .withEmail(\"hans@example.com\")","lastModifiedDate":"2023-03-29"},{"lineNumber":126,"author":{"gitId":"ongweijie7"},"content":"            .withAddress(\"chicago ave\")","lastModifiedDate":"2023-03-29"},{"lineNumber":127,"author":{"gitId":"Creationsv2"},"content":"            .withGender(\"female\").withDoctor(\"Benjamin\")","lastModifiedDate":"2023-03-29"},{"lineNumber":128,"author":{"gitId":"SeanChinJunKai"},"content":"            .withDrugAllergy(\"Carbamazepine\").build();","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":131,"author":{"gitId":"Creationsv2"},"content":"    public static final Person AMY \u003d new PersonBuilder().withNric(VALID_NRIC_AMY).withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"Creationsv2"},"content":"        .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"Creationsv2"},"content":"        .withDrugAllergy(VALID_DRUG_ALLERGY_AMY).withTags(VALID_TAG_DIABETIC).withGender(VALID_GENDER_AMY)","lastModifiedDate":"2023-03-29"},{"lineNumber":134,"author":{"gitId":"Creationsv2"},"content":"            .withDoctor(VALID_DOCTOR_AMY).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":135,"author":{"gitId":"Creationsv2"},"content":"    public static final Person BOB \u003d new PersonBuilder().withNric(VALID_NRIC_BOB).withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"Creationsv2"},"content":"        .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"Creationsv2"},"content":"        .withDrugAllergy(VALID_DRUG_ALLERGY_BOB).withTags(VALID_TAG_DIABETIC, VALID_TAG_OSTEOPOROTIC)","lastModifiedDate":"2023-03-29"},{"lineNumber":138,"author":{"gitId":"Creationsv2"},"content":"            .withDoctor(VALID_DOCTOR_BOB).withGender(VALID_GENDER_BOB).build();","lastModifiedDate":"2023-03-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":142,"author":{"gitId":"dawg420"},"content":"    private TypicalPersons() {","lastModifiedDate":"2023-03-26"},{"lineNumber":143,"author":{"gitId":"dawg420"},"content":"    } // prevents instantiation","lastModifiedDate":"2023-03-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"SeanChinJunKai":12,"dawg420":17,"ongweijie7":49,"Creationsv2":32,"-":49}}]
